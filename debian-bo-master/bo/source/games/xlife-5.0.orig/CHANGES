Changes from v 1.0 to 1.6

	* accepts -geometry and -bw
	* more save file formats. see lifeconv.c and 
		xlife.6 for the details.
	* cursor relative loading
	* cursor relative zoom/unzoom
	* arrow keys work, along with a help key if you have one
	* if for malevolent reasons your keypad is not returning numbers,
		you can now use it for movement and centering of the image.
		The Sun type-4 keyboard is such a beast.
	* diagonal movement via 1357
	* with scale > 3, cells are drawn with a black border

	* FASTER! (at the expense of memory)

Changes to 2.0

	* testing, tweaking of 1.6 and realizing things had changed 
		enough to warrant a version bump.
	* more patterns

Changes to 3.0

	* new file format

	* improved user interface

	* read doc/pattern_editting for explanation of the new features

Fixes since 2.0:

	* 'o' now redisplays pattern after doing a generation

	* (shift) doesn't cause last keystroke to come back.

	* The cursor mask includes border around cursor (so it will show up
	  on white background).

	* Resizing works.  Input and coordinate windows are given correct
	  sizes.

	* Non-keystroke events are handled during text input.

	* Horizontal scroll point is computed from size of input window.

	* #P now computes y coordinate of a line in a picture as position
	  in file *relative* to #P (used to be absolute line number).  
	MAY CAUSE INCOMPATIBILITY WITH PATTERNS CREATED UNDER AN EARLIER
	VERSION.

Changes to 3.0  (esr hacks again!!!)

	* Miscellaneous small port changes to get it to compile cleanly under
	  SVr4.  Two significant name changes: link() -> maketile(), to avoid
	  collision with ANSI header files on, and kill() -> killtile().

	* The evolution code now detects still-lifes, including the empty
	  still-lifes, and stops when stability or death is reached.

	* The `patterns' directory is now the `life' directory, because there
	  may be other pattern directories for different automata.

	* The default life directory variable is now named LIFEDIR and set
	  from the Imakefile. The program will now accept, from the variable 
	  LIFEPATH, a colon-separated list of pattern library directories.
	  The default list is ".:$(LIFEDIR)".

	* Xlife now grabs the fraction of the display given by GRAB_FRACTION.
	  This defaults to 4/5 but can be changed in the Makefile.

	* Xlife now begins with scale set to 3.  Scale 1 is hard to see on
	  a hi-res display.

	* The help display is now generated from an editable textfile, and
	  formatted to make better use of the normal 4x3 screen aspect ratio.
	  Also, the default font is now larger.

	* The input, help, and coordinate windows are now forced to black on
	  white.  The new scaleable R5 fonts look really crappy in white on
	  black.

	* The code now presets the width/height members in the rects[] 
	  array each time scale is set, so that the scale-set computations
	  don't need to be in the inner loop of displayline().  This is
	  cleaner and should be good for a slight speed increase.

	* A new "#U" directive in pattern files automatically loads a
	  given named rule file, if that file is not already loaded.  When
	  a pattern is saved with a rule-set in effect, an appropriate 
	  rule-set is generated into the file.

	* The coordinate window display now includes the state of the cell
	  under the cursor.

	* WHAT ALL THIS WAS AIMING AT: The code now loads, manipulates,
	  displays, evolves, and saves patterns in up to 8 states.
	  The input window includes a set of radio buttons for state
	  selection.

	* The manual page and CHANGES files have been updated to reflect
	  these features.  I merged the NEWINCLUDE document into the man page
	  and added a manual page for lifeconv.

	* Lifeconv now passes through all #-constructs except R, A, I; scratch
	  one item from the TODO list.  Also, the filter mode can now be
	  used with options.  The oldpconv code is now mode 'p' of lifeconv.

	* The word `editing' has only one t.  I have made the appropriate
	  file name changes and replaces.  I also made minor changes to the
	  text to reconcile it with the other document changes.

	* Changed TODO file to HACKING.  File now includes a hacker's tour of
	  the program internals.

	* The nasty SAVEGLOBS/RESTOREGLOBS hackery in file.c is gone. Instead,
	  functions which can apply to either the universe or a tentative
	  pattern take a context pointer argument.

	* The `.life' extension has been changed, throughout, to `.l' (for
	  `load').  This reflects the fact that Xlife now supports multiple
	  automata, many of which may not be even remotely related to John
	  Horton Conway's Life.  It also makes life a little easier on some
	  System V machines with short filenames.

	* The code now uses ANSI prototypes and POSIX/X3J11 libraries.

	* Massive cleanup/reorganization of internals; also, many comments
	  have been added.

Changes to 4.0:
	Merged my changes into a 3.0 that the other three maintainers had
	released.

Changes to 4.1:
	* Change default scale to 4 to accommodate now-typical size of
	  displays (on which a 1-pixel bounding box tends to vanish).

	* Enlarge the cursor gammadion (same problem as above).

	* The glidergun pattern in the library was broken; it's fixed now.

	* Boxing code is working!  Tentative patterns are boxed.

Changes to 4.2:
	* Minor cleanups suggested by Farzad Farid.

Changes to 4.3:
	* Added S(N=C)R notation to rules file parsing.

	* Added wireworld support and pattern directory.

	* Current ruleset is always displayed.

	* Always show cell count.  Since the generation number gets changed
	  every tick anyhow, not displaying population is false economy. 
	  What is now normally suppressed is the box count.

	* All tools now support multiple pattern directories, with 
	  subdirectory search.

	* Save command now saves the boxed pattern only if there is an
	  active box.

	* More wireworld patterns have been added.

	* Prisoner's Dilemma games now supported.

Changes to 5.0:
	* I noticed there have been enough features added recently to call
	  it a major upgrade over 4.0.  Let's try to get this sucker on the
	  X contrib tape...

	* Testing and documentation improvements.

