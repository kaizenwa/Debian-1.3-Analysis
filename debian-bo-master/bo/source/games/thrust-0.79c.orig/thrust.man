.rn '' }`
''' $RCSfile$$Revision$$Date$
''' 
''' $Log$
''' 
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
.ds L' '
.ds R' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds L' `
.ds R' '
.if t .ds PI \(*p
.if n .ds PI PI
'br\}
.TH THRUST 1 "\*(RP"
.UC
.if n .hy 0 
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd S B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds / 
.	ds q 
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
thrust \- a port of the C64 classic
.SH "SYNOPSIS"
\fBthrust\fR [--help] [--version] [--nodemo] [--nosoundeffects] [--gamma=Value]
[--svgamode=MODE]
.PP
\fBxthrust\fR [--help] [--version] [--nodemo] [--nosoundeffects] [--gamma=Value]
[--noshm] [\-display display-name] [\-geometry=geometry-spec]
.SH "DESCRIPTION"
This is a port of Thrust, the classic Commodore 64 game, to un*x.
.PP
The object of the game is to lift the \fBGreen Blob\fR (what is it,
really?) from the bottom of a cave and return it safely to space. The
blob is very heavy (compared to the ship) and this makes it tougher
than it may seem.
.PP
You must be careful not to run out of fuel, crash into the cave
walls, or let the enemy artillary outposts shoot you down.
.Sh "\s-1OPTIONS\s0"
.Ip "\fI\-h, --help\fR" 5
Print a usage message and exit with a non-zero status.
.Ip "\fI\-v, --version\fR" 5
Print version information on standard output, then exit.
.Ip "\fI\-d, --nodemo\fR" 5
Do not run the demo which is otherwise displayed if the game is left
untouched.
.Ip "\fI\-e, --nosoundeffects\fR" 5
If sound is compiled in, be silent anyway.
.Ip "\fI\-c, --gamma=Value\fR" 5
Change the brightness of the colors. 1.0 is the default. Higher values
give brighter colors. The value must be positive.
.Ip "\fI\-s, --svgamode=\s-1MODE\s0\fR" 5
This option is only applicable to the Linux-svgalib version of Thrust.
.Sp
The format of svgamode is G<width>x<height>x<colors> where <width>x<height>
is at least 320x200 and <colors> has to be 256. Also, the mode cannot be
\fIplanar\fR. See the svgalib documentation for details on this. The default
is G320x200x256. There has been success with modes G320x200x256,
G640x480x256, G800x600x256 and G1024x768x256.
.Ip "\fI\-display display-name\fR" 5
.Ip "\fI\-geometry geometry-spec\fR" 5
These options are only applicable to the X version of Thrust.
Se the man page of X for details.
.Ip "\fI\-m --noshm\fR" 5
This option is only applicable to the X version of Thrust.
.Sp
Do not try to share memory between Thrust and the X server.
.SH "CONTROLS"
Note that the following keys are the default configuration. This can be
changed by the user by creating a file named .thrustrc in the users home
directory.
.Ip "\fIA\fR" 5
Turn counterclockwise
.Ip "\fIS\fR" 5
Turn clockwise
.Ip "\fIEnter\fR" 5
Fire
.Sp
Shoots a bullet. Different targets have different effect:
.Sp
The \fBFuel Tank\fR explodes for 150 points.
.Sp
The \fBBunkers\fR expolde for 750 points.
.Sp
The \fBPower Plant\fR can take a number of hits. When they are destroyed
you are given a short period of time to clear out before the whole
neighbourhood is nuked. If a \fBPower Plant\fR is hit \- but not destoyed \-
it will recover after a period of time. During this recovery period,
the \fBBunkers\fR are not able to fire. 2000 extra points are scored if
the \fBPower Plant\fR is destroyed when the level is finished. There is
exactly one \fBPower Plant\fR in every level.
.Sp
In the more advanced levels you will find other things to shoot at.
.Ip "\fIRight-Ctrl\fR" 5
Thrust
.Sp
Gives the ship a forward push at the cost of some fuel.
.Ip "\fISpacebar\fR" 5
Pick up and shield.
.Sp
If the ship is above a \fBFuel Tank\fR the ship is refueled, i.e the fuel
is picked up. Two vertical bars are drawn to indicate that fuel is
picked up. When there is no more fuel left in the tank, it disappears
and 300 points are scored.
.Sp
If the ship is close to the \fBGreen Blob\fR a connecting wire is drawn. The
\fBGreen Blob\fR is picked up when the connecting wire is of the right
length. If \fIspacebar\fR is released before the correct distance is reached
the \fBGreen Blob\fR is not picked up.
.Sp
When the shield is activated, a circle is drawn around the ship. If
the ship is carrying the \fBGreen Blob\fR, the blob and the wire are also
protected by the shield. The shield costs fuel to power.
.Ip "\fI\s-1ESC\s0\fR/\fIQ\fR" 5
Quit the game
.Ip "\fIP\fR" 5
Pause
.Ip "\fIC\fR" 5
Continue a paused game
.SH "FILES"
\fI/var/games/thrust.highscore\fR
.PP
\fI${HOME}/.thrustrc\fR
.SH "AUTHORS"
Game by Peter Ekberg \fIpeda@lysator.liu.se\fR.
.PP
Original man page by Joey Hess \fIjoey@kite.ml.org\fR.
.PP
Thanks go out to the authors of the original for the C64.
.SH "DISTRIBUTION"
Thrust may be copied under the term of the Gnu Public Licence.
.SH "BUGS"
Who knows?
The format of .thrustrc is not described.

.rn }` ''
