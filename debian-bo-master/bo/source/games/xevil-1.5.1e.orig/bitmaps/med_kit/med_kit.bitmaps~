#include "../../utils.h"
#include "../../physical.h"
#include "med_kit"
#include "med_kit_mask"


Size MedKit::get_size_max() 
{
  return context.itemContext.fallingContext.movingContext.sizes[CO_air];

}

PhysicalP MedKit::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new MedKit(w,l,pos);
  assert(ret);
  return ret;
}



AutoUseXdata MedKit::xdata;

const AutoUseContext MedKit::context = 
{ /** AutoUseContext **/
  False, /* humansOnly */
  
  { /** ItemContext **/
    True, /* persists */
      
      { /** FallingContext **/
	{/** MovingContext **/
	  "red",True,
	    "white",False,
	    
	    /* animMax */
	    {0,0,0,0,1},
	    
	    /* sizes */
	    {{0,0},{0,0},{0,0},{0,0},{7,7},},
	    
	    /* offsets */
	    {{0,0},{0,0},{0,0},{0,0},{0,0},},
	    
	    /* pixmapBits */
	    {{0},{0},{0},{0},{(char *)med_kit_bits},},
	    
	    /* maskBits */
	    {{0},{0},{0},{0},{(char *)med_kit_mask_bits},},
	    
	    { /** PhysicalContext **/
	      10, /* health */
	      10, /* mass */
	      A_MedKit, /* classId */
	      "med-kit", /* className */

	      False, /* transmogifyTarget */
	      False, /* doppelUser */
	      False, /* potentialHuman */
	      False, /* potentialEnemy */
	      0, /* enemyWeight */
	      False, /* potentialWeapon */
	      True, /* potentialOtherItem */
	      0.0003, /* objectWorldPercent */
	      MedKit::get_size_max, /* get_size_max */
	      MedKit::create, /* create */
	      False, /* statsCreations */
	      True, /* statsUses */
	      False, /* statsDeaths */
	      MedKit::get_stats, /* get_stats */
	    },
	},
      },
  },
};
