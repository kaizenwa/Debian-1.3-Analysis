#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "home"
#include "home_mask"

#define HOME_RADIUS 6


Size Home::get_size() 
{
  return context.sizes[CO_air];
}



PhysicalP Home::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new Home(w,l,pos);
  assert(ret);
  return ret;
}




MovingXdata Home::xdata;


const MovingContext Home::context = 
{ /** MovingContext **/
  "brown",False,
  "black",True,
  
  /* animMax */
  {0,0,0,0,1},
  
  /* sizes */
  {{0,0},{0,0},{0,0},{0,0},{26,27},},
  
  /* offsets */
  {{0,0},{0,0},{0,0},{0,0},{0,0},},
  
  /* pixmapBits */
  {{0},{0},{0},{0},{(char *)home_bits},},
  
  /* maskBits */
  {{0},{0},{0},{0},{(char *)home_mask_bits},},
  
  { /** PhysicalContext **/
    0, /* health */
    0, /* mass */
    A_Home, /* classId */
    "home", /* clas */

    False, /* transmogifyTarget */
    False, /* doppelUser */
    False, /* potentialHuman */
    False, /* potentialEnemy */
    0, /* enemyWeight */
    False, /* potentialWeapon */
    False, /* potentialOtherItem */
    0, /* objectWorldPercent */
    Home::get_size, /* get_size_max */
    Home::create, /* create */
    False, /* statsCreations */
    False, /* statsUses */
    False, /* statsDeaths */
    NULL, /* get_stats */
  },
};
