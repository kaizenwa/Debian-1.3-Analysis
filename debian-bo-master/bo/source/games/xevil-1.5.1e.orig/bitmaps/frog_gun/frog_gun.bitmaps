#include "../../utils.h"
#include "../../physical.h"
#include "frog_gun"
#include "frog_gun_mask"

Size FrogGun::get_size_max() 
{
  return context.gunContext.weaponContext.itemContext.fallingContext.
    movingContext.sizes[CO_air];
}


PhysicalP FrogGun::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new FrogGun(w,l,pos);
  assert(ret);
  return ret;
}


SingleGunXdata FrogGun::xdata;


const SingleGunContext FrogGun::context = 
{ /** SingleGunContext **/
  { /** GunContext **/
    10, /* shotTime */
    PH_AMMO_UNLIMITED, /* ammoInitial */
    PH_AMMO_UNLIMITED, /* ammoMax */
    
    { /** WeaponContext **/
      { /** ItemContext **/
	True, /* persists */
	700, /* coolness */
	
	{ /** FallingContext **/
	  {/** MovingContext **/
	    "black",False,
	    Xvars_BACKGROUND,True,
	    
	    /* animMax */
	    {0,0,0,0,1},
	    
	    /* sizes */
	    {{0,0},{0,0},{0,0},{0,0},{14,8},},
	    
	    /* offsets */
	    {{0,0},{0,0},{0,0},{0,0},{0,0},},
	    
	    /* pixmapBits */
	    {{0},{0},{0},{0},{(char *)frog_gun_bits},},
	    
	    /* maskBits */
	    {{0},{0},{0},{0},{(char *)frog_gun_mask_bits},},
	    
	    { /** PhysicalContext **/
	      5, /* health */
	      9, /* mass */
	      A_FrogGun, /* classId */
	      "frog-gun", /* clas */

	      False, /* transmogifyTarget */
	      False, /* doppelUser */
	      False, /* potentialHuman */
	      False, /* potentialEnemy */
	      0, /* enemyWeight */
	      True, /* potentialWeapon */
	      False, /* potentialOtherItem */
	      .0002, /* objectWorldPercent */
	      FrogGun::get_size_max, /* get_size_max */
	      FrogGun::create, /* create */
	      False, /* statsCreations */
	      False, /* statsUses */
	      False, /* statsDeaths */
	      NULL, /* get_stats */
	    },
	  },
	},
      },
    },
  },
};
