// Includes bitmaps and info for both RedHugger and GreenHugger.

// Only included by actual.cc
#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"


#include "hugger_0"
#include "hugger_0b"
#include "hugger_1"
#include "hugger_1b"
#include "hugger_2"
#include "hugger_3"
#include "hugger_4"
#include "hugger_4b"
#include "hugger_5"

#include "hugger_6"
#include "hugger_6b"
#include "hugger_12"
#include "hugger_12b"
#include "hugger_15"
#include "hugger_16"
#include "hugger_16b"
#include "hugger_17"
#include "hugger_17b"

#include "hugger_dead"

#include "hugger_mask_0"
#include "hugger_mask_0b"
#include "hugger_mask_1"
#include "hugger_mask_1b"
#include "hugger_mask_2"
#include "hugger_mask_3"
#include "hugger_mask_4"
#include "hugger_mask_4b"
#include "hugger_mask_5"

#include "hugger_mask_6"
#include "hugger_mask_6b"
#include "hugger_mask_12"
#include "hugger_mask_12b"
#include "hugger_mask_15"
#include "hugger_mask_16"
#include "hugger_mask_16b"
#include "hugger_mask_17"
#include "hugger_mask_17b"

#include "hugger_mask_dead"


Size Hugger::get_size_max() 
{
  Size ret;
  ret.width = 16;
  ret.height = 16;
  return ret;
}


CreatureXdata RedHugger::creatureXdata;
StickyXdata RedHugger::stickyXdata;
HuggerXdata RedHugger::huggerXdata;


const CreatureContext RedHugger::creatureContext =
{ /** CreatureContext **/
  7, /* crawlSpeed */
  7, /* centerSpeed */   // Crawling same as center.
  14, /* airSpeed */
  6, /* climbSpeed */
  11,  /* jump */
  2,  /* acceleration */ 
  50, /* corpseHealth */
  
  True, /* biological */
  
  {15,8}, /* deadSize */
  {0,8}, /* deadOffset */
  (char *)hugger_dead_bits, /* deadPixmapBits */
  (char *)hugger_mask_dead_bits, /* deadMaskBits */
  
  {/** MovingContext **/
    "black",False,
    "chocolate3",False,
    
    /* animMax */
    {2,2,1,1,1,1,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,1,
       2,2},
    
    /* sizes */
    {{16,8},{16,8},{13,12},{13,12},{13,16},{10,8},
       {8,16},
       {8,16},{8,16},
       {10,8},
       {16,8},{16,8},
       {8,16},
       {8,16},{8,16},
       {10,8},
       {16,8},{16,8},
       {13,16},          /* Must be    */
       {13,16},{13,16},  /* same size. */
       {13,16},{13,16},
       {13,16},{13,16},  
     },
    
    /* offsets */
    {{0,8},{0,8},{1,2},{1,2},{1,0},{3,8},
       {8,0},
       {8,0},{8,0},
       {3,8},
       {0,8},{0,8},
       {0,0},
       {0,0},{0,0},
       {3,0},
       {0,0},{0,0},
       {1,0}, 
       {1,0},{1,0}, 
       {1,0},{1,0},
       {1,0},{1,0}, 
     },
    
    /* pixmapBits */
    {{(char *)hugger_0_bits,(char *)hugger_0b_bits},
     {(char *)hugger_1_bits,(char *)hugger_1b_bits},
     {(char *)hugger_2_bits},{(char *)hugger_3_bits},
     {(char *)hugger_4_bits},{(char *)hugger_5_bits},

     {(char *)hugger_6_bits},
     {(char *)hugger_6_bits,(char *)hugger_6b_bits},{(char *)hugger_6_bits,(char *)hugger_6b_bits},
     {(char *)hugger_5_bits},
     {(char *)hugger_0_bits,(char *)hugger_0b_bits},{(char *)hugger_1_bits,(char *)hugger_1b_bits},
     {(char *)hugger_12_bits},
     {(char *)hugger_12_bits,(char *)hugger_12b_bits},{(char *)hugger_12_bits,(char *)hugger_12b_bits},
     {(char *)hugger_15_bits},
     {(char *)hugger_16_bits,(char *)hugger_16b_bits},{(char *)hugger_17_bits,(char *)hugger_17b_bits},
     {(char *)hugger_4_bits},
     {(char *)hugger_4_bits,(char *)hugger_4b_bits},{(char *)hugger_4_bits,(char *)hugger_4b_bits},
     {(char *)hugger_4_bits},{(char *)hugger_4_bits},
     {(char *)hugger_4_bits,(char *)hugger_4b_bits},{(char *)hugger_4_bits,(char *)hugger_4b_bits},
   },

    /* maskBits */
    {{(char *)hugger_mask_0_bits,(char *)hugger_mask_0b_bits},
     {(char *)hugger_mask_1_bits,(char *)hugger_mask_1b_bits},
     {(char *)hugger_mask_2_bits},{(char *)hugger_mask_3_bits},
     {(char *)hugger_mask_4_bits},{(char *)hugger_mask_5_bits},

     {(char *)hugger_mask_6_bits},
     {(char *)hugger_mask_6_bits,(char *)hugger_mask_6b_bits},{(char *)hugger_mask_6_bits,(char *)hugger_mask_6b_bits},
     {(char *)hugger_mask_5_bits},
     {(char *)hugger_mask_0_bits,(char *)hugger_mask_0b_bits},{(char *)hugger_mask_1_bits,(char *)hugger_mask_1b_bits},
     {(char *)hugger_mask_12_bits},
     {(char *)hugger_mask_12_bits,(char *)hugger_mask_12b_bits},{(char *)hugger_mask_12_bits,(char *)hugger_mask_12b_bits},
     {(char *)hugger_mask_15_bits},
     {(char *)hugger_mask_16_bits,(char *)hugger_mask_16b_bits},{(char *)hugger_mask_17_bits,(char *)hugger_mask_17b_bits},
     {(char *)hugger_mask_4_bits},
     {(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},{(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},
     {(char *)hugger_mask_4_bits},{(char *)hugger_mask_4_bits},
     {(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},{(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},
   },
    
    {/** PhysicalContext **/
      35, /* health */
      25, /* mass */
      A_RedHugger, /* classId */
      "red-hugger", /* clas */
    },
  },
};


const StickyContext RedHugger::stickyContext =
{ /** StickyContext **/
  0, /* dummy */
};


const HuggerContext RedHugger::huggerContext = 
{ /** HuggerContext **/
  False, /* useHuggeeIntel */
};



CreatureXdata GreenHugger::creatureXdata;
StickyXdata GreenHugger::stickyXdata;
HuggerXdata GreenHugger::huggerXdata;


const CreatureContext GreenHugger::creatureContext =
{ /** CreatureContext **/
  7, /* crawlSpeed */
  7, /* centerSpeed */   // Crawling same as center.
  14, /* airSpeed */
  6, /* climbSpeed */
  11,  /* jump */
  2,  /* acceleration */ 
  50, /* corpseHealth */
  
  True, /* biological */
  
  {15,8}, /* deadSize */
  {0,8}, /* deadOffset */
  (char *)hugger_dead_bits, /* deadPixmapBits */
  (char *)hugger_mask_dead_bits, /* deadMaskBits */
  
  {/** MovingContext **/
    "black",True,
    "olivedrab",False,
    
    /* animMax */
    {2,2,1,1,1,1,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,
       2,2,
       1,1,
       2,2},
    
    /* sizes */
    {{16,8},{16,8},{13,12},{13,12},{13,16},{10,8},
       {8,16},
       {8,16},{8,16},
       {10,8},
       {16,8},{16,8},
       {8,16},
       {8,16},{8,16},
       {10,8},
       {16,8},{16,8},
       {13,16},          /* Must be    */
       {13,16},{13,16},  /* same size. */
       {13,16},{13,16},
       {13,16},{13,16},  
     },
    
    /* offsets */
    {{0,8},{0,8},{1,2},{1,2},{1,0},{3,8},
       {8,0},
       {8,0},{8,0},
       {3,8},
       {0,8},{0,8},
       {0,0},
       {0,0},{0,0},
       {3,0},
       {0,0},{0,0},
       {1,0}, 
       {1,0},{1,0}, 
       {1,0},{1,0},
       {1,0},{1,0}, 
     },
    
    /* pixmapBits */
    {{(char *)hugger_0_bits,(char *)hugger_0b_bits},
     {(char *)hugger_1_bits,(char *)hugger_1b_bits},
     {(char *)hugger_2_bits},{(char *)hugger_3_bits},
     {(char *)hugger_4_bits},{(char *)hugger_5_bits},

     {(char *)hugger_6_bits},
     {(char *)hugger_6_bits,(char *)hugger_6b_bits},{(char *)hugger_6_bits,(char *)hugger_6b_bits},
     {(char *)hugger_5_bits},
     {(char *)hugger_0_bits,(char *)hugger_0b_bits},{(char *)hugger_1_bits,(char *)hugger_1b_bits},
     {(char *)hugger_12_bits},
     {(char *)hugger_12_bits,(char *)hugger_12b_bits},{(char *)hugger_12_bits,(char *)hugger_12b_bits},
     {(char *)hugger_15_bits},
     {(char *)hugger_16_bits,(char *)hugger_16b_bits},{(char *)hugger_17_bits,(char *)hugger_17b_bits},
     {(char *)hugger_4_bits},
     {(char *)hugger_4_bits,(char *)hugger_4b_bits},{(char *)hugger_4_bits,(char *)hugger_4b_bits},
     {(char *)hugger_4_bits},{(char *)hugger_4_bits},
     {(char *)hugger_4_bits,(char *)hugger_4b_bits},{(char *)hugger_4_bits,(char *)hugger_4b_bits},
   },

    /* maskBits */
    {{(char *)hugger_mask_0_bits,(char *)hugger_mask_0b_bits},
     {(char *)hugger_mask_1_bits,(char *)hugger_mask_1b_bits},
     {(char *)hugger_mask_2_bits},{(char *)hugger_mask_3_bits},
     {(char *)hugger_mask_4_bits},{(char *)hugger_mask_5_bits},

     {(char *)hugger_mask_6_bits},
     {(char *)hugger_mask_6_bits,(char *)hugger_mask_6b_bits},{(char *)hugger_mask_6_bits,(char *)hugger_mask_6b_bits},
     {(char *)hugger_mask_5_bits},
     {(char *)hugger_mask_0_bits,(char *)hugger_mask_0b_bits},{(char *)hugger_mask_1_bits,(char *)hugger_mask_1b_bits},
     {(char *)hugger_mask_12_bits},
     {(char *)hugger_mask_12_bits,(char *)hugger_mask_12b_bits},{(char *)hugger_mask_12_bits,(char *)hugger_mask_12b_bits},
     {(char *)hugger_mask_15_bits},
     {(char *)hugger_mask_16_bits,(char *)hugger_mask_16b_bits},{(char *)hugger_mask_17_bits,(char *)hugger_mask_17b_bits},
     {(char *)hugger_mask_4_bits},
     {(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},{(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},
     {(char *)hugger_mask_4_bits},{(char *)hugger_mask_4_bits},
     {(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},{(char *)hugger_mask_4_bits,(char *)hugger_mask_4b_bits},
   },
    
    {/** PhysicalContext **/
      35, /* health */
      25, /* mass */
      A_GreenHugger, /* classId */
      "green-hugger", /* clas */
    },
  },
};


const StickyContext GreenHugger::stickyContext =
{ /** StickyContext **/
  0, /* dummy */
};


const HuggerContext GreenHugger::huggerContext = 
{ /** HuggerContext **/
  True, /* useHuggeeIntel */
};
