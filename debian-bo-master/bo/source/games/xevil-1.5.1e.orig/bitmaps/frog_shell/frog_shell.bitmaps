// Only included by actual.cc
#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "../../actual.h"


#include "frog_shell"
#include "frog_shellb"
#include "frog_shell_mask"
#include "frog_shell_maskb"


Size FrogShell::get_size() 
{
  return context.movingContext.sizes[CO_air];
}


PhysicalP FrogShell::create(WorldP,LocatorP,const Pos &)
{
  assert(0);
  return NULL;
}



ShotXdata FrogShell::xdata;


const ShotContext FrogShell::context = 
{/** ShotContext **/
  0, /* damage */ /* Ignored in this case. */
  12, /* speed */

  {/** MovingContext **/
    "black",False,
    "green4",False,
    
    /* animMax */
    {0,0,0,0,2},
    
    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{5,5},},
    
    /* offsets */
    {{0,0},{0,0},{0,0},{0,0},{0,0},},
    
    /* pixmapBits */
    {{0},{0},{0},{0},
       {(char *)frog_shell_bits,(char *)frog_shellb_bits,},},
    
    /* maskBits */
    {{0},{0},{0},{0},
       {(char *)frog_shell_mask_bits,(char *)frog_shell_maskb_bits,},},
    
    {/** PhysicalContext **/
      1, /* health */
      0, /* mass */
      A_FrogShell, /* classId */
      "frog-shell", /* clas */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0, /* objectWorldPercent */
      FrogShell::get_size, /* get_size_max */
      FrogShell::create, /* create */
      True, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
      FrogShell::get_stats, /* get_stats */
    },
  },
};


