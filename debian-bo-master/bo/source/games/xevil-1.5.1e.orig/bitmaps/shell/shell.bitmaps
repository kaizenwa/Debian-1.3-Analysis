#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "../../actual.h"
#include "shell"
#include "shell_mask"


Size Shell::get_size() 
{
  return context.movingContext.sizes[CO_air];
}


PhysicalP Shell::create(WorldP,LocatorP,const Pos &)
{
  assert(0);
  return NULL;
}



ShotXdata Shell::xdata;


const ShotContext Shell::context = 
{/** ShotContext **/
  50, /* damage */
  13, /* speed */

  {/** MovingContext **/
    "black",False,
    "gray",True,
    
    /* animMax */
    {0,0,0,0,1},
    
    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{6,6},},

    /* offsets */
    {{0,0},{0,0},{0,0},{0,0},{0,0},},
    
    /* pixmapBits */
    {{0},{0},{0},{0},{(char *)shell_bits},},
    
    /* maskBits */
    {{0},{0},{0},{0},{(char *)shell_mask_bits},},

    {/* PhysicalContext */
      1, /* health */
      0, /* mass */
      A_Shell, /* classId */
      "shell", /* className */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0, /* objectWorldPercent */
      Shell::get_size, /* get_size_max */
      Shell::create, /* create */
      True, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
      Shell::get_stats, /* get_stats */
    },
  },
};
