#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "trapdoor"
#include "trapdoor_mask"


// Defines.
#define TRAPDOOR_TIME 50



Size Trapdoor::get_size() 
{
  return context.sizes[CO_air];
}



PhysicalP Trapdoor::create(WorldP w,LocatorP l,const Pos &pos)
{
  assert(0);
}



MovingXdata Trapdoor::xdata;


const MovingContext Trapdoor::context = 
{ /** MovingContext **/
  "black",True,
  "brown",False,
  
  /* animMax */
  {0,0,0,0,1},
  
  /* sizes */
  {{0,0},{0,0},{0,0},{0,0},{30,14},},
  
  /* offsets */
  {{0,0},{0,0},{0,0},{0,0},{0,0},},
  
  /* pixmapBits */
  {{0},{0},{0},{0},{(char *)trapdoor_bits},},
  
  /* maskBits */
  {{0},{0},{0},{0},{(char *)trapdoor_mask_bits},},
  
  { /** PhysicalContext **/
    0, /* health */
    0, /* mass */
    A_Trapdoor, /* classId */
    "trapdoor", /* clas */
  },
};
