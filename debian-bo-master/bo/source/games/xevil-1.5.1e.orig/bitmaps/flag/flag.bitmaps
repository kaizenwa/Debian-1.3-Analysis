#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "flag"
#include "flag_mask"


Size Flag::get_size_max() 
{
  return context.fallingContext.movingContext.sizes[CO_air];
}



PhysicalP Flag::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new Flag(w,l,pos);
  assert(ret);
  return ret;
}



TouchableXdata Flag::xdata;

const TouchableContext Flag::context = 
{ /** TouchableContext **/
  { /** FallingContext **/
    { /** MovingContext **/
      "black",False,
	"red",False,
	
	/* animMax */
	{0,0,0,0,1},
	
	/* sizes */
	{{0,0},{0,0},{0,0},{0,0},{11,13},},
	
	/* offsets */
	{{0,0},{0,0},{0,0},{0,0},{0,0},},
	
	/* pixmapBits */
	{{0},{0},{0},{0},{(char *)flag_bits},},
	
	/* maskBits */
	{{0},{0},{0},{0},{(char *)flag_mask_bits},},
	
	{ /** PhysicalContext **/
	  0, /* health */
	    0, /* mass */
	    A_Flag, /* classId */
	    "flag", /* clas */

	  False, /* transmogifyTarget */
	  False, /* doppelUser */
	  False, /* potentialHuman */
	  False, /* potentialEnemy */
	  0, /* enemyWeight */
	  False, /* potentialWeapon */
	  False, /* potentialOtherItem */
	  0, /* objectWorldPercent */
	  Flag::get_size_max, /* get_size_max */
	  Flag::create, /* create */
	  False, /* statsCreations */
	  False, /* statsUses */
	  False, /* statsDeaths */
	  NULL, /* get_stats */
	},
    },
  },
};
