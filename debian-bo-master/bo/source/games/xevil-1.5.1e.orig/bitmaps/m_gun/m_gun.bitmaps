#include "../../utils.h"
#include "../../physical.h"
#include "m_gun"
#include "m_gun_mask"

Size MGun::get_size_max() 
{
  Size ret;
  ret.width = 17;
  ret.height = 9;
  return ret;
}



PhysicalP MGun::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new MGun(w,l,pos);
  assert(ret);
  return ret;
}



GunXdata MGun::xdata;

const GunContext MGun::context = 
{ /** GunContext **/
  4, /* shotTime */
  30, /* ammoInitial */
  80, /* ammoMax */

  { /** WeaponContext **/
    { /** ItemContext **/
      True, /* persists */
      9000, /* coolness */

      { /** FallingContext **/
	{/** MovingContext **/
	  "black",False,
	  Xvars_BACKGROUND,True,
	  
	  /* animMax */
	  {0,0,0,0,1},
	  
	  /* sizes */
	  {{0,0},{0,0},{0,0},{0,0},{17,9},},
	  
	  /* offsets */
	  {{0,0},{0,0},{0,0},{0,0},{0,0},},
	  
	  /* pixmapBits */
	  {{0},{0},{0},{0},{(char *)m_gun_bits},},
	  
	  /* maskBits */
	  {{0},{0},{0},{0},{(char *)m_gun_mask_bits},},
	  
	  { /** PhysicalContext **/
	    5, /* health */
	    15, /* mass */
	    A_MGun, /* classId */
	    "machine-gun", /* clas */

	    False, /* transmogifyTarget */
	    False, /* doppelUser */
	    False, /* potentialHuman */
	    False, /* potentialEnemy */
	    0, /* enemyWeight */
	    True, /* potentialWeapon */
	    False, /* potentialOtherItem */
	    .0002, /* objectWorldPercent */
	    MGun::get_size_max, /* get_size_max */
	    MGun::create, /* create */
	    False, /* statsCreations */
	    False, /* statsUses */
	    False, /* statsDeaths */
	    NULL, /* get_stats */
	  },
	},
      },
    },
  },
};
