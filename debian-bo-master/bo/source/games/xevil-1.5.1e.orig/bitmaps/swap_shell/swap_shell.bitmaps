#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "../../actual.h"

#include "swap_shell"
#include "swap_shellb"
#include "swap_shell_mask"
#include "swap_shell_maskb"


Size SwapShell::get_size() 
{
  return context.movingContext.sizes[CO_air];
}


PhysicalP SwapShell::create(WorldP,LocatorP,const Pos &)
{
  assert(0);
  return NULL;
}



ShotXdata SwapShell::xdata;


const ShotContext SwapShell::context = 
{/** ShotContext **/
  0, /* damage */ /* Ignored in this case. */
  12, /* speed */

  {/** MovingContext **/
    "black",False,
    "yellow",False,
    
    /* animMax */
    {0,0,0,0,2},
    
    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{5,5},},

    /* offsets */
    {{0,0},{0,0},{0,0},{0,0},{0,0},},
    
    /* pixmapBits */
    {{0},{0},{0},{0},
     {(char *)swap_shell_bits,(char *)swap_shellb_bits},},
    
    /* maskBits */
    {{0},{0},{0},{0},
     {(char *)swap_shell_mask_bits,(char *)swap_shell_maskb_bits},},

    {/** PhysicalContext **/
      1, /* health */
      0, /* mass */
      A_SwapShell, /* classId */
      "swap-shell", /* clas */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0, /* objectWorldPercent */
      SwapShell::get_size, /* get_size_max */
      SwapShell::create, /* create */
      True, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
      SwapShell::get_stats, /* get_stats */
    },
  },
};
