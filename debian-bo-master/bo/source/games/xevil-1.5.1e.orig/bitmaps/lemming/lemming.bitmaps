// Only included by actual.cc
#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
  

#include "lemming_0"
#include "lemming_0b"
#include "lemming_0c"
#include "lemming_0d"
#include "lemming_1"
#include "lemming_1b"
#include "lemming_1c"
#include "lemming_1d"
#include "lemming_5"

#include "lemming_mask_0"
#include "lemming_mask_0b"
#include "lemming_mask_0c"
#include "lemming_mask_0d"
#include "lemming_mask_1"
#include "lemming_mask_1b"
#include "lemming_mask_1c"
#include "lemming_mask_1d"
#include "lemming_mask_5"

#include "lemming_dead"
#include "lemming_mask_dead"



Size Lemming::get_size_max() 
{
  Size ret;
  ret.width = 19;
  ret.height = 20;
  return ret;
}



PhysicalP Lemming::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new Lemming(w,l,pos);
  assert(ret);
  return ret;
}



CreatureXdata Lemming::creatureXdata;
GroundedXdata Lemming::groundedXdata;
SuicideXdata Lemming::suicideXdata;


const CreatureContext Lemming::creatureContext = 
{ /** CreatureContext **/
  0, /* crawlSpeed */
  3, /* centerSpeed */
  12, /* airSpeed */
  0, /* climbSpeed */
  0,  /* jump */
  1,  /* acceleration */ 
  90, /* corpseHealth */
  
  True, /* biological */
  
  {19,7}, /* deadSize */
  {0,13}, /* deadOffset */
  (char *)lemming_dead_bits, /* deadPixmapBits */
  (char *)lemming_mask_dead_bits, /* deadMaskBits */
  
  {/** MovingContext **/
    "green4",False, 
    "blue",False,
    
    /* animMax */
    {4,4,1,1,1,1,
       0,
       0,0,
       0,
       0,0,
       0,
       0,0,
       0,
       0,0,
       0,
       0,0,
       1,1,
     },
    
    /* sizes */
    {{12,20},{12,20},{8,20},{8,20},{8,20},{8,20},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},          /* Must be    */
       {0,0},{0,0},  /* same size. */
       {8,20},{8,20},	
     },
    
    /* offsets */
    {{3,0},{3,0},{5,0},{5,0},{5,0},{5,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {5,0},{5,0},
     },
    
    /* pixmapBits */
    {{(char *)lemming_0_bits,(char *)lemming_0b_bits,
      (char *)lemming_0c_bits,(char *)lemming_0d_bits},
     {(char *)lemming_1_bits,(char *)lemming_1b_bits,
      (char *)lemming_1c_bits,(char *)lemming_1d_bits},
     {(char *)lemming_5_bits},{(char *)lemming_5_bits},
     {(char *)lemming_5_bits},{(char *)lemming_5_bits},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {(char *)lemming_5_bits},{(char *)lemming_5_bits},
   },
    
    /* maskBits */
    {{(char *)lemming_mask_0_bits,(char *)lemming_mask_0b_bits,
      (char *)lemming_mask_0c_bits,(char *)lemming_mask_0d_bits},
     {(char *)lemming_mask_1_bits,(char *)lemming_mask_1b_bits,
      (char *)lemming_mask_1c_bits,(char *)lemming_mask_1d_bits},
     {(char *)lemming_mask_5_bits},{(char *)lemming_mask_5_bits},
     {(char *)lemming_mask_5_bits},{(char *)lemming_mask_5_bits},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {(char *)lemming_mask_5_bits},{(char *)lemming_mask_5_bits},
   },
    {/** PhysicalContext **/
      40, /* health */
      40, /* mass */
      A_Lemming, /* classId */
      "lem", /* clas */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0, /* objectWorldPercent */
      Lemming::get_size_max, /* get_size_max */
      Lemming::create, /* create */
      False, /* statsCreations */
      False, /* statsUses */
      True, /* statsDeaths */
      Lemming::get_stats, /* get_stats */
    },
  },
};



const GroundedContext Lemming::groundedContext =
{ /** GroundedContext **/
  0, /* dummy */
};



const SuicideContext Lemming::suicideContext =
{ /** SuicideContext **/
  0, /* dummy */
};
