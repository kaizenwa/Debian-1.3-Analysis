#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"
#include "xit"
#include "xit_mask"


Size Xit::get_size_max() 
{
  return context.fallingContext.movingContext.sizes[CO_air];
}


PhysicalP Xit::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new Xit(w,l,pos);
  assert(ret);
  return ret;
}



TouchableXdata Xit::xdata;

const TouchableContext Xit::context = 
{ /** TouchableContext **/
  { /** FallingContext **/
    { /** MovingContext **/
      "black",False,
	"white",True,
	
	/* animMax */
	{0,0,0,0,1},
	
	/* sizes */
	{{0,0},{0,0},{0,0},{0,0},{30,30},},
	
	/* offsets */
	{{0,0},{0,0},{0,0},{0,0},{0,0},},
	
	/* pixmapBits */
	{{0},{0},{0},{0},{(char *)xit_bits},},
	
	/* maskBits */
	{{0},{0},{0},{0},{(char *)xit_mask_bits},},
	
	{ /** PhysicalContext **/
	  0, /* health */
	    0, /* mass */
	    A_Xit, /* classId */
	    "exit", /* clas */

	  False, /* transmogifyTarget */
	  False, /* doppelUser */
	  False, /* potentialHuman */
	  False, /* potentialEnemy */
	  0, /* enemyWeight */
	  False, /* potentialWeapon */
	  False, /* potentialOtherItem */
	  0, /* objectWorldPercent */
	  Xit::get_size_max, /* get_size_max */
	  Xit::create, /* create */
	  False, /* statsCreations */
	  False, /* statsUses */
	  False, /* statsDeaths */
	  NULL, /* get_stats */
	  },
      },
    },
};
