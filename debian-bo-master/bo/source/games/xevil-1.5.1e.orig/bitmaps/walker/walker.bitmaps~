// Only included by actual.cc
#include "../../utils.h"
#include "../../coord.h"
#include "../../physical.h"


#include "walker_0"
#include "walker_0b"
#include "walker_0c"
#include "walker_0d"
#include "walker_1"
#include "walker_1b"
#include "walker_1c"
#include "walker_1d"
#include "walker_2"
#include "walker_2b"
#include "walker_3"
#include "walker_3b"
#include "walker_4"
#include "walker_5"
#include "walker_10"
#include "walker_11"
#include "walker_18"
#include "walker_18b"

#include "walker_dead"

#include "walker_mask_0"
#include "walker_mask_0b"
#include "walker_mask_0c"
#include "walker_mask_0d"
#include "walker_mask_1"
#include "walker_mask_1b"
#include "walker_mask_1c"
#include "walker_mask_1d"
#include "walker_mask_2"
#include "walker_mask_2b"
#include "walker_mask_3"
#include "walker_mask_3b"
#include "walker_mask_4"
#include "walker_mask_5"
#include "walker_mask_10"
#include "walker_mask_11"
#include "walker_mask_18"
#include "walker_mask_18b"

#include "walker_mask_dead"


#define WALKER_ANIM_TIME 3


Size Walker::get_size_max() 
{
  Size ret;
  ret.width = 38;
  ret.height = 26;
  return ret;
}



PhysicalP Walker::create(WorldP w,LocatorP l,const Pos &pos)
{
  PhysicalP ret = new Walker(w,l,pos);
  assert(ret);
  return ret;
}



CreatureXdata Walker::creatureXdata;
WalkingXdata Walker::walkingXdata;
UserXdata Walker::userXdata;
BuiltInXdata Walker::builtInXdata;


const CreatureContext Walker::creatureContext =
{ /** CreatureContext **/
  0, /* crawlSpeed */
  6, /* centerSpeed */
  14, /* airSpeed */
  4, /* climbSpeed */
  12,  /* jump */
  2,  /* acceleration */ 
  200, /* corpseHealth */
  
  False, /* biological */
  
  {27,14}, /* deadSize */
  {5,14}, /* deadOffset */
  (char *)walker_dead_bits, /* deadPixmapBits */
  (char *)walker_mask_dead_bits, /* deadMaskBits */
  
  {/** MovingContext **/
    "black",False,
    "antiquewhite3",True,
    
    /* animMax */
    {4,4,2,2,1,1,
       0,
       0,0,
       1,
       1,1,
       0,
       0,0,
       0,
       0,0,
       1,
       2,2,
       1,1,
       2,2,
     },
    
    /* sizes */
    {{28,26},{28,26},{38,15},{38,15},{20,13},{20,26},
       {0,0},
       {0,0},{0,0},
       {20,13},
       {20,13},{20,13},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {16,26},          /* Must be    */
       {16,26},{16,26},  /* same size. */
       {20,13},{20,13},	
       {16,26},{16,26},
     },
    
    /* offsets */
    {{5,0},{5,0},{0,5},{0,5},{9,6},{9,0},
       {0,0},
       {0,0},{0,0},
       {9,13},
       {9,13},{9,13},
       {0,0},
       {0,0},{0,0},
       {0,0},
       {0,0},{0,0},
       {11,0},
       {11,0},{11,0},
       {9,6},{9,6},
       {11,0},{11,0},
     },
    
    /* pixmapBits */
    {{(char *)walker_0_bits,(char *)walker_0b_bits,
      (char *)walker_0c_bits,(char *)walker_0d_bits},
     {(char *)walker_1_bits,(char *)walker_1b_bits,
      (char *)walker_1c_bits,(char *)walker_1d_bits},
     {(char *)walker_2_bits,(char *)walker_2b_bits},
     {(char *)walker_3_bits,(char *)walker_3b_bits},
     {(char *)walker_4_bits},{(char *)walker_5_bits},
     {0},
     {0},{0},
     {(char *)walker_4_bits},
     {(char *)walker_4_bits}, 
     {(char *)walker_4_bits},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {(char *)walker_18_bits},
     {(char *)walker_18_bits,(char *)walker_18b_bits},
     {(char *)walker_18_bits,(char *)walker_18b_bits},
     {(char *)walker_4_bits},{(char *)walker_4_bits},
     {(char *)walker_18_bits,(char *)walker_18b_bits},
     {(char *)walker_18_bits,(char *)walker_18b_bits},
   },

    /* maskBits */
    {{(char *)walker_mask_0_bits,(char *)walker_mask_0b_bits,
      (char *)walker_mask_0c_bits,(char *)walker_mask_0d_bits},
     {(char *)walker_mask_1_bits,(char *)walker_mask_1b_bits,
      (char *)walker_mask_1c_bits,(char *)walker_mask_1d_bits},
     {(char *)walker_mask_2_bits,(char *)walker_mask_2b_bits},
     {(char *)walker_mask_3_bits,(char *)walker_mask_3b_bits},
     {(char *)walker_mask_4_bits},{(char *)walker_mask_5_bits},
     {0},
     {0},{0},
     {(char *)walker_mask_4_bits},
     {(char *)walker_mask_4_bits}, 
     {(char *)walker_mask_4_bits},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {(char *)walker_mask_18_bits},
     {(char *)walker_mask_18_bits,(char *)walker_mask_18b_bits},
     {(char *)walker_mask_18_bits,(char *)walker_mask_18b_bits},
     {(char *)walker_mask_4_bits},{(char *)walker_mask_4_bits},
     {(char *)walker_mask_18_bits,(char *)walker_mask_18b_bits},
     {(char *)walker_mask_18_bits,(char *)walker_mask_18b_bits},
   },
    
    {/** PhysicalContext **/
      200, /* health */
      400, /* mass */
      A_Walker, /* classId */
      "walker", /* clas */

      True, /* transmogifyTarget */
      True, /* doppelUser */
      True, /* potentialHuman */
      True, /* potentialEnemy */
      2, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0, /* objectWorldPercent */
      Walker::get_size_max, /* get_size_max */
      Walker::create, /* create */
      False, /* statsCreations */
      False, /* statsUses */
      True, /* statsDeaths */
      Walker::get_stats, /* get_stats */
    },
  },
};


const WalkingContext Walker::walkingContext =
{ /** WalkingContext **/
  0, /* dummy */
};


const UserContext Walker::userContext = 
{ /** UserContext **/
  True, /* usesWeapons */
  True, /* usesItems */
};


const BuiltInContext Walker::builtInContext =
{ /** BuiltInContext **/
  11, /* shotTime */
  A_Lasers, /* weaponClassId */
  "lasers", /* weaponStr */
};
