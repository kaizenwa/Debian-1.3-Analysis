@node Designing with X11 Xconq, , , Game Design

@section Designing with X11 Xconq

There are two ways to get into designer's mode; you can either specify
@samp{-design} on the command line, or else enter the long command
@samp{design}.  When you do either of
these, several things will happen: the side list will mark your side
as a designer, the ``see all'' button in the view control panel will
be enabled, and you will get a popup with designer's tools.
The popup applies to all maps equally.

The identification in the side list is for the benefit of other players,
since it is actually possible to enable designing in a multi-player game.
@c but maybe should disable, or else enable for all players
@c simultaneously??  Somebody could enable designing, hack a bit,
@c then switch back before anybody else in the game noticed...

The ``see all'' view control allows you to see everything accurately.
It is switchable so you can compare what things look like to the player
vs what they are in reality.

@c need side view painting here too

@subsection X11 Xconq Design Dialog

[should include info about designer's dialog]

@subsection Shortcuts for X11 Xconq Designers

@itemize

@item
Clicking on the ``sides'' subwindow will select the current side.

@item
Clicking on the ``unit types'' subwindow will select the current unit
type.

@item
Clicking a cell with the right mouse button in terrain-drawing mode
will select the current terrain.

@item
Clicking a unit with the right mouse button in unit-adding mode will
select the current unit type.

@item
Clicking a unit with the right mouse button in people-drawing mode
will select the current side.

@item
Clicking a cell with the right mouse button in feature-drawing mode
will select the current feature.

@end itemize

In addition, there are keyboard commands that you can use.

@itemize

@item
`@code{|}' @code{set-unit-type} .
This command asks for the unit type that you would like to be the
current type to create.

@item
`@code{\}' @code{add-unit} .
This command adds a unit of the current type to the current location.

@item
`@code{~}' @code{set-terrain-type} .
This command asks for the terrain type you would like to paint.
The prefix argument sets the radius of the area to paint.
The default radius is 0, which just paints a single cell.

@item
`@code{`}' @code{paint-terrain} .
This command applies the current terrain type to an area with the
current radius around the current location.

@end itemize

@subsection Image Families

@i{X11 Xconq} can use images in either its portable image family format,
or as bitmaps.  However, since images in portable format will work with
other interfaces, you should only use bitmaps while prototyping,
and translate them into portable form using @samp{x2imf}.

To translate image families into bitmaps, use the tool @samp{imf2x}.

@subsubsection Xshowimf

The program @samp{xshowimf} displays image families.

Install the resource files @samp{XShowimf.ad} and @samp{XShowimf-co.ad} as
@samp{XShowimf} and @samp{XShowimf-co}
(or @samp{XShowimf-color}, depending on the value of
the customization resource) in the proper directory [???],
or load the relevant file with @samp{xrdb -merge}.

Control the display of three-color images (mono+mask) with the
resource @samp{maskColor} (see @samp{XShowimf-co.ad}
or with the command-line argument @samp{-mc}.

To edit the image families, do something like
@example
mkdir tmp
xshowimf [imf/xbm/xpm files...] -o tmpdir &
(cd tmpdir; xpaint) &
@end example
