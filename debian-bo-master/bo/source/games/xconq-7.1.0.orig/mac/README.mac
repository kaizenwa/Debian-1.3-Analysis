This is the Mac source directory for Xconq.

The instructions here are for building from source.  It is assumed
that you have already either transferred the sources to a Mac or made
a shared volume visible to one, and that you have moved and unpacked
certain binary files; read and follow the instructions in
"DO_FIRST.mac" in order to do this.

SYSTEM REQUIREMENTS

You will need a development environment.  Xconq is known to build
under Think C 5 or 6, Symantec C 7, MPW 3.3 or 3.4, and CW 6 or 7.
This is just for 68K systems; native PowerMac Xconq is still being
developed.

You will need 8MB of RAM.

BUILDING

For Think C, just select "Build Application" from the menu.

For CodeWarrior, select "Make" from the menu.

For MPW, run the script "mpw-configure", then build "Xconq".

INSTALLING

No installation process is necessary.

If you want to move the executable elsewhere, you must also bring
along "lib" and "lib-mac", and put them in the same folder as the
application.

To make documentation in HTML format, use the Perl script texi2html
in the "doc" directory.

ROAD MAP

Other Programs:

IMFApp is a utility for examining and converting the image families
used by Xconq.

Skelconq is a game testing and compilation application that uses
console I/O only.

Cconq is the curses version of Xconq.  Believe it or not, you can
build and run the curses version using the "libcurses" library,
and it works just fine.  (Hey, it's convenient for testing.  If
you promise not to gag, I might tell you about how I check out X11
code on my Mac...)

Files and Folders:

Generic sources are in "kernel", Mac-specific code in "mac".  Xconq
uses all files in "mac" and "kernel" except for "skelconq.c",
"cmdline.c", "compile.c", and OS-specific files, while Skelconq uses
everything in "kernel" except OS-specific files and nothing in "mac".

Generic test cases and (Unix-based) test machinery are in "test".

Documentation in TeX (texinfo) is in "doc".  It should be possible to
format the documents using OzTeX, but I haven't tried it myself.

Game translation tools and suchlike are in "misc".  The Perl scripts
will run under MacPerl.

Sources to the other Xconq interfaces, if present, are in folders like
"curses", "x11", and so forth.  Unix configuration info is in
"config*" files and the "config" directory.

Note that "kernel", "lib", "test", "doc", and "misc" are identical on
all systems, so don't put anything in them (such as binary files) that
can't be included everywhere.  Since "mac" is a source directory, it
should not have binary or resource files either, not even in binhexed
form (they mess up diffs and patches). Use "lib-mac", "doc-mac", or
"mac-only" for Mac-only files.

THINK C PROJECT

This describes how to rebuild the Think C project from scratch.

Files and Segments:

mac.c
macconq.c

macdraw.c

macmap.c

macimf.c
macmap2.c

maccmd.c
macmenus.c

macwins.c

machelp.c
maclist.c

macinit.c

macdesign.c

imf.c
ui.c

run.c

ai.c
mplayer.c

actions.c

combat.c

plan.c
task.c

init.c

mkrivers.c
mkroads.c
mkterr.c
mkunits.c

world.c

side.c

unit.c

history.c
lisp.c
mknames.c
score.c
util.c

help.c
nlang.c

module.c

read.c

write.c

ps.c

tables.c

generic.c
types.c

MacTraps
MacTraps2

ANSI-32

Prefix:

#include <MacHeaders>

#define MAC

Think C Options:

strict prototype enforcement, require prototypes
set 4-byte ints
enums are always ints

CODEWARRIOR PROJECT

This describes how to rebuild the CodeWarrior project from scratch.

mac.c
macconq.c

macdraw.c

macmap.c

macimf.c
macmap2.c

maccmd.c
macmenus.c

macwins.c

machelp.c
maclist.c

macinit.c

macdesign.c

imf.c
ui.c

run.c

ai.c
mplayer.c

actions.c

combat.c

plan.c
task.c

init.c

mkrivers.c
mkroads.c
mkterr.c
mkunits.c

world.c

side.c

unit.c

history.c
lisp.c
mknames.c
score.c
util.c

help.c
nlang.c

module.c
read.c

write.c

ps.c

tables.c

generic.c
types.c
