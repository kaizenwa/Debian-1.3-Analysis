############################################################
#
# $Id : Makefile.in 3.4.0 1997/01/01 $
#
# xpyraminx Makefile.in for autoconf (UNIX/VMS X11 support)
############################################################

# default target

wIDGET = pyraminx
WIDGET = Pyraminx
VER = x$(wIDGET)
DISTVER = $(VER)-3.4.0
 
all : x$(wIDGET) @XMWIDGET@

# this tells GNU make not to export variables into the environment
# But other makes do not understand its significance, so it must
# not be the first target in the file. So it is here, before
# any variables are created, but after the default target
.NOEXPORT :

SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@/

prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
mandir = @mandir@/man6
xapploaddir = @libdir@/X11/app-defaults
#xapploaddir = @libdir@/app-defaults
 
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

#CC = cc -g
#CC = acc -g
#CC = gcc -g -Wall -ansi -pedantic
#CC = gcc -g -Wall
#CC = g++ -g -Wall
CC = @CC@

LINT = lint
#LINT = alint

# It will assume a directory of /usr/games if commented out. 
SCOREFILE = $(srcdir)/$(wIDGET).scores
DATAFILE  = $(srcdir)/$(wIDGET).data

LN_S = @LN_S@
RM = rm -f
RM_S = $(RM)
ECHO = echo

#BLN_S = set file/enter=[]
#RM = delete/noconfirm/nolog
#RM_S = set file/remove/nolog
#ECHO = write sys$output
 
DEFINES = \
-DSCOREFILE=\"${SCOREFILE}\" -DDATAFILE=\"${DATAFILE}\"
DEFS = @DEFS@ $(DEFINES)
XWIDGETINC = @XWIDGETINC@ -I$(top_srcdir) -I.
XMWIDGETINC = @XMWIDGETINC@ -I$(top_srcdir) -I.
CFLAGS = @CFLAGS@
#CFLAGS = -O
#CFLAGS = -g
LDFLAGS = @LDFLAGS@
XLIBS = @XLIBS@
XWIDGETLIBS = @XWIDGETLIBS@
XMWIDGETLIBS = @XMWIDGETLIBS@

N=
C=.c
#C++
#C=.cc

O=.o
S=$(N) $(N)
E=
A=

#VMS
#O=.obj
#S=,
#E=.exe
#A=;*

# please define
# C as the C source code extension
# O as the object extension
# S as the separator for object code
# E as the executable extension

####################################################################
# List of object files

COREOBJS = $(WIDGET)$(O)$(S)$(WIDGET)U$(O)$(S)rngs$(O)
XWIDGETOBJS = $(COREOBJS)$(S)x$(wIDGET)$(O)
XMWIDGETOBJS = $(COREOBJS)$(S)xm$(wIDGET)$(O)

####################################################################
# List of source files
# Used for lint, and some dependencies.

CORESRCS = $(WIDGET)$(C) $(WIDGET)U$(C) rngs$(C)
XWIDGETSRCS = $(CORESRCS) x$(wIDGET)$(C)
XMWIDGETSRCS = $(CORESRCS) xm$(wIDGET)$(C)

#########################################################################

x$(wIDGET) : $(XWIDGETOBJS)
	$(CC) -o $@ $(XWIDGETOBJS) $(LDFLAGS) $(XWIDGETLIBS)
	@ $(ECHO) "$@ BUILD COMPLETE"
	@ $(ECHO) ""

xm$(wIDGET) : $(XMWIDGETOBJS)
	$(CC) -o $@ $(XMWIDGETOBJS) $(LDFLAGS) $(XMWIDGETLIBS)
	@ $(ECHO) "$@ BUILD COMPLETE"
	@ $(ECHO) ""

$(WIDGET)$(O) : $(WIDGET)$(C) $(WIDGET)P.h $(WIDGET).h
$(WIDGET)U$(O) : $(WIDGET)U$(C) $(WIDGET)P.h $(WIDGET).h
rngs$(O) : rngs$(C)
x$(wIDGET)$(O) : x$(wIDGET)$(C) $(WIDGET).h
xm$(wIDGET)$(O) : xm$(wIDGET)$(C) $(WIDGET).h

################################################################

install : install_x$(wIDGET) @INSTALL_XMWIDGET@

install_x$(wIDGET) : x$(wIDGET)$(E)
	$(srcdir)/mkinstalldirs $(bindir)
	$(srcdir)/mkinstalldirs $(mandir)
	$(srcdir)/mkinstalldirs $(xapploaddir)
	$(INSTALL_PROGRAM) x$(wIDGET)$(E) $(bindir)
	$(INSTALL_DATA) x$(wIDGET).man $(mandir)/$(wIDGET).6
	$(INSTALL_DATA) $(WIDGET).ad $(xapploaddir)/$(WIDGET)
	@ $(ECHO) "$@ COMPLETE"
	@ $(ECHO) ""

install_xm$(wIDGET) : xm$(wIDGET)$(E)
	$(srcdir)/mkinstalldirs $(bindir)
	$(srcdir)/mkinstalldirs $(mandir)
	$(srcdir)/mkinstalldirs $(xapploaddir)
	$(INSTALL_PROGRAM) xm$(wIDGET)$(E) $(bindir)
	$(INSTALL_DATA) x$(wIDGET).man $(mandir)/$(wIDGET).6
	$(INSTALL_DATA) $(WIDGET).ad $(xapploaddir)/$(WIDGET)
	@ $(ECHO) "$@ COMPLETE"
	@ $(ECHO) ""

uninstall : uninstall_x$(wIDGET) uninstall_xm$(wIDGET)

uninstall_x$(wIDGET) : uninstall_x$(wIDGET) uninstall_xm$(wIDGET)
	$(RM) $(bindir)/x$(wIDGET)$(E)$(A)
	$(RM) $(mandir)/x$(wIDGET).6
	$(RM) $(xapploaddir)/$(WIDGET)

uninstall : uninstall_x$(wIDGET) @UNINSTALL_XMWIDGET@
	$(RM) $(bindir)/xm$(wIDGET)$(E)$(A)
	$(RM) $(mandir)/x$(wIDGET).6
	$(RM) $(xapploaddir)/$(WIDGET)

################################################################
# Dependencies

SUFFIXES : $(C) $(O) $(E)

$(C)$(O) :
	$(CC) -c $(CPPFLAGS) $(DEFS) $(XWIDGETINC) $(CFLAGS) $<

xm$(wIDGET)$(O) : xm$(wIDGET)$(C)
	$(CC) -c $(CPPFLAGS) $(DEFS) $(XMWIDGETINC) $(CFLAGS) $<

################################################################

Makefile : Makefile.in config.status
	$(SHELL) config.status
config.status : configure
	$(SHELL) config.status --recheck
configure : configure.in
# enable this rule if you want autoconf to be executed automatically when
# configure.in is changed. This is commented out, since patching might give
# configure.in a newer timestamp than configure and not everybody has autoconf
#	cd $(srcdir); autoconf

################################################################
# Miscellaneous targets

run :
	if [ -x ./xm$(wIDGET) ]; then \
xm${wIDGET} ; \
elif [ -x ./x$(wIDGET) ]; then \
x${wIDGET} ; \
fi
 
clean :
	$(RM) *.o core x$(wIDGET)$(E)$(A) xm$(wIDGET)$(E)$(A) *~ *% *.bak \
make.log MakeOut

distclean : clean
	$(RM) Makefile config.status config.cache config.log

clean.all : distclean

tar : distclean
	cd .. ; tar cvf $(VER).tar \
$(VER)/$(WIDGET).h $(VER)/$(WIDGET)P.h \
$(VER)/$(wIDGET).xbm $(VER)/mouse-l.xbm $(VER)/mouse-r.xbm \
$(VER)/$(WIDGET)$(C) $(VER)/$(WIDGET)U$(C) \
$(VER)/x$(wIDGET)$(C) $(VER)/xm$(wIDGET)$(C) $(VER)/rngs$(C) \
$(VER)/README $(VER)/x$(wIDGET).man \
$(VER)/$(WIDGET).ad $(VER)/$(wIDGET).scores \
$(VER)/configure $(VER)/Makefile.in $(VER)/configure.in \
$(VER)/config.guess $(VER)/config.sub $(VER)/install-sh $(VER)/mkinstalldirs \
$(VER)/Imakefile $(VER)/make.com

compress : tar
	cd .. ; compress -f $(VER).tar

dist : tar
	cd .. ; gzip -f $(VER).tar

gzip : dist

tgz : tar
	cd .. ; gzip -c $(VER).tar > `echo $(VER) | cut -c1-8`.tgz ; \
$(RM) $(VER).tar

man :
	nroff -man $(srcdir)/x$(wIDGET).man | more

read :
	more README

lint :
	$(LINT) -ax -DLINT $(DEFINES) $(XMWIDGETINC) $(XWIDGETSRCS) xm$(wIDGET)$(C)
