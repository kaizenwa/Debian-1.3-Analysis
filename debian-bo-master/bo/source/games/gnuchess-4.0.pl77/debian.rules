#! /usr/bin/make -f
#
# Last updated: Mon Aug 12 19:57:58 BST 1996
# by Nikhil Nair <nnair@debian.org>.
#
# To make the binary distribution package, the ``Debianized'' source package
# and the context diff to the original package, type `./debian.rules dist'.
# Make sure that `debian.rules' is executable before the final distribution
# is made.
#
# Invoke each target with `./debian.rules <target>'.  All targets should be
# invoked with the package root as the current directory.
#
# The `binary' target must be run as root, as it needs to install files with
# specific ownerships.  The `diff' target assumes that you have the original
# source package available, unpacked, in ../$(p)-$(v).orig, or that you have
# the previous revision of the ``Debianized'' source package and context diff
# in the parent directory.

# The name of the package (for example, `emacs').
p = gnuchess
# The version of the package (for example, `19.28').
v = 4.0.pl77
# The Debian revision of the package (for example, `2').
d = 2
# The target architecture (for example, `i386').
a = $(shell dpkg --print-architecture)

# Similar things for the second binary package:
p2 = gnuchess-book
v2 = 1.0.1

build:
# Builds the binary package.
	( cd src ; ./configure --prefix=/usr ; \
	  make BINDIR=/usr/games/Gnuchess.real LIBDIR=/usr/lib/games/gnuchess )
	test -f gnuchess.data.huge || debian-book/generate
	touch stamp-build

clean:
# Undoes the effect of `make -f debian.rules build' etc.
	( cd src ; if test -f Makefile ; then make distclean ; fi )
	rm -f gnuchess.data.huge testfile ./t stamp-build
	rm -rf debian-tmp debbk-tmp

binary:
# Makes a binary package.
	test -f stamp-build || make -f debian.rules build
	install -d -g root -m 755 -o root debian-tmp
	install -d -g root -m 755 -o root debbk-tmp
	chmod g-s debian-tmp debbk-tmp
	install -d -g root -m 755 -o root debian-tmp/DEBIAN
	install -d -g root -m 755 -o root debbk-tmp/DEBIAN
	install -d -g root -m 755 -o root debian-tmp/usr/games/Gnuchess.real
	install -d -g root -m 755 -o root debian-tmp/etc/gnuchess
	install -d -g root -m 755 -o root debian-tmp/usr/lib/games/gnuchess
	install -d -g root -m 755 -o root debbk-tmp/usr/lib/games/gnuchess
	install -d -g root -m 755 -o root debian-tmp/usr/man/man6
	( cd src ; \
	  make install BINDIR=../debian-tmp/usr/games/Gnuchess.real \
	    LIBDIR=../debian-tmp/usr/lib/games/gnuchess \
	    MANDIR=../debian-tmp/usr/man/man6 )
	( cd debian-tmp/usr/games/Gnuchess.real; \
	  for i in *; do \
	    strip $$i; \
	    ln -sf Gnuchess.real/gnuchess.run ../$$i; \
	  done )
	install -g root -m 644 -o root gnuchess.data.huge \
	  debbk-tmp/usr/lib/games/gnuchess/gnuchess.data
	chown -R root.root debian-tmp debbk-tmp
	chmod -R g-w debian-tmp debbk-tmp
	install -g root -m 755 -o root debian/gnuchess.run \
	  debian-tmp/usr/games/Gnuchess.real/gnuchess.run
	install -g root -m 644 -o root debian/memsz.global \
	  debian-tmp/etc/gnuchess/global
	install -d -g root -m 755 -o root debian-tmp/usr/doc/copyright
	install -g root -m 644 -o root debian/README \
	  debian-tmp/usr/doc/copyright/$(p)
	install -d -g root -m 755 -o root debian-tmp/usr/doc/$(p)
	install -g root -m 644 -o root debian/debian.README \
	  debian-tmp/usr/doc/$(p)/debian.README
	sed -e 's/=V/$(v)/' -e 's/=D/$(d)/' -e 's/=A/$(a)/' debian/control \
	  > debian-tmp/DEBIAN/control
	sed -e 's/=v/$(v2)/' -e 's/=V/$(v)/' -e 's/=D/$(d)/' -e 's/=A/$(a)/' \
	  debian-book/control > debbk-tmp/DEBIAN/control
	chown root.root debian-tmp/DEBIAN/control debbk-tmp/DEBIAN/control
	chmod 644 debian-tmp/DEBIAN/control debbk-tmp/DEBIAN/control 
	install -g root -m 644 -o root debian/conffiles \
	  debian-tmp/DEBIAN/conffiles
	install -g root -m 755 -o root debian/postrm \
	  debian-tmp/DEBIAN/postrm
	install -g root -m 755 -o root debian-book/preinst \
	  debbk-tmp/DEBIAN/preinst
	install -g root -m 755 -o root debian-book/postrm \
	  debbk-tmp/DEBIAN/postrm
	dpkg --build debian-tmp
	dpkg --build debbk-tmp
	dpkg-name -o -s .. debian-tmp.deb debbk-tmp.deb

source:
# Makes a source package.
	-test -f stamp-build && make -f debian.rules clean
	( cd .. && tar cf - $(p)-$(v) | gzip -9f > $(p)_$(v)-$(d).tar.gz )

diff:
# Makes a context diff.
	-test -f stamp-build && make -f debian.rules clean
	-test -d ../$(p)-$(v).orig -o \
	  -f ../$(p)_$(v)-`expr $(d) - 1`.tar.gz -a \
	  -f ../$(p)_$(v)-`expr $(d) - 1`.diff.gz \
	  || ( echo "Original source package is not available." ; false )
	-test -d ../$(p)-$(v).orig || make -f debian.rules orig
	( cd .. && diff -cNr $(p)-$(v).orig $(p)-$(v) | gzip -9f \
	  > $(p)_$(v)-$(d).diff.gz )
	-test -f ../$(p)_$(v).stamp-orig \
	  && rm -rf ../$(p)-$(v).orig && rm -f ../$(p)_$(v).stamp-orig

dist: binary source diff
# Prepares the package for distribution.

orig:
# Prepares the original package from the previous
# Debian revision source package and context diff.
	( cd .. \
	  && mkdir $(p).orig \
	  && cd $(p).orig \
	  && tar xzf ../$(p)_$(v)-`expr $(d) - 1`.tar.gz \
	  && cd $(p)-$(v) \
	  && ( zcat ../../$(p)_$(v)-`expr $(d) - 1`.diff.gz \
	    | patch -sER -p1 ) \
	  && find . -name "*.orig" -exec rm -f {} \; \
	  && cd .. \
	  && mv $(p)-$(v) ../$(p)-$(v).orig \
	  && cd .. \
	  && rmdir $(p).orig )
	touch ../$(p)_$(v).stamp-orig
