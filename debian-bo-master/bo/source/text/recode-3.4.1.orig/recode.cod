# Automatically generated by extract-msgs from recode.c charname.c charset.c charset1.c charset2.c applemac.c atarist.c bangbang.c cdcnos.c ebcdic.c flat.c ibmpc.c iconqnx.c lat1asci.c lat1html.c lat1ltex.c lat1txte.c next.c merged.c

1
reversible
**
2
one to one
**
3
many to one
**
4
one to many
**
5
many to many
**
6
MAX_SINGLE_STEPS is too small
**
7
Codes %3d and %3d both recode to %3d
**
8
No character recodes to %3d
**
9
Cannot invert given one-to-one table
**
10
Following diagnostics for `%s' to `%s'
**
11
Pair no. %d: { %3d, %3d } conflicts with { %3d, %3d }
**
12
Cannot complete table from set of known pairs
**
13
/* Conversion table from `%s' charset to `%s' charset.\n
**
14
   Generated mechanically by GNU %s %s.\n
**
15
   The recoding should be reversible.\n
**
16
   The recoding might not be reversible.\n
**
17
   Programming is needed to handle multichar input.\n
**
18
   Each input char transforms into an output string.\n
**
19
   Each input char transforms into an output string,\n
**
20
   programming is needed to handle multichar input.\n
**
21
No table to print
**
22
UNACHIEVABLE recoding!\n
**
23
Mere copy for the trivial recoding\n
**
24
MAX_SEQUENCE is too small
**
25
You may not explicitely recode from RFC 1345
**
26
Simplified to: 
**
27
Child process wait status is 0x%0.2x
**
28
Recoding %s...
**
29
Internal error - strategy undecided
**
30
 done\n
**
31
  UNACHIEVABLE\n
**
32
ONE to SAME
**
33
steps: %d
**
34
, %d saved by merging
**
35
Cannot auto check the ignored charset
**
36
Cannot auto check on %s
**
37
Try `%s %s' for more information.\n
**
38
\
\n\
Usage: %s [OPTION]... [CHARSET]\n
**
39
\
Mandatory or optional arguments to long options are mandatory or optional\n\
for short options too.\n\
\n\
  -C, --copyright       display Copyright and copying conditions\n\
  -a, --auto-check      report about some or all recoding paths, then exit\n\
  -l, --list[=FORMAT]   list one or all known charsets\n\
  -k, --known=PAIRS     restrict charsets according to known PAIRS list\n\
      --help            display this help and exit\n\
      --version         output version information and exit\n\
\n\
FORMAT is a word among decimal, octal, hexadecimal or full (which may be\n\
abbreviated to one of `dohf'), it defaults to just the canonical name.\n\
With -k, possible before charsets are listed for the given after CHARSET,\n\
both being RFC1345 charsets, with PAIRS of the form `BEF1:AFT1,BEF2:AFT2,...\n\
and BEFs and AFTs being codes.  All codes are given as decimal numbers.\n
**
40
\
Option -l with no FORMAT nor CHARSET list all charsets, also see the Texinfo\n\
documentation.  My preferred charsets are (each user has preferences):\n\
\n\
  ascii-bs   ASCII (7-bit), using backspace to apply diacritics\n\
  ibmpc      IBM-PC 8-bit characters, with proper newlines\n\
  latex      LaTeX coding of foreign and diacriticized characters\n\
  latin1     ISO Latin-1 8-bit extension of ASCII\n\
  texte      Easy French convention for transmitting email messages\n
**
41
\
\n\
Usage: %s [OPTION]... [BEFORE]:[AFTER] [FILE]...\n
**
42
\
\n\
  -c, --colons            use colons instead of double quotes for diaeresis\n\
  -d, --diacritics        limit conversion to diacritics or alike for LaTeX\n\
  -f, --force             force recodings even if they are not reversible\n\
                          (BEWARE: in this version, -f is always selected)\n\
  -g, --graphics          approximate IBMPC rulers by ASCII graphics\n\
  -h, --header[=NAME]     write C code with table NAME on stdout, then exit\n\
  -i, --sequence=files    use intermediate files for sequencing passes\n
**
43
\
  -o, --sequence=popen    use popen machinery for sequencing passes\n
**
44
\
  -o, --sequence=popen    same as -i (on this system)\n
**
45
\
  -p, --sequence=pipe     use pipe machinery for sequencing passes\n
**
46
\
  -p, --sequence=pipe     same as -o (on this system)\n
**
47
\
  -q, --quiet, --silent   inhibit messages about irreversible recodings\n\
  -s, --strict            use strict mappings, even loose characters\n\
  -t, --touch             touch the recoded files after replacement\n\
  -v, --verbose           explain sequence of steps and report progress\n\
  -x, --ignore=CHARSET    ignore CHARSET while choosing a recoding path\n\
\n\
If none of -i, -o and -p are given, presume -p if no FILE, else -i.\n\
Each FILE is recoded over itself, destroying the original.  If no\n\
FILE is specified, then act as a filter and recode stdin to stdout.\n
**
48
\
BEFORE and AFTER both default to `%s' when needed.\n
**
49
Ambiguous sequence `%s'
**
50
Unknown sequence `%s'
**
51
\
This program is free software; you can redistribute it and/or modify\n\
it under the terms of the GNU General Public License as published by\n\
the Free Software Foundation; either version 2, or (at your option)\n\
any later version.\n\
\n\
This program is distributed in the hope that it will be useful,\n\
but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
GNU General Public License for more details.\n\
\n\
You should have received a copy of the GNU General Public License\n\
along with this program; if not, write to the Free Software\n\
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.\n
**
52
Ambiguous format `%s'
**
53
Unknown format `%s'
**
54
Currently, -s is ignored when -g is selected
**
55
No way to recode from %s to %s
**
56
Recoding is trivial, not worth a table
**
57
Recoding is too complex for a mere table
**
58
%s: Recoding is not reversible
**
59
Recoding is not reversible
**
60
MAX_CHARSETS is too small
**
61
Charset %s already exists and is not %s
**
62
Hash stats: %d names using %d buckets out of %d\n
**
63
Ambiguous charset `%s'
**
64
Unknown charset `%s'
**
65
Cannot list `%s', no 10646 names available for this charset
**
66
Sorry, no 10646 names available for `%s'
**
67
dec  oct hex    ch   %s\n
**
