<index id="Invocation" sub="options">
<desc

<dt<code/-o/ <var/filename/</dt> Set the name for the output file. If
omitted or set to <code/-/ the output goes to the standard output.
(This can cause problems with some target formats if they split the
document.)

Some target formats
(e. g., HTML)
hard wire the given name of the output file
into the file(s) created
(for cross referencing).
Though it's wise not to give a path including a directory
but only a file name for the output file.

<dt><code/-O/ <var>type</dt> Set the target format. <var/type/ can be:

  <desc>
	<dt<code/ps/</dt>    create a PostScript document.
	<dt<code/latex/</dt> create a LaTeX file.
	<dt<code/html/</dt>  create a HTML page.
	<dt<code/info/</dt>  create an Info file.
	<dt<code/man/</dt>   create a man page.
	<dt<code/literate/</dt> create source files (literate programing)
	<dt<code/rtf/</dt> (only partially supported) create a RTF
                           file.
	<dt<code/slide/</dt> create a PostScript file holding the
			   slides from the document.
  </desc>

If the <code/-O/ switch is omitted a guess is made from the extension
of the output file name. If neither gives a target type this is an
error.

<dt<code/-D/ <var>directory</dt>

Add <var/directory/ in front of the path searched for entities (files)
of the docuemnts. Each option can add only one directory. Multiple
options are processed left to right, i. e., the last directory at the
command line is searched first.

<dt<code/-i/ <var/entityname/

Ensure, that a definition like
<verb>
<!ENTITY % entityname "INCLUDE" >
</verb>

precedes the processing of the documents. This is useful for optional
including of marked sections. Refer to the manual <ref t=m
id="&sgmls;(1)"// for a detailed description. This option is passed to
&sgmls;.

<dt<code/-m/ <var/file/

Extend the list of <var/catalog files/ to search for some SGML
entities. Refer to the manual <ref t=m id="&sgmls;(1)"// for a
detailed description. This option is passed to &sgmls;.

<dt<code/-L/ <var/dirname/

Set the name of the directory to use as library of files to
search for target format descriptions.

<dt<code/-R/ <var/file/

Set a startup file to load after the default 
<code>~/.typesetrc</code>. Multiple <code/-R/ options are allowed and
processed in the given order. The files argument is treated to be
either a path name to the file or one relative to the <code/rc/ 
directory of a directory in the library (see <code/-L/).

Startup files can have their own arguments. If the argument given with
a -R option contains a colon, only the half up to that colon gives the
file name to be loaded. The rest of the argument (without the colon)
is assigned to the variable <code/*-R-option-argument*/ while the
specified file is loaded. If there was no colon in the argument, 
<code/#f/ is assigned.

<dt<code/-V/ <var/level/

Be verbose and don't delete temporary files (for debuging). <var/Level/
must be a number. The default for <var/level/ is 1. This will give
only warnings and (for a historical reason) a message upon success.
Higher values give more messages.

</desc>

With the <code/-R/ option there are additional (long) options
available to change the over all behavior. These are used by supplying
one or more of the following file names to the <code/-R/ option.

<desc

<dt/nidx/ Pretend having the <code/NIDX/ token in the face attribute.

<dt/1c, 2c, 1s, 2s/ Simmilar to <code/nidx/ modify the value in effect
of the face attribute in the top level document.

<dt/no-margin/ No page margin in the (ascii) output. Only implemented
for lout processing at the moment.

<dt/HTML2/ Don't use HTML-3 features in formatting.

<dt/linuxdoc/ Work around some hard wired assumtions of the
linuxdoc DTD when processing.

</desc>

<em/Attention!/ Be careful to supply the <em/exact/ name to the
<code/ -R/ option. The same policy as for dotfiles applies to those
files: if they don't exist they are silently not loaded! THere is no
warning message.