#This file was created by LinuxDoc-SGML (conversion : Frank Pavageau)
\lyxformat 2.10
\textclass linuxdoc
\language default
\inputencoding default
\fontscheme default
\papersize a4 \paperfontsize 10 \baselinestretch 1.00 \secnumdepth 3 \tocdepth 3 \paragraph_separation indent \quotes_language default \quotes_times 2 \no_epsfig 0 \paperorientation portrait \papercolumns 1 \papersides 1 \paperpagestyle plain
\layout Title
\fill_top \fill_bottom \cursor 0

SGML-Tools User's Guide 

\layout Author
by Matt Welsh.  Updated by Greg Hankins. 

\layout Date
v0.99.0, 29 November 1996 

\layout Abstract
 This document is a user's guide to the SGML-Tools formatting system, a SGML-based system which allows you to produce a variety of output formats.  You can create plain text output (ASCII and ISO-8859-1), DVI, PostScript, HTML, GNU info, LyX, and RTF output from a single SGML source file.  This guide documents SGML-Tools version 0.99.0. 
\layout Standard
\begin_inset LatexDel \tableofcontents


\layout Section
Introduction 

 
\layout Standard
This is a user's guide to the SGML-Tools document processing system.  SGML-Tools  
provides a SGML DTD (Document Type Definition) and set of ``replacement files'' 
which convert the SGML to groff, LaTeX, HTML, GNU info, LyX, and RTF  
source. 

SGML-Tools is based heavily on the QWERTZ DTD by Tom Gordon, 
\family typewriter thomas.gordon@gmd.de\family default . 




\layout Subsection
About This Document 

 
\layout Standard
This document is written using the linuxdoc DTD, which comes with SGML-Tools.   
It contains more or less everything you need to know to write SGML documents  
with this DTD.  See \family typewriter example.sgml\family default  for an example of an SGML document that  
you can use as a model for your own documents. 




\layout Subsection
Why SGML? 

 
\layout Standard
I chose SGML for this system because SGML is made specifically for translation 
to other formats.  SGML, which stands for Standard Generalized Markup Language, 
allows you to specify the \shape italic structure\shape default  of a document---that is, what kinds 
of things make up the document.  You specify the structure of a document with 
a DTD (Document Type Definition).  linuxdoc is one DTD that specifies 
the structure for Linux HOWTOs and other documents.  QWERTZ is another DTD; the 
SGML standard provides DTD's for books, articles, and other generic document 
types. 

The DTD specifies the names of ``elements'' within the document.  An element 
is just a bit of structure---like a section, a subsection, a paragraph, 
or even something smaller like \shape italic emphasized text\shape default .  Unlike LaTeX, however, 
these elements are not in any way intrinsic to SGML itself.  The 
linuxdoc DTD happens to define elements that look a lot like  
their LaTeX counterparts---you have sections, subsections, verbatim 
``environments'', and so forth.  However, using SGML you can define any kind 
of structure for the document that you like.  In a way, SGML is like  
low-level TeX, while the linuxdoc DTD is like LaTeX. 

Don't be confused by this analogy.  SGML is \shape italic not\shape default  a text-formatting system. 
There is no ``SGML formatter'' per se.  SGML source is \shape italic only\shape default  converted 
to other formats for processing.  Furthermore, SGML itself is used only to  
specify the document structure.  There are no text-formatting facilities or 
``macros'' intrinsic to SGML itself.  All of those things are defined within 
the DTD.  You can't use SGML without a DTD, a DTD defines what SGML does. 




\layout Subsection
How It Works 

 
\layout Standard
Here's how processing a document with SGML-Tools  
works.  First, you need a DTD.  I'm using the QWERTZ DTD which was produced, 
originally, by a group of people who needed a LaTeX-like DTD.  I've modified 
the QWERTZ DTD to produce the linuxdoc DTD for our purposes.   
The DTD simply sets up the structure of the document.  A small portion of 
it looks like this: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<!element article - - \newline
    (titlepag, header?,  \newline
     toc?, lof?, lot?, p*, sect*,  \newline
     (appendix, sect+)?, biblio?) +(footnote)> \newline

\layout Standard
\end_deeper
 
\layout Standard
This part sets up the overall structure for an ``article'', which is like 
a ``documentstyle'' within LaTeX.  The article consists of a titlepage 
(\family typewriter titlepag\family default ), an optional header (\family typewriter header\family default ), an optional table of  
contents (\family typewriter toc\family default ), optional lists of figures (\family typewriter lof\family default ) and tables 
(\family typewriter lot\family default ), any number of paragraphs (\family typewriter p\family default ), any number of top-level 
sections (\family typewriter sect\family default ), optional appendices (\family typewriter appendix\family default ), an optional 
bibliography (\family typewriter biblio\family default ) and footnotes (\family typewriter footnote\family default ).   

As you can see, the DTD doesn't say anything about how the document should 
be formatted or what it should look like.  It just defines what parts make 
up the document.  Elsewhere in the DTD the structure of the  
\family typewriter titlepag\family default , \family typewriter header\family default , \family typewriter sect\family default , and other elements are defined.   

You don't need to know anything about the syntax of 
the DTD in order to write documents.  I'm just presenting it so you know 
what it looks like and what it does.  You \shape italic do\shape default  need to be familiar with 
the document \shape italic structure\shape default  that the DTD defines.  If not, you might 
violate the structure when attempting to write a document, and be very 
confused about the resulting error messages.  We'll describe the 
structure of SGML documents in detail later. 

The next step is to write a document using the structure defined by the 
DTD.  Again, the linuxdoc DTD makes documents look a lot like 
LaTeX---it's very easy to follow.  In SGML jargon a single document written 
using a particular DTD is known as an ``instance'' of that DTD.   

In order to translate the SGML source into another format (such as LaTeX 
or groff) for processing, the SGML source (the document that you wrote) 
is \shape italic parsed\shape default  along with the DTD by the SGML \shape italic parser\shape default . 
I'm using the \family typewriter sgmls\family default  parser by James Clark, \family typewriter jjc@jclark.com\family default , who 
also happens to be the author of \family typewriter groff\family default .  We're in good hands. 
The parser (\family typewriter sgmls\family default ) simply picks through your document and  
verifies that it follows the structure set forth by the DTD.  It also spits out 
a more explicit form of your document, with all ``macros'' and elements 
expanded, which is understood by \family typewriter sgmlsasp\family default , the next part of the 
process.   

\family typewriter sgmlsasp\family default  is responsible for converting the output of \family typewriter sgmls\family default  to 
another format (such as LaTeX).  It does this using \shape italic replacement files\shape default , 
which describe how to convert elements in the original SGML document into 
corresponding source in the ``target'' format (such as LaTeX or groff).   

For example, part of the replacement file for LaTeX looks like: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<itemize>    +    "\\begin{itemize}   + \newline
</itemize>   +    "\\end{itemize}    + \newline

\layout Standard
\end_deeper
 
\layout Standard
Which says that whenever you begin an \family typewriter itemize\family default  element in the  
SGML source, it should be replaced with  
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
\begin{itemize} \newline

\layout Standard
\end_deeper
 
\layout Standard
in the LaTeX source.  (As I said, elements in the DTD 
are very similar to their LaTeX counterparts).   

So, to convert the SGML to another format, all you have to do is write 
a new replacement file for that format that gives the appropriate  
analogies to the SGML elements in that new format.  In practice, it's not 
that simple---for example, if you're trying to convert to a format that 
isn't structured at all like your DTD, you're going to have trouble.  In  
any case, it's much easier to do than writing individual parsers and 
translators for many kinds of output formats; SGML provides a generalized 
system for converting one source to many formats. 

Once \family typewriter sgmlsasp\family default  has completed its work, you have LaTeX source which 
corresponds to your original SGML document, which you can format using 
LaTeX as you normally would.  Later in this document I'll give examples 
and show the commands used to do the translation and formatting.  You can 
do this all on one command line. 

But first, I should describe how to install and configure the software. 




\layout Section
Installation 

 
\layout Standard
Get \family typewriter sgml-tools-0.99.9.tar.gz\family default  from one of the following ftp sites: 
\layout Itemize
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text/sgml-tools-0.99.0.tar.gz\begin_inset LatexDel }{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text/sgml-tools-0.99.0.tar.gz\begin_inset LatexDel }
\end_inset
\family default  
 

\layout Standard
You can also get uptodate information from the  
\family typewriter \begin_inset LatexDel \url{
\end_inset http://www.informatik.tu-muenchen.de/~schwarz/linuxdoc-sgml/\begin_inset LatexDel }{
\end_inset SGML-Tools WWW Page\begin_inset LatexDel }
\end_inset
\family default . 



 
The file \family typewriter sgml-tools-0.99.0.tar.gz\family default  contains everything that you need 
to write SGML documents and convert them to groff, LaTeX, HTML, GNU info, LyX, 
and RTF.  In addition to this package, you will need the following 
tools - these are not required by the SGML system, but I suggest that you get 
them in order to format your documents and verify that they look  
all right before distributing them.   

\begin_deeper
\layout Enumerate
\family typewriter groff\family default .  You \shape italic need\shape default  version 1.08 or greater.  You can get this from  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }
\end_inset
\family default .  There is a Linux  
binary version on  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text\begin_inset LatexDel }{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text\begin_inset LatexDel }
\end_inset
\family default  
as well.  You will need \family typewriter groff\family default  to produce plain text from your SGML documents. 
\family typewriter nroff\family default  will \shape italic not\shape default  work! 
 
\layout Enumerate
TeX and LaTeX.  This is available more or less everywhere; you should 
have no problem getting it and installing it (there is a Linux binary 
distribution on \family typewriter sunsite.unc.edu\family default ).  Of course, you only need TeX/LaTeX 
if you want to format your SGML documents with LaTeX.  So, installing TeX/LaTeX 
is optional. 
 
\layout Enumerate
\family typewriter flex\family default .  \family typewriter lex\family default  will probably not work.  You can get this from 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }
\end_inset
\family default . 
 
\layout Enumerate
\family typewriter gawk\family default  and the GNU info tools, for formatting and viewing  
info files.  These are also available on  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }{
\end_inset ftp://prep.ai.mit.edu/pub/gnu\begin_inset LatexDel }
\end_inset
\family default , or on  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text\begin_inset LatexDel }{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text\begin_inset LatexDel }
\end_inset
\family default   
(for \family typewriter gawk\family default ) and 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://sunsite.unc.edu/pub/Linux/system/Manual-pagers\begin_inset LatexDel }{
\end_inset ftp://sunsite.unc.edu/pub/Linux/system/Manual-pagers\begin_inset LatexDel }
\end_inset
\family default   
(for GNU info tools).  \family typewriter awk\family default  will not work. 
 
\layout Enumerate
LyX (a quasi-WYSIWYG interface to LaTeX, with SGML layouts), is 
available on  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://ftp.via.ecp.fr\begin_inset LatexDel }{
\end_inset ftp://ftp.via.ecp.fr\begin_inset LatexDel }
\end_inset
\family default . 

\end_deeper
 




\layout Subsection
Installing The Software 

 
\layout Standard
The steps needed to install and configure the SGML-Tools are: 


\begin_deeper
\layout Enumerate
First, unpack the tar file \family typewriter sgml-tools-0.99.0.tar.gz\family default  somewhere.   
This will create the directory \family typewriter sgml-tools-0.99.0\family default .  It doesn't matter  
where you unpack this file; just don't move things around within the  
\family typewriter sgml-tools-0.99.0\family default  directory. 
 
\layout Enumerate
Read the \family typewriter INSTALL\family default  file - it has detailed installation instructions. 
 
If all went well, you should be ready to use the system. 

\end_deeper
 




\layout Subsection
Formatting SGML Documents 

 
\layout Standard
Let's say you have the SGML document \family typewriter foo.sgml\family default , which you want to format. 
Here is a general overview of formatting the document for different output. 
For a complete list of options, consult the man pages. 




\layout Subsubsection
Creating Plain Text Output 

 
\layout Standard
If you want to produce plain text, use the command: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2txt foo.sgml  \newline

\layout Standard
\end_deeper
 



 
\layout Standard
Note that I have tailored the groff conversion for plain text output. 
That is, I've removed page headers, page numbers, changed the margins, 
and so on.  With some hacking you can produce PostScript and DVI from the  
groff output, but I suggest that you use LaTeX for that instead. 



 
You can also create groff source for man pages, which can be formatted with 
\family typewriter groff -man\family default .  To do this, do the following: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2txt -man foo.sgml  \newline

\layout Standard
\end_deeper
 




\layout Subsubsection
Creating LaTeX, DVI or PostScript Output 

 
\layout Standard
To create a LaTeX documents from the SGML source file, simply run: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2latex foo.sgml  \newline

\layout Standard
\end_deeper
 



 
\layout Standard
If you want to produce PostScript output (via \family typewriter dvips\family default ), use the  
\family typewriter -p\family default  option: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2latex -p foo.sgml  \newline

\layout Standard
\end_deeper
 



 
\layout Standard
Or, you can produce a DVI file using the \family typewriter -d\family default  switch, as so: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2latex -d foo.sgml  \newline

\layout Standard
\end_deeper
 




\layout Subsubsection
Creating HTML Output 

 
\layout Standard
If you want to produce HTML output, do this: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2html -img foo.sgml  \newline

\layout Standard
\end_deeper
 

 
\layout Standard
This will produce \family typewriter foo.html\family default , as well as \family typewriter foo-1.html\family default , 
\family typewriter foo-2.html\family default , and so on---one file for each section of the document. 
Run your WWW browser on \family typewriter foo.html\family default , which is the top level file. 
Also make sure that all of the HTML files corresponding to your document 
are in one directory, as they reference each other with local URLs.   
The icons referenced in the HTML output are located in  
\family typewriter $SGMLTOOLSLIB/icons\family default .  These will also need to be copied to the  
final location of the HTML documents.  \family typewriter $SGMLTOOLSLIB\family default  is defined  
at the beginning of the SGML conversion scripts. 



 
If you use \family typewriter sgml2html\family default  without the \family typewriter -img\family default  flag, HTML documents will 
have the labels ``Previous'', ``Next'', and ``Table of Contents'' for  
navigation.  You can override these defaults by creating a file in  
\family typewriter $SGMLTOOLSLIB/rep/html/<filename>\family default , and substituting your  
own words for different languages.  The file has the following format: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
        PrevPage:  newvalue \newline
    NextPage:  newvalue \newline
        TOC:     newvalue \newline

\layout Standard
\end_deeper
 
\layout Standard
See \family typewriter deutsch\family default  for an example. 




\layout Subsubsection
Creating GNU Info Output 

 
\layout Standard
If you want to format your file for the GNU info browser, just run the 
following command: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2info foo.sgml  \newline

\layout Standard
\end_deeper
 




\layout Subsubsection
Creating LyX Output 

 
\layout Standard
For LyX output, use the the command: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2lyx foo.sgml  \newline

\layout Standard
\end_deeper
 




\layout Subsubsection
Creating RTF Output 

 
\layout Standard
If you want to produce RTF output, run the command: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2rtf foo.sgml  \newline

\layout Standard
\end_deeper
 

 
\layout Standard
This will produce \family typewriter foo.rtf\family default , as well as \family typewriter foo-1.rtf\family default , 
\family typewriter foo-2.rtf\family default , and so on---one file for each section of the document. 




\layout Subsubsection
Checking SGML Syntax 

 
\layout Standard
If you just want to capture your errors from the SGML conversion, 
use the \family typewriter sgmlcheck\family default  script.  For example. 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgmlcheck foo.sgml  \newline

\layout Standard
\end_deeper
 




\layout Subsection
ISO 8859-1 Character Set 

 
\layout Standard
The ISO 8859-1 (latin1) character set may be used for international characters  
in plain text, LaTeX, HTML, LyX, and RTF output (GNU info support for  
ISO 8859-1 may be possible in the future).  To use this feature, give the 
formatting scripts the \family typewriter -l\family default  flag, for example: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
% sgml2txt -l foo.sgml  \newline

\layout Standard
\end_deeper
 
\layout Standard
You also can use ISO 8859-1 characters in the SGML source, they will  
automatically be translated to the proper escape codes for the corresponding  
output format. 




\layout Section
Writing Documents With SGML-Tools 

 
\layout Standard
For the most part, writing documents using the SGML-Tools DTD is very 
simple, and somewhat like LaTeX.  However, there are some caveats to watch 
out for.  In this section I'll give an introduction on writing SGML documents. 
See the file \family typewriter example.sgml\family default  for a SGML example document (and tutorial) 
which you can use as a model when writing your own documents.  Here I'm just going 
to discuss the various features of SGML, but the source is not very  
readable as an example.  Instead, print out the source (as well as the 
formatted output) for \family typewriter example.sgml\family default  so you have a real live case to 
refer to. 




\layout Subsection
Basic Concepts 

 
\layout Standard
Looking at the source of the example document, you'll notice right off 
that there are a number of ``tags'' marked within angle brackets 
(\family typewriter <\family default  and \family typewriter >\family default ).  A tag simply specifies the beginning or end 
of an element, where an element is something like a section, a paragraph, 
a phrase of italicized text, an item in a list, and so on.  Using a tag 
is like using a LaTeX command such as \family typewriter \item\family default  or  
\family typewriter \section{...}\family default . 

As a simple example, to produce \series bold this boldfaced text\series default , I typed 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
As a simple example, to produce <bf>this boldfaced text</bf>, ... \newline

\layout Standard
\end_deeper
 
\layout Standard
in the source.  \family typewriter <bf>\family default  begins the region of bold text, and 
\family typewriter </bf>\family default  ends it.  Alternately, you can use the abbreviated form 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
As a simple example, to produce <bf/this boldfaced text/, ... \newline

\layout Standard
\end_deeper
 
\layout Standard
which encloses the bold text within slashes.  (Of course, you'll need to 
use the long form if the enclosed text contains slashes, such as the 
case with Unix filenames).   

There are other things to watch out with respect to special characters  
(that's why you'll notice all of these bizarre-looking ampersand  
expressions if you look at the source; I'll talk about those shortly). 

In some cases, the end-tag for a particular element is optional.  For 
example, to begin a section, you use the \family typewriter <sect>\family default  tag,  
however, the end-tag for the section (which could appear at the end of 
the section body itself, not just after the name of the section!)  
is optional and implied when you start another section of the same depth. 
In general you needn't worry about these details; just follow the model 
used in the tutorial (\family typewriter example.sgml\family default ). 




\layout Subsection
Special Characters 

 
\layout Standard
Obviously, the angle brackets are themselves special characters in the 
SGML source.  There are others to watch out for.  For example, let's say  
that you wanted to type an expression with angle brackets around it, 
as so: \family typewriter <foo>\family default .  In order to get the left angle bracket, you 
must use the \family typewriter &lt;\family default  element, which is a ``macro'' that expands 
to the actual left-bracket character.  Therefore, in the source, I typed 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
angle brackets around it, as so: <tt>&lt;foo></tt>. \newline

\layout Standard
\end_deeper
 
\layout Standard
Generally, something beginning with an ampersand is a special macro.  For 
example, there's \family typewriter &percnt;\family default  to produce %,  
\family typewriter &verbar;\family default  to produce |, and so on.  For all  
``special characters'' there exist these ampersanded-entities to represent 
them.   

Usually, you don't need to use the ampersand macro to get a special 
character, however, in some cases it is necessary.  The most commonly used 
are: 
\layout Itemize
Use \family typewriter &amp;\family default  for the ampersand (&),  
\layout Itemize
Use \family typewriter &lt;\family default  for a left bracket (<), 
\layout Itemize
Use \family typewriter &gt;\family default  for a right bracket (>), 
\layout Itemize
Use \family typewriter &etago;\family default  for a left bracket with a slash  
(\family typewriter </\family default ) 
\layout Itemize
Use \family typewriter &dollar;\family default  for a dollar sign ($), 
\layout Itemize
Use \family typewriter &num;\family default  for a hash (#), 
\layout Itemize
Use \family typewriter &percnt;\family default  for a percent (%), 
\layout Itemize
Use \family typewriter &tilde;\family default  for a tilde (~), 
\layout Itemize
Use \family typewriter ``\family default  and \family typewriter ''\family default  for quotes, or use 
\family typewriter &dquot\family default  for ". 
 

 
\layout Standard
For a complete list of special characters, look at one of the replacement 
files.  Usually LaTeX complains the most about special characters, so 
paging through \family typewriter $SGMLTOOLSLIB/rep/latex/general\family default  would be a  
good place to start.  \family typewriter $SGMLTOOLSLIB\family default  is defined at the beginning  
of the SGML conversion scripts. 




\layout Subsection
Verbatim and Code Environments 

 
\layout Standard
While we're on the subject of special characters, I might as well mention 
the verbatim ``environment'' used for including literal text in the output 
(with spaces and indentation preserved, and so on).  The  
\family typewriter verb\family default  element is used for this; it looks like the following: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<verb> \newline
 Some literal text to include as example output. \newline
</verb> \newline

\layout Standard
\end_deeper
 
\layout Standard
The \family typewriter verb\family default  environment doesn't allow you to use \shape italic everything\shape default  
within it literally.  Specifically, you must do the following within 
\family typewriter verb\family default  environments. 
\layout Itemize
Use \family typewriter &ero;\family default  to get an ampersand,  
\layout Itemize
Use \family typewriter &etago;\family default  to get \family typewriter </\family default , 
\layout Itemize
Don't use \family typewriter \end{verbatim}\family default  within a \family typewriter verb\family default  
environment, as this is what LaTeX uses to end the \family typewriter verbatim\family default   
environment.  (In the future, it should be possible to hide the underlying 
text formatter entirely, but the parser doesn't support this feature yet.)  
 
\layout Standard
The \family typewriter code\family default  environment is much just like the \family typewriter verb\family default  environment, 
except that horizontal rules are added to the surrounding text, as so: 

 
\layout Code
Here is an example code environment. 

 

\layout Standard
You should use the \family typewriter tscreen\family default  environment around any \family typewriter verb\family default  environments, 
as so: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<tscreen><verb> \newline
Here is some example text.   \newline
</verb></tscreen> \newline

\layout Standard
\end_deeper
 
\layout Standard
\family typewriter tscreen\family default  is an environment that simply indents the text and sets the  
sets the default font to \family typewriter tt\family default .  This makes examples look much nicer, both 
in the LaTeX and plain text versions.  You can use \family typewriter tscreen\family default  
without \family typewriter verb\family default , however, if you use any special characters in your  
example you'll need to use both of them.  \family typewriter tscreen\family default  does nothing to  
special characters.  See \family typewriter example.sgml\family default  for examples. 

The \family typewriter quote\family default  environment is like \family typewriter tscreen\family default , except that it does 
not set the default font to \family typewriter tt\family default .  So, you can use \family typewriter quote\family default  for 
non-computer-interaction quotes, as in: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<quote> \newline
Here is some text to be indented, as in a quote. \newline
</quote> \newline

\layout Standard
\end_deeper
 
\layout Standard
which will generate: 
\begin_deeper
 
\layout Standard
Here is some text to be indented, as in a quote. 
\end_deeper
 




\layout Subsection
Overall Document Structure 

 
\layout Standard
Before we get too in-depth with details, I'm going to describe the 
overall structure of a document as defined by the DTD. 
Look at \family typewriter example.sgml\family default  for a good example of how a document is set up. 




\layout Subsubsection
The Preamble 

 
\layout Standard
In the document ``preamble'' you set up things such as the title 
information and document style:  
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<!doctype linuxdoc system> \newline
 \newline
<article> \newline
 \newline
<title>Linux Foo HOWTO \newline
<author>Norbert Ebersol, <tt/norb@baz.com/ \newline
<date>v1.0, 9 March 1994 \newline
<abstract> \newline
This document describes how to use the <tt/foo/ tools to frobnicate \newline
bar libraries, using the <tt/xyzzy/ relinker. \newline
</abstract> \newline
 \newline
<toc> \newline

\layout Standard
\end_deeper
 

\layout Standard
The elements should go more or less in this order.  The first line tells 
the SGML parser to use the linuxdoc DTD.  The \family typewriter <article>\family default  
tag forces the document to use the ``article'' document style.  (The  
original QWERTZ DTD defines ``report'' and ``book'' as well; I haven't 
tweaked these for use with SGML-Tools). 

The \family typewriter title\family default , \family typewriter author\family default , and \family typewriter date\family default  tags should be obvious; in the 
\family typewriter date\family default  tag include the version number and last modification time of 
the document. 

The \family typewriter abstract\family default  tag sets up the text to be printed at the top of the 
document, \shape italic before\shape default  the table of contents.  If you're not going to 
include a table of contents (the \family typewriter toc\family default  tag), you probably don't 
need an \family typewriter abstract\family default . 




\layout Subsubsection
Sectioning And Paragraphs 

 
\layout Standard
After the preamble, you're ready to dive into the document.  The following 
sectioning commands are available: 
\layout Itemize
\family typewriter sect\family default : For top-level sections (i.e.  1, 2, and so on.)  
\layout Itemize
\family typewriter sect1\family default : For second-level subsections (i.e.  1.1, 1.2, and so on.) 
\layout Itemize
\family typewriter sect2\family default : For third-level subsubsections. 
\layout Itemize
\family typewriter sect3\family default : For fourth-level subsubsubsections. 
\layout Itemize
\family typewriter sect4\family default : For fifth-level subsubsubsubsections. 
 
\layout Standard
These are roughly equivalent to their LaTeX counterparts \family typewriter section\family default , 
\family typewriter subsection\family default , and so on. 

After the \family typewriter sect\family default  (or \family typewriter sect1\family default , \family typewriter sect2\family default , etc.) tag comes the 
name of the section.  For example, at the top of this document, after 
the preamble, comes the tag: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<sect>Introduction \newline

\layout Standard
\end_deeper
 
\layout Standard
And at the beginning of this section (Sectioning and paragraphs), there 
is the tag: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<sect2>Sectioning And Paragraphs \newline

\layout Standard
\end_deeper
 
\layout Standard
After the section tag, you begin the body of the section.  However, you 
must start the body with a \family typewriter <p>\family default  tag, as so: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<sect>Introduction \newline
<p> \newline
This is a user's guide to the SGML-Tools document processing... \newline

\layout Standard
\end_deeper
 
\layout Standard
This is to tell the parser that you're done with the section title 
and are ready to begin the body.  Thereafter, new paragraphs are started 
with a blank line (just as you would do in TeX).  For example, 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
Here is the end of the first paragraph. \newline
 \newline
And we start a new paragraph here. \newline

\layout Standard
\end_deeper
 
\layout Standard
There is no reason to use \family typewriter <p>\family default  tags at the beginning of 
every paragraph; only at the beginning of the first paragraph after 
a sectioning command. 




\layout Subsubsection
Ending The Document 

 
\layout Standard
At the end of the document, you must use the tag: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
</article> \newline

\layout Standard
\end_deeper
 

\layout Standard
to tell the parser that you're done with the \family typewriter article\family default  element (which 
embodies the entire document).   


\layout Subsection
Cross-References\begin_inset LatexDel \label{
\end_inset cross-ref\begin_inset LatexDel }
\end_inset
 

 
\layout Standard
Now we're going to move onto other features of the system.   
Cross-references are easy.  For example, if you want to make a 
cross-reference to a certain section, you need to label that section 
as so: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<sect1>Introduction<label id="sec-intro"> \newline

\layout Standard
\end_deeper
 
\layout Standard
You can then refer to that section somewhere in the text using the 
expression: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
See section <ref id="sec-intro" name="Introduction"> for an introduction. \newline

\layout Standard
\end_deeper
 
\layout Standard
This will replace the \family typewriter ref\family default  tag with the section number labeled 
as \family typewriter sec-intro\family default .  The \family typewriter name\family default  argument to \family typewriter ref\family default  is necessary for 
groff and HTML translations.  The groff macro set used by SGML-Tools  
does not currently support cross-references, and it's often nice to refer  
to a section by name instead of number.   

For example, this section is \begin_inset LatexDel \ref{
\end_inset cross-ref\begin_inset LatexDel }{
\end_inset Cross-References\begin_inset LatexDel }
\end_inset
. 

There is also a \family typewriter url\family default  element for Universal Resource Locators, or 
URLs, used on the World Wide Web.  This element should be used to refer 
to other documents, files available for FTP, and so forth.  For 
example, 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
You can get the Linux HOWTO documents from  \newline
<url url="http://sunsite.unc.edu/mdw/HOWTO/"  \newline
   name="The Linux HOWTO INDEX">. \newline

\layout Standard
\end_deeper
 
\layout Standard
The \family typewriter url\family default  argument specifies the actual URL itself.  A link to the 
URL in question will be automatically added to the HTML document. 
The optional \family typewriter name\family default  argument specifies the text that should be anchored to 
the URL (for HTML conversion) or named as the description of the 
URL (for LaTeX and groff).  If no \family typewriter name\family default  argument is given, the 
URL itself will be used. 

For example, you can get the SGML-Tools package from 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text/sgml-tools-0.99.0.tar.gz\begin_inset LatexDel }{
\end_inset ftp://sunsite.unc.edu/pub/Linux/utils/text/sgml-tools-0.99.0.tar.gz\begin_inset LatexDel }
\end_inset
\family default . 

A useful variant of this is \family typewriter htmlurl\family default , which suppresses rendering of 
the URL part in every context except HTML.  What this is useful for 
is things like a person's email addresses; you can write 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<htmlurl url="mailto:esr@snark.thyrsus.com" \newline
      name="esr@snark.thyrsus.com"> \newline

\layout Standard
\end_deeper
 
\layout Standard
and get ``esr@snark.thyrsus.com'' in text output rather than the 
duplicative ``esr@snark.thyrsus.com <mailto:esr@snark.thyrsus.com>'' 
but still have a proper URL in HTML documents. 




\layout Subsection
Fonts 

 
\layout Standard
Essentially, the same fonts supported by LaTeX are supported 
by SGML-Tools.  Note, however, that the conversion to  
plain text (through \family typewriter groff\family default ) does away with the font  
information.  So, you should use fonts  
as much as possible, for the benefit of the conversion to LaTeX. 
But don't depend on the fonts to get a point across in the plain 
text version.   

In particular, the \family typewriter tt\family default  tag described above can be used to 
get constant-width ``typewriter'' font which should be used for 
all e-mail addresses, machine names, filenames, and so on.   
Example: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
Here is some <tt>typewriter text</tt> to be included in the document. \newline

\layout Standard
\end_deeper
 
\layout Standard
Equivalently: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
Here is some <tt/typewriter text/ to be included in the document. \newline

\layout Standard
\end_deeper
 
\layout Standard
Remember that you can only use this abbreviated form if the enclosed 
text doesn't contain slashes. 

Other fonts can be achieved with \family typewriter bf\family default  for \series bold boldface\series default  and \family typewriter em\family default   
for \shape italic italics\shape default .  Several other fonts are supported as well, but 
I don't suggest you use them, because we'll be converting these 
documents to other formats such as HTML which may not support them. 
Boldface, typewriter, and italics should be all that you need. 




\layout Subsection
Lists 

 
\layout Standard
There are various kinds of supported lists.  They are: 
\layout Itemize
\family typewriter itemize\family default  for bulleted lists such as this one. 
\layout Itemize
\family typewriter enum\family default  for numbered lists. 
\layout Itemize
\family typewriter descrip\family default  for ``descriptive'' lists.   
 
\layout Standard
Each item in an \family typewriter itemize\family default  or \family typewriter enum\family default  list must be marked 
with an \family typewriter item\family default  tag.  Items in a \family typewriter descrip\family default  are marked with \family typewriter tag\family default . 
For example, 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<itemize> \newline
<item>Here is an item. \newline
<item>Here is a second item. \newline
</itemize> \newline

\layout Standard
\end_deeper
 
\layout Standard
Looks like this: 
\layout Itemize
Here is an item. 
\layout Itemize
Here is a second item. 
 
\layout Standard
Or, for an \family typewriter enum\family default , 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<enum> \newline
<item>Here is the first item. \newline
<item>Here is the second item. \newline
</enum> \newline

\layout Standard
\end_deeper
 
\layout Standard
You get the idea.  Lists can be nested as well; see the example document 
for details. 

A \family typewriter descrip\family default  list is slightly different, and slightly ugly, but 
you might want to use it for some situations: 
\begin_deeper
\layout Standard
\family typewriter

\layout Verbatim
 \newline
<descrip> \newline
<tag/Gnats./ Annoying little bugs that fly into your cooling fan. \newline
<tag/Gnus./ Annoying little bugs that run on your CPU. \newline
</descrip> \newline

\layout Standard
\end_deeper
 
\layout Standard
ends up looking like: 
 

\layout Description
 Gnats. Annoying little bugs that fly into your cooling fan.   

\layout Description
 Gnus. Annoying little bugs that run on your CPU.  

 




\layout Subsection
Further Information 

 
\layout Itemize
The QWERTZ User's Guide is available from  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://ftp.cs.cornell.edu/pub/mdw/SGML\begin_inset LatexDel }{
\end_inset ftp://ftp.cs.cornell.edu/pub/mdw/SGML\begin_inset LatexDel }
\end_inset
\family default . 
QWERTZ (and hence, SGML-Tools) supports many features such as  
mathematical formulae, tables, figures, and so forth. 
If you'd like to write general  
documentation in SGML, I suggest using the original QWERTZ DTD instead  
of the hacked-up linuxdoc DTD, which I've modified for use  
particularly by the Linux HOWTOs and other such documentation.   
 
\layout Itemize
Tom Gordon's original QWERTZ tools can be found at  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://ftp.gmd.de/GMD/sgml\begin_inset LatexDel }{
\end_inset ftp://ftp.gmd.de/GMD/sgml\begin_inset LatexDel }
\end_inset
\family default . 
 
\layout Itemize
More information on SGML can be found at the following WWW  
pages:  

\begin_deeper
\layout Enumerate
\family typewriter \begin_inset LatexDel \url{
\end_inset http://www.w3.org/hypertext/WWW/MarkUp/SGML/\begin_inset LatexDel }{
\end_inset SGML and the Web\begin_inset LatexDel }
\end_inset
\family default  
\layout Enumerate
\family typewriter \begin_inset LatexDel \url{
\end_inset http://www.sil.org/sgml/sgml.html\begin_inset LatexDel }{
\end_inset SGML Web Page\begin_inset LatexDel }
\end_inset
\family default  
\layout Enumerate
\family typewriter \begin_inset LatexDel \url{
\end_inset http://www.yahoo.com/Computers_and_Internet/Software/Data_Formats/SGML\begin_inset LatexDel }{
\end_inset Yahoo's SGML Page\begin_inset LatexDel }
\end_inset
\family default  

\end_deeper
 
 
\layout Enumerate
James Clark's \family typewriter sgmls\family default  parser, and it's successor \family typewriter nsgmls\family default  
and other tools can be found at 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://ftp.jclark.com\begin_inset LatexDel }{
\end_inset ftp://ftp.jclark.com\begin_inset LatexDel }
\end_inset
 \family default  and at \family typewriter \begin_inset LatexDel \url{
\end_inset http://www.jclark.com\begin_inset LatexDel }{
\end_inset James Clark's WWW Page\begin_inset LatexDel }
\end_inset
\family default . 
 
\layout Enumerate
The emacs psgml package can be found at 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset ftp://ftp.lysator.liu.se/pub/sgml\begin_inset LatexDel }{
\end_inset ftp://ftp.lysator.liu.se/pub/sgml\begin_inset LatexDel }
\end_inset
\family default .  This package 
provides a lot of SGML functionality. 
 
\layout Enumerate
You can join the SGML-Tools mailing list by sending mail to 
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset mailto:majordomo@via.ecp.fr\begin_inset LatexDel }{
\end_inset majordomo@via.ecp.fr\begin_inset LatexDel }
\end_inset
\family default  with \family typewriter subscribe linuxdoc-sgml\family default  in  
the message body.  The list address is  
\family typewriter \begin_inset LatexDel \htmlurl{
\end_inset mailto:linuxdoc-sgml@via.ecp.fr\begin_inset LatexDel }{
\end_inset linuxdoc-sgml@via.ecp.fr\begin_inset LatexDel }
\end_inset
\family default . 
 
\layout Enumerate
More information on \family typewriter LyX\family default  can be found at the 
\family typewriter \begin_inset LatexDel \url{
\end_inset http://wsiserv.informatik.uni-tuebingen.de/~ettrich/\begin_inset LatexDel }{
\end_inset LyX WWW Page\begin_inset LatexDel }
\end_inset
\family default .  \family typewriter LyX\family default  is a high-level word processor  
frontend to LaTeX.  Quasi-WYSIWYG interface, many LaTeX styles and  
layouts automatically generated.  Speeds up learning LaTeX and makes  
complicated layouts easy and intuitive. 
 
 

