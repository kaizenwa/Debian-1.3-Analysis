dnl Process this file with autoconf to produce a configure script for SP
AC_INIT(generic/EventGenerator.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_CXX
if test "$GXX"
 then
  CXXFLAGS=-fno-implicit-templates
  WARN="-Wall -Wno-reorder -Wwrite-strings -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast"
 else
  CXXFLAGS=
  WARN=
fi
CXXFLAGS="$CXXFLAGS -O2"
AC_PROG_RANLIB

AC_LANG_CPLUSPLUS

CXsave="$CXXFLAGS"
CXXFLAGS=-ansi
AC_CACHE_CHECK(for -ansi support,
               ac_cv_c_cmdline_ansi,
               AC_TRY_LINK([],[],ac_cv_c_cmdline_ansi=yes,
                                 ac_cv_c_cmdline_ansi=no))
if test "$ac_cv_c_cmdline_ansi" = "yes"
 then
  CXXFLAGS="$CXXFLAGS $CXsave"
 else
  CXXFLAGS="$CXsave"
fi

dnl Sun CC needs special Makefile.lib stuff
LIBARGS='$(OBJS) $(COBJS)'
if test "$CXX" = CC
 then
  WARN=+w2
  LIBARGS="$LIBARGS "'$(DEPLIBS)'
  LIBDO='$(CXX) $(ALL_CXXFLAGS) -xar -o $@ $(OBJS) $(COBJS) $(DEPLIBS)'
 else
  LIBDO='$(AR) r $@ $? ; $(RANLIB) $@'
fi
AC_SUBST(LIBDO)
AC_SUBST(LIBARGS)
AC_SUBST(WARN)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_STRUCT_ST_BLKSIZE
AC_CHECK_TYPE(sig_atomic_t,int)
AC_CACHE_CHECK(support for bool,
               ac_cv_typedef_bool,
               AC_TRY_LINK(,bool x; x=(false | true);,
                           ac_cv_typedef_bool=yes,
                           ac_cv_typedef_bool=no))
if test "$ac_cv_typedef_bool" = "yes"
 then
  AC_DEFINE(SP_HAVE_BOOL)
fi

dnl Checks for library functions.
dnl Note James doesn't provide strtoul.o, but autoconf
dnl  thinks you may need it
AC_CHECK_FUNC(memmove,,LIBOBJS="$LIBOBJS memmove.o")
AC_CHECK_FUNC(strerror,,LIBOBJS="$LIBOBJS strerror.o")
AC_CACHE_CHECK(for strtoul,
               ac_cv_func_strtoul,
               AC_TRY_LINK([#include <stdlib.h>],[char *foo="ab";
                                   return strtoul("23",&foo,10);],
                           ac_cv_func_strtoul=yes,
                           ac_cv_func_strtoul=no))
if test "$ac_cv_func_strtoul" = "no"
 then
  LIBOBJS="$LIBOBJS strtoul.o"
fi

AC_CHECK_FUNC(setlocale,AC_DEFINE(SP_HAVE_LOCALE))
AC_CHECK_LIB(intl,gettext,AC_DEFINE(SP_HAVE_GETTEXT) LIBS="$LIBS -lintl")

dnl ANSI templates
AC_CACHE_CHECK(for ANSI template instantiation,
               ac_cv_c_template_ansi,
               AC_TRY_LINK([
class foo {
};

template<class T> class test {
public:
 T *data();};
template class test<foo>;
],,ac_cv_c_template_ansi=yes,
   ac_cv_c_template_ansi=no))
if test "$ac_cv_c_template_ansi" = "yes"
 then
  AC_DEFINE(SP_ANSI_CLASS_INST)
fi

dnl HTTP support

AC_ARG_ENABLE(http,
[  --enable-http             bind in support for http],
		if test $enableval
                 then
                  AC_DEFINE(SP_HAVE_SOCKET)
                  AC_CHECK_LIB(nsl,main,LIBS="$LIBS -lnsl")
                  AC_CHECK_LIB(socket,main,LIBS="$LIBS -lsocket")
                  AC_MSG_CHECKING(h_errno in netdb.h)
                  AC_EGREP_HEADER(h_errno,netdb.h,
				  AC_MSG_RESULT(yes),
                                  AC_DEFINE(SP_DECLARE_H_ERRNO)
				  AC_MSG_RESULT(no))
                fi)

dnl other options
AC_ARG_ENABLE(multi-byte,
[  --enable-multi-byte       extended character support],
              if test $enableval
               then
                AC_DEFINE(SP_MULTI_BYTE)
              fi)
AC_ARG_ENABLE(default-catalog,
[  --enable-default-catalog=pathlist
                            provide one or more default catalog files or
                            sysids, e.g. /usr/local/lib/sgml/catalog],
              if test $enableval
               then
                AC_DEFINE_UNQUOTED(SGML_CATALOG_FILES_DEFAULT,"$enableval")
              fi)

AC_SUBST(LIBOBJS)
AC_OUTPUT(Makefile Makefile.lib)
