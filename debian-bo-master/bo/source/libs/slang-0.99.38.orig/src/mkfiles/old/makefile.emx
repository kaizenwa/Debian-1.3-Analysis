# EMX makefile

# define FLOAT_TYPE below if you want floating point support.  This
#  might require a floating point processor.  Consult the EMX
#  documentation for more details.  In particular, the calc.c demo
#  program requires it.

CFLAGS = -O -Wall -imacros gcc.inc -DFLOAT_TYPE
CC =gcc

SLIB = .
LFLAGS = -L$(SLIB) -lslang -lvideo

OBJS = slang.o slparse.o slmath.o slfile.o slstd.o slarray.o slregexp.o\
       slunix.o slmatrix.o slkeymap.o slrline.o slerr.o sldostty.o slgetkey.o\
       slmemcpy.o slmemcmp.o slmemset.o slmemchr.o slxstrng.o sltoken.o\
       slsearch.o slvideo.o slsmg.o slmalloc.o slclass.o slmisc.o \
       slprepr.o sltypes.o

EXEC = calc
AR   = AR -s
ARFLAGS = -cr
RANLIB = ar -s
LIB = slang.a
BIND = emxbind -aq
BIND_OPT = -acm

### new style implicit rules
%.o : %.c
	$(CC) -c $(CFLAGS) -I$(SLIB) -o $@ $<

#####

slang.a: ${OBJS} slgcc386.rsp
	-rm $(LIB)
	-ar $(ARFLAGS) $(LIB) @slgcc386.rsp
	-$(RANLIB) $(LIB)

# after adding a single member to an existing lib
ranlib:
	-$(AR) d $(LIB) __.SYMDEF
	-$(AR) s $(LIB)

calc.exe: calc.o $(LIB)
	$(CC) calc.o $(LFLAGS) -o calc.exe
	$(BIND) calc.exe $(BIND_OPT)

worm.exe: worm.o $(LIB)
	$(CC) worm.o $(LFLAGS) -o worm.exe
	$(BIND) worm.exe $(BIND_OPT)
	
worm.o: worm.c
	$(CC) -c $(CFLAGS) -DSLANG -I$(SLIB) -o $@ $<


export:
	export -f slang.lis

slgcc386.rsp: makefile.emx
	echo slang.o    > slgcc386.rsp
	echo slparse.o  >>slgcc386.rsp
	echo slmath.o	>>slgcc386.rsp
	echo slfile.o	>>slgcc386.rsp
	echo slstd.o    >>slgcc386.rsp
	echo slarray.o	>>slgcc386.rsp
	echo slregexp.o	>>slgcc386.rsp
	echo slunix.o   >>slgcc386.rsp
	echo slmatrix.o	>>slgcc386.rsp
	echo slkeymap.o	>>slgcc386.rsp
	echo slrline.o  >>slgcc386.rsp
	echo slerr.o	>>slgcc386.rsp
	echo sldostty.o	>>slgcc386.rsp
	echo slgetkey.o >>slgcc386.rsp
	echo slmemcpy.o	>>slgcc386.rsp
	echo slmemcmp.o	>>slgcc386.rsp
	echo slmemset.o >>slgcc386.rsp
	echo slmemchr.o	>>slgcc386.rsp
	echo slxstrng.o	>>slgcc386.rsp
	echo sltoken.o  >>slgcc386.rsp
	echo slsearch.o	>>slgcc386.rsp
	echo slvideo.o	>>slgcc386.rsp
	echo slsmg.o    >>slgcc386.rsp
	echo slmalloc.o >>slgcc386.rsp
	echo slclass.o	>>slgcc386.rsp
	echo slmisc.o	>>slgcc386.rsp
