.TH "ObjSeq" 3 "Oct 30, 1996"
.SH CLASS
.B
ObjSeq
.SH SUPERCLASS
ObjPak
.SH DESCRIPTION
.PP

Sequences are used to loop or 
.I
sequence 
over a group of objects.  Typically, an 
.B
ObjSeq 
instance is generated by using some method like 
.B
ObjCltn
\&'s 
.B
eachElement.  
Then, within a loop, one can send 
.B
next 
messages to the sequence until the end is reached (when the 
.B
next 
method returns 
.B
nil
).  Finally, after using the sequence, you have to free the sequence object.
.PP
.B
Warning
.PP

Using a sequence can lead to problems if, in sequencing over a collection, that collection is modified, e.g., as in the following :
.RS 3

id item;
.br
id aSeq;
.br

.br
aSeq = [aCol eachElement];
.br
while ((item = [aSeq next])) [aCol add:something]; // WRONG !!!
.br
aSeq = [aSeq free];
.br
.RE
.PP

You may not modify a group of objects while sequencing over its contents.
.SH METHOD TYPES
.PP
.B
Creation
.RS 3
copy
.br
free
.br
.RE
.PP
.B
Interrogation
.RS 3
size
.br
.RE
.PP
.B
Accessing
.RS 3
next
.br
peek
.br
previous
.br
first
.br
last
.br
.RE
.PP
.B
Printing
.RS 3
printToFile:
.br
.RE
.SH METHODS
.PP
.B
copy
.RS 1
-
.B
copy
.RE
.PP

Returns a copy of the sequence.  Can be used independently of the original sequence.
.PP
.B
free
.RS 1
-
.B
free
.RE
.PP

Frees the receiver, but not the objects in the collection being sequenced over.
.PP
.B
size
.RS 1
- (unsigned)
.B
size
.RE
.PP

Returns the total number of items in the sequence.
.PP
.B
next
.RS 1
-
.B
next
.RE
.PP

Returns the next object in the sequence if there is one and advances the sequence.  When it reaches the end of the sequence, returns 
.B
nil.
.PP
.B
peek
.RS 1
-
.B
peek
.RE
.PP

Returns the next object in the sequence if there is one, but does not advance the sequence.  When it reaches the end of the sequence, returns 
.B
nil.
.PP
.B
previous
.RS 1
-
.B
previous
.RE
.PP

Returns the object that was returned by the last 
.B
next 
message.  If there were no 
.B
next 
messages since the sequence was created, or the sequence is empty, returns 
.B
nil.  
Doesn\&'t affect the current position in the sequence.
.PP
.B
first
.RS 1
-
.B
first
.RE
.PP

Returns the first object in the sequence, unlesss there are no members in the sequence, in which case it returns 
.B
nil.  
Doesn\&'t affect the current position in the sequence.
.PP
.B
last
.RS 1
-
.B
last
.RE
.PP

Returns the last object in the sequence, unlesss there are no members in the sequence, in which case it returns 
.B
nil.  
Doesn\&'t affect the current position in the sequence.
.PP
.B
printToFile:
.RS 1
-
.B
printToFile:
(FILE *)
.I
aFile
.RE
.PP

Prints a newline separated list of the objects in the sequence to 
.I
aFile
, by sending each individual object a 
.B
printToFile: 
message.  Returns the sequence when there are no more elements left.
