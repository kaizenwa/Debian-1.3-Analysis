{\rtf0\ansi{\fonttbl\f0\fnil Times-Roman;\f1\fswiss Helvetica;\f2\fmodern Courier;}
\paperw16220
\paperh18640
\margl40
\margr40
\pard\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320\tx4800\f0\b0\i0\ulnone\fs24\fc0\cf0 ObjectPak Objective C Class Library
\fs16 \
\
\
\
\
\
\

\f1\b\fs56\li2200 ObjSeq\

\f0\b0\fs16 \
\
\
\
\
\

\f1\b\fs28 Inherits From: 
\f0\b0 ObjPak
\fs16 \
\
\
\
\

\f1\b\fs36\li1400 Class Description\

\f0\b0\fs16 \

\fs28\li2200 Sequences are used to loop or 
\i sequence
\i0  over a group of objects.  Typically, an 
\b ObjSeq
\b0  instance is generated by using some method like 
\b ObjCltn
\b0 's 
\b eachElement
\b0 .  Then, within a loop, one can send 
\b next
\b0  messages to the sequence until the end is reached (when the 
\b next
\b0  method returns 
\b nil
\b0 ).  Finally, after using the sequence, you have to free the sequence object.\

\fs16 \
\

\f1\b\fs28 Warning\

\f0\b0\fs16 \

\fs28 Using a sequence can lead to problems if, in sequencing over a collection, that collection is modified, e.g., as in the following :\

\fs16 \

\f2\fs24\li2800 id item;\
id aSeq;\
\
aSeq = [aCol eachElement];\
while ((item = [aSeq next])) [aCol add:something]; // WRONG !!!\
aSeq = [aSeq free];\

\f0\fs16 \

\fs28\li2200 You may not modify a group of objects while sequencing over its contents.\

\fs16 \
\
\
\
\

\f1\b\fs36\li1400 Method Types\

\f0\b0\fs16 \
\

\pard\tx6000\fs28\fi-3800\li6000\fc0\cf0 Creation	- copy\
	- free\

\fs16 \

\fs28 Interrogation	- size\

\fs16 \

\fs28 Accessing	- next\
	- peek\
	- previous\
	- first\
	- last\

\fs16 \

\fs28 Printing	- printToFile:\

\fs16 \
\
\
\
\

\f1\b\fs36\fi0\li1400 Methods\

\f0\b0\fs16 \
\
\
\

\f1\b\fs28\li2200 copy\

\f0\b0\li2500 -
\b  copy\

\b0\fs16 \

\fs28\li2200 Returns a copy of the sequence.  Can be used independently of the original sequence.\

\fs16 \
\
\
\

\f1\b\fs28 free\

\f0\b0\li2500 -
\b  free\

\b0\fs16 \

\fs28\li2200 Frees the receiver, but not the objects in the collection being sequenced over.\

\fs16 \
\
\
\

\f1\b\fs28 size\

\f0\b0\li2500 - (unsigned)
\b  size\

\b0\fs16 \

\fs28\li2200 Returns the total number of items in the sequence.\

\fs16 \
\
\
\

\f1\b\fs28 next\

\f0\b0\li2500 -
\b  next\

\b0\fs16 \

\fs28\li2200 Returns the next object in the sequence if there is one and advances the sequence.  When it reaches the end of the sequence, returns 
\b nil
\b0 .\

\fs16 \
\
\
\

\f1\b\fs28 peek\

\f0\b0\li2500 -
\b  peek\

\b0\fs16 \

\fs28\li2200 Returns the next object in the sequence if there is one, but does not advance the sequence.  When it reaches the end of the sequence, returns 
\b nil
\b0 .\

\fs16 \
\
\
\

\f1\b\fs28 previous\

\f0\b0\li2500 -
\b  previous\

\b0\fs16 \

\fs28\li2200 Returns the object that was returned by the last 
\b next
\b0  message.  If there were no 
\b next
\b0  messages since the sequence was created, or the sequence is empty, returns 
\b nil
\b0 .  Doesn't affect the current position in the sequence.\

\fs16 \
\
\
\

\f1\b\fs28 first\

\f0\b0\li2500 -
\b  first\

\b0\fs16 \

\fs28\li2200 Returns the first object in the sequence, unlesss there are no members in the sequence, in which case it returns 
\b nil
\b0 .  Doesn't affect the current position in the sequence.\

\fs16 \
\
\
\

\f1\b\fs28 last\

\f0\b0\li2500 -
\b  last\

\b0\fs16 \

\fs28\li2200 Returns the last object in the sequence, unlesss there are no members in the sequence, in which case it returns 
\b nil
\b0 .  Doesn't affect the current position in the sequence.\

\fs16 \
\
\
\

\f1\b\fs28 printToFile:\

\f0\b0\li2500 -
\b  printToFile:
\b0 (FILE *)
\i aFile\

\i0\fs16 \

\fs28\li2200 Prints a newline separated list of the objects in the sequence to 
\i aFile
\i0 , by sending each individual object a 
\b printToFile:
\b0  message.  Returns the sequence when there are no more elements left.\

}
