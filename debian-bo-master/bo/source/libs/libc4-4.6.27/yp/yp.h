/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _YP_H_RPCGEN
#define _YP_H_RPCGEN

#include <rpc/rpc.h>
#include <rpcsvc/yp_prot.h>

enum ypxfrstat
{
  YPXFR_SUCC = 1,
  YPXFR_AGE = 2,
  YPXFR_NOMAP = -1,
  YPXFR_NODOM = -2,
  YPXFR_RSRC = -3,
  YPXFR_RPC = -4,
  YPXFR_MADDR = -5,
  YPXFR_YPERR = -6,
  YPXFR_BADARGS = -7,
  YPXFR_DBM = -8,
  YPXFR_FILE = -9,
  YPXFR_SKEW = -10,
  YPXFR_CLEAR = -11,
  YPXFR_FORCE = -12,
  YPXFR_XFRERR = -13,
  YPXFR_REFUSED = -14
};

#ifdef __cplusplus 
extern "C" bool_t xdr_ypxfrstat(XDR *, ypxfrstat*);
#elif __STDC__ 
extern  bool_t xdr_ypxfrstat(XDR *, enum ypxfrstat*);
#else /* Old Style C */ 
bool_t xdr_ypxfrstat();
#endif /* Old Style C */ 


typedef char *domainname;
#ifdef __cplusplus 
extern "C" bool_t xdr_domainname(XDR *, char *);
#elif __STDC__ 
extern  bool_t xdr_domainname(XDR *, char*);
#else /* Old Style C */ 
bool_t xdr_domainname();
#endif /* Old Style C */ 


typedef char *mapname;
#ifdef __cplusplus 
extern "C" bool_t xdr_mapname(XDR *, mapname*);
#elif __STDC__ 
extern  bool_t xdr_mapname(XDR *, mapname*);
#else /* Old Style C */ 
bool_t xdr_mapname();
#endif /* Old Style C */ 

typedef char *peername;
#ifdef __cplusplus 
extern "C" bool_t xdr_peername(XDR *, peername*);
#elif __STDC__ 
extern  bool_t xdr_peername(XDR *, peername*);
#else /* Old Style C */ 
bool_t xdr_peername();
#endif /* Old Style C */ 

struct keydat {
	u_int keydat_len;
	char *keydat_val;
};
#ifdef __cplusplus 
extern "C" bool_t xdr_keydat(XDR *, keydat*);
#elif __STDC__ 
extern  bool_t xdr_keydat(XDR *, struct keydat*);
#else /* Old Style C */ 
bool_t xdr_keydat();
#endif /* Old Style C */ 


typedef struct {
	u_int valdat_len;
	char *valdat_val;
} valdat;
#ifdef __cplusplus 
extern "C" bool_t xdr_valdat(XDR *, valdat*);
#elif __STDC__ 
extern  bool_t xdr_valdat(XDR *, valdat*);
#else /* Old Style C */ 
bool_t xdr_valdat();
#endif /* Old Style C */ 

#ifdef __cplusplus 
extern "C" bool_t xdr_ypresp_all(XDR *, struct ypresp_all*);
extern "C" bool_t xdr_ypresp_all_seq(XDR *, u_long *);
extern "C" int (*ypresp_allfn) (int, char *, int, char *, int, char *);
extern "C" void *ypresp_data;
#elif __STDC__ 
extern  bool_t xdr_ypresp_all(XDR *, struct ypresp_all*);
extern  bool_t xdr_ypresp_all_seq(XDR *, u_long *);
extern  int (*ypresp_allfn) (int, char *, int, char *, int, char *);
extern  void *ypresp_data;
#else /* Old Style C */ 
bool_t xdr_ypresp_all();
bool_t xdr_ypresp_all_seq();
extern int (*ypresp_allfn) ();
extern void *ypresp_data;
#endif /* Old Style C */ 


struct ypresp_xfr {
	u_int transid;
	enum ypxfrstat xfrstat;
};
#ifdef __cplusplus 
extern "C" bool_t xdr_ypresp_xfr(XDR *, struct ypresp_xfr*);
#elif __STDC__ 
extern  bool_t xdr_ypresp_xfr(XDR *, struct ypresp_xfr*);
#else /* Old Style C */ 
bool_t xdr_ypresp_xfr();
#endif /* Old Style C */ 

#ifdef __cplusplus 
extern "C" bool_t xdr_ypmaplist_str(XDR *xdrs, char *objp);
extern "C" bool_t xdr_ypmaplist(XDR *, struct ypmaplist*);
#elif __STDC__ 
extern  bool_t xdr_ypmaplist_str(XDR *xdrs, char *objp);
extern  bool_t xdr_ypmaplist(XDR *, struct ypmaplist*);
#else /* Old Style C */ 
bool_t xdr_ypmaplist_str();
bool_t xdr_ypmaplist();
#endif /* Old Style C */ 

#ifdef __cplusplus 
extern "C" bool_t xdr_ypbind_resptype(XDR *, enum ypbind_resptype*);
#elif __STDC__ 
extern  bool_t xdr_ypbind_resptype(XDR *, enum ypbind_resptype*);
#else /* Old Style C */ 
bool_t xdr_ypbind_resptype();
#endif /* Old Style C */ 

#ifdef __cplusplus 
extern "C" bool_t xdr_ypbind_binding(XDR *, struct ypbind_binding*);
#elif __STDC__ 
extern  bool_t xdr_ypbind_binding(XDR *, struct ypbind_binding*);
#else /* Old Style C */ 
bool_t xdr_ypbind_binding();
#endif /* Old Style C */ 


#ifdef __cplusplus 
extern "C" bool_t xdr_ypbind_resp(XDR *, struct ypbind_resp*);
#elif __STDC__ 
extern  bool_t xdr_ypbind_resp(XDR *, struct ypbind_resp*);
#else /* Old Style C */ 
bool_t xdr_ypbind_resp();
#endif /* Old Style C */ 

#define YPBIND_ERR_ERR 1
#define YPBIND_ERR_NOSERV 2
#define YPBIND_ERR_RESC 3

#ifdef __cplusplus 
extern "C" bool_t xdr_ypbind_setdom(XDR *, struct ypbind_setdom*);
#elif __STDC__ 
extern  bool_t xdr_ypbind_setdom(XDR *, struct ypbind_setdom*);
#else /* Old Style C */ 
bool_t xdr_ypbind_setdom();
#endif /* Old Style C */ 


#define YPPROG ((u_long)100004)
#define YPVERS ((u_long)2)

#ifdef __cplusplus
#define YPPROC_NULL ((u_long)0)
extern "C" void * ypproc_null_2(CLIENT *);
extern "C" void * ypproc_null_2_svc(struct svc_req *);
#define YPPROC_DOMAIN ((u_long)1)
extern "C" bool_t * ypproc_domain_2(domainname , CLIENT *);
extern "C" bool_t * ypproc_domain_2_svc(domainname , struct svc_req *);
#define YPPROC_DOMAIN_NONACK ((u_long)2)
extern "C" bool_t * ypproc_domain_nonack_2(domainname , CLIENT *);
extern "C" bool_t * ypproc_domain_nonack_2_svc(domainname , struct svc_req *);
#define YPPROC_MATCH ((u_long)3)
extern "C" ypresp_val * ypproc_match_2(ypreq_key , CLIENT *);
extern "C" ypresp_val * ypproc_match_2_svc(ypreq_key , struct svc_req *);
#define YPPROC_FIRST ((u_long)4)
extern "C" ypresp_key_val * ypproc_first_2(ypreq_key , CLIENT *);
extern "C" ypresp_key_val * ypproc_first_2_svc(ypreq_key , struct svc_req *);
#define YPPROC_NEXT ((u_long)5)
extern "C" ypresp_key_val * ypproc_next_2(ypreq_key , CLIENT *);
extern "C" ypresp_key_val * ypproc_next_2_svc(ypreq_key , struct svc_req *);
#define YPPROC_XFR ((u_long)6)
extern "C" ypresp_xfr * ypproc_xfr_2(ypreq_xfr , CLIENT *);
extern "C" ypresp_xfr * ypproc_xfr_2_svc(ypreq_xfr , struct svc_req *);
#define YPPROC_CLEAR ((u_long)7)
extern "C" void * ypproc_clear_2(CLIENT *);
extern "C" void * ypproc_clear_2_svc(struct svc_req *);
#define YPPROC_ALL ((u_long)8)
extern "C" ypresp_all * ypproc_all_2(ypreq_nokey , CLIENT *);
extern "C" ypresp_all * ypproc_all_2_svc(ypreq_nokey , struct svc_req *);
#define YPPROC_MASTER ((u_long)9)
extern "C" ypresp_master * ypproc_master_2(ypreq_nokey , CLIENT *);
extern "C" ypresp_master * ypproc_master_2_svc(ypreq_nokey , struct svc_req *);
#define YPPROC_ORDER ((u_long)10)
extern "C" ypresp_order * ypproc_order_2(ypreq_nokey , CLIENT *);
extern "C" ypresp_order * ypproc_order_2_svc(ypreq_nokey , struct svc_req *);
#define YPPROC_MAPLIST ((u_long)11)
extern "C" ypresp_maplist * ypproc_maplist_2(domainname , CLIENT *);
extern "C" ypresp_maplist * ypproc_maplist_2_svc(domainname , struct svc_req *);

#elif __STDC__
#define YPPROC_NULL ((u_long)0)
extern  void * ypproc_null_2(CLIENT *);
extern  void * ypproc_null_2_svc(struct svc_req *);
#define YPPROC_DOMAIN ((u_long)1)
extern  bool_t * ypproc_domain_2(domainname , CLIENT *);
extern  bool_t * ypproc_domain_2_svc(domainname , struct svc_req *);
#define YPPROC_DOMAIN_NONACK ((u_long)2)
extern  bool_t * ypproc_domain_nonack_2(domainname , CLIENT *);
extern  bool_t * ypproc_domain_nonack_2_svc(domainname , struct svc_req *);
#define YPPROC_MATCH ((u_long)3)
extern  struct ypresp_val * ypproc_match_2(struct ypreq_key , CLIENT *);
extern  struct ypresp_val * ypproc_match_2_svc(struct ypreq_key , struct svc_req *);
#define YPPROC_FIRST ((u_long)4)
extern  struct ypresp_key_val * ypproc_first_2(struct ypreq_key , CLIENT *);
extern  struct ypresp_key_val * ypproc_first_2_svc(struct ypreq_key , struct svc_req *);
#define YPPROC_NEXT ((u_long)5)
extern  struct ypresp_key_val * ypproc_next_2(struct ypreq_key , CLIENT *);
extern  struct ypresp_key_val * ypproc_next_2_svc(struct ypreq_key , struct svc_req *);
#define YPPROC_XFR ((u_long)6)
extern  struct ypresp_xfr * ypproc_xfr_2(struct ypreq_xfr , CLIENT *);
extern  struct ypresp_xfr * ypproc_xfr_2_svc(struct ypreq_xfr , struct svc_req *);
#define YPPROC_CLEAR ((u_long)7)
extern  void * ypproc_clear_2(CLIENT *);
extern  void * ypproc_clear_2_svc(struct svc_req *);
#define YPPROC_ALL ((u_long)8)
extern  struct ypresp_all * ypproc_all_2(struct ypreq_nokey , CLIENT *);
extern  struct ypresp_all * ypproc_all_2_svc(struct ypreq_nokey , struct svc_req *);
#define YPPROC_MASTER ((u_long)9)
extern  struct ypresp_master * ypproc_master_2(struct ypreq_nokey , CLIENT *);
extern  struct ypresp_master * ypproc_master_2_svc(struct ypreq_nokey , struct svc_req *);
#define YPPROC_ORDER ((u_long)10)
extern  struct ypresp_order * ypproc_order_2(struct ypreq_nokey , CLIENT *);
extern  struct ypresp_order * ypproc_order_2_svc(struct ypreq_nokey , struct svc_req *);
#define YPPROC_MAPLIST ((u_long)11)
extern  struct ypresp_maplist * ypproc_maplist_2(domainname , CLIENT *);
extern  struct ypresp_maplist * ypproc_maplist_2_svc(domainname , struct svc_req *);

#else /* Old Style C */ 
#define YPPROC_NULL ((u_long)0)
extern  void * ypproc_null_2();
extern  void * ypproc_null_2_svc();
#define YPPROC_DOMAIN ((u_long)1)
extern  bool_t * ypproc_domain_2();
extern  bool_t * ypproc_domain_2_svc();
#define YPPROC_DOMAIN_NONACK ((u_long)2)
extern  bool_t * ypproc_domain_nonack_2();
extern  bool_t * ypproc_domain_nonack_2_svc();
#define YPPROC_MATCH ((u_long)3)
extern  ypresp_val * ypproc_match_2();
extern  ypresp_val * ypproc_match_2_svc();
#define YPPROC_FIRST ((u_long)4)
extern  ypresp_key_val * ypproc_first_2();
extern  ypresp_key_val * ypproc_first_2_svc();
#define YPPROC_NEXT ((u_long)5)
extern  ypresp_key_val * ypproc_next_2();
extern  ypresp_key_val * ypproc_next_2_svc();
#define YPPROC_XFR ((u_long)6)
extern  ypresp_xfr * ypproc_xfr_2();
extern  ypresp_xfr * ypproc_xfr_2_svc();
#define YPPROC_CLEAR ((u_long)7)
extern  void * ypproc_clear_2();
extern  void * ypproc_clear_2_svc();
#define YPPROC_ALL ((u_long)8)
extern  ypresp_all * ypproc_all_2();
extern  ypresp_all * ypproc_all_2_svc();
#define YPPROC_MASTER ((u_long)9)
extern  ypresp_master * ypproc_master_2();
extern  ypresp_master * ypproc_master_2_svc();
#define YPPROC_ORDER ((u_long)10)
extern  ypresp_order * ypproc_order_2();
extern  ypresp_order * ypproc_order_2_svc();
#define YPPROC_MAPLIST ((u_long)11)
extern  struct ypresp_maplist * ypproc_maplist_2();
extern  struct ypresp_maplist * ypproc_maplist_2_svc();
#endif /* Old Style C */ 

#define YPPUSH_XFRRESPPROG ((u_long)0x40000000)
#define YPPUSH_XFRRESPVERS ((u_long)1)

#ifdef __cplusplus
#define YPPUSHPROC_NULL ((u_long)0)
extern "C" void * yppushproc_null_1(CLIENT *);
extern "C" void * yppushproc_null_1_svc(struct svc_req *);
#define YPPUSHPROC_XFRRESP ((u_long)1)
extern "C" yppushresp_xfr * yppushproc_xfrresp_1(CLIENT *);
extern "C" yppushresp_xfr * yppushproc_xfrresp_1_svc(struct svc_req *);

#elif __STDC__
#define YPPUSHPROC_NULL ((u_long)0)
extern  void * yppushproc_null_1(CLIENT *);
extern  void * yppushproc_null_1_svc(struct svc_req *);
#define YPPUSHPROC_XFRRESP ((u_long)1)
extern  struct yppushresp_xfr * yppushproc_xfrresp_1(CLIENT *);
extern  struct yppushresp_xfr * yppushproc_xfrresp_1_svc(struct svc_req *);

#else /* Old Style C */ 
#define YPPUSHPROC_NULL ((u_long)0)
extern  void * yppushproc_null_1();
extern  void * yppushproc_null_1_svc();
#define YPPUSHPROC_XFRRESP ((u_long)1)
extern  struct yppushresp_xfr * yppushproc_xfrresp_1();
extern  struct yppushresp_xfr * yppushproc_xfrresp_1_svc();
#endif /* Old Style C */ 

#define YPBINDPROG ((u_long)100007)
#define YPBINDVERS ((u_long)2)

#ifdef __cplusplus
#define YPBINDPROC_NULL ((u_long)0)
extern "C" void * ypbindproc_null_2(CLIENT *);
extern "C" void * ypbindproc_null_2_svc(struct svc_req *);
#define YPBINDPROC_DOMAIN ((u_long)1)
extern "C" ypbind_resp * ypbindproc_domain_2(domainname , CLIENT *);
extern "C" ypbind_resp * ypbindproc_domain_2_svc(domainname , struct svc_req *);
#define YPBINDPROC_SETDOM ((u_long)2)
extern "C" void * ypbindproc_setdom_2(ypbind_setdom , CLIENT *);
extern "C" void * ypbindproc_setdom_2_svc(ypbind_setdom , struct svc_req *);

#elif __STDC__
#define YPBINDPROC_NULL ((u_long)0)
extern  void * ypbindproc_null_2(CLIENT *);
extern  void * ypbindproc_null_2_svc(struct svc_req *);
#define YPBINDPROC_DOMAIN ((u_long)1)
extern  struct ypbind_resp * ypbindproc_domain_2(domainname , CLIENT *);
extern  struct ypbind_resp * ypbindproc_domain_2_svc(domainname , struct svc_req *);
#define YPBINDPROC_SETDOM ((u_long)2)
extern  void * ypbindproc_setdom_2(struct ypbind_setdom , CLIENT *);
extern  void * ypbindproc_setdom_2_svc(struct ypbind_setdom , struct svc_req *);

#else /* Old Style C */ 
#define YPBINDPROC_NULL ((u_long)0)
extern  void * ypbindproc_null_2();
extern  void * ypbindproc_null_2_svc();
#define YPBINDPROC_DOMAIN ((u_long)1)
extern  struct ypbind_resp * ypbindproc_domain_2();
extern  struct ypbind_resp * ypbindproc_domain_2_svc();
#define YPBINDPROC_SETDOM ((u_long)2)
extern  void * ypbindproc_setdom_2();
extern  void * ypbindproc_setdom_2_svc();
#endif /* Old Style C */ 

#endif /* !_YP_H_RPCGEN */
