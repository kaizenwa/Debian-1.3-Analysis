People frequently ask why Debian provides kernel headers with the
libc5-dev package instead of using the standard Linux convention of
having symlinks to the currently installed kernel.  Manoj Srivastava
explains why:

> From: Manoj Srivastava <srivasta@pilgrim.umass.edu>
> 
> 	The headers were included in libc5-dev after a rash of very
>  buggy alpha kernel releases (1.3.7* or something like that) that
>  proceeded to break compilations, etc.  Kernel versions are changed
>  far more rapidly than libc is, and there are higer chances that
>  people install a custom kernel than they install custom libc.
> 
> 	Add to that the fact that few programs really need the more
>  volatile elements of the header files (that is, things that really
>  change from kernel version to kernel version), [before you reject
>  this, consider: programs compiled on one kernel version usually work
>  on other kernels].
> 
> 	So, it makes sense that a set of headers be provided from a
>  known good kernel version, and that is sufficient for compiling most
>  programs, (it also makes the compile time environments for programs
>  on debian machines a well known one, easing the process of dealing
>  with problem reports), the few programs that really depend on cutting
>  edge kernel data structures may just use -I/usr/src/linux/include
>  (provided that kernel-headers or kernel-source exists on the system).
> 
> 	libc5-deb is uploaded frequently enough that it never lags too
>  far behind the latest released kernel.
> 
> 	I hope I was clear enough to answer your question.
> 
> 	manoj
