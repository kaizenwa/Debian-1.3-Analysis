#
# This file is a Makefile for Tix.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.
#
# @(#) Makefile.in 1.19 95/01/08 16:55:30


#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix      =	@prefix@
exec_prefix =	@exec_prefix@

@SET_MAKE@

# Directory in which to install the library of Tix scripts and demos
# (note: you can set the TIX_LIBRARY environment variable at run-time to
# override the compiled-in location):
TIX_LIBRARY =	$(prefix)/lib/tix

# Directory in which to install the archive libtix.a:
LIB_DIR =	$(exec_prefix)/lib

# Directory in which to install the program wish:
BIN_DIR =	$(exec_prefix)/bin

# Directory in which to install the include file tix.h:
INCLUDE_DIR =	$(prefix)/include

# Top-level directory for manual entries:
MAN_DIR =	$(prefix)/man

# Directory in which to install manual entry for wish:
MAN1_DIR =	$(MAN_DIR)/man1

# Directory in which to install manual entries for Tix's C library
# procedures:
MAN3_DIR =	$(MAN_DIR)/man3

# Directory in which to install manual entries for the built-in
# Tcl commands implemented by Tix:
MANN_DIR =	$(MAN_DIR)/mann

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------
AC_FLAGS	=	@DEFS@ @TIX_DEFS@ 
INSTALL		=	@SRC_DIR@/install.sh -c
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA	=	@INSTALL_DATA@
SRC_DIR		=	@SRC_DIR@
INC_DIR		=	@SRC_DIR@/include
LIBRARY_DIR	=	@SRC_DIR@/library
DEMOS_DIR	=	@SRC_DIR@/demos
MANUAL_DIR	=	@SRC_DIR@/man
VPATH		=	@SRC_DIR@
DEMO_PROGS	=	widget
#----------------------------------------------------------------------
#
#			General
#
#----------------------------------------------------------------------

all:: tixConfig.tcl compile

Makefile: Makefile.in
	$(SHELL) ./config.status

tixConfig.tcl: tixConfig.tcl.in
	$(SHELL) ./config.status

test::
	cd test; $(MAKE) test
#----------------------------------------------------------------------
#
#			Compilation
#
#----------------------------------------------------------------------
compile:: @TIX_TARGETS@

demos-c:: @TIX_CDEMOS_BAD@
	@echo "Entering directory demos/c-code"
	cd demos/c-code; $(MAKE)

demos-c-bad::
	@echo error 
	@echo the demos-c target requires that you have installed the
	@echo Tcl 7.4 and Tk 4.0 source in your system.
	@echo

unix-tk4.0:: @TIX_TK40_BAD@
	@echo "Entering directory unix-tk4.0"
	cd unix-tk4.0; $(MAKE)

unix-tk4.0-bad::
	@echo error 
	@echo the unix-tk4.0 target requires that you have installed the
	@echo Tcl 7.4 and Tk 4.0 source in your system.
	@echo

unix-tk4.1:: @TIX_TK41_BAD@
	@echo "Entering directory unix-tk4.1"
	cd unix-tk4.1; $(MAKE)

unix-tk4.1-bad::
	@echo error 
	@echo the unix-tk4.1 target requires that you have installed the
	@echo Tcl 7.5 and Tk 4.1 source in your system.
	@echo

unix-itcl2.0:: @TIX_ITCL20_BAD@
	@echo "Entering directory unix-itcl2.0"
	cd unix-itcl2.0; $(MAKE)

unix-itcl2.0-bad::
	@echo error 
	@echo the unix-itcl2.0 target requires that you have installed the
	@echo 'ITCL 2.0 (non-beta) source in your system.'
	@echo

unix-et-tk4.0:: @TIX_ET40_BAD@
	@echo "Entering directory unix-et-tk4.0"
	cd unix-et-tk4.0; $(MAKE)

unix-et-tk4.0-bad::
	@echo error 
	@echo the unix-et-tk4.0 target requires that you have installed the
	@echo Tcl 7.4 and Tk 4.0 source in your system.
	@echo

abort-make::
	@exit 1

#----------------------------------------------------------------------
#
#			Installation
#
#----------------------------------------------------------------------
install:: install-basic install-binaries
	@echo done

install-binaries::
	@for i in @TIX_TARGETS@; \
	    do \
		echo "Entering directory $$i"; \
		cd $$i; \
		$(MAKE) install; \
		cd ..; \
	    done;

#
# Basic installtion
#
install-basic:: install-libraries install-headers install-demos \
	install-man install-tools 

install-tools:
	@for i in $(BIN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "installing the tixindex program for builing tclIndex for Tix scripts"
	@cd tools; $(INSTALL_PROGRAM) tixindex $(BIN_DIR)/tixindex

install-headers:
	@for i in $(INCLUDE_DIR); \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(INC_DIR)/tix.h; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(INCLUDE_DIR); \
	    done;

install-libraries:
	@for i in $(prefix)/lib $(TIX_LIBRARY) $(TIX_LIBRARY)/bitmaps $(TIX_LIBRARY)/pref; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(LIBRARY_DIR)/*.tcl $(LIBRARY_DIR)/tclIndex; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(TIX_LIBRARY); \
	    done;
	@for i in $(LIBRARY_DIR)/bitmaps/*; \
	    do \
	    if [ -f $$i ] ; then \
		echo "Installing $$i"; \
		$(INSTALL_DATA) $$i $(TIX_LIBRARY)/bitmaps; \
		fi; \
	    done;
	@for i in $(LIBRARY_DIR)/pref/*; \
	    do \
	    if [ -f $$i ] ; then \
		echo "Installing $$i"; \
		$(INSTALL_DATA) $$i $(TIX_LIBRARY)/pref; \
		fi; \
	    done;

install-demos:
	@for i in $(prefix)/lib $(TIX_LIBRARY) $(TIX_LIBRARY)/demos \
		$(TIX_LIBRARY)/demos/bitmaps $(TIX_LIBRARY)/demos/samples ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(DEMOS_DIR); for i in *; \
	    do \
	    if [ -f $$i ] ; then \
		echo "Installing demos/$$i"; \
		sed -e '1 s|/usr/local/bin/tixwish|$(BIN_DIR)/tixwish|' \
			$$i > $(TIX_LIBRARY)/demos/$$i; \
	    fi; \
	    done;
	@for i in $(DEMO_PROGS); \
	    do \
	    chmod 755 $(TIX_LIBRARY)/demos/$$i; \
	    done;
	@for i in $(DEMOS_DIR)/bitmaps/*; \
	    do \
	    if [ -f $$i ] ; then \
		echo "Installing $$i"; \
		$(INSTALL_DATA) $$i $(TIX_LIBRARY)/demos/bitmaps; \
		fi; \
	    done;
	@for i in $(DEMOS_DIR)/samples/*; \
	    do \
	    if [ -f $$i ] ; then \
		echo "Installing $$i"; \
		$(INSTALL_DATA) $$i $(TIX_LIBRARY)/demos/samples; \
		fi; \
	    done;

install-man:
	@for i in $(MAN_DIR) $(MAN1_DIR) $(MAN3_DIR) $(MANN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@cd $(MANUAL_DIR); for i in *.n *.1; \
	    do \
	    echo "Installing doc/$$i"; \
	    rm -f $(MANN_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MANN_DIR)/$$i; \
	    chmod 444 $(MANN_DIR)/$$i; \
	    done;



#----------------------------------------------------------------------
#
#       For generating the documentation files inside the Tix package
#
#----------------------------------------------------------------------

.SUFFIXES: .html .txt

DOCS = README.txt ABOUT.txt

docs:: html txt

html::
	cd docs; $(MAKE) html
	cd man; $(MAKE) html
	hanno.tcl -v

txt:: $(DOCS)
	$(MAKE) $(DOCS)
	cd docs; $(MAKE) txt
	cd man; $(MAKE) txt

clean::
	cd unix-tk4.0; $(MAKE) clean
	cd unix-itcl2.0; $(MAKE) clean
	cd unix-et-tk4.0; $(MAKE) clean
	cd demos/c-code; $(MAKE) clean
	cd unix-tk4.1; $(MAKE) clean
	cd docs; $(MAKE) clean
	cd man; $(MAKE) clean
	cd generic; $(MAKE) clean
	- rm -f *~

distclean::
	- rm -f Makefile config.status Makefile.bak config.status \
		config.cache config.log tixConfig.tcl *~
	cd docs; $(MAKE) distclean
	cd man; $(MAKE) distclean
	- cd unix-tk4.0; $(MAKE) distclean
	- cd unix-tk4.1; $(MAKE) distclean
	- cd unix-itcl2.0; $(MAKE) distclean
	- cd demos/c-code; $(MAKE) distclean
	- cd unix-et-tk4.0; $(MAKE) distclean
	cd docs; $(MAKE) clean
	cd man; $(MAKE) clean
	cd generic; $(MAKE) clean

release-docs:: $(DOCS)

.html.txt:
	lynx -dump $< > $@


