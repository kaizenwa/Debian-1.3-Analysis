#
# This file is a Makefile for Tix.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.
#

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

@SET_MAKE@

# ET programmers: if you have moved the Tix source directory around
# you may need to change the following definition to where the Tix
# library is (the Tix library contains the file Tix.tcl, among other 
# files)
#
TIX_LIBRARY_DIR=	@SRC_DIR@/library

# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =	@XINCLUDES@

# Linker switch(es) to use to link with the X11 library archive (the
# configure script will try to set this value automatically, but you
# can override it).
X11_LIB_SWITCHES = @XLIBSW@

# Libraries to use when linking:  must include at least Tix, Tcl, Xlib,
# and the math library (in that order).  The "@LIBS@" part will be
# replaced (or has already been replaced) with relevant libraries as
# determined by the configure script.
LIBS = ../unix-tk4.0/libtix.a @TK40_LIB@ @TCL74_LIB@ \
    $(X11_LIB_SWITCHES) @LIBS@ @MATH_LIBS@

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = @TIX_DEBUG_FLAG@

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

AC_FLAGS =		@DEFS@ @TIX_DEFS@ 
SRC_DIR =		@SRC_DIR@
INC_DIR =		@SRC_DIR@/include
VPATH =			@SRC_DIR@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC =		@CC@
CC_SWITCHES =	${CFLAGS} -I${INC_DIR} -I@TCL74_SRC_DIR@ -I@TK40_SRC_DIR@ \
${X11_INCLUDES} \
${AC_FLAGS} ${PROTO_FLAGS} ${SECURITY_FLAGS} ${MEM_DEBUG_FLAGS} @TIX_EXTRA_CFLAGS@

all: et2c etixwish

.SUFFIXES: .et

ET_FLAGS = -I@TCL74_SRC_DIR@/library -I@TK40_SRC_DIR@/library

et2c: et2c.c
	$(CC) -I@TCL74_SRC_DIR@ -I@TK40_SRC_DIR@ et2c.c -o $@

etixInit.et: etixInit.et.dist scripts.c
	cat etixInit.et.dist | sed -e '/scripts\.c/r scripts.c' \
-e '/scripts\.c/d' -e 's|TIX_DIR|${TIX_LIBRARY_DIR}|' > etixInit.et

etixAppInit.c: etixAppInit.et
	./et2c $(ET_FLAGS) etixAppInit.et > etixAppInit.c

etixInit.c: etixInit.et bitmaps.c 
	./et2c $(ET_FLAGS) etixInit.et > etixInit.c

et40.c : et40.et
	./et2c $(ET_FLAGS) et40.et > et40.c

bitmaps.c : makebitmap.tcl
	makebitmap.tcl ${TIX_LIBRARY_DIR}/bitmaps > bitmaps.c

scripts.c : makescript.tcl
	makescript.tcl ${TIX_LIBRARY_DIR} > scripts.c

OBJS = et40.o etixInit.o etixAppInit.o

etixwish: $(OBJS)
	$(CC) $(CC_SWITCHES) $(OBJS) @TIX_EXTRA_LDFLAGS@ $(LIBS) -o etixwish

install::
	@echo nothing to be done

Makefile: Makefile.in
	cd $(SRC_DIR); $(SHELL) config.status

clean:
	rm -f *.a *.o core errs *~ \#* TAGS *.E a.out errors tixwish \
		config.info Makefile.bak etixAppInit.c bitmaps.c etixInit.c \
		et40.c et2c etixwish scripts.c

# Now I want to preserve the Makefile on my machine somehow
#
distclean: clean
	rm -f Makefile Makefile.bak config.status config.cache etixInit.et

depend:
	makedepend -- $(CC_SWITCHES) -- $(SRCS)

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

# DO NOT DELETE THIS LINE -- make depend depends on it.

