//=======================================================================
//@V@:Note: This file generated by vgen V1.00 (12:04:59 PM 23 Sep 1996).
//	vedcnv.cpp:	Source for vedTextEditor class
//=======================================================================

#include <v/vnotice.h>
#include "vedapp.h"
#include "vedcnv.h"
#include "vedcmdw.h"

    const int maxBuff = 300;

//===================>>> vedTextEditor::vedTextEditor <<<====================
  vedTextEditor::vedTextEditor(vedCmdWindow* parent) : 
      vTextEditor((vCmdWindow*)parent)
  {
  }

//===================>>> vedTextEditor::~vedTextEditor <<<====================
  vedTextEditor::~vedTextEditor()
  {
  }

//===================>>> vedTextEditor::ChangeLoc <<<====================
  void vedTextEditor::ChangeLoc(long line, int col)
  {
    ((vedCmdWindow*)_parent)->ChangeLoc(line,col);
  }

//===================>>> vedTextEditor::ChangeInsMode <<<====================
  void vedTextEditor::ChangeInsMode(int IsInsMode)
  {
    ((vedCmdWindow*)_parent)->ChangeInsMode(IsInsMode);
  }

//===================>>> vedTextEditor::StatusMessage <<<====================
  void vedTextEditor::StatusMessage(char *msg)
  {
    ((vedCmdWindow*)_parent)->StatusMessage(msg);
  }

//===================>>> vedTextEditor::ErrorMsg <<<====================
  void vedTextEditor::ErrorMsg(char *str)
  {
  }

//===================>>> vedTextEditor::ReadFile <<<====================
  int vedTextEditor::ReadFile(char* name)
  {

    char buff[maxBuff+2];

    if (!name || !*name)
	return 0;

    ifstream inFile(name);

    if (!inFile)
	return 0;		// file not there

    resetBuff();		// this buffer is empty

    while (inFile.getline(buff,maxBuff))
      {
	if (!addLine(buff))
	  {
	    vNoticeDialog note(theApp);
	    note.Notice("File too big -- only paritally read.");
	    break;
	  }
      }
    inFile.close();
    displayBuff();		// Now, display the buffer
    return 1;
  }

//===================>>> vedTextEditor::SaveFile <<<====================
  int vedTextEditor::SaveFile(char* name)
  {
    char buff[maxBuff+2];

    char* prefix = "Saved ";

    ofstream ofs(name);
    if (!ofs)
      {
	StatusMessage("Can't save file");
	return 0;
      }


    for (long lx = 1 ; lx <= GetLines() ; ++lx)
      {
	getLine(buff,maxBuff,lx);
	ofs << buff << "\n";
      }

    ofs.close();

    strcpy(buff,prefix);

    int ix;
    for (ix = strlen(prefix) ; ix < 40 && *name != 0 ; ++ix)
	buff[ix] = *name++;
    buff[ix] = 0;
    StatusMessage(buff);

    state.changes = 0;
    return 1;
  }
