
Release 0.52:
	- first workable release of libpwdb

Release 0.53:
	- added group database support for unix module
	- added group database support for shadow module
	- querying/updating group databases are working on unix and shadow
	  module
	- caught a small bug in pam_start which caused to segfault when a
	  new entry was added with a NULL datasource pointer
	- code is more modular and much more safe now
	- added two more entry types for unix module: members and memberids.
	  Can be used to query /etc/passwd file for all members of a group,
	  similary to "groups" and "groupids", used to query /etc/group for 
	  a list of groups a user part of.
	- modified interface for pwdb_set_entry. Now the strvalue function
	  requires a third parameter, the length of datasources. Integer
	  arrays have showed up over the night :-)
	- make install works okay.

Release 0.54preA:
	- corrected a bug in groups handling, possible cause of segfaults
	  when working with empty groups. Now the PAM module pam_groups
	  should be happy.
	- reportedly when using shadow, the encrypted password was in some
	  cases generated also in /etc/passwd. Workaround/fix provided.
	- new function pwdb_merge for joining two pwdb structures.
	- new header file _pwdb_macros.h added to aid debugging.

Release 0.54preB:
	- radius code reworked completely. All the radius support functions
	  are now provided in libpwdb (this includes authorization, password
	  changing and accounting funtions). Radius code now makes use of the
	  standard /etc/raddb/dictionary entries. As a result, the names of the
	  RADIUS pwdb entries is no longer fixed and no longer needed to be
	  documented :-), because they will match the entries from that 
	  dictionary. (CG)
	- as a result of the previous, now radius code is dynamic - it accomodates
	  new dictionary changes on the fly. (CG)
	- still on radius field: we use now timers to cope with network failures - 
	  the default timout of 2 minutes was too much for us. The client routines 
	  now fully emulate a Livingston Portmaster terminal server, with the only
	  exception that alternate auth and acct servers are not handled at libpwdb
	  level - they should be taken care of at the application level. (CG)
	- the interface code got re-organized. Now it's kinda modular, but only at
	  source code level, there's work to be done before libpwdb will become
	  plug and play (aka 'true modular') (CG)
	- I've managed to shut off some annoying compiler warnings from the unix and
	  shadow interface code. Better don't look at it :-) (CG)
	- when compiled with debugging, libpwdb was too verbose with the stderr,
	  while the rest of the code used the debugging routines from _pwdb_macros.h.
	  cleared out, a new function debug_pwdb_struct is provided instead. (CG)
	- posix compliance routines added (AGM)
	- now libpwdb uses only the entry from /etc/pwdb.conf for which all
	  databases report to have an entry for a specified user/group,
	  instead of choosing the one for which only the first database
	  matched. (work in progress - AGM)

Release 0.54preC:
	- bugfix version. There were some glitches in the debugging code
	  shipped with preB. No new features added.

Release 0.54preD:
	- bugfix version. Addressed a bug in POSIX compliance code. No new
	  features added.

