#----------------------------------------------------------------------
# SVGAlib Compile-time configuration file
#----------------------------------------------------------------------

MAJOR_VER = 1
MINOR_VER = 2.10
VERSION = $(MAJOR_VER).$(MINOR_VER)

#----------------------------------------------------------------------
# Configuration Section
#----------------------------------------------------------------------

# Source directory.
#srcdir = /usr/local/src/svgalib-$(VERSION)
srcdir = $(shell sh -c pwd)

# Common prefix for installation directories.
# NOTE: This directory must exist when you start the install.
prefix = /usr/local
exec_prefix = $(prefix)

# Directory where the shared stubs and static library will be installed.
libdir = $(exec_prefix)/lib

# Directory where the shared library will be installed.
sharedlibdir = /lib

# Directory where the font and textmode utilities will be installed.
bindir = $(exec_prefix)/bin

# Directory where the run-time configuration files will be installed.
datadir = /etc/vga

# Directory where the header files will be installed.
includedir = $(prefix)/include

# Target binary format.
TARGET_FORMAT = a.out
#TARGET_FORMAT = elf

# Uncomment this if you want to compile and install the static libs.
#INSTALLSTATICLIB = installstaticlib

# Comment this out if you don't want to install the shared libs.
INSTALLSHAREDLIB = installsharedlib

# Comment this out if you don't want to compile and install the utilities.
INSTALLUTILS = installutils

#
# Comment out any driver that you don't want included in the library.
#
INCLUDE_ET4000_DRIVER = y
INCLUDE_CIRRUS_DRIVER = y
INCLUDE_TVGA_DRIVER = y
INCLUDE_OAK_DRIVER = y
INCLUDE_EGA_DRIVER = y
INCLUDE_MACH32_DRIVER = y
INCLUDE_S3_DRIVER = y
INCLUDE_ET3000_DRIVER = y
INCLUDE_GVGA6400_DRIVER = y
INCLUDE_ARK_DRIVER = y
INCLUDE_ATI_DRIVER = y
INCLUDE_ALI_DRIVER = y
INCLUDE_MACH64_DRIVER = y

#
# Comment out any adapter you don't want to autodetect.
#
INCLUDE_ET4000_DRIVER_TEST = y
INCLUDE_CIRRUS_DRIVER_TEST = y
INCLUDE_TVGA_DRIVER_TEST = y
INCLUDE_OAK_DRIVER_TEST = y
INCLUDE_EGA_DRIVER_TEST = y
INCLUDE_MACH32_DRIVER_TEST = y
INCLUDE_GVGA6400_DRIVER_TEST = y
INCLUDE_S3_DRIVER_TEST = y
INCLUDE_ET3000_DRIVER_TEST = y
#INCLUDE_ARK_DRIVER_TEST = y
INCLUDE_ATI_DRIVER_TEST = y
INCLUDE_ALI_DRIVER_TEST = y
#INCLUDE_MACH64_DRIVER_TEST = y

#
# Comment out any dac support that you don't want included in the library.
#
INCLUDE_NORMAL_DAC = y
INCLUDE_S3_SDAC_DAC = y
INCLUDE_S3_GENDAC_DAC = y
INCLUDE_S3_TRIO64_DAC = y
INCLUDE_SIERRA_DAC = y
INCLUDE_SC15025_DAC = y
INCLUDE_ATT20C490_DAC = y
INCLUDE_ATT20C498_DAC = y
INCLUDE_ICW_DAC = y
INCLUDE_IBMRGB52x_DAC = y
INCLUDE_SC1148X_DAC = y

#
# Comment out any dac you don't want to autodetect.
# (not all dacs can be autodetected, at this time)
#
INCLUDE_S3_SDAC_DAC_TEST = y
INCLUDE_S3_GENDAC_DAC_TEST = y
INCLUDE_SC15025_DAC_TEST = y
INCLUDE_ATT20C490_DAC_TEST = y
INCLUDE_IBMRGB52x_DAC_TEST = y
INCLUDE_SC1148X_DAC_TEST = y

# Location of the svgalib configuration file.
SVGALIB_CONFIG_FILE = $(datadir)/libvga.config

# Defining DYNAMIC enables runtime parsing of the file defined by
# ET4000_REGS (usually /etc/libvga.et4000) for the et4000
# driver. See et4000/README for details. Commenting this out again
# saves binary space.
#
# If you just want to use the et4000.regs in the source directory,
# comment out the definition of DYNAMIC.
DYNAMIC = y
ET4000_REGS = $(datadir)/libvga.et4000

# The EGA driver may load additional modes (SuperEGA cards) like the
# et4000 driver does. Just define the configuration file below.
# [This should be taken with a grain of salt, EGA is untested.]
#EGA_REGS = $(datadir)/libvga.ega

# Defining USE_CLOCKS will cause the ET4000 driver to measure clock
# frequencies (they are not actually used yet).
#USE_CLOCKS = y

# Uncomment to allow mouse type overrides
ALLOW_MOUSE_OVERRIDE = y

#----------------------------------------------------------------------
# Compiler Section
#----------------------------------------------------------------------

# Compiler used.
CC       = gcc
#CC      = gcc -b i486-linuxaout
#CC      = gcc -b i486-linux

# You might want to add -m386 here if you have a recently installed 
# (486 configured) compiler on a 386. The only real difference is the
# generous alignment padding of function entry-points for the 486.
WARN     = -Wall -Wstrict-prototypes
INCLUDES = -I$(srcdir)/include -I.
OPTIMIZE = -fomit-frame-pointer -O2 -fno-strength-reduce -pipe
CFLAGS   = $(WARN) $(DLLFLAGS) $(INCLUDES) $(OPTIMIZE) $(DEFINES)
LDFLAGS   = -N -s

# Uncomment the following if you are compiling a.out shared libraries
# with an ELF ld.
#
#MKIMAGEFLAGS = -m i386linux -oformat a.out-i386-linux -qmagic

# additional flags for shared lib.
ifeq (a.out, $(TARGET_FORMAT))
	DLLFLAGS = -B/usr/dll/jump/
else
	DLLFLAGS = -fPIC
endif

# Utilites used.
AR	  = ar
INSTALL_PROGRAM	= install -c -s -m 755 -o root -g bin
INSTALL_SHLIB	= install -c -m 755 -o root -g bin
INSTALL_DATA	= install -c -m 644 -o root -g bin
