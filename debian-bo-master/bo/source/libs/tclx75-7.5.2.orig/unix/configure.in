dnl----------------------------------------------------------------------------
dnl configure.in -
dnl----------------------------------------------------------------------------
dnl  This file is an input file used by the GNU "autoconf" program to
dnl  generate the file "configure", which is run during Tcl installation
dnl  to configure the system for the local environment.  Many of these
dnl  checks are duplicates of those required by Tcl & Tk, since TclX
dnl  includes there internal header files.  The sections from Tcl and Tk
dnl  are grouped together and marked for easy sycning with Outerhout's
dnl  releases.
dnl
dnl  Although the generated configure script is under the GNU Public,
dnl  License Extended Tcl remains freely redistributable for any purpose,
dnl  including commercial use.
dnl----------------------------------------------------------------------------
dnl $Id: configure.in,v 7.0 1996/06/16 05:34:23 markd Exp $
dnl----------------------------------------------------------------------------
AC_INIT(../tcl/generic/tclExtend.h)
ifdef([AC_REVISION],AC_REVISION($Revision: 7.0 $),)dnl

# If `configure' is invoked (in)directly via `make', ensure that it
# encounters no `make' conflicts.  Ignore error if shell does not have
# unset.
#
unset MFLAGS MAKEFLAGS 2>/dev/null

#------------------------------------------------------------------------------
# Define srcbasedir and bldbasedir as absolute paths to the top of the TclX
# tree.
#------------------------------------------------------------------------------

srcbasedir=`cd $srcdir/..; pwd`
AC_SUBST(srcbasedir)
bldbasedir=`cd ..; pwd`
AC_SUBST(bldbasedir)

#------------------------------------------------------------------------------
# System information and date for including in some files.
#------------------------------------------------------------------------------
if test -f /usr/lib/NextStep/software_version; then
    UNAME_OUT=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    UNAME_OUT=`uname -s`-`uname -r`
fi
AC_SUBST(UNAME_OUT)

DATE_OUT=`date`
AC_SUBST(DATE_OUT)

#------------------------------------------------------------------------------
# If the --srcdir option has been used, make sure we are in a directory called
# "unix" and build the other output directories, configure will not do this.
#------------------------------------------------------------------------------

case `pwd` in
  */unix) ;;
  *) echo '*** Error: Should be in a directory named "unix".  If your using'
     echo 'the --srcdir option, create a directory called "unix" and run'
     echo 'configure from there.  Other build directories will be created'
     echo 'under the parent directory of "unix".'
     exit 1 ;;
esac
if test ! -d ../tcl ; then
   mkdir ../tcl || exit 1
fi
if test ! -d ../tcl/unix ; then
   mkdir ../tcl/unix || exit 1
fi
if test ! -d ../tk ; then
   mkdir ../tk || exit 1
fi
if test ! -d ../tk/unix ; then
   mkdir ../tk/unix || exit 1
fi

#------------------------------------------------------------------------------
# Check command line looking for the --with-tk=YES/NO option.
#------------------------------------------------------------------------------

AC_ARG_WITH(tk,
    [  --with-tk=YES|NO         build Tk specific code and wishx],
    [TKX_BUILD=$withval],
    [TKX_BUILD=YES])

case "$TKX_BUILD" in
    YES|yes)
        AC_MSG_RESULT(Will build Tk specific code and wishx)
        TKX_BUILD=YES
        ;;
    NO|no)
        AC_MSG_RESULT(Will not build Tk specific code and wishx)
        TKX_BUILD=NO
        ;;
     *)
        AC_MSG_ERROR(Invalid argument to --with-tk=, expected YES or NO)
        ;;
esac
AC_SUBST(TKX_BUILD)

#------------------------------------------------------------------------------
# Check command line looking for the --with-arch= option.
#------------------------------------------------------------------------------

AC_ARG_WITH(arch,
    [  --with-arch=ARCH        architecture suffix, appended .ARCH to the bin
                      and lib directory names],
    [TCLX_ARCH=.$withval
     AC_MSG_RESULT("An architecture suffix of \"$TCLX_ARCH\" will be appended to bin and lib directories")
    ],
    [AC_MSG_RESULT("No architecture suffix will be used")])
AC_SUBST(TCLX_ARCH)

#------------------------------------------------------------------------------
# We need the real value of prefix and exec-prefix now, not when the generated
# script is ready to output them.
#------------------------------------------------------------------------------

test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix=$prefix

AC_SUBST(prefix)
AC_SUBST(exec_prefix)

#------------------------------------------------------------------------------
# Extract the version information out of tclExtend.h so it can be assigned
# to macros.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(TclX versions)

eval `egrep '^#define T.*_VERSION' $srcbasedir/tcl/generic/tclExtend.h | \
      sed -e 's/#define //' -e 's/ *"/="/'`
AC_MSG_RESULT($TCLX_FULL_VERSION)

AC_SUBST(TCLX_VERSION)
AC_SUBST(TCLX_FULL_VERSION)
AC_SUBST(TCLX_SHLIB_VERSION)

AC_SUBST(TKX_VERSION)
AC_SUBST(TKX_FULL_VERSION)
AC_SUBST(TKX_SHLIB_VERSION)

#------------------------------------------------------------------------------
# If Config.mk is not in the build directory, copy it local.
#------------------------------------------------------------------------------

if test ! -r Config.mk
then
    echo "Copying $srcdir/Config.mk to build directory"
    cp $srcdir/Config.mk  Config.mk || exit 1
fi

#------------------------------------------------------------------------------
# Generate tmp makefile that outputs macro values in Config.mk as shell
# variables.  Validate that we can find Tcl and Tk files.  Note, we have to
# deal with 3 parsings by the shell plus a parsing by make, use care in
# changing this.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(macro values from Config.mk)
cat Config.mk >confmakefile
echo "srcbasedir=$srcbasedir" >>confmakefile
echo "bldbasedir=$bldbasedir" >>confmakefile
echo "prefix=$prefix" >>confmakefile
echo "exec_prefix=$exec_prefix" >>confmakefile
echo "all:" >>confmakefile
echo '	@echo TCL_CONFIG=\"${TCL_CONFIG}\"' >>confmakefile
echo '	@echo TK_CONFIG=\"${TK_CONFIG}\"' >>confmakefile
echo '	@echo TCLX_INST_LIB=\"${TCLX_INST_LIB}\"' >>confmakefile
echo ".NO_PARALLEL: all" >>confmakefile

eval `${MAKE-make} -f confmakefile`
rm confmakefile

if test ! -r "$TCL_CONFIG" ; then
    AC_MSG_ERROR(Config.mk does not set TCL_CONFIG to a valid path to tclConfig.sh)
fi
if test "$TKX_BUILD" = "YES"; then
    if test ! -r "$TK_CONFIG" ; then
        AC_MSG_ERROR(Config.mk does not set TK_CONFIG to a valid path to tkConfig.sh)
    fi
fi
AC_MSG_RESULT(ok)

AC_SUBST(TCLX_INST_LIB)

# Get defines from tclConfig.sh
. $TCL_CONFIG

LIBS=$TCL_LIBS   # Need for tests.

#
# Make TCL_LD_SEARCH_FLAGS a full value.  It is normally contains a value
# with the path LIB_INSTALL_DIR.  Expand this to be the value of the 
# TCL_EXEC_PREFIX.  Also, save the original search flags, we will need them
# later.
#
ORIG_TCL_LD_SEARCH_FLAGS=$TCL_LD_SEARCH_FLAGS
LIB_INSTALL_DIR=$TCL_EXEC_PREFIX
TCL_LD_SEARCH_FLAGS=`eval echo $TCL_LD_SEARCH_FLAGS`

AC_SUBST(TCL_DEFS)
AC_SUBST(TCL_LIBS)
AC_SUBST(TCL_EXEC_PREFIX)
AC_SUBST(TCL_SHLIB_CFLAGS)
AC_SUBST(TCL_SHLIB_LD)
AC_SUBST(TCL_DL_LIBS)
AC_SUBST(TCL_LD_FLAGS)
AC_SUBST(TCL_LD_SEARCH_FLAGS)
AC_SUBST(TCL_BUILD_LIB_SPEC)
AC_SUBST(TCL_LIB_SPEC)

# Get defines from tkConfig.sh
if test "$TKX_BUILD" = "YES"; then
   . $TK_CONFIG
fi

# Tk doesn't provide its own search flags, but should.
TK_LD_SEARCH_FLAGS=$TCL_LD_SEARCH_FLAGS

AC_SUBST(TK_DEFS)
AC_SUBST(TK_LIBS)
AC_SUBST(TK_EXEC_PREFIX)
AC_SUBST(TK_XINCLUDES)
AC_SUBST(TK_XLIBSW)
AC_SUBST(TK_LD_SEARCH_FLAGS)
AC_SUBST(TK_BUILD_LIB_SPEC)
AC_SUBST(TK_LIB_SPEC)

#------------------------------------------------------------------------------
# Handle the --enable-shared option.  Must do this after extracting information
# from Config.mk, as we need TCLX_INST_LIB.
#------------------------------------------------------------------------------

AC_ARG_ENABLE(shared,
    [  --enable-shared         build and link with shared libraries],
    [BUILD_SHARED=$enableval],
    [BUILD_SHARED=NO])
case "$BUILD_SHARED" in
    YES|yes)
        AC_MSG_RESULT(Will build shared libraries)
        BUILD_SHARED=YES
        TCLX_USE_SHLIB_CFLAGS=TCL_SHLIB_CFLAGS
        TCLX_BUILD_LIB_SPEC="-L$bldbasedir/tcl/unix -ltclx"
        TCLX_LIB_SPEC="-L$TCLX_INST_LIB -ltclx"
        TKX_BUILD_LIB_SPEC="-L$bldbasedir/tk/unix -ltkx"
        TKX_LIB_SPEC="-L$TCLX_INST_LIB -ltkx"
        ;;
    NO|no)
        AC_MSG_RESULT(Will not build shared libraries)
        BUILD_SHARED=NO
        TCLX_USE_SHLIB_CFLAGS=TCL_NO_SHLIB_CFLAGS  # Not actually defined
        TCLX_BUILD_LIB_SPEC="$bldbasedir/tcl/unix/libtclx.a"
        TCLX_LIB_SPEC="$TCLX_INST_LIB/libtclx.a"
        TKX_BUILD_LIB_SPEC="$bldbasedir/tk/unix/libtkx.a"
        TKX_LIB_SPEC="$TCLX_INST_LIB/libtkx.a"
        ;;
     *)
        AC_MSG_ERROR(Invalid argument to --enable-shared=, expected YES or NO)
        ;;
esac
AC_SUBST(BUILD_SHARED)
AC_SUBST(TCLX_USE_SHLIB_CFLAGS)
AC_SUBST(TCLX_BUILD_LIB_SPEC)
AC_SUBST(TCLX_LIB_SPEC)
AC_SUBST(TKX_BUILD_LIB_SPEC)
AC_SUBST(TKX_LIB_SPEC)

#------------------------------------------------------------------------------
# Check for various programs used during the build.  If the CC environment
# variable is not set, the compiler used to build Tcl is used.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(which C compiler to use)
if test "X$CC" = "X"; then
    CC=$TCL_CC
    AC_MSG_RESULT(using C compiler specified in tclConfig.sh)
else
    AC_MSG_RESULT(using C compiler specified in by CC env var)
fi
AC_SUBST(CC)
AC_PROG_RANLIB

#------------------------------------------------------------------------------
# Determine the names of the shared libraries to build.
#
case "$TCL_SHLIB_SUFFIX" in
   *.so) TCLX_SHLIB_BASE_NAME=libtclx.so
         TCLX_SHLIB_NAME=libtclx.so.${TCLX_SHLIB_VERSION}
         TKX_SHLIB_BASE_NAME=libtkx.so
         TKX_SHLIB_NAME=libtkx.so.${TKX_SHLIB_VERSION}
         ;;
   *.sl) TCLX_SHLIB_BASE_NAME=libtclx.sl
         TCLX_SHLIB_NAME=libtclx.sl
         TKX_SHLIB_BASE_NAME=libtkx.sl
         TKX_SHLIB_NAME=libtkx.sl
         ;;
   *..o) TCLX_SHLIB_BASE_NAME=libtclx..o
         TCLX_SHLIB_NAME=libtclx..o
         TKX_SHLIB_BASE_NAME=libtkx..o
         TKX_SHLIB_NAME=libtkx..o
         ;;
      *) TCLX_SHLIB_BASE_NAME=""
         TCLX_SHLIB_NAME=""
         TKX_SHLIB_BASE_NAME=""
         TKX_SHLIB_NAME=""
         if test "X$BUILD_SHARED" = "XYES" ; then
             AC_MSG_ERROR(do not know how to build shared libraries for this Unix system)
         fi
         ;;
esac

AC_SUBST(TCLX_SHLIB_BASE_NAME)
AC_SUBST(TCLX_SHLIB_NAME)
AC_SUBST(TKX_SHLIB_BASE_NAME)
AC_SUBST(TKX_SHLIB_NAME)

#------------------------------------------------------------------------------
# Determine the search path argument for the installed TclX libraries. 
#-----------------------------------------------------------------------------

if test "X$ORIG_TCL_LD_SEARCH_FLAGS" != "X"; then
    LIB_INSTALL_DIR=$TCLX_INST_LIB
    TCLX_LD_SEARCH_FLAGS=`eval echo $ORIG_TCL_LD_SEARCH_FLAGS` 
fi
AC_SUBST(TCLX_LD_SEARCH_FLAGS)

#------------------------------------------------------------------------------
# Determine if we have symbolic links on the filesystem we are building
# on.  They are needed the setup the help so the help test will work.
# If we don't have them, we have to copy the files.
#------------------------------------------------------------------------------
AC_PROG_LN_S
if test "$LN_S" = "ln"; then
    HAVE_SYML="NO"
else
    HAVE_SYML="YES"
fi
AC_SUBST(HAVE_SYML)

#------------------------------------------------------------------------------
# Some make programs require includes to be 
#     .include "file"
# others...
#     include file
# Checks the MAKE environment variable for the name of the make command to use.
#------------------------------------------------------------------------------

AC_MSG_CHECKING("how make handles includes")
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if ${MAKE-make} -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

#------------------------------------------------------------------------------
# Check for system header files.
#------------------------------------------------------------------------------

AC_HEADER_CHECK(limits.h, , AC_DEFINE(NO_LIMITS_H))
AC_HEADER_CHECK(sys/select.h, , AC_DEFINE(NO_SYS_SELECT_H))

#------------------------------------------------------------------------------
# Check for missing typedefs.
#------------------------------------------------------------------------------

AC_CHECK_TYPE(clock_t, long)
AC_CHECK_TYPE(time_t, long)
AC_CHECK_TYPE(off_t, long)

#------------------------------------------------------------------------------
# What type do signals return?
#------------------------------------------------------------------------------

AC_RETSIGTYPE

#------------------------------------------------------------------------------
# Test to see if "times" returns a status or the amount of elapsed real time.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(checking to see what 'times' returns)
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/times.h>
main() {
struct tms cpu;
times (&cpu);
sleep (2);
if (times (&cpu) > 0)
     exit (0);
else 
     exit (1);
}
], [AC_MSG_RESULT(elapsed real time)],
   [AC_MSG_RESULT(a status)
    AC_DEFINE(TIMES_RETS_STATUS)],
   [AC_MSG_ERROR(cross-compiling not supported)])

#------------------------------------------------------------------------------
#     Determine if "." is used as separator for the manual directory
#     names.  i.e. man/man.1 vs man/man1
#------------------------------------------------------------------------------

AC_MSG_CHECKING(man directory/section separator)
mandirs="/usr/man/man.1 /usr/man/cat.1 /usr/share/man.1 /usr/share/cat.1
         /usr/man/u_man/man.1 /usr/man/cat.C"
gotdotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotdotdir="YES"
    fi
done

mandirs="/usr/man/man1   /usr/man/cat1   /usr/share/man1   /usr/share/man1
         /usr/man/man1.Z /usr/man/cat1.Z /usr/share/man1.Z /usr/share/man1.Z
         /usr/man/u_man/man1 /usr/share/man/man1"
gotnodotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotnodotdir="YES"

    fi
done

if test $gotdotdir = YES -a $gotnodotdir = NO
then
    MAN_DIR_SEPARATOR="."
    AC_MSG_RESULT(man/man.1 style)
elif test $gotdotdir = NO -a $gotnodotdir = YES
then
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT(man/man1 style)
else
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT([WARNING: couldn't determine, assuming man/man1 style])
fi
AC_SUBST(MAN_DIR_SEPARATOR)

#------------------------------------------------------------------------------
# Check for additional libraries the Tcl/Tk does not check for.
#------------------------------------------------------------------------------

# This is needed for DEC Alphas
AC_CHECK_LIB(dnet_stub, main, [TCLX_LIBS="$TCLX_LIBS -ldnet_stub"])

#------------------------------------------------------------------------------
# Older SCO systems don't have ftruncate, but have chsize in libx.  Newer
# versions have both.  Only check for chsize in libx if we don't have
# truncate.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(ftruncate, ,
        [AC_DEFINE(NO_FTRUNCATE)
         AC_CHECK_LIB(x, chsize,
                [AC_DEFINE(HAVE_CHSIZE)
                 [TCLX_LIBS="$TCLX_LIBS -lx"]])])

#------------------------------------------------------------------------------
# Check for various Unix or library functions that can be used by TclX.
# These must be after the library checks.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(select, , AC_DEFINE(NO_SELECT))
AC_CHECK_FUNC(setitimer, , AC_DEFINE(NO_SETITIMER))
AC_CHECK_FUNC(sigaction, , AC_DEFINE(NO_SIGACTION))
AC_CHECK_FUNC(setpgid, , AC_DEFINE(NO_SETPGID))
AC_CHECK_FUNC(getgroups, , AC_DEFINE(NO_GETGROUPS))
AC_CHECK_FUNC(bzero, , AC_DEFINE(NO_BZERO))
AC_CHECK_FUNC(bcopy, , AC_DEFINE(NO_BCOPY))
AC_CHECK_FUNC(fsync, , AC_DEFINE(NO_FSYNC))
AC_CHECK_FUNC(getpriority, , AC_DEFINE(NO_GETPRIORITY))
AC_CHECK_FUNC(strcoll, , AC_DEFINE(NO_STRCOLL))
AC_CHECK_FUNC(fchown, , AC_DEFINE(NO_FCHOWN))
AC_CHECK_FUNC(fchmod, , AC_DEFINE(NO_FCHMOD))
AC_CHECK_FUNC(truncate, , AC_DEFINE(NO_TRUNCATE))
AC_CHECK_FUNC(waitpid, , AC_DEFINE(NO_WAITPID))
AC_CHECK_FUNC(sysconf, , AC_DEFINE(NO_SYSCONF))

#------------------------------------------------------------------------------
# Test for socket related functions.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(inet_aton, , AC_DEFINE(NO_INET_ATON))
AC_CHECK_FUNC(gethostname, , AC_DEFINE(NO_GETHOSTNAME))

#------------------------------------------------------------------------------
# Check for catgets.  Not the some systems (NetBSD 1.0) have catclose declared
# as type void rather than type int.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(catgets,
    [AC_MSG_CHECKING([catclose return value])
     AC_TRY_COMPILE([#include <nl_types.h>], [
        if (catclose ((nl_catd) 0) == 0) exit (0);],
        AC_MSG_RESULT(ok), [
        AC_MSG_RESULT([broken catclose return type])
        AC_DEFINE(BAD_CATCLOSE)])],
    [AC_DEFINE(NO_CATGETS)])

#------------------------------------------------------------------------------
# Check for missing functions that we need.  Must be done after library checks.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(random, ,[LIBOBJS="$LIBOBJS random.o"]
              AC_DEFINE(NO_RANDOM))
AC_CHECK_FUNC(rename, ,[LIBOBJS="$LIBOBJS rename.o"])
AC_SUBST(LIBOBJS)

#------------------------------------------------------------------------------
# Determine if random is declared in stdlib.h or math.h.  If it is, we don't
# want to redeclare it.  Some systems, such as the DEC Alpha, have random
# declared as returning int rather than long, since long is 64 bit.
#------------------------------------------------------------------------------

found_random=NO
AC_HEADER_EGREP("random", stdlib.h, [found_random=YES])
AC_HEADER_EGREP("random", math.h, [found_random=YES])

if test "$found_random" = "NO"; then
    AC_DEFINE(NO_RANDOM_PROTO)
fi

#------------------------------------------------------------------------------
# Generate the make files.
#------------------------------------------------------------------------------

AC_SUBST(TCLX_LIBS)

AC_OUTPUT(Makefile Common.mk tools/Makefile ../tcl/unix/Makefile ../tk/unix/Makefile ../tcl/unix/tclxConfig.sh ../tk/unix/tkxConfig.sh ../tcl/unix/pkgIndex.proto)

