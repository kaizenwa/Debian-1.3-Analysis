#
# fcntl.test
#
# Tests for the fcntl command.
#---------------------------------------------------------------------------
# Copyright 1992-1996 Karl Lehenbauer and Mark Diekhans.
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted, provided
# that the above copyright notice appear in all copies.  Karl Lehenbauer and
# Mark Diekhans make no representations about the suitability of this
# software for any purpose.  It is provided "as is" without express or
# implied warranty.
#------------------------------------------------------------------------------
# $Id: fcntl.test,v 7.0 1996/06/16 05:32:08 markd Exp $
#------------------------------------------------------------------------------
#

if {[info procs test] != "test"} then {source testlib.tcl}

close [open FCNTL1.TMP w]
close [open FCNTL2.TMP w]
close [open FCNTL3.TMP w]

set testRWFH [open FCNTL1.TMP r+]
set testRFH [open FCNTL2.TMP r]
set testWFH [open FCNTL3.TMP w]

pipe testRPH testWPH

Test fcntl-1.1 {fcntl tests} {
    fcntl $testRWFH RDONLY
} 0 0

Test fcntl-1.2 {fcntl tests} {
    fcntl $testRWFH WRONLY
} 0 0

Test fcntl-1.3 {fcntl tests} {
    fcntl $testRWFH RDWR
} 0 1

Test fcntl-1.4 {fcntl tests} {
    fcntl $testRWFH READ
} 0 1

Test fcntl-1.5 {fcntl tests} {
    fcntl $testRWFH WRITE
} 0 1


Test fcntl-1.6 {fcntl tests} {
    fcntl $testRFH RDONLY
} 0 1

Test fcntl-1.7 {fcntl tests} {
    fcntl $testRFH WRONLY
} 0 0

Test fcntl-1.8 {fcntl tests} {
    fcntl $testRFH RDWR
} 0 0

Test fcntl-1.9 {fcntl tests} {
    fcntl $testRFH READ
} 0 1

Test fcntl-1.10 {fcntl tests} {
    fcntl $testRFH WRITE
} 0 0


Test fcntl-1.11 {fcntl tests} {
    fcntl $testWFH RDONLY
} 0 0

Test fcntl-1.12 {fcntl tests} {
    fcntl $testWFH WRONLY
} 0 1

Test fcntl-1.13 {fcntl tests} {
    fcntl $testWFH RDWR
} 0 0

Test fcntl-1.14 {fcntl tests} {
    fcntl $testWFH READ
} 0 0

Test fcntl-1.15 {fcntl tests} {
    fcntl $testWFH WRITE
} 0 1


Test fcntl-2.1 {fcntl tests} {
    fcntl $testRWFH CLOEXEC 1
    fcntl $testRWFH CLOEXEC
} 0 1

Test fcntl-2.2 {fcntl tests} {
    fcntl $testRWFH CLOEXEC 0
    fcntl $testRWFH CLOEXEC
} 0 0

Test fcntl-2.3 {fcntl tests} {
    fcntl $testRPH NONBLOCK 1
    fcntl $testRPH NONBLOCK
} 0 1

Test fcntl-2.4 {fcntl tests} {
    fcntl $testRWFH append 1
    fcntl $testRWFH append
} 0 1

Test fcntl-2.5 {fcntl tests} {
    fcntl $testRWFH APPEND 0
    fcntl $testRWFH append
} 0 0

Test fcntl-3.1 {fcntl tests} {
    fcntl $testRPH NONBLOCK 0
    fcntl $testRPH nonBlock
} 0 0

Test fcntl-3.2 {fcntl tests} {
    fcntl $testRWFH NOBUF 1
    fcntl $testRWFH NObuf
} 0 1

close $testRWFH
close $testRFH
close $testWFH

# Reopen, can not have both nobuf and linebuf
set testRWFH [open FCNTL1.TMP w]  

Test fcntl-4.1 {fcntl tests} {
    fcntl $testRWFH LINEBUF 1
    fcntl $testRWFH LINEBUF
} 0 1

Test fcntl-5.1 {fcntl tests} {
    fcntl $testRWFH a b c
} 1 {wrong # args: fcntl handle attribute ?value?}

Test fcntl-5.2 {fcntl tests} {
    fcntl $testRWFH BAZ 1
} 1 {unknown attribute name "BAZ", expected one of APPEND, CLOEXEC, LINEBUF, NONBLOCK, NOBUF, READ, RDONLY, RDWR, WRITE, WRONLY, or KEEPALIVE}

Test fcntl-5.3 {fcntl tests} {
    fcntl $testRWFH APPEND FOO
} 1 {expected boolean value but got "FOO"}

close $testRWFH

Test fcntl-5.4 {fcntl tests} {
    fcntl $testRWFH RDONLY
} 1 "can not find channel named \"$testRWFH\""

close $testRPH
close $testWPH
unlink {FCNTL1.TMP FCNTL2.TMP FCNTL3.TMP}
