dnl----------------------------------------------------------------------------
dnl configure.in -
dnl----------------------------------------------------------------------------
dnl  This file is an input file used by the GNU "autoconf" program to
dnl  generate the file "configure", which is run during Tcl installation
dnl  to configure the system for the local environment.  Many of these
dnl  checks are duplicates of those required by Tcl & Tk, since TclX
dnl  includes there internal header files.  The sections from Tcl and Tk
dnl  are grouped together and marked for easy sycning with Outerhout's
dnl  releases.
dnl
dnl  Although the generated configure script is under the GNU Public,
dnl  License Extended Tcl remains freely redistributable for any purpose,
dnl  including commercial use.
dnl----------------------------------------------------------------------------
dnl $Id: configure.in,v 5.0 1995/07/25 06:01:08 markd Rel $
dnl----------------------------------------------------------------------------
AC_INIT(src/tclExtend.h)
ifdef([AC_REVISION],AC_REVISION($Revision: 5.0 $),)dnl

AC_CONFIG_HEADER(src/tclXconf.h)

#------------------------------------------------------------------------------
# Check command line looking for the --arch= option.
#------------------------------------------------------------------------------

AC_ARG_WITH(arch,
         [  --with-arch=ARCH        architecture suffix, appended .ARCH to the bin
                          and lib directory names],
         [TCL_ARCH=.$withval])
if test "X$TCL_ARCH" = "X" ; then
    AC_MSG_RESULT("No architecture suffix will be used")
else
    AC_MSG_RESULT("An architecture suffix of \"$TCL_ARCH\" will be appended to bin and lib directories")
fi
AC_SUBST(TCL_ARCH)

#------------------------------------------------------------------------------
# Check for various programs used during the build.
#------------------------------------------------------------------------------

AC_PROG_CC

# Don't use bison if gcc is not being used, since it generates code that
# requires alloca.
if test "$CC" = "gcc"; then
    AC_PROG_YACC
else
    if test "$YACC" = ""; then
        YACC=yacc
    fi
    AC_SUBST(YACC)
fi

AC_PROG_RANLIB

#------------------------------------------------------------------------------
# Check for C++ compiler.  Autoconf defaults C++ to gcc if its not found, so
# make sure we have gcc.
#------------------------------------------------------------------------------

AC_PROG_CXX
if test "$CXX" = "gcc"; then
   AC_CHECK_PROG(TCLXX, gcc, "YES", "NO")
else
   TCLXX="YES"
fi
AC_SUBST(TCLXX)

#------------------------------------------------------------------------------
# Determine if we have symbolic links on the filesystem we are building
# on.  They are needed the setup the help so the help test will work.
# If we don't have them, we have to copy the files.
#------------------------------------------------------------------------------
AC_PROG_LN_S
if test "$LN_S" = "ln"; then
    HAVE_SYML="NO"
else
    HAVE_SYML="YES"
fi
AC_SUBST(HAVE_SYML)

#------------------------------------------------------------------------------
# Purge the specific set of files that must be rebuild if the prefix is
# changed or the build directory is moved.
#------------------------------------------------------------------------------

rm -f runtcl runwishx tests/runtest tktests/runtest 2>/dev/null
rm -f src/tclCmdIL.o src/tclXinit.o src/tclXlibInit.o  2>/dev/null
rm -f tksrc/tkXinit.o */made*.tmp 2>/dev/null

#------------------------------------------------------------------------------
#       Some make programs require includes to be 
#         .include "file"
#     others...
#         include file
#------------------------------------------------------------------------------

AC_MSG_CHECKING(how make handles includes)
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if make -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

#------------------------------------------------------------------------------
#       Check for system header files.
#------------------------------------------------------------------------------

AC_HEADER_CHECK(values.h, , AC_DEFINE(NO_VALUES_H))
AC_HEADER_CHECK(sys/socket.h, , AC_DEFINE(NO_SYS_SOCKET_H))

#------------------------------------------------------------------------------
#       Check for missing typedefs.
#------------------------------------------------------------------------------

AC_CHECK_TYPE(clock_t, long)
AC_CHECK_TYPE(time_t, long)
AC_CHECK_TYPE(off_t, long)

#------------------------------------------------------------------------------
#       What type do signals return?
#------------------------------------------------------------------------------

AC_RETSIGTYPE

#------------------------------------------------------------------------------
#       Find out all about time handling differences.
#------------------------------------------------------------------------------

AC_TIME_WITH_SYS_TIME
AC_STRUCT_TIMEZONE

AC_MSG_CHECKING([tm_tzadj in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],
        [AC_DEFINE(HAVE_TM_TZADJ)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

AC_MSG_CHECKING([tm_gmtoff in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
        [AC_DEFINE(HAVE_TM_GMTOFF)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

#
# Its important to include time.h in this check, as some systems (like convex)
# have timezone functions, etc.
#
AC_MSG_CHECKING([timezone variable])
AC_TRY_COMPILE([#include <time.h>],
        [extern long timezone;
         timezone += 1;
         exit (0);],
        [AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

#------------------------------------------------------------------------------
#     Test to see if "times" returns a status or the amount of
#     elapsed real time.
#------------------------------------------------------------------------------

echo "checking to see if 'times' returns the elapsed real time"
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/times.h>
main() {
struct tms cpu;
times (&cpu);
sleep (2);
if (times (&cpu) > 0)
     exit (0);
else 
     exit (1);
}
], AC_DEFINE(TIMES_RETS_REAL_TIME), ,AC_DEFINE(TIMES_RETS_REAL_TIME))

#------------------------------------------------------------------------------
# Determine the name of the flags field
#------------------------------------------------------------------------------

AC_MSG_CHECKING([flag field name in stdio FILE struct])
AC_TRY_COMPILE([#include <stdio.h>],
        [FILE *fptr = stdin; fptr->_flags = 0;],
        [AC_DEFINE(HAVE_STDIO_FLAGS)
         AC_MSG_RESULT(_flags)])
AC_TRY_COMPILE([#include <stdio.h>],
        [FILE *fptr = stdin; fptr->__flags = 0;],
        [AC_DEFINE(HAVE_STDIO__FLAGS)
         AC_MSG_RESULT(__flags)])
AC_TRY_COMPILE([#include <stdio.h>],
        [FILE *fptr = stdin; fptr->_flag = 0;],
        [AC_DEFINE(HAVE_STDIO_FLAG)
         AC_MSG_RESULT(_flag)])
AC_TRY_COMPILE([#include <stdio.h>],
        [FILE *fptr = stdin; fptr->__flag = 0;],
        [AC_DEFINE(HAVE_STDIO__FLAG)
         AC_MSG_RESULT(__flag)])

#------------------------------------------------------------------------------
# Figure out how to find out whether a FILE structure contains buffered
# readable data.  Some known names for the count field:
#       _cnt:		Most UNIX systems
#       __cnt:		HPUX
#       _r:		BSD
#       readCount:	Sprite
# Or, in GNU libc there are two fields, _gptr and _egptr, which have to be
# compared.  They are called _IO_read_ptr and _IO_read_end in some versions.
# This code is stolen from the Tk configure script, but is greatly modified.
#------------------------------------------------------------------------------

AC_MSG_CHECKING([count field in FILE structures])
AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->_cnt = 0;],
        [AC_DEFINE(HAVE_STDIO_CNT)
         AC_MSG_RESULT(_cnt)])

AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->__cnt = 0;],
        [AC_DEFINE(HAVE_STDIO__CNT)
         AC_MSG_RESULT(__cnt)])

AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->_r = 0;],
        [AC_DEFINE(HAVE_STDIO_R)
         AC_MSG_RESULT(_r)])

AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->readCount = 0;],
        [AC_DEFINE(HAVE_STDIO_READCOUNT)
         AC_MSG_RESULT(readCount)])

AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->_gptr = f->egptr;],
	[AC_DEFINE(HAVE_STDIO_GPTR)
         AC_MSG_RESULT([_gptr/_egptr])])

AC_TRY_COMPILE([#include <stdio.h>],
	[FILE *f = stdin; f->_IO_read_ptr = f->_IO_read_end;],
	[AC_DEFINE(HAVE_STDIO_IO_READ_PTR)
         AC_MSG_RESULT([_IO_read_ptr/_IO_read_end])])

#------------------------------------------------------------------------------
# Determine various socket related options:
#   o Does struct msghdr contain the msg_accrights fields?
#------------------------------------------------------------------------------

AC_MSG_CHECKING([struct msghdr for msg_accrights])
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/socket.h>],
        [struct msghdr msgHeader;
         msgHeader.msg_accrights = (void*) 0;
         msgHeader.msg_accrightslen = 0;
         exit (0);],
        [AC_DEFINE(HAVE_MSG_ACCRIGHTS)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

#------------------------------------------------------------------------------
#     Determine if "." is used as separator for the manual directory
#     names.  i.e. man/man.1 vs man/man1
#------------------------------------------------------------------------------

AC_MSG_CHECKING(man directory/section separator)
mandirs="/usr/man/man.1 /usr/man/cat.1 /usr/share/man.1 /usr/share/cat.1
         /usr/man/u_man/man.1 /usr/man/cat.C"
gotdotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotdotdir="YES"
    fi
done

mandirs="/usr/man/man1   /usr/man/cat1   /usr/share/man1   /usr/share/man1
         /usr/man/man1.Z /usr/man/cat1.Z /usr/share/man1.Z /usr/share/man1.Z
         /usr/man/u_man/man1 /usr/share/man/man1"
gotnodotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotnodotdir="YES"

    fi
done

if test $gotdotdir = YES -a $gotnodotdir = NO
then
    MAN_DIR_SEPARATOR="."
    AC_MSG_RESULT(man/man.1 style)
elif test $gotdotdir = NO -a $gotnodotdir = YES
then
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT(man/man1 style)
else
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT([WARNING: couldn't determine, assuming man/man1 style])
fi
AC_SUBST(MAN_DIR_SEPARATOR)

#------------------------------------------------------------------------------
# Define srcbasedir and bldbasedir as absolute paths.
#------------------------------------------------------------------------------

srcbasedir=`cd $srcdir;pwd`
AC_SUBST(srcbasedir)
bldbasedir=`pwd`
AC_SUBST(bldbasedir)

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#                      Begin code from Tcl configure.in
#------------------------------------------------------------------------------

#--------------------------------------------------------------------
#	SGI systems don't use the BSD form of the gettimeofday function,
#	but they have a BSDgettimeofday function that can be used instead.
#	Other systems have not gettimeofday at all.  Figure out which
#	of these cases applies.
#--------------------------------------------------------------------

AC_CHECK_FUNC(BSDgettimeofday, AC_DEFINE(HAVE_BSDGETTIMEOFDAY),
	AC_CHECK_FUNC(gettimeofday, , AC_DEFINE(NO_GETTOD)))

#--------------------------------------------------------------------
#	On a few very rare systems, all of the libm.a stuff is
#	already in libc.a.  Set compiler flags accordingly.
#	Also, Linux requires the "ieee" library for math to work
#	right.
#--------------------------------------------------------------------

AC_FUNC_CHECK(sin, MATH_LIBS="", MATH_LIBS="-lm")
AC_SUBST(MATH_LIBS)
AC_CHECK_LIB(ieee, main, [MATH_LIBS="$MATH_LIBS -lieee"])

#--------------------------------------------------------------------
#       Supply substitutes for missing POSIX header files.  Special
#       notes:
#           - Sprite's dirent.h exists but is bogus.
#           - stdlib.h doesn't define strtol, strtoul, or
#             strtod insome versions of SunOS
#           - some versions of string.h don't declare procedures such
#             as strstr
#--------------------------------------------------------------------

AC_HAVE_HEADERS(unistd.h)
AC_MSG_CHECKING(dirent.h)
AC_TRY_LINK([#include <sys/types.h>
#include <dirent.h>], [
#ifndef _POSIX_SOURCE
#   ifdef __Lynx__
	/*
	 * Generate compilation error to make the test fail:  Lynx headers
	 * are only valid if really in the POSIX environment.
	 */

	missing_procedure();
#   endif
#endif
DIR *d;
struct dirent *entryPtr;
char *p;
d = opendir("foobar");
entryPtr = readdir(d);
p = entryPtr->d_name;
closedir(d);
], tcl_ok=yes, tcl_ok=no)
AC_HEADER_EGREP([Sprite version.* NOT POSIX], tcl_ok=no)
if test $tcl_ok = no; then
    AC_DEFINE(NO_DIRENT_H)
fi
AC_MSG_RESULT($tcl_ok)
AC_HEADER_CHECK(errno.h, , AC_DEFINE(NO_ERRNO_H))
AC_HEADER_CHECK(float.h, , AC_DEFINE(NO_FLOAT_H))
AC_HEADER_CHECK(limits.h, , AC_DEFINE(NO_LIMITS_H))
AC_HEADER_CHECK(stdlib.h, tcl_ok=1, tcl_ok=0)
AC_HEADER_EGREP(strtol, stdlib.h, , tcl_ok=0)
AC_HEADER_EGREP(strtoul, stdlib.h, , tcl_ok=0)
AC_HEADER_EGREP(strtod, stdlib.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STDLIB_H)
fi
AC_HEADER_CHECK(string.h, tcl_ok=1, tcl_ok=0)
AC_HEADER_EGREP(strstr, string.h, , tcl_ok=0)
AC_HEADER_EGREP(strerror, string.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STRING_H)
fi
AC_HEADER_CHECK(sys/time.h, , AC_DEFINE(NO_SYS_TIME_H))
AC_HEADER_CHECK(sys/wait.h, , AC_DEFINE(NO_SYS_WAIT_H))

#--------------------------------------------------------------------
#       Check for various typedefs and provide substitutes if
#       they don't exist.
#--------------------------------------------------------------------

AC_MODE_T
AC_PID_T
AC_SIZE_T
AC_UID_T

#--------------------------------------------------------------------
#       If a system doesn't have an opendir function (man, that's old!)
#       then we have to supply a different version of dirent.h which
#       is compatible with the substitute version of opendir that's
#       provided.  This version only works with V7-style directories.
#--------------------------------------------------------------------

AC_FUNC_CHECK(opendir, , AC_DEFINE(USE_DIRENT2_H))

#--------------------------------------------------------------------
#       The check below checks whether <sys/wait.h> defines the type
#       "union wait" correctly.  It's needed because of weirdness in
#       HP-UX where "union wait" is defined in both the BSD and SYS-V
#       environments.  Checking the usability of WIFEXITED seems to do
#       the trick.
#--------------------------------------------------------------------

AC_MSG_CHECKING([union wait])
AC_TRY_LINK([#include <sys/types.h> 
#include <sys/wait.h>], [
union wait x;
WIFEXITED(x);		/* Generates compiler error if WIFEXITED
			 * uses an int. */
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = no; then
    AC_DEFINE(NO_UNION_WAIT)
fi

#------------------------------------------------------------------------------
#                       End code from Tcl configure.in
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#                      Begin code from Tk configure.in
#------------------------------------------------------------------------------
AC_HAVE_HEADERS(limits.h)

#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_path_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.  Under some conditions the
#	autoconf macro will return an include directory that contains
#	no include files, so double-check its result just to be safe.
#--------------------------------------------------------------------

AC_PATH_X
not_really_there=""
if test "$no_x" = ""; then
    if test "$x_includes" = ""; then
	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
    else
	if test ! -r $x_includes/X11/Intrinsic.h; then
	    not_really_there="yes"
	fi
    fi
fi
if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
    echo checking for X11 header files
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/sww/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
	    fi
        done
    fi
else
    if test "$x_includes" != ""; then
	XINCLUDES=-I$x_includes
    else
	XINCLUDES="# no special path needed"
    fi
fi
if test "$XINCLUDES" = nope; then
  echo "Warning:  couldn't find any X11 include files."
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)

if test "$no_x" = yes; then
    XLIBSW=nope
    if test "$XLIBSW" = nope; then
	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		XLIBSW="-L$i -lX11"
	    fi
	done
    fi
else
    if test "$x_libraries" = ""; then
	XLIBSW=-lX11
    else
	XLIBSW="-L$x_libraries -lX11"
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
    XLIBSW=-lX11
fi
AC_SUBST(XLIBSW)

#--------------------------------------------------------------------
#	Check for the existence of various libraries.  The order here
#	is important, so that then end up in the right order in the
#	command line generated by make.  The -lsocket and -lnsl libraries
#	require a couple of special tricks:
#	1. Use "connect" and "accept" to check for -lsocket, and
#	   "gethostbyname" to check for -lnsl.
#	2. Use each function name only once:  can't redo a check because
#	   autoconf caches the results of the last check and won't redo it.
#	3. Use -lnsl and -lsocket only if they supply procedures that
#	   aren't already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	4. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, check for both libraries together
#	   if -lsocket doesn't work by itself.
#--------------------------------------------------------------------

AC_CHECK_LIB(Xbsd, main, [LIBS="$LIBS -lXbsd"])

tk_checkBoth=0
AC_CHECK_FUNC(connect, tk_checkSocket=0, tk_checkSocket=1)
if test "$tk_checkSocket" = 1; then
    AC_CHECK_LIB(socket, main, LIBS="$LIBS -lsocket", tk_checkBoth=1)
fi
if test "$tk_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tk_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))


#------------------------------------------------------------------------------
#                       End code from Tk configure.in
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#------------------------------------------------------------------------------
# Some versions of Sun OS require -ldl to link anything, even the
# small, empty programs generated by configure.  I don't know why, but
# we must check for it up front or other configure tests will fail.
#------------------------------------------------------------------------------

AC_CHECK_LIB(dl, dlopen, [LIBS="$LIBS -ldl"])

#------------------------------------------------------------------------------
#       Check for additional libraries the Tcl/Tk does not check for.
#------------------------------------------------------------------------------

# This is needed for DEC Alphas
AC_CHECK_LIB(dnet_stub, main, [LIBS="$LIBS -ldnet_stub"])

#------------------------------------------------------------------------------
# Older SCO systems don't have truncate, but have chsize in libx.  Newer
# versions have both.  Only check for chsize in libx if we don't have
# truncate.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(truncate, 
        [AC_DEFINE(HAVE_TRUNCATE)],
        [AC_CHECK_LIB(x, chsize,
                [AC_DEFINE(HAVE_CHSIZE)
                 [LIBS="$LIBS -lx"]])])

#------------------------------------------------------------------------------
#       Check for various Unix or library functions that can be used by TclX.
#       These must be after the library checks.
#------------------------------------------------------------------------------

AC_HAVE_FUNCS(getcwd select setitimer setvbuf sigaction setpgid getgroups)
AC_HAVE_FUNCS(bzero bcopy fsync getpriority strcoll tzset gettimeofday)
AC_HAVE_FUNCS(fchown fchmod ftruncate)

#------------------------------------------------------------------------------
# Test for socket related functions.  Note that "socket" is just used to
# determine if we have sockets at all.  We can't use "connect" or
# "gethostbyname" because the Tk test that checks for socket related libraries
# by set a cache value indicating we don't have them, even if we eventually
# find libraries containing these functions.
#------------------------------------------------------------------------------

AC_HAVE_FUNCS(socket inet_aton gethostname sendmsg)

#------------------------------------------------------------------------------
# Check for catgets.  Not the some systems (NetBSD 1.0) have catclose declared
# as type void rather than type int.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(catgets,
        [AC_DEFINE(HAVE_CATGETS)
         AC_MSG_CHECKING([catclose return value])
         AC_TRY_COMPILE([#include <nl_types.h>], [
                if (catclose ((nl_catd) 0) == 0) exit (0);],
                AC_MSG_RESULT(ok), [
                AC_MSG_RESULT([broken catclose return type])
                AC_DEFINE(BAD_CATCLOSE)])])


#------------------------------------------------------------------------------
#       Check for missing functions that we need.  They will be
#       compiled in the osSupport directory. Must check for SCO
#       -lintl, which is were strftime is hidden.  Also done after library
#       checks.
#------------------------------------------------------------------------------

AC_FUNC_STRFTIME
AC_CHECK_FUNC(random, ,[LIBOBJS="$LIBOBJS random.o"]
        AC_DEFINE(NO_RANDOM))
AC_CHECK_FUNC(rename, ,[LIBOBJS="$LIBOBJS rename.o"])

# SGI IRIX 4.0.5 has a broken strftime.
case `uname -sr 2>/dev/null` in
  IRIX\ 4.0.[1-5]*) LIBOBJS="$LIBOBJS strftime.o" ;;
esac

AC_SUBST(LIBOBJS)

#------------------------------------------------------------------------------
# Determine if random is declared in stdlib.h.  If it is, we don't want to
# redeclare it.  Some systems, such as the DEC Alpha, have random declared
# are returning int rather than long, since long is 64 bit.
#------------------------------------------------------------------------------

AC_HEADER_EGREP("random", stdlib.h, AC_DEFINE(STDLIB_DEFS_RANDOM))

#------------------------------------------------------------------------------
#       If Config.mk is not in the build directory, copy it local.
#------------------------------------------------------------------------------

if test ! -r Config.mk
then
    echo "Copying $srcdir/Config.mk to build directory"
    cp $srcdir/Config.mk  Config.mk || exit 1
fi

#------------------------------------------------------------------------------
#       Copy the tests to the build directory if they are not there.
#       We could do something fancier, but this is easy for now.
#------------------------------------------------------------------------------

if test ! -d tests
then
    echo "Copying $srcdir/tests contents to build directory"
    mkdir tests
    # Prevent line to long on some systems.
    CURDIR=`pwd`
    cd $srcdir/tests
    cp *.test *.tcl all $CURDIR/tests || exit 1
    cd $CURDIR
fi

#------------------------------------------------------------------------------
# Generate the make files.
#------------------------------------------------------------------------------

AC_SUBST(prefix)
AC_SUBST(execprefix)

AC_OUTPUT(Makefile osSupport/Makefile src/Makefile tclsrc/Makefile tksrc/Makefile tktclsrc/Makefile tools/Makefile tests/Makefile tktests/Makefile man/Makefile src/tclxlibs.mk tksrc/tkxlibs.mk)

