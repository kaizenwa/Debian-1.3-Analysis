.\" hdf.1,v 1.1 1995/07/25 01:53:19 sxu Exp
.TH HDF 1 "July 1995" "NCSA HDF 4.0"
.SH NAME
hdf \- Hierarchical Data Format library
.SH SYNOPSIS
.ft B
-ldf
.sp 0
{LIBDIR}/libdf.a
.SH DESCRIPTION
HDF is a multi-object file format that facilitates the transfer of various 
types of scientific data between machines and operating systems.  Machines currently 
supported include the Cray, Convex, HP, Vax, Sun, IBM RS/6000, Silicon Graphics,
Macintosh, and IBM PC computers.  HDF allows self-definitions of data content
and easy extensibility for future enhancements or compatibility with other
standard formats. HDF includes Fortran and C calling interfaces,and utilities to 
prepare raw image of data files or for use with other NCSA software.  The HDF 
library contains interfaces for storing and retrieving compressed or 
uncompressed 8-bit and 24-bit raster images with palettes,  
n-Dimensional scientific datasets and binary tables. An interface is
also included that allows arbitray grouping of other HDF objects.

.SS "HDF Raster Images"
HDF supports the storing of both 8-bit and 24-bit raster images.  As well as
storing information about the dimensions and palette of a raster image, HDF
supports raster image compression.  In previous versions of HDF, Run-length
encoding and Imcomp compression were both supported.  With HDF 3.3 JPEG
compression is also available. 

.SS "HDF Scientific Data Sets"
Scientific Data Sets (SDSs) are useful for storing n-Dimensional gridded data.
The actual data in the dataset can be of any of the "standard" number types: 
8, 16 and 32bit signed and unsigned integers and 32 and 64bit floating point 
values.  In addition, a certain amount of meta-data can be stored with an 
SDS including: 
 
  o The coordinate system to use when interpreting or displaying the 
    data.
  o Scales to be used for each dimension.
  o Labels for each dimension and the dataset as a whole.
  o Units for each dimension and the data.
  o The valid max and min values for the data. 
  o Calibration information for the data.
  o Fill or missing value information. 
  o Ability of have more than one file open at a time.
  o A more general framework for meta-data within the SDS 
    data-model(allowing 'name = value' styel meta-data).
  o Support for an "unlimited dimension" in the SDS data-model, making
    it possible to append planes to an array along one dimension.

.SS "HDF Annotations"
Any object in an HDF file can have annotations associated with it.  There are a
number of types of annotations: 

  o Labels are assumed to be short strings giving the "name" of a 
    data object. 
  o Descriptions are longer text segments that are useful for giving 
    more indepth information about a data object 
  o File annotations are assumed to apply to all of the objects in a 
    single file.

.SS "HDF Vset Interfaces"
The Vset module provides
interfaces to two basic HDF building blocks.  Vgroups are generic grouping
elements allowing a user to associate related objects within an HDF file.  As
Vgroups can contain other Vgroups, it is possible to build a hierarchical file.
Vdatas are data structures made up of fields and records.  Data is organized into 'fields' within each 
Vdata.  Each field is identified by a unique 'fieldname'.  The type of each 
field may be any of the basic number types that HDF supports.  Fields of 
different types may exist within the same Vdata.  

By combining Vdatas in Vgroups it is possible to represent higher level data
constructs: mesh data, multi-variate datasets, sparse matrices, finite-element
data, spreadsheets, splines, non-Cartesian coordinate data, etc.

.SS "HDF 3.3 and netCDF"
HDF 3.3 merges in the netCDF library produced by Unidata.  The full
netCDF library is supported as is a new "multi-file" SDS interface.  Both of
these interfaces can read old netCDF files and HDF files transparently.


.SS "EXAMPLES"
All HDF routines require the header "hdf.h" to be included.

To compile a program that makes HDF calls:

   LIBDIR = /usr/local/lib
   INC    = /usr/local/include
   MACHINE = SUN, HP9000, UNICOS, MOTOROLA, MIPSEL, IRIS4, DEC_ALPHA

   (FORTRAN):
.na 
   f77 myprog.f \-D{MACHINE} \-I{INC} \-o myprog {LIBDIR}/libdf.a  

   (C):
.na 
   cc myprog.c \-D{MACHINE} \-I{INC} \-o myprog {LIBDIR}/libdf.a  


.SH DOCUMENTATION

\fIGetting Started with NCSA HDF\fP
.sp 0
\fINCSA HDF 3.2 Calling Interfaces and Utilities\fP
.sp 0
\fINCSA HDF Specifications and Developers Manual\fP


For the vast majority of users, the "Calling Interfaces" document is 
sufficient. Hardcopy versions of the documentation can be purchased 
from NCSA. To obtain a catalog, contact:

NCSA Documentation Orders
.sp 0
152 Computing Applications Building
.sp 0
605 E. Springfield Ave.
.sp 0
Champaign, IL 61820
.sp 0
(217) 244-0072

You may also download the documentation via ftp. On anonymous ftp
there are two forms of the documentation, one ascii, and one in 
Macintosh Microsoft Word format.  The ascii version was created by 
saving the MS Word version as text, so it is quite crude and has no formatting or illustrations.  See the README.FIRST file in the 
directory HDF on NCSA's anonymous ftp server. (ftp.ncsa.uiuc.edu)

.SH VENDOR
NCSA Software Development Group
.sp 0
HDF
.sp 0
152 Computing Applications Bldg.
.sp 0
605 E. Springfield Ave.
.sp 0
Champaign, IL 61820

.SH VERSION
3.3
.SH LICENSE


.SH SOURCE AVAILABILITY
This program is in the public domain, and was developed and made
available by the National Center for Supercomputing Applications, 
University of Illinois, Urbana-Champaign.

.SH CONTACT
NCSA Software Deveopment Group

.SH FILES
.PD 0
.TP 30
.B /usr/local/lib/libdf.a
hdf library
.TP 30
.B /usr/local/bin
Location of most hdf utilities
.TP 30
.B /usr/local/include
Location of include files hdf.h 
.PD

.SH SEE ALSO
.BR hdfls (1),
.BR hdfpack (1),
.BR hdfunpac (1),
.BR hdp (1)
