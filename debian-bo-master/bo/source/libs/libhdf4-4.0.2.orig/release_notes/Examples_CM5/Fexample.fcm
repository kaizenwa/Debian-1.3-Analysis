	program example
	implicit none
	include "/v/u2/ncsa/acheng/CMHDF/include/hdf.inc"
	include "/v/u2/ncsa/acheng/CMHDF/include/dffunc.inc"

	integer xsize, ysize, zsize
	parameter (xsize=256, ysize=256, zsize=256)

	integer	dims(3)/xsize, ysize, zsize/
	integer	begin(3)/0, 0, 0/
	integer	edges(3)/xsize, ysize, zsize/
	integer strides(3)/1, 1, 1/
	integer	cosmo_cube(xsize, ysize, zsize)
	integer	cosmo_cube2(xsize, ysize, zsize)
	integer	rank, nt, nattr
C
C	integer sfsextf, sfsacct
C

C ==============================================================
C  1. Declare the shape and the parallel variables.
C

	real, array(xsize, ysize, zsize):: para_cosmo_cube, para_cosmo_cube2

C /* default hdf and data filename */
C To test this, set up a symbolic link, sda, to point at your directory
C in either /sda1 or /sda2.
C
	character*100 filename/"Cosmo.hdf"/
	character*100 datasetname/"Cosmo.Quarant001"/
	character*100 datafile/"sda/Cosmo.Quarant001.data"/
	character*(100)    sdname
C 
 	integer	fid, sdsid, dimid, offset
 	integer	index
	integer x, y, z, retval
C 
 	print *, "Using these names:"
	print *, "HDF file: ", filename
	print *, "Dataset: ", datasetname
	print *, "Datafile: ", datafile
C 
C 
C 	/* creating a new CM SDS */
C 	/* Define a new data set */
 	fid = sfstart(filename, DFACC_CREATE)
 	sdsid = sfcreate(fid, datasetname, DFNT_FLOAT32, 3, dims)
 	offset = 0
 	if (sfsextf(sdsid, datafile, offset) == FAIL) then
 	    print *, "sfsextf failed"
 	    call errorhandle()
	endif
C 
 	if (sfsacct(sdsid, DFACC_PARALLEL) == FAIL) then
 	    print *, "sfsacct failed"
 	    call errorhandle()
 	endif
 
C 	/* calculate the cosmo cube */
	forall(z=1:zsize) para_cosmo_cube(:, :, z) = z
C 
C 	/* Store the cube */
C 	/* First the attributes */
 	dimid = sfdimid(sdsid, 0)
 	retval = sfsdmname(dimid, "X-axis")
 	retval = sfsdmstr(dimid, "DimLabel", "Unit", "TheFormat")
C 	/* ...				*/
C 
C 	/* Store the data */
 	if (sfwdata(sdsid, begin, strides, edges, para_cosmo_cube)==FAIL)
     *  then
 	    print *, "sfwdata failed"
 	    call errorhandle()
	endif
C 
C 	/* All done.  Close the HDF file. */
 	retval = sfendacc(sdsid)
 	retval = sfend(fid)
C 
C 
C 
C 	/* Read in a CM SDS */
 	fid = sfstart(filename, DFACC_RDWR)
 	index = sfn2index(fid, datasetname)
 	sdsid = sfselect(fid, index)
 	if (sfsacct(sdsid, DFACC_PARALLEL) == FAIL) then
 	    print *, "sfsacct failed"
 	    call errorhandle()
 	endif
C 
C 	/* Read in its attributes */
 	retval = sfginfo(sdsid, sdname, rank, dims, nt, nattr)
C 	/* ...				*/
C 
C 
C 	/* Read in the data */
 	if (sfrdata(sdsid, begin, strides, edges, para_cosmo_cube2)==FAIL)
     *  then
 	    print *, "sfwdata failed"
 	    call errorhandle()
	endif
C 
C 	/* update the cube */
	para_cosmo_cube2 = 2 * para_cosmo_cube2 
C 
C 
C 	/* Replace the old data with new */
 	if (sfwdata(sdsid, begin, strides, edges, para_cosmo_cube2)==FAIL)
     *  then
 	    print *, "sfwdata failed"
 	    call errorhandle()
	endif
C 
C 	/* All done.  Close the HDF file. */
 	retval = sfendacc(sdsid)
 	retval = sfend(fid)
	end


C 
C /* Encounter some error.  Ask user if to continue? */
C
	subroutine errorhandle()

	character*10 ans
	print *, "Go on?(y/n)(y)"
	read *, ans
	if (ans == 'y' .or. ans == '') return
	print *, "Quit"
	stop
	end
