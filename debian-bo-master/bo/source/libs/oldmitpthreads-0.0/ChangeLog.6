Fri Dec  1 21:25:30 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.16 is released.

	* <_G_config.h>: change verion to 5.2.16.

	* elf/libc/jump.params: set version to 5.2.16.

	* Maketargets: (.PHONY): comment out the target.

Thu Nov 30 00:22:55 1995  Andreas Schwab <schwab@issan.informatik.uni-dortmund.de>

        * malloc/malloc.c (__libc_malloc): Check __malloc_hook only
	  after it has been initialized.

Mon Nov 20 23:35:08 1995  wfs@math.utexas.edu

	* pwd/getpwnam.c (__nis_getpwnam): 
	Look up NAME if the RESULT from a regular password lookup has
	an entry starting with '##' in the encrypted section, then
	lookup in passwd.adjunct, and merge that into the data already
	found, returning a parsed password entry.
	[if your nis server uses some other name for the database,
	simply change your servers /var/yp/makefile to emit it under
	passwd.adjunct too!   I dont know of any standard other than
	sun's ..  we could also use some secure file to store this
	name. Otherwise return NULL.

Wed Nov 29 19:42:10 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.15 is released.

	* nys/config/config.h: disable DBM for NYS. need changes to
	  support non-builtin dbm.

	* configure: remove config.in first.

	* <_G_config.h>: change verion to 5.2.15.

	* elf/libc/jump.params: set version to 5.2.15.

	* libio/stdio/reg-printf.c (__printf_function_table): defined
	  as printf_function *.

	* libio/iovprintf.c (__printf_function_table): declared as a
	  pointer to printf_function.
	  (function): declared as printf_function.

	* libio/iofvprintf.c (__printf_arginfo_table):
	  override 0 padding with ' ' if the precision is defined
	  for integer.
	* libio/printf-parse.h (__printf_arginfo_table): make it an
	  external array.
	  (printf_spec): make fmt and next_fmt unsigned char *.
	  (read_int): make unsigned char *. 
	  (parse_one_spec): make format unsigned char *. 
	  don't override padding even if the precision is defined.

	* libio/_itoa.c: updated for libc.

	* libio/iovfscanf.c: always check width !=0.
	  correctly handle %%.
	  (EOF): don't check EOF while matching the format string.
	  ('n'): special case. Don't quit when EOF is seen.

	* libio/iovfprintf.c (args_type): clear the memory allocated
	  by alloca () before use.
	  (outchar): use PUTC instead of putc.
	  (f): changed it to unsigned char *.
	  (__printf_fp):
	  (printf_unknown): declared as function, not pointer.
	  (args_value): set the pa_long_double field to 0 as the
	  last resort.
	  (_litoa): call _litoa () only if the output is long long int.

	* libio/printf-parse.h:
	* libio/stdio/printf-prs.c:
	* libio/iovfscanf.c:
	* libio/iovfprintf.c: updated from the new glibc.

	* libio/_itoa.h:
	* libio/_itoa.c: use _itoa () for int and _litoa ()
	  for long long int.

Sat Nov 18 18:17:19 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.14 is released.

	* <_G_config.h>: change verion to 5.2.14.

	* elf/libc/jump.params: set version to 5.2.14.

	* sysdeps/linux/i386/gmon/Makefile (PROFILE_OPT_CFLAGS): add
	  -ffixed-ecx.

	* gcc/Makefile (INCLUDES): add $(SYSTEM_INC_CFLAGS).

	* libio/ChangeLog.new: update.

	* libio/ChangeLog: cosmetic changes for libg++ 2.7.1.

Sat Nov 18 14:47:30 1995  H.J. Lu (hjl@nynexst.com)

	* libio/printf-parse.h: initialize spec if necessary.

	* libio/iovfprintf.c: comment out unnecessary memset ()
	  calls.

	* <i386/ieeefp.h> (i387_float):
	* <m68k/ieeefp.h> (m68881_float): new. moved from <ieee754.h>.

	* <ieee854.h>: add unsigned int one:1 for ieee_nan.

	* <ieee754.h>: include <arch/ieeefp.h>.

	* sysdeps/ieee854/__isinfl.c:
	* sysdeps/ieee854/__isqnanl.c:
	* sysdeps/ieee854/__issnanl.c:
	* sysdeps/ieee854/__isnanl.c: modified.

	* sysdeps/linux/i386/math/Makefile (SRC1S): removed
	  __isinf.c and __isnan.c.

	* sysdeps/linux/i386/math/__isinf.c:
	* sysdeps/linux/i386/math/__isnan.c: removed.

	* sysdeps/linux/m68k/math/Makefile (SRC1S): removed
	  __isinf.c __isnan.c __isnanl.c.

	* sysdeps/linux/m68k/math/__isinf.c:
	* sysdeps/linux/m68k/math/__isnan.c:
	* sysdeps/linux/m68k/math/__isnanl.c: removed.

	* stdlib/strtod.c: fix the expenont limit with leading
	  zeros.

Fri Nov 17 15:50:41 1995  Claus_Heine@ac2.maus.de (Claus Heine)

	* stdlib/strtod.c: checking leading zeros before normalization.

Thu Nov 16 13:12:46 1995  Andreas Schwab <schwab@issan.informatik.uni-dortmund.de>

	* sysdeps/linux/m68k/math/__infnanl.c: Return NaN if error is
	  not ERANGE or -ERANGE.

	* <m68k/fpu_control.h>: Correct previous change: make _FPU_IEEE
	  non-zero so that __setfpucw does not replace it by
	  _FPU_DEFAULT.

Tue Nov 14 23:30:05 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.13 is released.

	* <_G_config.h>: change verion to 5.2.13.

	* elf/libc/jump.params: set version to 5.2.13.

Tue Nov 14 20:38:15 1995  lan@spri.levels.unisa.edu.au (Alan Modra)

	* libio/NEWS:
	* libio/ChangeLog:
	* libio/filedoalloc.c:
	* libio/fileops.c:
	* libio/genops.c:
	* libio/iofdopen.c:
	* libio/iofclose.c:
	* libio/iofflush.c:
	* libio/iofgetpos.c:
	* libio/iofgets.c:
	* libio/iofopen.c:
	* libio/iofprintf.c:
	* libio/iofputs.c:
	* libio/iofread.c:
	* libio/iofscanf.c:
	* libio/iofsetpos.c:
	* libio/ioftell.c:
	* libio/iofwrite.c:
	* libio/iogetdelim.c:
	* libio/iogetline.c:
	* libio/iogets.c:
	* libio/ioignore.c:
	* libio/iopadn.c:
	* libio/iopopen.c:
	* libio/ioprims.c:
	* libio/ioprintf.c:
	* libio/ioputs.c:
	* libio/ioscanf.c:
	* libio/ioseekoff.c:
	* libio/ioseekpos.c:
	* libio/iosetbuffer.c:
	* libio/iosetvbuf.c:
	* libio/iosprintf.c:
	* libio/iosscanf.c:
	* libio/iostdio.h:
	* libio/ioungetc.c:
	* libio/libio.h:
	* libio/iovsprintf.c:
	* libio/iovsscanf.c:
	* libio/libioP.h:
	* libio/stdfiles.c:
	* libio/strfile.h:
	* libio/strops.c: cosmetic changes for libg++ 2.7.0.90.

Tue Nov 14 19:26:38 1995  H.J. Lu (hjl@nynexst.com)

	* libio/_G_config.h: removed.

	* sysdeps/set-init.c: (__linux_C_lib_version): new.

	* sysdeps/ieee854/__isnanl.c:
	* sysdeps/ieee854/__isinfl.c: An IEEE 854 infinity has a
	  mantissa of 0x8000000000000000 with x87. Others?

	* sysdeps/linux/readv.c:
	* sysdeps/linux/writev.c: re-enable system call. needs 1.3.40
	  or above.

Sun Nov 12 21:52:55 1995  Jim Van Zandt <jrv@vanzandt.mv.com>

	* time/bsdtime.c: modified.

(1) SYMPTOM.  mktime will normalize incorrectly: if the year is a leap
year, or the following year, and the month is March through December,
and the day of the month is zero.  (Actually there are other cases as
well.)  In a leap year, the calculated date will be one day too early
(i.e. the next to last day of the previous month).  In the year after
a leap year, it will be one day too late (i.e. the zero will be
changed to one).

ANALYSIS.  In bsdtime.c:time2(), if the tm_mday element is negative,
it is normalized by incrementing it by the number of days in a
previous year and decrementing the year.  However, the length of the
year is not correctly calculated.  It should be the number of days
between the beginning of the specified month and the beginning of the
same month in the previous year, which depends on whether that span
includes a February 29.  The relevant year for the leap year test is
the previous year if the month is Jan or Feb, and the current year
otherwise.  The former code always tested the previous year.

(2) SYMPTOM.  mktime will normalize incorrectly: if the tm_mday
element is -24, -36, or a higher multiple of -12.  (Probably also if
tm_sec is -120 or a higher multiple of -60, and similarly for other
elements, though I have not confirmed this.)

ANALYSIS.  bsdtime.c:normalize() has a bug which becomes evident for
large negative arguments.  It should reset *unitsptr such that
afterwards

        0 <= *unitsptr && *unitsptr < base

If *unitsptr is negative, there are two stages of correction.  If
-base < *unitsptr then the first stage yields the right answer.  If
*unitsptr < -base, then the second stage usually suffices.  However,
if *unitsptr == -2*base, or any larger multiple of -base, then
*unitsptr is left set to base (so the above condition is not
satisfied).  This is detected, and mktime() returns (time_t)(-1)
without performing any normalization.

Fri Nov 10 16:51:33 1995  H.J. Lu (hjl@nynexst.com)

	* Makeconfig (SYSTEM_INC_CFLAGS):
	* libbsd/Makefile (INC_CFLAGS): modified.

Thu Nov  9 18:52:58 1995  Andreas Schwab <schwab@issan.informatik.uni-dortmund.de>

	* <m68k/fpu_control.h> (_FPU_IEEE): Disable, not enable, all
	  exceptions.
	  (_FPU_RESERVED): Mask out upper 16 bits.

Tue Nov  7 07:39:17 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.12 is released.

	* <_G_config.h>: change verion to 5.2.12.

	* elf/libc/jump.params: set version to 5.2.12.

Tue Nov  7 03:54:58 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>:
	* libio/_G_config.h:
	* libio/iopopen.c:
	* libio/libioP.h:
	* libio/filedoalloc.c:
	* libio/iostdio.h:
	* libio/libio.h: updated from the libg++ snapshot 2.7.0.90.

	* libbsd/Makefile (INC_CFLAGS, SYSTEM_INC_CFLAGS): modified.

	* Makeconfig (SYSTEM_INC_DIR): set to $(TOPDIR)/../include.
	  (SYSTEM_INC_CFLAGS): set to -I$(SYSTEM_INC_DIR).

	* <i386/fpu_control.h> (_FPU_DEFAULT): set to 0x137f for IEEE.

	* sysdeps/linux/readv.c:
	* sysdeps/linux/writev.c: don't use system call.

Thu Nov  2 21:04:09 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.11 is released.

Wed Nov  1 18:55:19 1995  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>

	* libio/iovfprintf.c (vfprintf) [case 'c']: Always decrement
	width by one, not only when right adjusting.

Wed Nov  1 00:56:03 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/i386/math/acoshl.c:
	* sysdeps/linux/i386/math/acosl.c:
	* sysdeps/linux/i386/math/asinl.c:
	* sysdeps/linux/i386/math/atanhl.c:
	* sysdeps/linux/i386/math/cbrtl.c:
	* sysdeps/linux/i386/math/ceill.c:
	* sysdeps/linux/i386/math/erfl.c:
	* sysdeps/linux/i386/math/floorl.c:
	* sysdeps/linux/i386/math/frexpl.c:
	* sysdeps/linux/i386/math/j0l.c:
	* sysdeps/linux/i386/math/j1l.c:
	* sysdeps/linux/i386/math/jnl.c:
	* sysdeps/linux/i386/math/ldexpl.c:
	* sysdeps/linux/i386/math/lgammal.c:
	* sysdeps/linux/i386/math/log10l.c:
	* sysdeps/linux/i386/math/log1pl.c:
	* sysdeps/linux/i386/math/log2l.c:
	* sysdeps/linux/i386/math/logl.c:
	* sysdeps/linux/i386/math/modfl.c:
	* sysdeps/linux/i386/math/powl.c:
	* sysdeps/linux/i386/math/sqrtl.c: don't include mathl.h.

Wed Nov  1 00:07:18 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.2.11.

	* libio/libioP.h (_IO_blen): fix a typo.

	* <sys/syscall.h>: add SYS_readv and SYS_writev.

	* elf/libc/jump.params: set version to 5.2.11.

	* sysdeps/linux/swapon.S: add the second argument.

	* sysdeps/linux/__adjtime.c: kludge for the older kernels.

	* posix/readv.c:
	* posix/writev.c: moved to sysdeps/linux.

	* posix/Makefile (SRC1S): remove readv.c and writev.c.

	* sysdeps/linux/readv.c:
	* sysdeps/linux/writev.c: check system call first.

	* sysdeps/linux/__syscall_readv.S:
	* sysdeps/linux/__syscall_writev.S: new.

	* sysdeps/linux/Makefile (SRC1S): add readv.c and writev.c.
	  (SRC2S): add __syscall_readv.S and __syscall_writev.S.

Mon Oct 23 14:57:19 1995  Swen Thuemmler <swen@uni-paderborn.de>

	* Makefile (install): modified for NYS.

	* nys/yp/src/yp_conf.c: 
	* nys/yp/src/yp_if.c:
	* yp/yplib.c: modified for NYS.

	* sysdeps/linux/__adjtime.c: modified for modes.

Sun Oct 22 11:28:27 1995  Olaf Flebbe <o.flebbe@science-computing.uni-tuebingen.de>

	* sysdeps/linux/i386/math/sinh.c:
	* sysdeps/linux/i386/math/tanh.c:
	* sysdeps/linux/i386/math/sinhl.c:
	* sysdeps/linux/i386/math/tanhl.c: new.
		  Use a more stable algorithm
	* sysdeps/linux/i386/math/__copysignl.c:
	          New function.
	* <math.h> Add necessary changes for inlining copysign{,l}.

	* elf/libm/jump.params: set version to 5.0.4.

	* sysdeps/linux/i386/math/Makefile: modified.

	* sysdeps/linux/i386/math/sinh.S:
	* sysdeps/linux/i386/math/sinhl.S:
	* sysdeps/linux/i386/math/tanh.S:
	* sysdeps/linux/i386/math/tanhl.S:
	* sysdeps/linux/i386/math/mathl.h: removed.

Sun Oct 15 10:33:27 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.10 is released.

	* inet/gethstnmad.c (gethostbyname): break if res_search ()
	  fails.
	  (h_errno): set to NETDB_SUCCESS if not return NULL.

	* inet/res_send.c (res_send): check EINTR from select () and
	  restart.

	* Makefile (install): copy mcheck-init.o as libmcheck.a.

Sat Oct  7 16:33:52 1995  Jim Van Zandt <jrv@vanzandt.mv.com>

	* misc/hsearch.c:
	* misc/hsearch.3: add the self-extending feature. The programs
	  which uses this feature may not run on other systems.

Sat Oct  7 06:44:22 1995  Wes Cowley <wcowley@cftnet.com>

	* <sys/socket.h>: add "struct msghdr;".

Fri Oct  6 00:06:05 1995  Sean McNeil <sean@mcneil.com>

	* sysdeps/pthreads/mit/sig.c: modifications.

Thu Jan 19 02:20:04 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>

	* malloc/mcheck-init.c: Remove GNU ld hacks.
	  (__malloc_initialize_hook): Initialize this hook to
	  turn_on_mcheck.
	* malloc/malloc.c (__malloc_initialize_hook): New hook variable.
	  (initialize): Call the hook if set.
	* malloc/malloc.h (__malloc_initialize_hook): Declare new hook
	  variable.

Mon Oct  2 22:22:00 1995  H.J. Lu (hjl@nynexst.com)

	* <sys/syscall.h>: add SYS_msync.

Thu Sep 14 03:51:56 1995  urlichs@test.smurf.noris.de (Matthias Urlichs)

	* nys/dns/Makefile:
	* nys/nis/Makefile:
	* nys/nsw/Makefile:
	* nys/nsw/tests/Makefile:
	* nys/yp/Makefile:
	* sbin/Makefile:
	* sbin/lib/Makefile:
	* sbin/lib/i386/Makefile:
	* sbin/lib/m68k/Makefile:
	* sysdeps/Makefile:
	* Makefile:
	* Makerules:
	* Maketargets:
	* elf/Makefile:
	* gcc/Makefile:
	* nys/Makefile: Throw out all these subshells; Toss out fixed
	  intermediate file names so that a parallel make is possible.

	* sysdeps/linux/Makefile (SRC3S): add msync.S.

	* sysdeps/linux/msync.S: new.

	* time/strftime.c ('K'): extension for Germany. make
	  the week-of-year calculation based on Thursday

Thu Sep 14 10:20:52 1995  Rolf Rossius <rossius@hrz.tu-chemnitz.de>

	* <rpc/clnt.h>:
	* <rpc/svc.h>: fix typo.

Fri Sep 15 21:24:29 1995  Corey Minyard <minyard@wf-rch.cirr.com>

	* time/strftime.c: 12:00 is PM.

Wed Sep 20 15:27:39 1995  Peter Himmler <himmler@sparcy.mayn.sub.de>

	* sysdeps/pthreads/mit/sig.c: add sigpending ().

Wed Sep 27 21:31:00 1995  H.J. Lu (hjl@nynexst.com)

	* elf/Makefile:
	* sysdeps/pthreads/linux/m68k/Makefile:
	* sysdeps/pthreads/linux/Makefile:
	* sysdeps/pthreads/inet/Makefile:
	* sysdeps/pthreads/mit/linux/i386/Makefile:
	* sysdeps/pthreads/mit/linux/m68k/Makefile:
	* sysdeps/pthreads/mit/Makefile:
	* sysdeps/pthreads/malloc/Makefile:
	* sysdeps/pthreads/libio/Makefile: change libpthread to
	  libpthrteads

	* elf/libpthreed/jump.params: removed.

	* elf/libpthreeds/jump.params: new.

	* libbsd/logwtmp.c: use sizeof (ut.ut_id).

	* <utmp.h> (utmp): changea ut_id to 4.

	* <_G_config.h>: change verion to 5.2.10.

	* elf/libc/jump.params: set version to 5.2.10.

Mon Sep 11 21:10:15 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.9 is released.

	* sysdeps/linux/__llseek.c: don't use inline for x86. There
	  aren't that many registers in x86 to go around.

	* sysdeps/pthreads/linux/i386/Makefile:
	* sysdeps/pthreads/linux/Makefile:
	* sysdeps/pthreads/linux/m68k/Makefile:
	* sysdeps/pthreads/inet/Makefile:
	* sysdeps/pthreads/mit/linux/i386/Makefile:
	* sysdeps/pthreads/mit/linux/m68k/Makefile:
	* sysdeps/pthreads/mit/Makefile:
	* sysdeps/pthreads/malloc/Makefile:
	* sysdeps/pthreads/libio/Makefile: add override STATIC=false.

	* stdlib/strtod.c: check leading zeros.

Sun Sep 10 13:11:32 1995  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>

	* sysdeps/linux/i386/readdir.c (__libc_readdir): Don't set errno
 	before calling old_readdir.

Thu Sep  7 19:06:52 1995  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>

	* <_G_config.h>, libio/_G_config.h (_G_MATH_H_INLINES): always
	define to 0.  It's a property of the library, not the
	architecture (see <g++/builtin.h>).

	* <alloca.h>: Fix logic in built-in check for alloca.

	* <m68k/syscall.h>:
	* sysdeps/linux/m68k/__fcntl.c:
	* sysdeps/linux/m68k/__ioctl.c:
	* sysdeps/linux/m68k/__open.c:
	* sysdeps/linux/m68k/__select.c:
	* sysdeps/linux/m68k/syscall.c: Don't use the register variable in
 	%d0 across function call.

	* <setjmp.h> (sigsetjmp): Protect GCC extensions from -ansi
	-pedantic.

	* Makeconfig (JUMP_CFLAGS): Don't define if ELF.
	(LD): Use the proper emulation name for m68k.
	(CANONICAL_TARGET_NAME): Set to m68k-linux if compiling for m68k.

	* Makefile (DEPEND_DIRS): Don't make depend in elf/d-link.

	* Makerules (.../%.o: %.S): Split into three rules, otherwise make
	thinks all targets are made at once.

	* Maketargets (lib): Don't generate archives from the pic
	objects, they are not used.
	(depend): Depend on $(SRCS) and use $^ to get the dependencies
 	right when using VPATH.

	* cvt/gcvt.c (gcvt): Rewrite subtraction into addition to avoid
	cast to signed.

	* elf/crt/Makefile (tm.h): Use the right machine dependent file.
	* gcc/Makefile (config.h, hconfig.h, tconfig.h, tm.h): Likewise.

	* elf/crt/config/linux.h:
 	* elf/crt/config/m68k/linux.h:
	* elf/crt/config/m68k/m68k.h:
	* gcc/config/m68k/linux.h:
	* gcc/config/m68k/m68k.h:
	* gcc/config/m68k/xm-linux.h:
	* gcc/config/m68k/xm-m68k.h: New files, from gcc.

	* internal/libc-lock.h (__libc_lock_define) [!_POSIX_THREADS]: Fix
	typo that made it a parameter-less macro.

	* nls/linux/English/siglist.m:
	* nls/linux/French/siglist.m:
	* nls/linux/German/siglist.m:
	* sysdeps/linux/_siglist.c: Fix the signal names for SIGURG (23)
	and SIGIO (29).

	* sysdeps/linux/__llseek.c (_llseek): Define inline syscall.

	* sysdeps/linux/m68k/____sig.S: Finish ELF support.

	* sysdeps/linux/m68k/crt/crt0.S:
	* sysdeps/linux/m68k/crt/gcrt0.S:
	* sysdeps/linux/m68k/readdir.c:
	* sysdeps/linux/m68k/__sbrk.c: Updated to match x86 version.

	* sysdeps/linux/m68k/__init_brk.c:
	* sysdeps/linux/m68k/math/fp.h: New files.

	* sysdeps/m68k/setjmp/__longjmp.c (__longjmp): Remove CONST.

	* sysdeps/m68k/setjmp/__setjmp.c (__setjmp): Remove obsolete amiga
	kludge.

	* sysdeps/m68k/setjmp/sigsetjmp.c (sigsetjmp): Ported to m68k,
	in case this function is ever needed.

	* sysdeps/linux/m68k/readdir_r.c: New file.
	* sysdeps/linux/m68k/Makefile (SRC1S): Add readdir_r.c.

	* <pthread/mit/machdep.h> (SEMAPHORE_TEST_AND_SET,
 	machdep_pthread): Add m68k version.

	* <m68k/syscall.h>:
	* sysdeps/linux/m68k/__select.c:
	* sysdeps/linux/m68k/__sigact.c:
	* sysdeps/linux/m68k/libc_exit.c:
	* sysdeps/linux/m68k/sigsuspend.c:
	* sysdeps/linux/m68k/syscall.c:
	* sysdeps/linux/m68k/sysdep.h: Add pthread support.

	* sysdeps/pthreads/linux/Makefile (DIRS):
	* sysdeps/pthreads/mit/linux/Makefile (DIRS): Set it to
	$(TARGET_ARCH).

	* sysdeps/pthreads/linux/m68k/Makefile:
	* sysdeps/pthreads/mit/linux/m68k/Makefile:
	* sysdeps/pthreads/mit/linux/m68k/machdep.c: New files.

	* sysdeps/pthreads/mit/cond.c:
	* sysdeps/pthreads/mit/fd_kern.c:
	* sysdeps/pthreads/mit/mutex.c:
	* sysdeps/pthreads/mit/sig.c:
	* sysdeps/pthreads/mit/signal.c: Fix bugs found by gcc.

Sun Sep 10 22:23:05 1995  H.J. Lu (hjl@nynexst.com)

	* posix/sleep.c: make it weak.

	* <sys/socket.h>
	* <sys/socketcall.h>: add sendmsg and recvmsg.

	* sysdeps/linux/Makefile (SRC1S): add sendmsg.c recvmsg.c.

	* sysdeps/linux/sendmsg.c:
	* sysdeps/linux/recvmsg.c: new.

Sun Sep 10 06:30:07 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* libio/iovfprintf.c: don't use strlen () to check string
	  length if the length is specified.

Sun Sep 10 15:32:55 1995  NIIBE Yutaka <gniibe@mri.co.jp>

	* sysdeps/pthreads/mit/fd.c: undo the change of Tue Sep  5
	  02:10:23 1995 by NIIBE Yutaka <gniibe@mri.co.jp>.

Tue Sep  5 03:57:45 1995  alan@spri.levels.unisa.edu.au (Alan Modra)

	* ./Makeconfig:
	* ./configure: Change TARGET_ARCH_486 to TARGET_ARCH_x86 with
	  values 3,4,5.  Add -malign-xxx=2 to CFLAGS for i586 case to
	  slightly improve speed by reducing code size.

Tue Sep  5 02:10:23 1995  NIIBE Yutaka <gniibe@mri.co.jp>

	* sysdeps/pthreads/mit/fd.c: fcntl should not set __FD_NONBLOCK
	  flag in file descripter table. pthread library assumes all
	  file descripters are set to NONBLOCK and  __FD_NONBLOCK flag
	  in `fd_table[fd]->flags' is not set.

	* sysdeps/pthreads/mit/signal.c: pthread_sig_process assumes
	  that pthread_kernel is locked, but acutually it is called
	  unlocked.

	* sysdeps/pthreads/mit/cond.c:
	* sysdeps/pthreads/mit/schedparam.c: PREVENT/RESUME mismatch.
	  pthread_sched_prevent() and pthread_resched_resume()/
	  pthread_sched_resume () must be matched.

	* sysdeps/pthreads/mit/select.c: check == OK. When timeout, it
	  should not return error. PREVENT/RESUME mismatch again, when
	  machdep_sys_select() returns != OK.

	* sysdeps/pthreads/mit/linux/i386/machdep.c: As Alan Cox
	  introduces sendmsg/recvmsg around Linux 1.3.20.
	  writev/readv emulation. Taken from GNU libc.

Tue Sep  5 21:42:40 1995  H.J. Lu (hjl@nynexst.com)

	* libio/iovfscanf.c: always check width !=0.

	* <_G_config.h>: change verion to 5.2.9.

	* elf/libc/jump.params: set version to 5.2.9.

Sun Sep  3 20:08:50 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* gcc/libgcc2.c: reduces the number of text relocations.

Thu Aug 31 13:18:38 1995  anarchy@thunder.swansea.linux.org.uk (A.Cox)

	* netinet/ip.h:
	* netinet/igmp.h: modefications.

	* netinet/ip_mroute.h: new.

Wed Aug 30 23:53:15 1995  Sean McNeil <sean@mcneil.com>

	* sysdeps/pthreads/mit/sig.c:
	* sysdeps/pthreads/mit/signal.c: modifications.

Wed Aug 30 23:05:35 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.8 is released.

Wed Aug 30 04:12:03 1995  anarchy@thunder.swansea.linux.org.uk (A.Cox)

	* misc/syslog.c (vsyslog): check fmt_cpy.

Fri Aug 25 14:27:20 1995  Charles Lopes  <tjarls@infm.ulst.ac.uk>

	* rpc/Makefile: don't compile publickey.c if NYS is defined.

	* nys/nsw/src/nsw/Makefile:
	* nys/nsw/src/files/Makefile:
	* nys/nsw/src/dbm/Makefile:
	* nys/nsw/src/dns/Makefile:
	* nys/nsw/src/yp/Makefile:
	* nys/nsw/src/nis/Makefile:
	* nys/nsw/src/compat/Makefile: add ???publickey.o to NOBJS.

	* nys/nsw/src/nsw/publickey.c:
	* nys/nsw/src/files/publickey.c:
	* nys/nsw/src/dbm/dmb_publickey.c:
	* nys/nsw/src/dns/dns_publickey.c:
	* nys/nsw/src/yp/yp_publickey.c:
	* nys/nsw/src/nis/nis_publickey.c:
	* nys/nsw/src/compat/compat_publickey.c: new

	* nys/nsw/src/yp/yp_shadow.c: try finding shadow.byname map before
	  felling back to passwd.byname.

Wed Aug 23 21:34:36 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.2.8.

	* elf/libc/jump.params: set version to 5.2.8.

	* <sys/bitypes.h> (__USE_BSD): no checking.

Tue Aug 22 07:41:18 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* libio/iovfscanf.c: check the leading zero only for base == 0.

Wed Aug 23 21:31:44 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/accept.c:
	* sysdeps/linux/bind.c:
	* sysdeps/linux/connect.c:
	* sysdeps/linux/getpeernam.c:
	* sysdeps/linux/getsocknam.c:
	* sysdeps/linux/getsockopt.c:
	* sysdeps/linux/listen.c:
	* sysdeps/linux/recv.c:
	* sysdeps/linux/recvfrom.c:
	* sysdeps/linux/send.c:
	* sysdeps/linux/sendto.c:
	* sysdeps/linux/setsockopt.c:
	* sysdeps/linux/shutdown.c:
	* sysdeps/linux/socket.c:
	* sysdeps/linux/socketpair.c: make them weak. They are used for
	  the static library. For the static pthread library, you
	  have include a full libc.a:

		# cd /tmp
		# mkdir libp
		# cd libp
		# ar -x /usr/lib/libpthread.a
		# for f in *.o; do mv $f xxx$f; done
		# ar -x /usr/lib/libc.a
		# rm /usr/lib/libpthread.a
		# ar ucr /usr/lib/libpthread.a *.o
		# ranlib /usr/lib/libpthread.a

	* sysdeps/pthread/mit/Makefile (SRC1S): add pthread_init.c.

	* sysdeps/pthread/mit/pthread_init.c: new. dummy.

	* sysdeps/pthread/mit/fd_kefd_kern.c (ttyname_r_basic): use
	  __libc_xxxxdir ().

	* inet/rcmd (_validuser): remove comments in /etc/hosts.

	* libio/iotempname.c: reset len.

Mon Aug 14 20:59:49 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.7 is released.

	* <sys/bitypes.h>: remove __USE_BSD check.

	* sysdeps/pthreads/Makefile (DIRS): add inet.

	* sysdeps/pthreads/inet/Makefile:
	* sysdeps/pthreads/inet/gethostby_r.c:
	* sysdeps/pthreads/inet/getnetby_r.c:
	* sysdeps/pthreads/inet/getprotoby_r.c:
	* sysdeps/pthreads/inet/getservby_r.c: new.

	* <pthread/mit/sys/compat.h>: support the new kernel.

	* <sys/uio.h>: support the new kernel.

	* <_G_config.h>: change verion to 5.2.7.

	* elf/libc/jump.params: set version to 5.2.7.

	* <netdb.h>: use Solaris style MT-safe functions.

Wed Aug  9 21:53:04 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.6 is released.

Wed Aug  9 21:47:50 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* (locfile-parse.c): Patches for array memory handling.
	  Reported by Rolf Rossius <rossius@hrz.tu-chemnitz.de>

Wed Aug  9 21:03:24 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.2.6.

	* elf/libc/jump.params: set version to 5.2.6.

	* sysdeps/linux/pthread_stubs.c (__libc_malloc_lock):
	  (__pthread_mutex_malloc):
	  (__pthread_mutex_free): commented out.

	* sysdeps/pthreads/linux/Makefile (SRC1S): remove malloc.c. add
	  closedir.c dirent.c.
	  (BASE_CFLAGS): add -D_LIBPTHREAD.

	* sysdeps/pthreads/linux/dirent.c: new.

	* sysdeps/linux/closedir.c: use __libc_xxx.
	  make xxx as a weak alias of __libc_xxx.
	  check _LIBPTHREAD.

	* sysdeps/linux/opendir.c:
	* sysdeps/linux/rewinddir.c:
	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/telldir.c:
	* sysdeps/linux/i386/readdir.c:
	* sysdeps/linux/i386/readdir_r.c: remove lock.
	  use __libc_xxx.
	  make xxx as a weak alias of __libc_xxx.

	* sysdeps/linux/dirstream.h: declare __libc_xxx.

	* sysdeps/pthreads/linux/malloc.c: removed.

	* sysdeps/pthreads/Makefile (DIRS): add malloc libio.

	* sysdeps/pthreads/libio/Makefile: new.

	* sysdeps/pthreads/libio/stdio.c: new.

	* libio/iofdopen.c:
	* libio/iofopen.c:
	* libio/iopopen.c:
	* libio/iofgetpos.c:
	* libio/iofgets.c:
	* libio/iofputs.c:
	* libio/iofread.c:
	* libio/iofsetpos.c:
	* libio/ioftell.c:
	* libio/iofwrite.c:
	* libio/iogetdelim.c:
	* libio/iogets.c:
	* libio/ioputs.c:
	* libio/iosetbuffer.c:
	* libio/iosetvbuf.c:
	* libio/ioungetc.c:
	* libio/iovfprintf.c: remove lock.

	* libio/stdio/clearerr.c:
	* libio/stdio/fgetc.c:
	* libio/stdio/fputc.c:
	* libio/stdio/fseek.c:
	* libio/stdio/getc.c:
	* libio/stdio/getchar.c:
	* libio/stdio/getw.c:
	* libio/stdio/putc.c:
	* libio/stdio/putchar.c:
	* libio/stdio/putw.c:
	* libio/stdio/rewind.c:
	* libio/stdio/setfileno.c:
	* libio/stdio/freopen.c:
	* libio/stdio/vfscanf.c:
	* libio/iofclose.c:
	* libio/iofflush.c:
	* libio/iofscanf.c:
	* libio/ioscanf.c: check _LIBPTHREAD for locks.
	  make it weak.

	* sysdeps/pthreads/malloc/Makefile: new.

	* sysdeps/pthreads/malloc/malloc.c: new.

Sun Aug  6 20:47:13 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.5 is released.

	* sysdeps/linux/pthreads.c (__pthreaded):
	* internal/libc-lock.h (__libc_lock_define_initialized): move
	  "#pragma weak" after the definition.

	* sysdeps/pthreads/mit/fd.c:
	* sysdeps/pthreads/mit/fd_kern.c:
	* sysdeps/pthreads/mit/process.c:
	* sysdeps/pthreads/mit/select.c:
	* sysdeps/pthreads/mit/sig.c: make aliases for __xxx.

	* libio/iovfprintf.c (outchar): use PUTC instead of putc.

	* libio/fileops.c (_IO_file_init): comment out
	  "set _fileno to -1.".

	* libio/genops.c (_IO_init): set _fileno to -1.

	* sysdeps/pthreads/linux/Makefile (SRC1S): add malloc.c.

	* sysdeps/pthreads/linux/malloc.c: new.

	* malloc-930716/malloc.h:
	* malloc/malloc.h (free, malloc, memalign, realloc): define
	  __libc_xxx as xxx if __ELF__ is not define..

	* malloc-930716/calloc.c:
	* malloc-930716/valloc.c:
	* malloc/calloc.c: 
	* malloc/mcheck.c:
	* malloc/mtrace.c:
	* malloc/valloc.c: use __libc_xxx.

	* malloc-930716/free.c:
	* malloc-930716/malloc.c:
	* malloc-930716/memalign.c:
	* malloc-930716/realloc.c:
	* malloc/free.c:
	* malloc/malloc.c:
	* malloc/memalign.c:
	* malloc/realloc.c: remove lock.
	  make xxx weak.
	  define it as __libc_xxx.
	  use __libc_xxx.

	* sysdeps/pthread/mit/linux/Makefile (SRC2S): add
	  __socketcall.S.

	* sysdeps/pthread/mit/Makefile (DIRS): set to linux.

	* sysdeps/pthread/mit/Makefile:
	* sysdeps/pthread/mit/linux/i386/Makefile:
	* sysdeps/pthread/linux/Makefile:
	* sysdeps/pthread/linux/i386/Makefile: add

		OPT_CFLAGS:= -g
		PIC_OPT_CFLAGS:= -fPIC -g

	* sysdeps/pthread/mit/linux/Makefile: new.

	* sysdeps/pthread/mit/linux/i386/Makefile: new.

	* sysdeps/pthread/mit/linux/i386/machdep.c: new from MIT
	  pthread 1.60 beta2.

	* sysdeps/linux/__pthread_init.c (__libc_libio_lock):
	* sysdeps/linux/pthread_stubs.c (__libc_libio_lock): new.

	* <stdio.h> (getc_unlocked, getchar_unlocked, putc_unlocked,
	  putchar_unlocked): enabled.

	* libio/libioP.h (__libc_libio_lock): new.

	* libio/stdio/stdio.h (getc_unlocked, getchar_unlocked,
	  putc_unlocked, putchar_unlocked): new.

	* inet/ruserpass.c (token):
	* libio/stdio/vscanf.c (vscanf):
	* libio/stdio/vfscanf.c (vfscanf):
	* libio/stdio/setfileno.c (setfileno):
	* libio/stdio/rewind.c (rewind):
	* libio/stdio/putw.c (putw):
	* libio/stdio/putchar.c (putchar):
	* libio/stdio/putc.c (putc):
	* libio/stdio/getw.c (getw):
	* libio/stdio/getchar.c (getchar):
	* libio/stdio/getc.c (getc):
	* libio/stdio/fseek.c (fseek):
	* libio/stdio/freopen.c (freopen):
	* libio/stdio/fputc.c (fputc):
	* libio/stdio/fgetc.c (fgetc):
	* libio/stdio/clearerr.c (clearerr):
	* libio/iovfprintf.c (_IO_vfprintf):
	* libio/ioungetc.c (_IO_puts):
	* libio/ioputs.c (_IO_puts):
	* libio/iosetvbuf.c (_IO_setvbuf):
	* libio/iosetbuffer.c (_IO_setbuffer):
	* libio/ioscanf.c (_IO_scanf):
	* libio/ioputs.c (_IO_puts):
	* libio/iopopen.c (_IO_popen):
	* libio/iogets.c (_IO_gets):
	* libio/iogetdelim.c (_IO_getdelim):
	* libio/iofwrite.c (_IO_fwrite):
	* libio/ioftell.c (_IO_ftell):
	* libio/iofsetpos.c (_IO_fsetpos):
	* libio/iofscanf.c (_IO_fscanf):
	* libio/iofread.c (_IO_fread):
	* libio/iofputs.c (_IO_fputs):
	* libio/iofopen.c (_IO_fopen):
	* libio/iofgets.c (_IO_fgets):
	* libio/iofgetpos.c (_IO_fgetpos):
	* libio/iofflush.c (_IO_fflush):
	* libio/iofdopen.c (_IO_fdopen):
	* libio/iofclose.c (_IO_fclose):
	  lock/unlock __libc_libio_lock.

	* libio/genops.c (_IO_cleanup): lock/unlock __libc_libio_lock.
	  (_cleanup): change the aliase to _IO_cleanup.

	* sysdeps/pthreads/mit/Makefile (SRC1S): add file.c.

	* sysdeps/pthreads/mit/file.c: new from the MIT pthreads
	  1.60 beta 2. add weak aliases.

	* time/bsdtime.c (asctime_r, ctime_r, gmtime_r,
	  localtime_r): new.

	* sysdeps/linux/__pthread_init.c (__libc_localtime_lock,
	  __libc_gmtime_lock):
	* sysdeps/linux/pthread_stubs.c (__libc_localtime_lock,
	  __libc_gmtime_lock): new.

	* Makefile (CLEAN_DIRS, DIRS): remove gdbm and termcap.
	  (install.elf.real): don't touch gdbm, curses/ncurses nor
	  termcap.

	* <_G_config.h>: change verion to 5.2.5.

	* elf/libc/jump.params: set version to 5.2.5.

	* sysdeps/linux/dirstream.h (DIR): add dd_lock for mutex.

	* sysdeps/linux/i386/readdi.c:
	* sysdeps/linux/closedir.c:
	* sysdeps/linux/dirfd.c:
	* sysdeps/linux/opendir.c:
	* sysdeps/linux/rewinddir.c:
	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/telldir.c: lock/unlock dd_lock.

	* sysdeps/linux/i386/Makefile (SRC1S): add readdir_r.c.

	* sysdeps/linux/i386/readdir_r.c: new.

	* <dirent.h>: add readdir_r ().

	* <term.h>: removed.

Wed Jul 26 22:20:40 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.4 is released.

Mon Jul 24 12:06:29 1995  Swen Thuemmler (swen@uni-paderborn.de)

	* sysdeps/linux/i386/__sbrk.c: call __init_brk ().

Mon Jul 24 21:58:09 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/__flock.c: clear errno after flock ().

	* elf/Makefile (BUILD_ELFLIBS): set to libc libm libpthread.
	  (ELFLIBS): set to libc libm.

	* elf/libc/jump.params: set version to 5.2.4.

	* Makefile (DEPEND_DIRS, CLEAN_DIRS, DIRS): remove db, gdbm,
	  termcap, curses-bsd4.4, panel and ncurses.

	* <_G_config.h>: change verion to 5.2.4.

	* <demangle.h>:
	* <panel.h>:
	* <curses.h>:
	* <termcap.h>:
	* <unctrl.h>:
	* <db.h>:
	* <mpool.h>:
	* <dbm.h>:
	* <gdbm.h:
	* <ndbm.h>: removed.

	* db:
	* termcap:
	* termcap-1.2.2:
	* panel:
	* curses-bsd4.4:
	* ncurses:
	* gdbm: removed.

	* <confname.h>: remove the unnecessary ','.

	* libio/libio.h:
	* libio/libioP.h:
	* libio/stdfiles.c:
	* libio/stdio/stdio.c:
	* libio/stdio/stdio.h:
	* <stdio.h>:
	* <libio.h>: add SVR4 Intel x86 ABI Level 1 support.

Thu Jul  6 22:11:31 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.3 is released.

	* elf/Makefile (install):

		link libncurses.so.x.y.z to libcurses.so.5.0.0
		link libncurses.so.x.y.z to libtermcap.so.5.0.0
		link libdb.so.x.y.z to libdb.so.2.0.4
		link libgdbm.so.x.y.z to libdbm.so.2.0.4
		link libgdbm.so.x.y.z to libgdbm.so.2.0.4
		link libdb.so.2.0.4 to libdb.so.2
		link libdbm.so.2.0.4 to libdbm.so.2
		link libgdbm.so.2.0.4 to libgdbm.so.2

	* <_G_config.h>: change verion to 5.2.3.

	* elf/libc/jump.params: set version to 5.2.3.

	* elf/libdb/jump.params: set Version to 1.85.2.

	* elf/libgdbm/jump.params: set Version to 1.7.3.

	* elf/libncurses/jump.params: set Version 1.9.2d.

	* elf/libpanel/jump.params: set Version 1.9.2d.

	* <dirent.h>:
	* <confname.h>:
	* <assert.h>:
	* <ftw.h>:
	* <huge_val.h>:
	* <langinfo.h>:
	* <limits.h>:
	* <locale.h>:
	* <nl_types.h>:
	* <pwd.h>:
	* <setjmp.h>:
	* <termios.h>:
	* <i386/jmp_buf.h>:
	* <i386/syscall.h>:
	* <rpc/clnt.h>:
	* <rpc/svc.h>:
	* <rpc/auth.h>:
	* <sys/stat.h>:
	* <sys/time.h>:
	* <sys/utsname.h>:
	* sysdeps/linux/i386/crt/gcrt0.S:
	* sysdeps/linux/i386/crt/crt0.S:
	* sysdeps/linux/i386/sysdep.h:
	* sysdeps/linux/i386/syscall.S:
	* sysdeps/linux/__adjtime.c:
	* sysdeps/linux/__ntpgttm.c:
	* sysdeps/linux/__wait.c:
	* sysdeps/linux/__wait3.c:
	* sysdeps/linux/__waitpid.c:
	* sysdeps/linux/_fxstat.c:
	* sysdeps/linux/_lxstat.c:
	* sysdeps/linux/_xmknod.c:
	* sysdeps/linux/_xstat.c:
	* sysdeps/linux/_xustat.c:
	* sysdeps/linux/accept.c:
	* sysdeps/linux/bind.c:
	* sysdeps/linux/closedir.c:
	* sysdeps/linux/connect.c:
	* sysdeps/linux/getpeernam.c:
	* sysdeps/linux/getsocknam.c:
	* sysdeps/linux/getsockopt.c:
	* sysdeps/linux/listen.c:
	* sysdeps/linux/opendir.c:
	* sysdeps/linux/recv.c:
	* sysdeps/linux/recvfrom.c:
	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/send.c:
	* sysdeps/linux/sendto.c:
	* sysdeps/linux/setpgrp.c:
	* sysdeps/linux/setsockopt.c:
	* sysdeps/linux/shutdown.c:
	* sysdeps/linux/socket.c:
	* sysdeps/linux/socketpair.c:
	* sysdeps/linux/tell.c:
	* sysdeps/linux/telldir.c: change __SVR4_ABI_L1__ to
	  __SVR4_I386_ABI_L1__.

Tue Jul  4 19:29:58 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.2 is released.

	* curses-bsd4.4/Makefile:
	* termcap/Makefile: don't compile the static library.

	* Makefile (install): link libncurses.a to libcurses.a.
	  link libncurses.a to libtermcap.a.

	* elf/Makefile (BUILD_ELFLIBS, ELFLIBS): add libpanel and
	  libncurses.
	  (install): link libncurses.so to libcurses.so and link
	  libncurses.so to libtermcap.so.

	* Makefile (DEPEND_DIRS, CLEAN_DIRS, DIRS): add panel and
	  ncurses.

	* <termcap.h>: modified.

	* <curses.h>: from ncurses 1.9.2d. modified for Linux.

	* <panel.h>:
	* <unctrl.h>:
	* <term.h>: new, from ncurses 1.9.2d. modified for Linux.

	* ncurses/Makefile: new.

	* ncurses/alloc_entry.c:
	* ncurses/captoinfo.c:
	* ncurses/comp_captab.c:
	* ncurses/comp_error.c:
	* ncurses/comp_hash.c:
	* ncurses/comp_parse.c:
	* ncurses/comp_scan.c:
	* ncurses/names.c:
	* ncurses/read_entry.c:
	* ncurses/hardscroll.c:
	* ncurses/lib_acs.c:
	* ncurses/lib_addch.c:
	* ncurses/lib_addstr.c:
	* ncurses/lib_beep.c:
	* ncurses/lib_bkgd.c:
	* ncurses/lib_box.c:
	* ncurses/lib_clear.c:
	* ncurses/lib_clrbot.c:
	* ncurses/lib_clreol.c:
	* ncurses/lib_color.c:
	* ncurses/lib_delch.c:
	* ncurses/lib_delwin.c:
	* ncurses/lib_doupdate.c:
	* ncurses/lib_endwin.c:
	* ncurses/lib_erase.c:
	* ncurses/lib_getch.c:
	* ncurses/lib_getstr.c:
	* ncurses/lib_initscr.c:
	* ncurses/lib_insch.c:
	* ncurses/lib_insdel.c:
	* ncurses/lib_insstr.c:
	* ncurses/lib_instr.c:
	* ncurses/lib_kernel.c:
	* ncurses/lib_keyname.c:
	* ncurses/lib_longname.c:
	* ncurses/lib_move.c:
	* ncurses/lib_mvcur.c:
	* ncurses/lib_mvwin.c:
	* ncurses/lib_newterm.c:
	* ncurses/lib_newwin.c:
	* ncurses/lib_options.c:
	* ncurses/lib_overlay.c:
	* ncurses/lib_pad.c:
	* ncurses/lib_printw.c:
	* ncurses/lib_raw.c:
	* ncurses/lib_refresh.c:
	* ncurses/lib_scanw.c:
	* ncurses/lib_scroll.c:
	* ncurses/lib_screen.c:
	* ncurses/lib_scrreg.c:
	* ncurses/lib_set_term.c:
	* ncurses/lib_setup.c:
	* ncurses/lib_slk.c:
	* ncurses/lib_termcap.c:
	* ncurses/lib_ti.c:
	* ncurses/lib_touch.c:
	* ncurses/lib_tparm.c:
	* ncurses/lib_tputs.c:
	* ncurses/lib_trace.c:
	* ncurses/lib_tstp.c:
	* ncurses/lib_twait.c:
	* ncurses/lib_unctrl.c:
	* ncurses/lib_vidattr.c:
	* ncurses/lib_window.c:
	* ncurses/parse_entry.c:
	* ncurses/read_termcap.c:
	* ncurses/config.h:
	* ncurses/version.h:
	* ncurses/hashsize.h:
	* ncurses/object.h:
	* ncurses/term.h:
	* ncurses/term_entry.h:
	* ncurses/tic.h:
	* ncurses/unctrl.h:
	* ncurses/curses.h: new. from ncurses 1.9.2d. modified for
	  Linux.

	* panel/Makefile: new.

	* panel/panel.h:
	* panel/panel.c: new, from ncurses 1.9.2d.

	* elf/libncurses/jump.params: new. set Version=5.0.0.

	* elf/libpanel/jump.params: new. set Version=5.0.0.

	* termcap/termcap.h: new.

	* termcap/Makefile: modified.

Tue Jul  4 14:00:58 1995  H.J. Lu (hjl@nynexst.com)

	* elf/libc/jump.params: set version to 5.2.2.

	* elf/libcurses/jump.params: set Version=1.0.3.

	* elf/libdb/jump.params: set Version=2.0.3.

	* elf/libgdbm/jump.params: set Version=2.0.3.

	* elf/libm/jump.params: set Version=5.0.3.

	* elf/libtermcap/jump.params: set Version=2.0.3.

	* <_G_config.h>: change verion to 5.2.2.

	* <sys/types.h>: include <sys/bitypes.h>.

	* <sys/bitypes.h>: typedef int64_t and u_int64_t for gcc >= 2.
	  check __USE_BSD.

Mon Jul  3 05:53:24 1995  adam@yggdrasil.com (Adam J. Richter)

	* <sys/utsname.h>:
	* <sys/stat.h>: add SVR4 ABI support.

Sun Jul  2 18:50:07 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.1 is released.

	* <_G_config.h>: change verion to 5.2.1.

	* elf/libc/jump.params: set version to 5.2.1.

	* elf/libcurses/jump.params: set Version=1.0.2.

	* elf/libdb/jump.params: set Version=2.0.2.

	* elf/libgdbm/jump.params: set Version=2.0.2.

	* elf/libm/jump.params: set Version=5.0.2.

	* elf/libtermcap/jump.params: set Version=2.0.2.

	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/telldir.c: fix typos.

	* nys/Makefile (clients): fix a typo.

Sat Jul  1 17:44:06 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.2.0 is released.

	* libbsd/Makefile (SRC1S): add login.c.

	* sysdeps/linux/__errno_loc.c: fix a typo.

Fri Jun 30 15:00:48 1995  "Mathew G. Monroe" <mmex@shadowland.pc.cc.cmu.edu>

	* libbsd/login.c: new.

	* libbsd/login_tty.c:
	* libbsd/logout.c:
	* libbsd/logwtmp.c:
	* libbsd/pty.c: modified.

Thu Jun 29 20:22:46 1995  adam@yggdrasil.com (Adam J. Richter)

	* <rpc.h>:
	* <wait.h>: new for SVR4 ABI.
	
	* <i386/jmp_buf.h>:
	* <netinet/ip_tcp.h>:
	* <protocols/routed.h>:
	* <protocols/talkd.h>:
	* <protocols/timed.h>:
	* <pthread/mit/cleanup.h>:
	* <pthread/mit/cond.h>:
	* <pthread/mit/fd.h>:
	* <pthread/mit/fd_pipe.h>:
	* <pthread/mit/kthread.h>:
	* <pthread/mit/mutex.h>:
	* <pthread/mit/prio_queue.h>:
	* <pthread/mit/pthread_attr.h>:
	* <pthread/mit/pthread_once.h>:
	* <pthread/mit/queue.h>:
	* <pthread/mit/specific.h>:
	* <pthread/mit/unistd.h>:
	* <rpc/auth.h>:
	* <rpc/auth_des.h>:
	* <rpc/auth_unix.h>:
	* <rpc/clnt.h>:
	* <rpc/svc.h>:
	* <rpc/xdr.h>:
	* <sys/time.h>:
	* <confname.h>:
	* <ftw.h>:
	* <langinfo.h>:
	* <limits.h>:
	* <locale.h>:
	* <mpool.h>:
	* <nl_types.h>:
	* <pwd.h>:
	* <resolv.h>:
	* <search.h>:
	* <setjmp.h>:
	* <termios.h>: add SVR4 ABI support.

Sat Jul  1 14:01:14 1995  H.J. Lu (hjl@nynexst.com)

	* misc/Makefile (SRC1S): add __huge_val.c.

	* misc/__huge_val.c: new.

	* assert/asset.c (__assert): defined for SVR4 ABI.

	* <assert.h>:
	* <huge_val.h>: add SVR4 ABI support.

	* sysdeps/linux/Makefile (SRC1S): remove phony.c.

	* sysdeps/linux/__prev_fstat.S:
	* sysdeps/linux/__prev_lstat.S:
	* sysdeps/linux/__prev_stat.S:
	* sysdeps/linux/__prev_mknod.S:
	* sysdeps/linux/__prev_ustat.S: make a weak alias for xxxx.

	* sysdeps/linux/sysdep.h (SYSCALL_WEAK_ALIAS): new.

	* sysdeps/linux/phony.c: removed.

Wed Jun 28 23:08:54 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/Makefile (SRC2S): add __prev_fstat.S
	  __prev_lstat.S __prev_stat.S __prev_mknod.S __prev_ustat.S
	  __socketcall.S.

	* sysdeps/linux/__prev_fstat.S:
	* sysdeps/linux/__prev_lstat.S:
	* sysdeps/linux/__prev_stat.S:
	* sysdeps/linux/__prev_mknod.S:
	* sysdeps/linux/__prev_ustat.S:
	* sysdeps/linux/__socketcall.S: new.

	* sysdeps/linux/__adjtime.c:
	* sysdeps/linux/__ntpgttm.c:
	* sysdeps/linux/__wait.c:
	* sysdeps/linux/__wait3.c:
	* sysdeps/linux/__waitpid.c:
	* sysdeps/linux/_fxstat.c:
	* sysdeps/linux/_lxstat.c:
	* sysdeps/linux/_xmknod.c:
	* sysdeps/linux/_xstat.c:
	* sysdeps/linux/_xustat.c:
	* sysdeps/linux/accept.c:
	* sysdeps/linux/bind.c:
	* sysdeps/linux/closedir.c:
	* sysdeps/linux/connect.c:
	* sysdeps/linux/getpeername.c:
	* sysdeps/linux/getsockname.c:
	* sysdeps/linux/getsockopt.c:
	* sysdeps/linux/listen.c:
	* sysdeps/linux/listen.c:
	* sysdeps/linux/opendir.c:
	* sysdeps/linux/recv.c:
	* sysdeps/linux/recvfrom.c:
	* sysdeps/linux/rewinddir.c:
	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/send.c:
	* sysdeps/linux/sendto.c:
	* sysdeps/linux/setpgrp.c:
	* sysdeps/linux/setsockopt.c:
	* sysdeps/linux/shutdown.c:
	* sysdeps/linux/socket.c:
	* sysdeps/linux/socketpair.c:
	* sysdeps/linux/tell.c:
	* sysdeps/linux/telldir.c: don't use static inline syscall
	  function if __SVR4_ABI_L1__ is define.

	* <i386/syscall.h>: don't define anything if __SVR4_ABI_L1__
	  is define.

	* <dlfcn.h> (dlsym): add __const to char *.

	* time/strftime.c ('y'): use tp->tm_year % 100.

Mon Jun 26 21:30:39 1995  H.J. Lu (hjl@nynexst.com)

	* elf/libcurses/jump.params: set Version=1.0.1.

	* elf/libdb/jump.params: set Version=2.0.1.

	* elf/libgdbm/jump.params: set Version=2.0.1.

	* elf/libm/jump.params: set Version=5.0.1.

	* elf/libtermcap/jump.params: set Version=2.0.1.

Mon Jun 26 04:28:44 1995  Andreas Schwab <schwab@issan.informatik.uni-dortmund.de>

	* sysdeps/linux/glob.c: The function glob() writes beyond array
	bounds when passed a pattern that contains a trailing slash
	and either a leading directory part or no metacharacters. When
	adding back the slash after expansion it is assumed that
	glob_in_dir allocated enough memory for it. This is not true
	when the pattern contains no metacharacters. Moreover
	prefix_array may be called to add back the directory prefix,
	but this function doesn't allocate enough space either.

Mon Jun 26 04:08:05 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/sysdep.h:
	* sysdeps/linux/syscall.S: no need to save %ebx for pthread.
	  add support for __SVR4_ABI_L1__.
	  optimize for PIC. don't save %ebx until set errno.

	* sysdeps/linux/i386/crt/crt0.S:
	* sysdeps/linux/i386/crt/gcrt0.S: check __SVR4_ABI_L1__.

Sun Jun 25 03:07:12 1995  H.J. Lu (hjl@nynexst.com)

	* Makeconfig (SYSTEM_INC_CFLAGS): new. undefined. You can use
	  it to include the system header files from somewhere else.
	  (XCFLAGS): add -DINTERNAL_LINUX_C_LIB.

	* elf/libc/jump.params: set version to 5.2.0.

	* <_G_config.h>: change verion to 5.2.0.

	* sysdeps/linux/dirstream.h (DIR): rearrange the order of
	  the fields to match <dirent.h> when DIRENT_ILLEGAL_ACCESS
	  is defined.

	* <dirent.h> (DIR): mofidied as

		int dd_fd;
		off_t dd_loc;
		size_t dd_size;
		struct dirent *dd_buf;

	  if defined(DIRENT_ILLEGAL_ACCESS) ||
	  (defined(__SVR4_ABI_L1__) && !defined(INTERNAL_LINUX_C_LIB))
		    
Sun Jun 25 00:17:02 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.1.4 is released.

	* <dirent.h> (d_namlen): removed.

	* elf/libc/jump.params: set version to 5.1.4.

	* <_G_config.h>: update from libg++ 2.7.0.
	  change verion to 5.1.4.

Sat Jun 24 11:24:49 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.1.3 is released.

Tue Jun 20 01:41:19 1995  alan@spri.levels.unisa.edu.au (Alan Modra)

	* ./sysdeps/i386/strrchr.c: One of my early tries had a
	  problem in strrchr() that caused bash to not expand '*'
	  properly. 

Sat Jun 24 01:14:49 1995  H.J. Lu (hjl@nynexst.com)

	* <fcntl.h>:
	* <string.h>:
	* <setjmp.h>: removed __OPTIMIZE__ macros.

Sat Jun 24 00:30:15 1995  H.J. Lu (hjl@nynexst.com)

	* inet/getsrvbypt.c (getservbyport): don't call htons ().

	* misc/program.c: updated from glibc and modified for Linux.

	* <assert.h>: updated from assert/assert.h.

	* Makefile (DEPEND_DIRS, CLEAN_DIRS, DIRS): add assert.

	* assert/Makefile: new.

	* assert/assert.c: modified for Linux.

	* assert/assert.h: moved to <assert.h>.

	* sysdeps/pthreads/mit/fd_kern.c: don't use d_namlen in
	  struct dirent.

	* sysdeps/linux/Makefile (SRC1S): add glob.c, ttyname_r.c,
	  ttyname.c, getcwd.c and ftw.c. 

	* sysdeps/linux/glob.c: moved from posix/glob.c.

	* sysdpes/linux/ttyname_r.c:
	* sysdpes/linux/ttyname.c:
	* sysdeps/linux/getcwd.c:
	* sysdeps/linux/ftw.c: new. modified for linux.

	* posix/Makefile (SRC1S): remove glob.c ttyname_r.c, ttyname.c
	  and getcwd.c.

	* io/Makefile (SRC1S): remove ftw.c.

	* posix/glob.c:
	* posix/ttyname_r.c:
	* posix/ttyname.c:
	* posix/getcwd.c:
	* io/ftw.c: moved to sysdeps/linux.

	* sysdeps/linux/dirstream.h (DIR): add dd_getdents.

	* sysdeps/linux/i386/readdir.c: restore the old one and use
	  getdents () if possible.

	* sysdeps/linux/opendir.c: set dd_getdents to unknown.

	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/telldir.c: use getdents () if possible.

	* sysdeps/linux/rewindir.c: reset dd_nextloc and dd_size.

	* sysdeps/pthreads/linux/config.h: new from the MIT pthreads
	  package 1.60 beta2.

	* sysdeps/linux/msgctl.c:
	* sysdeps/linux/msgctl.c:
	* sysdeps/linux/msgget.c:
	* sysdeps/linux/msgget.c:
	* sysdeps/linux/msgrcv.c:
	* sysdeps/linux/msgrcv.c:
	* sysdeps/linux/msgsnd.c:
	* sysdeps/linux/msgsnd.c:
	* sysdeps/linux/shmat.c:
	* sysdeps/linux/shmctl.c:
	* sysdeps/linux/shmdt.c:
	* sysdeps/linux/shmget.c: add

		#undef asmlinkage
		#define asmlinkage

	* sysdeps/linux/Makefile (SRC1S): add __getdirentries.c and
	  phony.c.

	* sysdeps/linux/__getdirentries.c: new from glibc.

	* sysdeps/linux/phony.c: new, define phony lstat, fstat,
	  stat and mknod.

Tue Jun 20 01:41:19 1995  alan@spri.levels.unisa.edu.au (Alan Modra)

	* sysdeps/i386/__stpncpy.c:
	* sysdeps/i386/asm-ops.h:
	* sysdeps/i386/memchr.c:
	* sysdeps/i386/stpcpy.c:
	* sysdeps/i386/strcat.c:
	* sysdeps/i386/strchr.c:
	* sysdeps/i386/strcspn.c:
	* sysdeps/i386/strlen.c:
	* sysdeps/i386/strpbrk.c:
	* sysdeps/i386/strrchr.c:
	* sysdeps/i386/strspn.c:
	* sysdeps/i386/strstr.c:

1) strspn(), strcspn() and strpbrk() used to store a table at a
   negative offset to the stack pointer.  interrupt --> trashed table

2) stpncpy() wrote too many bytes in some cases.

3) reorganised loops to minimise jumps.  In most cases this meant that
   the nops inside of "#ifdef I_DONT_KNOW_WHAT_THIS_MEANS" could be
   removed.  In strrchr(), you still need some nops, but I've let the
   assembler calculate the number of nops.  (Note: at the moment, gas
   gets the number wrong - it is a gas bug due to evaluating `.'
   wrongly - leave the expression as it is, I'll fix gas.)

4) reduced the number of registers used in a few places, and made a
   new fix for strcat() to stop gcc-2.7.0 putting dest into a reg

5) chose smaller/faster instructions where possible

6) reordered instructions where possible to increase execution on a
   pentium (where such reordering makes no difference on 486,386)

7) fixed typos in comments

Thu Jun 22 20:30:31 1995  H.J. Lu (hjl@nynexst.com)

	* inet/getsrvbypt.c (getservbyport): use htons instead of
	  htonl for port.

	* sysdeps/pthread/Makefile (SRC1S): add mutex_malloc.c.

	* <pthread/mit/mutex.h> (__pthread_mutex_malloc,
	  __pthread_mutex_free): new prototypes.

	* sysdeps/pthread/mit/mutex_malloc.c:
	* sysdeps/linux/pthread_stubs.c:
	  (__pthread_mutex_malloc): new. return a malloced mutex.
	  (__pthread_mutex_free): free a malloced mutex.

Fri Jun  9 18:01:04 1995  Jonathan Kamens <jik@cam.ov.com> 

	* regex/rx.c: check malloc () returns.

Mon Jun 12 21:39:02 1995  H.J. Lu (hjl@nynexst.com)

	* <endian.h> (LITTLE_ENDIAN, BIG_ENDIAN, PDP_ENDIAN): define
	  if not defined and __KERNEL__ is not defined.

	* <bytesex.h>: don't inlude <linux/version.h>. need a fixed
	  kernel >= 1.2.7.

Thu Jun  8 09:44:04 1995  Swen Thuemmler (swen@uni-paderborn.de)

	* inet/Makefile: add

		ifeq ($(NYS),true)
		YPFLAGS=-DYP
		endif

Mon Jun 12 20:38:13 1995  H.J. Lu (hjl@nynexst.com)

	* <values.h> (BITS): fix a typo.

	* sysdeps/linux/Makefile (SRC1S): add morecore.c.

	* sysdeps/linux/morecore.c: restored from
	  sysdeps/linux/i386/morecore.c. call  __init_brk ().

	* sysdeps/linux/i386/Makefile (SRC1S):
	* sysdeps/linux/m68k/Makefile (SRC1S): remove morecore.c and
	  add __init_brk.c.

	* sysdeps/linux/i386/morecore.c:
	* sysdeps/linux/m68k/morecore.c: removed.

	* sysdeps/linux/i386/__brk.c (__brk_addr): call __init_brk ()
	  first.

	* sysdeps/linux/i386/__init_brk.c: new, initialize
	  ___brk_addr if it is zero.

	* sysdeps/linux/m68k/__init_brk.c: new.
	* sysdeps/linux/m68k/__brk.c (__brk_addr): call __init_brk ()
	  first. are they ok?

	* <sys/dirent.h> (getdents): new prototype.

	* <sys/file.h>: check before define L_XXX and LOCK_XX.

	* <sys/syscall.h> (SYS_syscall_flock): new as 143.
	  (SYS_getdents): 141.
	  (SYS__newselect): 142.

	* sysdeps/linux/__getdents.S: new.

	* sysdeps/linux/__flock.c: call __syscall_flock () first.

	* sysdeps/pthreads/linux/Makefile (SRC2S):
	* sysdeps/linux/Makefile (SRC2S): add __syscall_flock.S and
	  __getdents.S.

Sun Jun 11 05:00:09 1995  andy@keo.kvaerner.no (Andrew Walker)

	* <sys/syscall.h> (SYS_flock): new as 143.

	* sysdeps/linux/__syscall_flock.S: new.

Wed Jun  7 12:42:47 1995  Jonathan Kamens (jik@cam.ov.com)

	* io/lockf.c (lockf): set F_WRLCK for lock test.
	  lockf is always relative to the current file position.

Sun Jun 11 17:57:01 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.1.3.

	* elf/libc/jump.params: set version to 5.1.3.

	* sysdeps/linux/i386/crt/crt0.S:
	* sysdeps/linux/i386/crt/gcrt0.S: remove call to brk (0);

Sat Jun 10 20:17:14 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.1.2 is released.

	* sysdeps/linux/i386/crt/crt0.S:
	* sysdeps/linux/i386/crt/gcrt0.S: restore call to brk (0);

	* Maketargets (depend): don't depend on .depend.

Thu Jun  8 20:10:35 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* nys/Makefile:
	* nys/yp/clients/Makefile:
	* nys/nis/clients/Makefile:
	* nys/nsw/include/netdb.h: modified to build NYS clients.

Fri Jun  9 22:58:31 1995  H.J. Lu (hjl@nynexst.com)

	* <pthread.h>: new, include <pthread/mit/pthread.h> if
	  _MIT_POSIX_THREADS is defined.

	* <pthread/mit/pthrea.h>: moved from <pthrea.h>.

	* <pthread/mit/sys/compat.h>:
	* <pthread/mit/sys/timers.h>:
	* <pthread/mit/sys/types.h>: moved from <pthread/sys>.

	* <pthread/sys/compat.h>:
	* <pthread/sys/timers.h>:
	* <pthread/sys/types.h>: moved to <pthread/mit/sys>.

	* <pthread/mit/cleanup.h>:
	* <pthread/mit/cond.h>:
	* <pthread/mit/debug_out.h>:
	* <pthread/mit/fd.h>:
	* <pthread/mit/fd_pipe.h>:
	* <pthread/mit/kernel.h>:
	* <pthread/mit/kthread.h>:
	* <pthread/mit/machdep.h>:
	* <pthread/mit/mutex.h>:
	* <pthread/mit/posix.h>:
	* <pthread/mit/prio_queue.h>:
	* <pthread/mit/pthread_attr.h>:
	* <pthread/mit/pthread_once.h>:
	* <pthread/mit/queue.h>:
	* <pthread/mit/sleep.h>:
	* <pthread/mit/specific.h>:
	* <pthread/mit/types.h>:
	* <pthread/mit/unistd.h>:
	* <pthread/mit/util.h>:
	* <pthread/mit/version.h>:
	* <pthread/mit/xtypes.h>: moved from <pthread>.

	* <pthread/cleanup.h>:
	* <pthread/cond.h>:
	* <pthread/debug_out.h>:
	* <pthread/fd.h>:
	* <pthread/fd_pipe.h>:
	* <pthread/kernel.h>:
	* <pthread/kthread.h>:
	* <pthread/machdep.h>:
	* <pthread/mutex.h>:
	* <pthread/posix.h>:
	* <pthread/prio_queue.h>:
	* <pthread/pthread_attr.h>:
	* <pthread/pthread_once.h>:
	* <pthread/queue.h>:
	* <pthread/sleep.h>:
	* <pthread/specific.h>:
	* <pthread/types.h>:
	* <pthread/unistd.h>:
	* <pthread/util.h>:
	* <pthread/version.h>:
	* <pthread/xtypes.h>: moved to <pthread/mit>.

	* sysdeps/pthreads/mit/Makefile:
	* sysdeps/pthreads/mit/__pthread_init.c:
	* sysdeps/pthreads/mit/_exit.c:
	* sysdeps/pthreads/mit/cleanup.c:
	* sysdeps/pthreads/mit/cond.c:
	* sysdeps/pthreads/mit/dump_state.c:
	* sysdeps/pthreads/mit/errno.c:
	* sysdeps/pthreads/mit/fd.c:
	* sysdeps/pthreads/mit/fd_kern.c:
	* sysdeps/pthreads/mit/fd_pipe.c:
	* sysdeps/pthreads/mit/globals.c:
	* sysdeps/pthreads/mit/info.c:
	* sysdeps/pthreads/mit/mutex.c:
	* sysdeps/pthreads/mit/mutexattr.c:
	* sysdeps/pthreads/mit/prio_queue.c:
	* sysdeps/pthreads/mit/process.c:
	* sysdeps/pthreads/mit/pthread.c:
	* sysdeps/pthreads/mit/pthread_attr.c:
	* sysdeps/pthreads/mit/pthread_detach.c:
	* sysdeps/pthreads/mit/pthread_join.c:
	* sysdeps/pthreads/mit/pthread_kill.c:
	* sysdeps/pthreads/mit/pthread_once.c:
	* sysdeps/pthreads/mit/queue.c:
	* sysdeps/pthreads/mit/schedparam.c:
	* sysdeps/pthreads/mit/select.c:
	* sysdeps/pthreads/mit/sig.c:
	* sysdeps/pthreads/mit/signal.c:
	* sysdeps/pthreads/mit/sleep.c:
	* sysdeps/pthreads/mit/specific.c:
	* sysdeps/pthreads/mit/wait.c: copied from sysdeps/pthreads.

	* sysdeps/pthreads/Makefile: modified.

	* sysdeps/pthreads/__pthread_init.c:
	* sysdeps/pthreads/_exit.c:
	* sysdeps/pthreads/cleanup.c:
	* sysdeps/pthreads/cond.c:
	* sysdeps/pthreads/dump_state.c:
	* sysdeps/pthreads/errno.c:
	* sysdeps/pthreads/fd.c:
	* sysdeps/pthreads/fd_kern.c:
	* sysdeps/pthreads/fd_pipe.c:
	* sysdeps/pthreads/globals.c:
	* sysdeps/pthreads/info.c:
	* sysdeps/pthreads/mutex.c:
	* sysdeps/pthreads/mutexattr.c:
	* sysdeps/pthreads/prio_queue.c:
	* sysdeps/pthreads/process.c:
	* sysdeps/pthreads/pthread.c:
	* sysdeps/pthreads/pthread_attr.c:
	* sysdeps/pthreads/pthread_detach.c:
	* sysdeps/pthreads/pthread_join.c:
	* sysdeps/pthreads/pthread_kill.c:
	* sysdeps/pthreads/pthread_once.c:
	* sysdeps/pthreads/queue.c:
	* sysdeps/pthreads/schedparam.c:
	* sysdeps/pthreads/select.c:
	* sysdeps/pthreads/sig.c:
	* sysdeps/pthreads/signal.c:
	* sysdeps/pthreads/sleep.c:
	* sysdeps/pthreads/specific.c:
	* sysdeps/pthreads/wait.c: moved to sysdeps/pthreads/mit.

	* sysdeps/Makefile (lib realclean clean depend): stop at the
	  first error.

	* <sys/procfs.h>: fixed for gdb.

	* sysdeps/pthread/linux/Makefile (SRC1S): set to _fxstat.c.

	* sysdeps/pthread/linux/i386/Makefile (SRC1S): remove
	  readdir.c.

	* sysdeps/linux/Makefile (SRC1S): add closedir.c dirfd.c
	  opendir.c rewinddir.c seekdir.c telldir.c.

	* sysdeps/linux/dirstream.h: internal one. A new DIR is defined
	  here.

	* sysdeps/linux/dirfd.c (dirfd): new.

	* sysdeps/linux/closedir.c:
	* sysdeps/linux/opendir.c:
	* sysdeps/linux/rewinddir.c:
	* sysdeps/linux/seekdir.c:
	* sysdeps/linux/telldir.c:
	* sysdeps/linux/i386/readdir.c: include "dirstream.h" and
	  use the DIR.

	* dirent/Makefile (SRCS): set to alphasort.c scandir.c.

	* dirent/closedir.c:
	* dirent/opendir.c:
	* dirent/rewinddir.c:
	* dirent/seekdir.c:
	* dirent/telldir.c: moved to sysdeps/linux.

	* <dirent.h> (DIR): just "typedef struct DIR DIR;".
	  (dirfd): new.

	* sysdeps/linux/i386/readdir.c: undo the change of Wed May
	  31 23:24:02 1995 by H.J. Lu (hjl@nynexst.com).

	* <pthread.h> (_POSIX_THREADS, _MIT_POSIX_THREADS): define
	  if not defined.

	* <sys/stat.h> (__machdep_sys_fstat, machdep_sys_fstat):
	  defined if _MIT_POSIX_THREADS is defined.

	* sysdeps/pthreads/fd_kern.c (__linux__): include <termios.h>,
	  <pthread/sys/compat.h>, <sys/stat.h> and <termios.h>.
	  (isatty_basic, ttyname_r_basic): new for __linux__

	* <unistd.h> (ttyname_r): new declaration for

		#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) || defined(_REENTRANT)

	* posix/Makefile (SRC1S): add ttyname_r.c.

	* posix/ttyname_r.c: new.

Tue Jun  6 03:37:35 1995  Swen Thuemmler  <swen@gingganz>

	* nys/nsw/src/compat/compat_group.c:
	* nys/nsw/src/compat/compat_misc.c:
	* nys/yp/src/yp.h:
	* nys/yp/src/yp_clnt.c:
	* nys/yp/src/yp_xdr.c: changes to the NYS code to run ypbind
	  (for old binaries and old libraries).

Tue Jun  6 17:24:30 1995   Mike Kennedy (kmb1@gate.net)

	* nys/nsw/src/compat/compat_misc.c:
	* yp/yplib.c (__yp_check): return 0 if the defalt
	  domainname is "(none)".

Tue Jun  6 01:20:36 1995   alan@spri.levels.unisa.edu.au (Alan Modra)

	* <sys/syslog.h>: syslog() doesn't have the same *number* of
	  parameters following the printf type format specifier as
	  printf() - it generates the first string internally.

	* <bsd/bsd.h>: define BSD_SOURCE the same way as in other .h
	  files.

Tue Jun  6 22:36:38 1995  H.J. Lu (hjl@nynexst.com)

	* <values.h> (__BITSPERBYTE): rename from BITSPERBYTE.
	  (__BITS): renamed from BITS.
	  (BITS): defined as __BITS if not defined.
	  (BITSPERBYTE): defined as __BITSPERBYTE if not defined.

	* malloc/free.c (free):
	* malloc/malloc.c (malloc):
	* malloc/memalign.c (memalign):
	* malloc/realloc.c (realloc):
	* malloc-930716/free.c (free):
	* malloc-930716/malloc.c (malloc):
	* malloc-930716/memalign.c (memalign):
	* malloc-930716/realloc.c (realloc): include <libc-lock.h>
	  and use __libc_lock_xxxx macros for lock.

	* sysdeps/linux/pthread_stubs.c:
	* sysdeps/pthread/__pthread_init.c: include <libc-lock.h>
	  and define the malloc lock with

		__libc_lock_define_initialized(, __libc_malloc_lock);

	* Makeconfig (INTERNAL_INC_CFLAGS): new. defined as

	  	-I$(TOPDIR)/internal

	* internal/libc-lock.h: new file for object lock.

	* internal: new dir for libc internal header files.

	* sysdeps/linux/__unlink.S: restore libc 5.0.9.

	* sysdeps/pthreads/fd_kern.c (creat): #undef creat.
	  (create): if __ELF__is defined, make it as weak aliase
	  of creat.

	* sysdeps/pthreads/signal.c (__pthread_init_hack_2): don't
	  define it if __ELF__ is defined.

	* elf/Makefile (BUILD_ELFLIBS): new. ELFLIBS + libpthread.
	  (lib): use BUILD_ELFLIBS instead of ELFLIBS.

	* elf/libpthread/jump.params: new, set version to 1.60.beta2.

	* sysdeps/linux/sysdep.h: define __libc_xxx as the real
	  entry and make xxx/__xxx as aliases or weak aliases
	  as appropriate.

Mon Jun  5 15:03:47 1995  Per Bothner  <bothner@kalessin.cygnus.com>

	* libio/iolibio.h (_IO_rewind):  Add missing flags when calling
	  _IO_seekoff.

Mon Jun  5 19:30:57 1995  H.J. Lu (hjl@nynexst.com)

	* libio/fileops.c (_IO_file_seekoff): undo the change of
	  Sun Jun  4 00:25:41 1995 by H.J. Lu (hjl@nynexst.com).
 
	* sysdeps/linux/i386/sigsuspend.c:
	* <signal.h> (sigprocmask):
	  (sigsuspend): add __const.

	* sysdeps/linux/recvfrom.c: 
	* sysdeps/linux/recv.c: 
	* sysdeps/linux/send.c: 
	* sysdeps/linux/sendto.c: change len to size_t.

	* sysdeps/linux/recvfrom.c: renamed from revcfrom.c.

	* sysdeps/linux/Makefile (SRC1S): add recvfrom.c and
	  remove revcfrom.c.

	* <sys/socket.h>: include <sys/types.h>.

	* sysdeps/linux/accept.c:
	* sysdeps/linux/connect.c:
	* sysdeps/linux/bind.c:
	* <sys/socket.h> (bind): add __const.

	* nys/nsw/include/netdb/hosts.h (h_errno): delcare it if not
	  define.

	* nys/Makefile (lib depend realclean clean): stop at the
	  first error.

	* sysdeps/linux/_fxstat.c (PTHREAD_KERNEL): define
	  __machdep_sys__xxx ().

	* <i386/syscall.h> (_POSIX_THREADS): changed to
	  PTHREAD_KERNEL.
	  (_pthraeds_syscallx ()): changed to _syscallx ().

	* sysdeps/pthreads/Makefile (BASE_CFLAGS): add -DPTHREAD_KERNEL
	  (INC_CFLAGS): use TARGET_OS.
	  (SRC1S): add _exit.c, cleanup.c, cond.c, dump_state.c,
	  errno.c, fd.c, fd_kern.c, fd_pipe.c, globals.c, info.c,
	  mutex.c, mutexattr.c, prio_queue.c, process.c, pthread.c,
	  pthread_attr.c, pthread_detach.c, pthread_join.c,
	  pthread_kill.c, pthread_once.c, queue.c, schedparam.c,
	  select.c, sig.c, signal.c, sleep.c, specific.c, wait.c

	* sysdeps/pthreads/wait.c
	* sysdeps/pthreads/sleep.c:
	* sysdeps/pthreads/fd_kern.c: new from the MIT pthreads
	  package 1.60 beta2.
	  a few modifications.

	* sysdeps/pthreads/fd.c: new from the MIT pthreads
	  package 1.60 beta2.
	  (writev, writev_timedwait, readv, readv_timedwait): change
	  iovcnt to size_t.
	  (fstat): change to _fxstat for linux.

	* sysdeps/pthreads/errno.c: new from the MIT pthreads
	  package 1.60 beta2.
	  (__errno_location): changed from __error ().
	  (__error): a weak aliase of __errno_location.

	* sysdeps/pthreads/cond.c: new from the MIT pthreads
	  package 1.60 beta2.
	  include <pthread/sys/timers.h>.

	* sysdeps/pthreads/process.c:
	* sysdeps/pthreads/pthread.c:
	* sysdeps/pthreads/pthread_attr.c:
	* sysdeps/pthreads/pthread_detach.c:
	* sysdeps/pthreads/pthread_join.c:
	* sysdeps/pthreads/pthread_kill.c:
	* sysdeps/pthreads/pthread_once.c:
	* sysdeps/pthreads/queue.c:
	* sysdeps/pthreads/schedparam.c:
	* sysdeps/pthreads/select.c:
	* sysdeps/pthreads/sig.c:
	* sysdeps/pthreads/signal.c:
	* sysdeps/pthreads/sleep.c:
	* sysdeps/pthreads/specific.c:
	* sysdeps/pthreads/mutex.c:
	* sysdeps/pthreads/mutexattr.c:
	* sysdeps/pthreads/prio_queue.c:
	* sysdeps/pthreads/globals.c:
	* sysdeps/pthreads/info.c:
	* sysdeps/pthreads/fd_pipe.c:
	* sysdeps/pthreads/dump_state.c:
	* sysdeps/pthreads/cleanup.c: new from the MIT pthreads
	  package 1.60 beta2.

	* sysdeps/pthreads/_exit.c: new from the MIT pthreads
	  package 1.60 beta2.
	  (__machdep_sys__exit): changed from machdep_sys_exit.
	  (__machdep_sys_fcntl): changed from machdep_sys_fcntl.

	* sysdeps/pthreads/__pthread_init.c: updated from
	  pthread_init.c in the MIT pthreads package 1.60 beta2.

	* <pthread/sys/compat.h>:
	* <pthread/machdep.h>: new from the MIT pthreads package
	  1.60 beta2.

	* <pthread.h>: add pthread_sched_prevent for PTHREAD_KERNEL.

	* <_G_config.h>: change verion to 5.1.2.

	* elf/libc/jump.params: set version to 5.1.2.

	* sysdeps/linux/i386/syscall.S: don't make syscall () weak.

	* sysdeps/pthread/linux/i386/Makefile (SRC2S): don't
	  include syscall.S.

	* sysdeps/linux/sysdep.h: define __syscall_xxx as the real
	  entry and make xxx/__xxx as aliases or weak aliases
	  as appropriate.

Sun Jun  4 00:25:41 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.1.1 is released.

	* <_G_config.h>: change verion to 5.1.1.

	* elf/libc/jump.params: set version to 5.1.1.

	* libio/fileops.c (_IO_file_seekoff): check if any pointers
	  should be moved only when dir != _IO_seek_set.
	  
	* <pthread.h>: include <errno.h>.

Fri Jun  2 01:47:01 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.1.0.

	* regex/rx.c: updated from GNU Rx version 0.07.2.

	* elf/d-link/linuxelf.h (PF_R): check if it already defined.

	* Maketargets (depend): don't depend on anything.

	* libio/libio.h (_IO_USE_DTOA): don't define it if __linux__ is
	  defined.

	* libio/_G_config.h:
	* libio/ChangeLog:
	* libio/ChangeLog.new:
	* libio/cleanup.c:
	* libio/filedoalloc.c:
	* libio/fileops.c:
	* libio/genops.c:
	* libio/iofclose.c:
	* libio/iofdopen.c:
	* libio/iofflush.c:
	* libio/iofgetpos.c:
	* libio/iofgets.c:
	* libio/iofopen.c:
	* libio/iofputs.c:
	* libio/iofread.c:
	* libio/iofsetpos.c:
	* libio/ioftell.c:
	* libio/iofwrite.c:
	* libio/iogetdelim.c:
	* libio/iogetline.c:
	* libio/iogets.c:
	* libio/ioignore.c:
	* libio/iolibio.h:
	* libio/iopadn.c:
	* libio/ioperror.c:
	* libio/iopopen.c:
	* libio/ioprims.c:
	* libio/ioputs.c:
	* libio/ioseekoff.c:
	* libio/ioseekpos.c:
	* libio/iosetbuffer.c:
	* libio/iosetvbuf.c:
	* libio/iosscanf.c:
	* libio/iostrerror.c:
	* libio/ioungetc.c:
	* libio/iovfprintf.c:
	* libio/iovsprintf.c:
	* libio/iovsscanf.c:
	* libio/libio.h:
	* libio/libioP.h:
	* libio/stdfiles.c:
	* libio/strops.c:
	* libio/stdio/ChangeLog:
	* libio/stdio/vasprintf.c:
	* libio/stdio/vsnprintf.c:
	* <libio.h>:
	* <_G_config.h>: updated from libg++ 2.6.90.

	* <iostdio.h>:
	* <iolibio.h>: removed.

Thu Jun  1 02:42:36 1995  H.J. Lu (hjl@nynexst.com)

	* Makefile (lib, depend): use make -C.

	* sysdeps/linux/i386/syscall.S:
	* sysdeps/linux/i386/sysdep.h: add pushl/popl %edx around
	  the errno call.
	
Mon Aug 30 13:40:34 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)

	* <string.h> (memmem): Reverse argument order, to be like
	  strstr.

	* string/memmem.c: Here too.

Wed May 31 23:24:02 1995  H.J. Lu (hjl@nynexst.com)

	* sysdeps/linux/i386/readdir.c: if PTHREAD_KERNEL, FIXME: we
	  need a new set of the dirent functions.
	  otherwise, if _POSIX_THREADS, make it weak.

	* sysdeps/pthread/linux/Makefile:
	* sysdeps/pthread/linux/i386/Makefile: new.
	     
	* posix/readv.c (readv):
	* posix/writev.c (writev):
	* sysdeps/linux/_fxstat.c (_fxstat):
	* sysdeps/linux/_xstat.c (_xstat):
	* sysdeps/linux/_xmknod.c (_xmknod):
	* sysdeps/linux/_xustat.c (_xustat): if _POSIX_THREADS is
	  defined, make it weak.

	* sysdeps/pthreads/Makefile: new.

	* <setjmp.h> (__const): removed.

	* setjmp/_longjmp.c (CONST):
	* setjmp/longjmp.c (CONST):
	* setjmp/siglongjmp.c (CONST):
	* sysdeps/i386/setjmp/__longjmp.c (CONST): removed.

	* locale/loadlocale.c: (_nl_free_locale): return for NULL or
	  no file is mapped.

	* <pthread/types.h>: don't include <pthread/ac-types.h>.

	* <pthread/sys/types.h>: fix a typo.

	* <langinfo.h>: (nl_langinfo): remove __const from the
	  return value.

	* netgroup/getnetgrent.c: fix the prototype of __yp_check ().

Tue May 30 08:50:02 1995  Mitch DSouza (Mitch.Dsouza@Dubai.Sun.COM)

	* inet/gethstnmad.c: make the trim option works properly.

Mon May 29 10:20:11 1995  Swen Thuemmler  <swen@gingganz>

	* grp/getgrent.c:
	* grp/initgroups.c:
	* netgroup/Makefile:
	* netgroup/getnetgrent.c:
	* nys/Makefile:
	* nys/TODO:
	* nys/config/config.h:
	* nys/nis/include/rpcsvc/nis.h:
	* nys/nis/src/nis_alloc.c:
	* nys/nis/src/nis_clnt.c:
	* nys/nis/src/nis_dummy.c:
	* nys/nis/src/nis_if.c:
	* nys/nis/src/nis_print.c:
	* nys/nis/src/nis_xdr.c:
	* nys/nsw/include/ethers.h:
	* nys/nsw/include/grp.h:
	* nys/nsw/include/gshadow.h:
	* nys/nsw/include/netdb/hosts.h:
	* nys/nsw/include/netdb/networks.h:
	* nys/nsw/include/netdb/protocols.h:
	* nys/nsw/include/netdb/rpc.h:
	* nys/nsw/include/netdb/services.h:
	* nys/nsw/include/pwd.h:
	* nys/nsw/include/shadow.h:
	* nys/nsw/src/Makefile:
	* nys/nsw/src/bld/endXXent.h:
	* nys/nsw/src/bld/getXXbyYY.h:
	* nys/nsw/src/bld/getXXent.h:
	* nys/nsw/src/bld/setXXent.h:
	* nys/nsw/src/dbm/dbm_ethers.c:
	* nys/nsw/src/dbm/dbm_group.c:
	* nys/nsw/src/dbm/dbm_gshadow.c:
	* nys/nsw/src/dbm/dbm_hosts.c:
	* nys/nsw/src/dbm/dbm_networks.c:
	* nys/nsw/src/dbm/dbm_passwd.c:
	* nys/nsw/src/dbm/dbm_protocols.c:
	* nys/nsw/src/dbm/dbm_rpc.c:
	* nys/nsw/src/dbm/dbm_services.c:
	* nys/nsw/src/dbm/dbm_shadow.c:
	* nys/nsw/src/dns/dns_ethers.c:
	* nys/nsw/src/dns/dns_group.c:
	* nys/nsw/src/dns/dns_gshadow.c:
	* nys/nsw/src/dns/dns_hosts.c:
	* nys/nsw/src/dns/dns_networks.c:
	* nys/nsw/src/dns/dns_passwd.c:
	* nys/nsw/src/dns/dns_protocols.c:
	* nys/nsw/src/dns/dns_rpc.c:
	* nys/nsw/src/dns/dns_services.c:
	* nys/nsw/src/dns/dns_shadow.c:
	* nys/nsw/src/files/hosts.c:
	* nys/nsw/src/files/passwd.c:
	* nys/nsw/src/misc/getugroups.c:
	* nys/nsw/src/misc/initgroups.c:
	* nys/nsw/src/nis/nis_hosts.c:
	* nys/nsw/src/nis/nis_networks.c:
	* nys/nsw/src/nis/nis_protocols.c:
	* nys/nsw/src/nis/nis_rpc.c:
	* nys/nsw/src/nis/nis_services.c:
	* nys/nsw/src/nsswitch.c:
	* nys/nsw/src/nsswitch.h:
	* nys/nsw/src/yp/yp_group.c:
	* nys/nsw/src/yp/yp_hosts.c:
	* nys/nsw/src/yp/yp_networks.c:
	* nys/nsw/src/yp/yp_protocols.c:
	* nys/nsw/src/yp/yp_services.c:
	* nys/yp/include/rpcsvc/ypclnt.h:
	* nys/yp/src/yp.h:
	* nys/yp/src/yp_clnt.c:
	* nys/yp/src/yp_if.c:
	* nys/yp/src/yp_xdr.c:
	* pwd/getpwent.c:
	* yp/yplib.c: include some fixes for the "normal" NIS support
	  routines, too. Additionally, rewrite yp_all to use a TCP
	  link, and I added prototypes and changed old style
	  declarations to ANSI too keep the compiler happy. For the
	  compat support, just took the current passwd and group
	  routines and changed them a bit to make them work with NYS.  

	* nys/nsw/src/compat/Makefile:
	* nys/nsw/src/compat/compat_ethers.c:
	* nys/nsw/src/compat/compat_group.c:
	* nys/nsw/src/compat/compat_gshadow.c:
	* nys/nsw/src/compat/compat_hosts.c:
	* nys/nsw/src/compat/compat_misc.c:
	* nys/nsw/src/compat/compat_misc.h:
	* nys/nsw/src/compat/compat_networks.c:
	* nys/nsw/src/compat/compat_passwd.c:
	* nys/nsw/src/compat/compat_protocols.c:
	* nys/nsw/src/compat/compat_rpc.c:
	* nys/nsw/src/compat/compat_services.c:
	* nys/nsw/src/compat/compat_shadow.c: new.

Mon May 29 10:20:11 1995  Swen Thuemmler  <swen@gingganz>

	* yp/yplib.c: Changed to prevent endless loop with faulty
	  ypbind.

Tue May  9 12:17:24 1995  Swen Thuemmler  <swen@gingganz>

	* grp/getgrnam.c: Oops, did not check for NIS entry first, so
	  getgrnam("+") would succeed.
 
Fri May 26 19:38:19 1995  Remy Card (Remy.Card@masi.ibp.fr)

	* Makefile (lib, depend):
	* Maketargets (lib realclean clean depend): stop at the
	  first error.

Tue May 23 20:14:18 1995  Ulrich Drepper  <drepper@gnu.ai.mit.edu>

	* locale/C-ctype.c:
	* locale/categories.def:
	* locale/loadlocale.c:
	* locale/localeinfo.h:
	* locale/nl_langinfo.c: modified for localedef.

	* locale/charmap.c:
	* locale/collate.c:
	* locale/config.h:
	* locale/ctype.c:
	* locale/ctypedump.c:
	* locale/error.c:
	* locale/hash.c:
	* locale/hash.h:
	* locale/iso-4217.def:
	* locale/keyword.gperf:
	* locale/keyword.h:
	* locale/libintl.h:
	* locale/locale.c:
	* locale/localedef.c:
	* locale/localedef.h:
	* locale/locfile-lex.c:
	* locale/locfile-parse.c:
	* locale/messages.c:
	* locale/monetary.c:
	* locale/numeric.c:
	* locale/token.h:
	* locale/xmalloc.c: new for localedef.

Tue May 30 23:47:18 1995  H.J. Lu (hjl@nynexst.com)

	* <i386/syscall.h> (_POSIX_THREADS): add _pthraeds_xxxx ()
	  macros.

	* sysdeps/linux/__fork.S (_POSIX_THREADS): if PTHREAD_KERNEL,
	  make __machdep_sys_vfork as an aliase of __machdep_sys_fork
	  and make machdep_sys_vfork as a weak an aliase of
	  __machdep_sys_fork.
	  otherwise, make __vfork/vfork as weak aliases of __fork.

	* sysdeps/linux/__unlink.S: restore libc 5.0.9.
	  (_POSIX_THREADS): make remove as a weak aliase of __unlink.

	* sysdeps/linux/sysdep.h: restore libc 5.0.9.
	  (_POSIX_THREADS): if PTHREAD_KERNEL, define
	  __machdep_sys_xxxx and make machdep_sys_xxx as an aliase
	  of __machdep_sys_xxxx.
	  otherwise, define xxxx () weak.

	* sysdeps/linux/i386/sigsuspend.c:
	* sysdeps/linux/i386/libc_exit.c:
	* sysdeps/linux/i386/__sigact.c:
	* sysdeps/linux/i386/__selection.c: restore libc 5.0.9.
	  (PTHREAD_KERNEL): define __machdep_sys_xxxx and make
	  machdep_sys_xxx as an aliase of __machdep_sys_xxxx.
	  otherwise if _POSIX_THREADS, make xxxx () weak.
	  
	* sysdeps/linux/i386/syscall.S (PTHREAD_KERNEL): define
	  __machdep_syscall () for pthread system call without errno
	  and don't define syscall ().
	  (_POSIX_THREADS): make syscall () weak.

	* sysdeps/linux/i386/sysdep.h (PTHREAD_KERNEL): define
	  PSEUDO () for pthread system calls without errno.

	* Makeconfig (PTHREAD_CFLAGS): new.

		-D_POSIX_THREAD_SAFE_FUNCTIONS -D_POSIX_THREADS  \
			-D_MIT_POSIX_THREADS

	* <posix_opt.h> (_POSIX_THREAD_PRIO_INHERIT,
	  _POSIX_THREAD_PRIO_PROTECT, _POSIX_THREAD_PRIORITY_SCHEDULING,
	  _POSIX_THREADS, _POSIX_THREAD_SAFE_FUNCTIONS,
	  _MIT_POSIX_THREADS): new.
	  
	* <netdb.h>:
	* <time.h>:
	* <resolv.h>:
	* <errno.h>:
	* <stdio.h>: use 

		#if defined(_POSIX_THREAD_SAFE_FUNCTIONS) || defined(_REENTRANT)

	  for MT-safe code.

	* <_G_config.h>: change verion to 5.1.0.

	* elf/libc/jump.params: set version to 5.1.0.

Thu May 25 22:16:07 1995  H.J. Lu (hjl@nynexst.com)

	* <_G_config.h>: change verion to 5.0.11.

	* elf/libc/jump.params: set version to 5.0.11.

	* sysdeps/linux/i386/syscall.S: call __errno_location () to
	  get errno.

	* inet/gethstnmad.c: include <netdb.h>.

	* sysdeps/linux/sysdep.h: define __machdep_sys_xxxx. make
	  _machdep_sys_xxxx as an alias of __machdep_sys_xxxx. Make 
	  xxxx/__xxxx as weak aliase of __machdep_sys_xxxx.

	* sysdeps/linux/i386/sigsuspend.c:
	* sysdeps/linux/i386/libc_exit.c:
	* sysdeps/linux/i386/__sigact.c:
	* sysdeps/linux/i386/__selection.c: make __xxx/xxx
	  as weak aliases of __machdep_sys_xxxx. make
	  machdep_sys_xxx as an aliase of __machdep_sys_xxxx.
	  
	* sysdeps/linux/__fork.S: make __vfork/vfork as weak aliases of
	  __machdep_sys_fork. make __machdep_sys_vfork and
	  machdep_sys_vfork as aliases of __machdep_sys_fork.

	* sysdeps/linux/__unlink.S: make remove as a weak aliase of
	  __machdep_sys_unlink.

	* inet/herror.c (h_errno): removed.

	* inet/__h_errno_loc.c:
	* inet/__res_loc.c: new.

	* inet/Makefile (SRC1S): add __h_errno_loc.c and __res_loc.c.

	* <pthread/types.h>: include <pthread/sys/types.h> .

	* <pthread/sys/types.h> (pthread_size_t, pthread_ssize_t,
	  pthread_ipaddr_type, pthread_ipport_type, pthread_clock_t,
	  pthread_time_t, pthread_fpos_t, pthread_off_t,
	  pthread_va_list, pthread_va_list): new.

	* <sys/wait.h>: don't do union wait if _MIT_POSIX_THREADS
	  is 1.

	* <resolve.h> (__res_status_location): new.
	  (_res): defined as "(*__res_status_location())".

	* <netdb.h>: add xxxx_r () functions.
	  (__NETDB_MAXALIASES): defined as 35.
	  (__NETDB_MAXADDRS): defined as 35.
	  (__h_errno_location): new.
	  (h_errno): defined as "(*__h_errno_location ())".
	  include <stdio.h>.
	  include <netinet/in.h>.

	* <stdio.h> (flockfile, funlockfile, ftrylockfile,
	  getc_unlocked, getchar_unlocked, putc_unlocked,
	  putchar_unlocked): new for _POSIX_THREADS.

	* <time.h> (asctime_r, ctime_r, gmtime_r, localtime_r): new.

	* <errno.h> (pthread_errno):
	* <sys/socket.h>: include <pthread/posix.h>.
	* <sys/cdefs.h> (__CAN_DO_EXTERN_INLINE):
	* <signal.h> (__SIGFILLSET, __SIGEMPTYSET, __SIGADDSET,
	  __SIGDELSET, __SIGISMEMBER):
	* <paths.h> (_PATH_PTY), (_PATH_TZDIR), (_PATH_TZFILE): new
	  if _MIT_POSIX_THREADS is 1.

	* <pthread/sys/timers.h>: new from MIT pthread 1.60 beta 2.

	* <pthread.h> (threaded()): new macro. return 1 if it is MT.

	* sysdeps/pthreads/__pthread_init.c (__pthreaded): set to 1
	  and make it readonly.

	* linux/pthread_stubs.c (__pthreaded): set to 0, make
	  it readonly and weak.

	* <pthread/cond.h>:
	* <pthread/sleep.h>: include <pthread/sys/timers.h>.

	* <pthread/cleanup.h>:
	* <pthread/cond.h>:
	* <pthread/debug_out.h>:
	* <pthread/fd.h>:
	* <pthread/fd_pipe.h>:
	* <pthread/kernel.h>:
	* <pthread/kthread.h>:
	* <pthread/mutex.h>:
	* <pthread/prio_queue.h>:
	* <pthread/pthread_attr.h>:
	* <pthread/pthread_once.h>:
	* <pthread/queue.h>:
	* <pthread/sleep.h>:
	* <pthread/specific.h>:
	* <pthread/types.h>:
	* <pthread/unistd.h>:
	* <pthread/util.h>:
	* <pthread/version.h>:
	* <pthread/xtypes.h>: add #ifndef/#define/#endif.

Thu May 25 01:36:20 1995  H.J. Lu (hjl@nynexst.com)

	* version 5.0.10 is released.

	* <pthread.h>:
	* <pthread/cleanup.h>:
	* <pthread/cond.h>:
	* <pthread/debug_out.h>:
	* <pthread/fd.h>:
	* <pthread/fd_pipe.h>:
	* <pthread/kernel.h>:
	* <pthread/kthread.h>:
	* <pthread/mutex.h>:
	* <pthread/prio_queue.h>:
	* <pthread/pthread_attr.h>:
	* <pthread/pthread_once.h>:
	* <pthread/queue.h>:
	* <pthread/sleep.h>:
	* <pthread/specific.h>:
	* <pthread/state.def>:
	* <pthread/types.h>:
	* <pthread/unistd.h>:
	* <pthread/util.h>:
	* <pthread/version.h>:
	* <pthread/xtypes.h>: new from the MIT pthreads package
	  1.60 beta2.

Thu May 25 01:27:35 1995  H.J. Lu (hjl@nynexst.com)

	* db/hash/ndbm.c:
	* db/hash/hash.c:
	* db/hash/hash.h (htab): change errno to htab_errno.

	* misc/Makefile (SRC2S): remove errno.S.

	* sysdeps/Makefile (DIRS): add pthreads.

	* sysdeps/linux/i386/sysdep.h: call __errno_location () to
	  get errno.

	* sysdeps/linux/m68k/sysdep.h: please fix it.

	* inet/herror.c (h_errno): define it if it is defined.

	* inet/gethstnmad.c:
	* inet/ruserpass.c: include <errno.h>.

	* inet/bindresvport.c (errno):
	* inet/gethstnmad.c (errno), (h_errno):
	* inet/res_query.c (h_errno):
	* inet/ruserpass.c (errno):
	* nys/nsw/src/dns/dns_hosts.c (h_errno):
	* nys/nsw/src/dns/dns_networks.c (h_errno):
	* nys/nsw/src/files/hosts.c (h_errno):
	* posix/glob.c (errno):
	* rpc/clnt_tcp.c (errno):
	* rpc/clnt_udp.c (errno):
	* rpc/pmap_getmaps.c (errno):
	* rpc/rtime.c (errno):
	* rpc/svc.c (errno):
	* rpc/svc_tcp.c (errno):
	* rpc/svc_udp.c (errno): removed.

	* sysdeps/pthreads: new dir.

	* sysdeps/linux/Makefile (SRC1S): add pthread_stubs.c.

	* sysdeps/pthreads/__pthread_init.c:
	* linux/pthread_stubs.c: new.

Wed May 24 02:24:41 1995  H.J. Lu (hjl@nynexst.com)

	* <i386/syscall.h>: undo the change of Mon May 22 01:55:06
	  1995 by alan@spri.levels.unisa.edu.au (Alan Modra). It breaks
	  ranlib.

	* sysdeps/linux/__errno_loc.c: new.

	* sysdeps/linux/Makefile (SRC1S): add __errno_loc.c.

	* <errno.h> (__errno_location): new function.
	  (errrno): defined as  (*__errno_location()).

	* sysdeps/linux/i386/crt/crt0.S:
	* sysdeps/linux/i386/crt/gcrt0.S: don't call brk (0);

	* sysdeps/linux/i386/crt/gcrt0.S: call setlocale () only if
	  CALL_DEFAULT_LOCALE is defined.

	* malloc-930716/malloc.h (__morecore): changed from _morecore.
	  (__default_morecore): changed from _default_morecore.
	  (__default_morecore_init): new.

	  extern void *__default_morecore_init(long);

	* <malloc.h> (__default_morecore_init):
	* malloc/malloc.h (__default_morecore_init): new.

	  extern __ptr_t __default_morecore_init __P ((ptrdiff_t __size));

	* malloc-930716/free.c (__morecore): changed from _morecore.

	* malloc-930716/malloc.c (__morecore): changed from _morecore.
	  set to __default_morecore_init.

	* malloc/malloc.c (__morecore): set to __default_morecore_init.

	* malloc-930716/Makefile (VSCFLAGS): set to

		-D__MALLOC_0_RETURNS_NULL

	* sysdeps/linux/Makefile (SRC1S): remove morecore.c.

	* sysdeps/linux/i386/Makefile (SRC1S):
	* sysdeps/linux/m68k/Makefile (SRC1S): add morecore.c.

	* sysdeps/linux/i386/morecore.c: new copied from sysdeps/linux.
	  (__default_morecore_init): new.

	* sysdeps/linux/m68k/morecore.c: new copied from sysdeps/linux.
	  (__default_morecore_init): new. is that right?

Mon May 22 01:55:06 1995   alan@spri.levels.unisa.edu.au (Alan Modra)

	* <i386/syscall.h>: do a little more register optimisations
	  (saves one reg->reg move).

Mon May 22 01:04:43 1995  H.J. Lu (hjl@nynexst.com)

	* <gnu-stabs.h> (link_warning): new from glibc.

	* Makeconfig (CANONICAL_TARGET_MACHINE): check and set to
	  ix86-linux.

	* gcc/Makefile (config.h), (hconfig.h), (tconfig.h),
	  (tm.h): check CANONICAL_TARGET_MACHINE instead TARGET_MACHINE.

	* elf/d-link/libdl/Makefile (ELF_LDFLAGS): add -nostartfiles.

	* <_G_config.h>: change verion to 5.0.10.

	* elf/libc/jump.params: set version to 5.0.10.

	* <dlfcn.h> (RTLD_NEXT), (RTLD_GLOBAL): new macros.
	
Fri May 19 06:52:27 1995  Andreas Schwab <schwab@issan.informatik.uni-dortmund.de>

	* <m68k/gmp-mparam.h>: new.

