dnl configure.in for Tcl/Objective-C interface library
dnl Written by R. Andrew McCallum <mccallum@cs.rochester.edu>
dnl Process this file with autoconf to produce a configure script.
AC_INIT(Tcl.m)

AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB

# if the user didn't specify a prefix on the command line, set prefix
# same as used for tcl 
AC_PREFIX_PROGRAM(tclsh)
AC_SUBST(prefix)

#--------------------------------------------------------------------
# Find out if we're on a NeXT, 
# if not:
#   include implementations of List and HashTable objects 
#   check to make sure the gcc.patch has been applied and installed
#--------------------------------------------------------------------
echo checking for NeXT compiler
AC_TEST_CPP([#if defined(NeXT)
#error
#endif], NeXTCC=0, NeXTCC=1)
if test "$NeXTCC" = "1"; then
    NON_NeXT_EXTRA_OBJS=""
    NON_NeXT_EXTRA_SRCS=""
    NON_NeXT_ALL_OBJCFLAGS=""
else
    NON_NeXT_EXTRA_OBJS="List.o HashTable.o"
    NON_NeXT_EXTRA_SRCS="List.m HashTable.m"
    NON_NeXT_ALL_OBJCFLAGS="-Wno-protocol"
    # Find out if we have objc_next_class (due out in new version of gcc)
    AC_HAVE_LIBRARY(libobjc.a)
    AC_FUNC_CHECK(objc_next_class, have_ocn=1, have_ocn=0)
    if test "$have_ocn" = "0"; then
      echo You must apply the patch $srcdir/gcc.patch to the gcc source dir
      echo then recompile and install libobjc.a,
      echo then rerun this configure script.
      exit 1
    fi
	
fi

AC_SUBST(NON_NeXT_EXTRA_OBJS)
AC_SUBST(NON_NeXT_EXTRA_SRCS)
AC_SUBST(NON_NeXT_ALL_OBJCFLAGS)


#--------------------------------------------------------------------
# (This part is from the tk4.0 distribution, modified by nelson)
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_path_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.  Under some conditions the
#	autoconf macro will return an include directory that contains
#	no include files, so double-check its result just to be safe.
#--------------------------------------------------------------------

AC_PATH_X
not_really_there=""
if test "$no_x" = ""; then
    if test "$x_includes" = ""; then
	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
    else
	if test ! -r $x_includes/X11/Intrinsic.h; then
	    not_really_there="yes"
	fi
    fi
fi
if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
    echo checking for X11 header files
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include
	/usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/X11R6/include /usr/openwin/include /usr/X11/include /usr/sww/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
                x_includes="$i"
	    fi
        done
    fi
else
    if test "$x_includes" != ""; then
	XINCLUDES=-I$x_includes
    else
	XINCLUDES="# no special path needed"
    fi
fi
if test "$XINCLUDES" = nope; then
  echo "Warning:  couldn't find any X11 include files."
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)

if test "$no_x" = yes; then
    XLIBSW=nope
    if test "$XLIBSW" = nope; then
	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/X11R6/lib /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		XLIBSW="-L$i -lX11"
	        x_libraries="$i"
	    fi
	done
    fi
else
    if test "$x_libraries" = ""; then
	XLIBSW=-lX11
    else
	XLIBSW="-L$x_libraries -lX11"
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
    XLIBSW=-lX11
fi
AC_SUBST(XLIBSW)

#--------------------------------------------------------------------
# Locate the Tcl/Tk include files
#   A hybrid of BLT's approach of looking in lots of places and, if
#   that fails, just believing what "echo [info library] | tclsh" says.
#   We play a bit of a trick here piping commands into tclsh
#   Extra set of brackets hides the Tcl brackets from autoconf m4.
#--------------------------------------------------------------------

# First, if tclsh is around execute it to make a guess as to where Tcl
# is installed, and also to find out if we're using tcl > 7.3.

# (nelson 12/11/95) - removed the check for the tcl version, we just
# assume they have 7.4. There was a small problem when the version of
# tcl from tclsh in the PATH didn't agree with libtcl.a
# we used to invoke ["puts [expr [info tclversion] < 7.4]"]
# in the tclsh to guess the version number.
AC_CHECK_PROG(tclsh_found, tclsh, 1, 0)
if test "$tclsh_found" = "1"; then
  tclLibrary=`echo ["puts [info library]"] | tclsh`
  tclInstalledDir=`dirname "$tclLibrary"`
  tclInstalledDir=`dirname "$tclInstalledDir"`
fi

# Second, if TCL_LIBRARY or TK_LIBRARY are set, work from there.
if test ! -z "$TCL_LIBRARY"; then
  USER_TCL_INCLUDE=`dirname $TCL_LIBRARY`
  USER_TCL_INCLUDE=`dirname $USER_TCL_INCLUDE`/include
  USER_TCL_LIB=`dirname $TCL_LIBRARY`
else
  USER_TCL_INCLUDE=""
  USER_TCL_LIB=""
fi
if test ! -z "$TK_LIBRARY"; then
  USER_TK_INCLUDE=`dirname $TK_LIBRARY`
  USER_TK_INCLUDE=`dirname $USER_TK_INCLUDE`/include
  USER_TK_LIB=`dirname $TK_LIBRARY`
else
  USER_TK_INCLUDE=""
  USER_TK_LIB=""
fi


# now define INCPLACES to be those directories where tcl.h and tk.h could be.
# We look in lots of "standard" places as well as where [info version]
# tells us to look. Note that this list is both for tcl.h and tk.h: they
# are often installed in the same directory.

INCPLACES="/network/software/packages/tcl7.4/include \
           $prefix/include $prefix/include/tcl $prefix/include/tk \
           /usr/local/include /usr/local/include/tcl /usr/local/include/tk \
           /usr/include /usr/include/tcl /usr/include/tk \
           $x_includes $x_includes/tcl $x_includes/tk \
	   ../tcl7.4 ../tk4.0"
if test ! -z $tclInstalledDir; then
  INCPLACES="$tclInstalledDir/include $INCPLACES"
fi
INCPLACES="$USER_TCL_INCLUDE $USER_TK_INCLUDE $INCPLACES"

echo $ac_n "Looking for tcl.h... "
TCLINCDIR=""
for dir in "$TCL_INCLUDE_DIR" $INCPLACES; do
  if test -r $dir/tcl.h; then
    TCLINCDIR=$dir
    break;
  fi
done

if test -z "$TCLINCDIR"; then
  echo
  echo "Couldn't find tcl.h, please type in the directory where it is located."
  read TCLINCDIR
else
  echo "found $TCLINCDIR/tcl.h"
fi

if test "$TCLINCDIR" = "/usr/include" ; then
  TCLINCLUDES=""
else
  TCLINCLUDES="-I$TCLINCDIR"
fi
AC_SUBST(TCLINCLUDES)

# phew. Now look for libtcl.a. These are the generic places, we'll also look
# where we found tcl.h or tk.h

LIBPLACES="$prefix/lib $prefix/lib/tcl $prefix/lib/tk \
           /usr/local/lib /usr/local/lib/tcl /usr/local/lib/tk \
           /usr/lib /usr/lib/tcl /usr/lib/tk \
           $x_libraries $x_libraries/tcl $x_libraries/tk \
	   ../tcl7.4 ../tk4.0"

if test ! -z $tclInstalledDir; then
  LIBPLACES="$tclInstalledDir/lib $LIBPLACES"
fi
LIBPLACES="$USER_TCL_LIB $USER_TK_LIB $LIBPLACES"
LIBPLACES="`dirname $TCLINCDIR`/lib $LIBPLACES"

echo $ac_n "Looking for libtcl.a... "
TCLLIBDIR=""
TCLLIBNAME=""
for dir in "$TCL_LIB_DIR" $LIBPLACES; do
  if test -r $dir/libtcl7.4.a; then
    TCLLIBDIR=$dir
    TCLLIBNAME=tcl7.4
    break;
  elif test -r $dir/libtcl.a; then
    TCLLIBDIR=$dir
    TCLLIBNAME=tcl
    break;
  fi
done

if test -z "$TCLLIBDIR"; then
  echo
  echo "Couldn't find libtcl.a or libtcl7.4.a. Please tell me where it is located"
  read TCLLIBDIR
  if test -r $TCLLIBDIR/libtcl7.4.a; then
    TCLLIBNAME=tcl7.4
  else
    TCLLIBNAME=tcl
  fi
else
  echo "found $TCLLIBDIR/lib""$TCLLIBNAME"".a"
fi
if test "$TCLLIBDIR" = "/usr/lib" ; then
  TCLLIBS="-l$TCLLIBNAME"
else
  TCLLIBS="-L$TCLLIBDIR -l$TCLLIBNAME"
fi
AC_SUBST(TCLLIBS)

#--------------------------------------------------------------------
# Locate the Tk include and library files, if we've been asked to.
#--------------------------------------------------------------------

# default is to turn tk support on.
AC_ARG_WITH(tk, [  --with-tk		  install Tk support as well as Tcl (default is on)], ,with_tk=yes )
if test "$with_tk" != "no"; then
  doCheckTk="doCheckTk"
  Tk_o="Tk.o"
  Tk_h="Tk.h"

  POTENTIALINCDIR=`dirname $TCLINCDIR`
  POTENTIALINCDIR=`dirname $POTENTIALINCDIR`
  INCPLACES="$TCLINCDIR $POTENTIALINCDIR/tk4.0/include \
             $POTENTIALINCDIR/tk/include $INCPLACES"
  echo $ac_n "Looking for tk.h... "
  TKINCDIR=""
  for dir in "$TK_INCLUDE_DIR" $INCPLACES; do
    if test -r $dir/tk.h; then
      TKINCDIR=$dir
      break;
    fi
  done
  if test -z "$TKINCDIR"; then
    echo
    echo "Couldn't find tk.h, please tell me where it is located."
    read TKINCDIR
  else
    echo "found $TKINCDIR/tk.h"
  fi
  if test "$TKINCDIR" = "/usr/include" ; then
    TKINCLUDES=""
  else
    TKINCLUDES="-I$TKINCDIR"
  fi
  AC_SUBST(TKINCLUDES)

  POTENTIALLIBDIR=`dirname $TCLLIBDIR`
  POTENTIALLIBDIR=`dirname $POTENTIALLIBDIR`
  LIBPLACES="`dirname $TKINCDIR/lib` $TCLLIBDIR $POTENTIALLIBDIR/tk/lib \
	     $POTENTIALLIBDIR/tk4.0/lib $LIBPLACES"
  echo $ac_n "Looking for libtk.a... "
  TKLLIBDIR=""
  TKLIBNAME=""
  for dir in "$TK_LIB_DIR" $LIBPLACES; do
    if test -r $dir/libtk4.0.a; then
      TKLIBDIR=$dir
      TKLIBNAME=tk4.0
    break;
    elif test -r $dir/libk.a; then
      TKLIBDIR=$dir
      TKLIBNAME=tk
      break;
    fi
  done

  if test -z "$TKLIBDIR"; then
    echo
    echo "Couldn't find libtk.a or libtk4.0.a. Please tell me where it is located"
    read TKLIBDIR
    if test -r $TKLIBDIR/libtk4.0.a; then
      TKLIBNAME=tk4.0
    else
      TKLIBNAME=tk
    fi
  else
    echo "found $TKLIBDIR/lib""$TKLIBNAME"".a"
  fi
  if test "$TKLIBDIR" = "/usr/lib" ; then
    TKLIBS="-l$TKLIBNAME"
  else
    TKLIBS="-L$TKLIBDIR -l$TKLIBNAME"
  fi
else
  TKLIBS=" # configured not to use tk/X"
  doCheckTk=""
  Tk_h=""
  Tk_o=""
fi
AC_SUBST(TKLIBS)
AC_SUBST(doCheckTk)
AC_SUBST(Tk_o)
AC_SUBST(Tk_h)

#--------------------------------------------------------------------
# Locate the Readline include and library files
#--------------------------------------------------------------------

AC_ARG_WITH(readline, [  --with-readline		  Use GNU readline when prompting (default is off)])
found_readline_inc_and_lib=0
if test "$with_readline" = yes; then
    echo "        configuring to use readline"
    if test "$READLINE_INCLUDE_DIR" != ""; then
      READLINEINCLUDES="-I$READLINE_INCLUDE_DIR"
      # Add some code to look in standard places
      if test "$READLINE_LIBRARY_DIR" != ""; then
        READLINELIBS="-L$READLINE_LIBRARY_DIR -lreadline -ltermcap"
        found_readline_inc_and_lib=1
        AC_DEFINE(HAVE_READLINE)
        # This .o file contains xmalloc,xrealloc.  They are needed by readline
        # Normally they would be provided in libiberty; we include them here
        # in case you don't already have libiberty
        READLINE_O_EXTRAS=xmalloc.o
      # Add some code to look in standard places
      else
        echo "Warning: Could not find the readline library archive."
        echo "         In order to get the readline functionality you must"
        echo "         set the environment variable READLINE_LIBRARY_DIR"
        echo "         and rerun configure.  See INSTALL for more details."
      fi
    else
      echo "Warning: Could not find the readline include files."
      echo "         In order to get the readline functionality you must"
      echo "         set the environment variable READLINE_INCLUDE_DIR"
      echo "         and rerun configure.  See INSTALL for more details."
    fi
fi
if test "$found_readline_inc_and_lib" = "0"; then
    READLINEINCLUDES=" # configured to not use readline"
    READLINELIBS=" # configured to not use readline"
    READLINE_O_EXTRAS=""
fi

AC_SUBST(READLINEINCLUDES)
AC_SUBST(READLINELIBS)
AC_SUBST(READLINE_O_EXTRAS)


### Now output the Makefile

AC_OUTPUT(Makefile)
