# Makefile.in generated automatically by automake 1.1b from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

AUTOMAKE_OPTIONS = ansi2knr

noinst_LIBRARIES = idu

idu_SOURCES = dynvec.c hash.c idfile.c idread.c idwrite.c fnprint.c \
	scanners.c walker.c

idudir = $(prefix)/share
idu_DATA = id-lang.map

noinst_HEADERS = dynvec.h hash.h idfile.h scanners.h tokflags.h xnls.h

INCLUDES = -I. -I$(srcdir) \
	   -I../lib -I$(top_srcdir)/lib \
	   -I../intl -I$(top_srcdir)/intl \
	   -I.. -I$(top_srcdir) 
DEFS = -DLOCALEDIR=\"$(localedir)\" @DEFS@
mkinstalldirs = $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
LIBRARIES = $(noinst_LIBRARIES)

noinst_LIBFILES = libidu.a

CC = @CC@
LEX = @LEX@
YACC = @YACC@
CPPFLAGS = @CPPFLAGS@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(LDFLAGS) -o $@

ANSI2KNR = @ANSI2KNR@
o = .@U@o
idu_LIBADD =
idu_OBJECTS = dynvec$o hash$o idfile$o idread$o idwrite$o fnprint$o \
scanners$o walker$o
EXTRA_idu_SOURCES =
LIBFILES =  libidu.a
AR = ar
RANLIB = @RANLIB@
DATA = $(idu_DATA)

HEADERS = $(noinst_HEADERS)

DIST_COMMON = Makefile.am Makefile.in ansi2knr.1 ansi2knr.c


PACKAGE = @PACKAGE@
VERSION = @VERSION@

DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFOS) $(MANS) $(EXTRA_DIST) $(DATA)
DEP_DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFO_DEPS) $(MANS) $(EXTRA_DIST) $(DATA)

TAR = tar
SOURCES = $(idu_SOURCES)
OBJECTS = $(idu_OBJECTS)

default: all


$(srcdir)/Makefile.in: @MAINT@Makefile.am $(top_srcdir)/configure.in
	cd $(top_srcdir) && automake $(subdir)/Makefile

Makefile: $(top_builddir)/config.status Makefile.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= ./config.status

mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	test -z "$(noinst_LIBFILES)" || rm -f $(noinst_LIBFILES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

.c._c:
	$(ANSI2KNR) $< > $*.tmp && mv $*.tmp $@

._c._o:
	@echo $(COMPILE) -c $<
	@rm -f _$*.c
	@ln $< _$*.c && $(COMPILE) -c _$*.c && mv _$*.o $@ && rm _$*.c

.c._o:
	$(ANSI2KNR) $< > $*.tmp && mv $*.tmp $*._c
	@echo $(COMPILE) -c $*._c
	@rm -f _$*.c
	@ln $*._c _$*.c && $(COMPILE) -c _$*.c && mv _$*.o $@ && rm _$*.c

ansi2knr: ansi2knr.o
	$(LINK) ansi2knr.o $(LIBS)

$(OBJECTS): $(ANSI2KNR)
ansi2knr.o: $(CONFIG_HEADER)

mostlyclean-kr:
	rm -f *._o *._c _*.c _*.o

clean-kr:

distclean-kr:
	rm -f ansi2knr

maintainer-clean-kr:
$(idu_OBJECTS): ../config.h

libidu.a: $(idu_OBJECTS) $(idu_LIBADD)
	rm -f libidu.a
	$(AR) cru libidu.a $(idu_OBJECTS) $(idu_LIBADD)
	$(RANLIB) libidu.a

install-iduDATA: $(idu_DATA)
	$(mkinstalldirs) $(idudir)
	list="$(idu_DATA)"; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    $(INSTALL_DATA) $(srcdir)/$$p $(idudir)/$$p; \
	  else if test -f $$p; then \
	    $(INSTALL_DATA) $$p $(idudir)/$$p; \
	  fi; fi; \
	done

uninstall-iduDATA:
	list="$(idu_DATA)"; for p in $$list; do \
	  rm -f $(idudir)/$$p; \
	done

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

tags: TAGS

TAGS: $(HEADERS) $(SOURCES) $(TAGS_DEPENDENCIES)
	here=`pwd` && cd $(srcdir) && etags $(ETAGS_ARGS) $(SOURCES) $(HEADERS) -o $$here/TAGS

mostlyclean-tags:

clean-tags:

distclean-tags:

maintainer-clean-tags:
	rm -f TAGS ID

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libidu
distdir: $(DEP_DISTFILES)
	@for file in `cd $(srcdir) && echo $(DISTFILES)`; do \
	  test -f $(distdir)/$$file \
	  || ln $(srcdir)/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $(srcdir)/$$file $(distdir)/$$file; \
	done
dynvec$o: ../libidu/dynvec.c ../libidu/dynvec.h \
 ../lib/xmalloc.h ../lib/xstring.h
fnprint$o: ../libidu/fnprint.c ../lib/xstdlib.h \
 ../lib/xalloca.h ../lib/xunistd.h ../libidu/idfile.h \
 ../lib/xobstack.h ../lib/xmalloc.h ../lib/xstring.h \
 ../libidu/hash.h ../libidu/dynvec.h ../libidu/tokflags.h \
 ../libidu/xnls.h ../lib/pathmax.h ../lib/error.h
hash$o: ../libidu/hash.c ../lib/xstdlib.h ../libidu/hash.h \
 ../libidu/xnls.h ../lib/xmalloc.h ../lib/xstring.h \
 ../lib/error.h
idfile$o: ../libidu/idfile.c ../lib/xstdlib.h \
 ../lib/xstring.h ../lib/xsysstat.h ../libidu/xnls.h \
 ../lib/xobstack.h ../lib/xmalloc.h ../libidu/idfile.h \
 ../libidu/hash.h ../libidu/dynvec.h ../libidu/tokflags.h \
 ../lib/error.h
idread$o: ../libidu/idread.c ../libidu/idfile.h \
 ../lib/xobstack.h ../lib/xmalloc.h ../lib/xstring.h \
 ../libidu/hash.h ../libidu/dynvec.h ../libidu/tokflags.h \
 ../lib/xstddef.h ../lib/error.h ../libidu/xnls.h
idwrite$o: ../libidu/idwrite.c ../libidu/idfile.h \
 ../lib/xobstack.h ../lib/xmalloc.h ../lib/xstring.h \
 ../libidu/hash.h ../libidu/dynvec.h ../libidu/tokflags.h \
 ../libidu/xnls.h ../lib/error.h
scanners$o: ../libidu/scanners.c ../lib/xstdlib.h \
 ../lib/xstddef.h ../lib/xunistd.h ../lib/xsysstat.h \
 ../lib/xstring.h ../lib/xmalloc.h ../libidu/xnls.h \
 ../lib/error.h ../libidu/scanners.h ../lib/xobstack.h \
 ../libidu/tokflags.h
walker$o: ../libidu/walker.c ../lib/xsysstat.h \
 ../lib/xstdlib.h ../lib/xstddef.h ../lib/xunistd.h \
 ../lib/xstring.h ../lib/xfnmatch.h ../lib/xdirent.h \
 ../libidu/xnls.h ../libidu/idfile.h ../lib/xobstack.h \
 ../lib/xmalloc.h ../libidu/hash.h ../libidu/dynvec.h \
 ../libidu/tokflags.h ../lib/error.h ../libidu/scanners.h \
 ../lib/pathmax.h ../lib/xalloca.h

info:

dvi:

check: all

installcheck:

install-exec: 

install-data: install-iduDATA

install: install-exec install-data all
	@:

uninstall: uninstall-iduDATA

all: $(LIBFILES) $(DATA) $(HEADERS) Makefile

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs:
	$(mkinstalldirs)  $(idudir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log $(CONFIG_HEADER) stamp-h

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-kr mostlyclean-tags mostlyclean-generic

clean:  clean-noinstLIBRARIES clean-compile clean-kr clean-tags \
		clean-generic mostlyclean 

distclean:  distclean-noinstLIBRARIES distclean-compile distclean-kr \
		distclean-tags distclean-generic clean 
	rm -f config.status

maintainer-clean:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-kr \
		maintainer-clean-tags maintainer-clean-generic \
		distclean 
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-kr distclean-kr clean-kr \
maintainer-clean-kr uninstall-iduDATA install-iduDATA tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info dvi check installcheck install-exec install-data install \
uninstall all installdirs mostlyclean-generic distclean-generic \
clean-generic maintainer-clean-generic clean mostlyclean distclean \
maintainer-clean


ansi2knr.c: $(top_srcdir)/src/ansi2knr.c
	ln $(top_srcdir)/src/ansi2knr.c .
.SUFFIXES:
.SUFFIXES: .c .o ._c ._o

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
