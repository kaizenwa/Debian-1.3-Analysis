# This is an example fspd.conf file.  Copy it and edit it to suit your tastes.

# The 'conf' command allows a global file to read local files so that
# multiple users at a site can use the same central fspd file.
#
# conf .fspd.conf

# The 'readme' commands specifies the name of the local readme file
# for each directory.  If no readme command is given, the readme file
# defaults to .README
#
# readme .README

# The usecachedir command tells the server if it's going to be using a 
# cache directory on if it will be relying on .FSP_CONTENT files instead.
# it accepts the parameters 'on' or 'off'
#
usecachedir on

# The 'cachedir' command controls where the server thinks the cache
# directory is located if the usecachedir command is set to 'on'.
# This directory can be relative to the home directory or an absolute
# path.
#
cachedir ../cache

# The 'homedir' command tells the server where it's ROOT directory is. 
# This directory must be given as an absolute path.
#
homedir /usr/fsp/data

# The 'logfile' command tells the server where to log things too if
# logging is enabled.
# It can be a relative path from the fspd home directory or an absolute
# path.
# it must include the filename.
#
logfile ../logs/logfile

# The 'log' command specifies the type of logging that should be performed.
# The log command takes the following options
# 'none' or any of 'all', '(!)errors', '(!)version', '(!)getdir',
# '(!)getfile', '(!)upload', '(!)install', '(!)delfile', '(!)deldir',
# '(!)setpro', '(!)getpro', '(!)makedir', '(!)grabfile'.
# logging of 'all' will include logging of errors.
# for example:
# log all !errors -- will log all commands sent, but no error messages.
# log all !getdir -- will log all commands except getdir and all errors
#                    EXCEPT those that occured on a getdir command.
# log install getfile errors -- will log all install and getfile commands
#                    as well as any errors that occur on ONLY those commands.
# If no log command is given, logging will be turned of (same as 'log none')
#
log all

# The 'port' command specifies which port the fspd server is to listen two.
# This is NOT needed if running under inetd, but otherwise is required.
#
# port 21

# The 'thruput' command is used to specify the thruput control in avg # of
# bytes per second that the server will allow.  Use 'thruput off' to specify
# no thruput control.  A negative value or zero will also shut off thruput
# control.  If this command is not given, it acts like 'thruput off'
#
# thruput off

# The 'setuid' command is used to specify a specific uid under which the
# FSP server will run.  Use 'setuid off' or 'setuid 0' in order to not
# attempt to perform a setuid.  If this command is not given, it acts like
# 'setuid off'
#
# setuid off

# The 'daemonize' command specifies whether the fspd should fork itself into
# the background when started up.  The only acceptable values are 'on' or
# 'off'.  If this command isn't given, it acts like 'daemonize off'.
#
# daemonize off

# The 'debug' command specifies whether the server should write debugging
# output to stderr while it is running. The only acceptable values are 'on'
# or 'off'.  If this command is never given, it acts like 'debug off'.
#
# debug off

# The 'restricted' command specifies whether the server is run in restricted
# mode.  In this case, only hosts enabled via the 'host' command will be 
# able to connect.  The only acceptable values for this command are 'on' or
# 'off'.  If the command isn't given, it acts as 'restricted off'.
#
# restricted off

# The 'reverse_name' command specifies if the server refuses connections to
# sites that it cannot reverse lookup.  The only acceptable values for this
# command are 'on' or 'off'.  If the command is not given, it acts like
# 'reverse_name off' by default.
#
# reverse_name off

# The 'read_only' command specifies whether the server should ignore any 
# command that would cause a 'write' action on the server.  The commands
# that are refused by this are upload, install, mkdir, deldir, delfile, 
# and setpro.  The only acceptable values for this command are 'on' or 'off'.
# If the command is not given, it acts like 'read_only off'.
#
# read_only off

# The 'host' command subsumes the function of the .IPHOSTS file from 
# previous versions.  Each line looks as follows.  (information in []
# is optional)
#   host host_mask [host_type message]
#
# host_mask is either the full numeric or text name of a machine OR
#                     a wildcarded host mask.
#   wildcarded hostmasks look as follows.
#   128.4 - 8.*.* -- (* acts as the range 0 - 255)
#   The above line would affect all hosts of the form 128.4.*.*, 128.5.*.*,
#   128.6.*.*, 128.7.*.* and 128.8.*.*.
#   This sort of host masking is only available with numeric hosts, not with
#   text names.
# host_type is one of D, I, or N.
#   I hosts are ignored, N hosts are treated as normal, and D hosts will
#   get back the error string message given as the third parameter.
#
# If host_type isn't specified, the host is treated as ignored or normal
# depending on the value of restricted.
#
# The following line allows all CMU machines (128.2.*.*) access to a site.
# host 128.2.*.* N This message is useless here.
