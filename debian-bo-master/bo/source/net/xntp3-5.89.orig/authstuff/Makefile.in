# Makefile.in generated automatically by automake 1.0 from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

AUTOMAKE_OPTIONS = no-dependencies
EXTRA_PROGRAMS = authcert authspeed md5driver keyparity makeIPFP makePC1 makePC2 \
	makeSP mkrandkeys omakeIPFP unixcert
INCLUDES = -I$(top_srcdir)/include
LDADD = ../libntp/libntp.a
#EXTRA_DIST = README TAGS auth.samplekeys auth.speed certdata md5_sample_output results
EXTRA_DIST = auth.samplekeys auth.speed certdata md5_sample_output results
ETAGS_ARGS = Makefile.am
mkinstalldirs = $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h

CC = @CC@
LEX = @LEX@
YACC = @YACC@

DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

COMPILE = $(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(LDFLAGS) -o $@
authcert_SOURCES = authcert.c
authcert_OBJECTS = authcert.o
EXTRA_authcert_SOURCES =
authcert_LDADD = $(LDADD)
authspeed_SOURCES = authspeed.c
authspeed_OBJECTS = authspeed.o
EXTRA_authspeed_SOURCES =
authspeed_LDADD = $(LDADD)
md5driver_SOURCES = md5driver.c
md5driver_OBJECTS = md5driver.o
EXTRA_md5driver_SOURCES =
md5driver_LDADD = $(LDADD)
keyparity_SOURCES = keyparity.c
keyparity_OBJECTS = keyparity.o
EXTRA_keyparity_SOURCES =
keyparity_LDADD = $(LDADD)
makeIPFP_SOURCES = makeIPFP.c
makeIPFP_OBJECTS = makeIPFP.o
EXTRA_makeIPFP_SOURCES =
makeIPFP_LDADD = $(LDADD)
makePC1_SOURCES = makePC1.c
makePC1_OBJECTS = makePC1.o
EXTRA_makePC1_SOURCES =
makePC1_LDADD = $(LDADD)
makePC2_SOURCES = makePC2.c
makePC2_OBJECTS = makePC2.o
EXTRA_makePC2_SOURCES =
makePC2_LDADD = $(LDADD)
makeSP_SOURCES = makeSP.c
makeSP_OBJECTS = makeSP.o
EXTRA_makeSP_SOURCES =
makeSP_LDADD = $(LDADD)
mkrandkeys_SOURCES = mkrandkeys.c
mkrandkeys_OBJECTS = mkrandkeys.o
EXTRA_mkrandkeys_SOURCES =
mkrandkeys_LDADD = $(LDADD)
omakeIPFP_SOURCES = omakeIPFP.c
omakeIPFP_OBJECTS = omakeIPFP.o
EXTRA_omakeIPFP_SOURCES =
omakeIPFP_LDADD = $(LDADD)
unixcert_SOURCES = unixcert.c
unixcert_OBJECTS = unixcert.o
EXTRA_unixcert_SOURCES =
unixcert_LDADD = $(LDADD)
DIST_COMMON = README Makefile.am Makefile.in README


PACKAGE = @PACKAGE@
VERSION = @VERSION@

DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFOS) $(MANS) $(EXTRA_DIST) $(DATA)
DEP_DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFO_DEPS) $(MANS) $(EXTRA_DIST) $(DATA)

TAR = tar
SOURCES = authcert.c authspeed.c md5driver.c keyparity.c makeIPFP.c \
makePC1.c makePC2.c makeSP.c mkrandkeys.c omakeIPFP.c unixcert.c
OBJECTS = authcert.o authspeed.o md5driver.o keyparity.o makeIPFP.o \
makePC1.o makePC2.o makeSP.o mkrandkeys.o omakeIPFP.o unixcert.o

default: all


$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in
	cd $(top_srcdir) && automake $(subdir)/Makefile

Makefile: $(top_builddir)/config.status Makefile.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= ./config.status

.c.o:
	$(COMPILE) $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:
$(authcert_OBJECTS): ../config.h

authcert: $(authcert_OBJECTS) $(authcert_DEPENDENCIES)
	$(LINK) $(authcert_OBJECTS) $(authcert_LDADD) $(LIBS)
$(authspeed_OBJECTS): ../config.h

authspeed: $(authspeed_OBJECTS) $(authspeed_DEPENDENCIES)
	$(LINK) $(authspeed_OBJECTS) $(authspeed_LDADD) $(LIBS)
$(md5driver_OBJECTS): ../config.h

md5driver: $(md5driver_OBJECTS) $(md5driver_DEPENDENCIES)
	$(LINK) $(md5driver_OBJECTS) $(md5driver_LDADD) $(LIBS)
$(keyparity_OBJECTS): ../config.h

keyparity: $(keyparity_OBJECTS) $(keyparity_DEPENDENCIES)
	$(LINK) $(keyparity_OBJECTS) $(keyparity_LDADD) $(LIBS)
$(makeIPFP_OBJECTS): ../config.h

makeIPFP: $(makeIPFP_OBJECTS) $(makeIPFP_DEPENDENCIES)
	$(LINK) $(makeIPFP_OBJECTS) $(makeIPFP_LDADD) $(LIBS)
$(makePC1_OBJECTS): ../config.h

makePC1: $(makePC1_OBJECTS) $(makePC1_DEPENDENCIES)
	$(LINK) $(makePC1_OBJECTS) $(makePC1_LDADD) $(LIBS)
$(makePC2_OBJECTS): ../config.h

makePC2: $(makePC2_OBJECTS) $(makePC2_DEPENDENCIES)
	$(LINK) $(makePC2_OBJECTS) $(makePC2_LDADD) $(LIBS)
$(makeSP_OBJECTS): ../config.h

makeSP: $(makeSP_OBJECTS) $(makeSP_DEPENDENCIES)
	$(LINK) $(makeSP_OBJECTS) $(makeSP_LDADD) $(LIBS)
$(mkrandkeys_OBJECTS): ../config.h

mkrandkeys: $(mkrandkeys_OBJECTS) $(mkrandkeys_DEPENDENCIES)
	$(LINK) $(mkrandkeys_OBJECTS) $(mkrandkeys_LDADD) $(LIBS)
$(omakeIPFP_OBJECTS): ../config.h

omakeIPFP: $(omakeIPFP_OBJECTS) $(omakeIPFP_DEPENDENCIES)
	$(LINK) $(omakeIPFP_OBJECTS) $(omakeIPFP_LDADD) $(LIBS)
$(unixcert_OBJECTS): ../config.h

unixcert: $(unixcert_OBJECTS) $(unixcert_DEPENDENCIES)
	$(LINK) $(unixcert_OBJECTS) $(unixcert_LDADD) $(LIBS)

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

tags: TAGS

TAGS: $(HEADERS) $(SOURCES) $(TAGS_DEPENDENCIES)
	here=`pwd` && cd $(srcdir) && etags $(ETAGS_ARGS) $(SOURCES) $(HEADERS) -o $$here/TAGS

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

subdir = authstuff
distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)
distdir: $(DEP_DISTFILES)
	@for file in `cd $(srcdir) && echo $(DISTFILES)`; do \
	  test -f $(distdir)/$$file \
	  || ln $(srcdir)/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $(srcdir)/$$file $(distdir)/$$file; \
	done
authcert.o: authcert.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
authspeed.o: authspeed.c $(top_srcdir)/include/ntp_fp.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_string.h \
  $(top_srcdir)/include/l_stdlib.h
keyparity.o: keyparity.c $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/ntp_stdlib.h \
  $(top_srcdir)/include/ntp_types.h $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/l_stdlib.h
makeIPFP.o: makeIPFP.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
makePC1.o: makePC1.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
makePC2.o: makePC2.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
makeSP.o: makeSP.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
md5driver.o: md5driver.c $(top_srcdir)/include/md5.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/ntp_stdlib.h \
  $(top_srcdir)/include/l_stdlib.h
mkrandkeys.o: mkrandkeys.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
omakeIPFP.o: omakeIPFP.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h
unixcert.o: unixcert.c $(top_srcdir)/include/ntp_stdlib.h $(top_srcdir)/include/ntp_types.h \
  $(top_srcdir)/include/ntp_machine.h $(top_srcdir)/include/ntp_string.h $(top_srcdir)/include/l_stdlib.h

info:

dvi:

check: all check-local

installcheck:

install-exec: 

install-data: 

install: install-exec install-data all
	@:

uninstall: 

all: Makefile

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs:


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log $(CONFIG_HEADER) stamp-h

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-compile mostlyclean-tags mostlyclean-generic

clean:  clean-compile clean-tags clean-generic mostlyclean 

distclean:  distclean-compile distclean-tags distclean-generic clean 
	rm -f config.status

maintainer-clean:  maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-generic distclean 
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info dvi check-local check \
installcheck install-exec install-data install uninstall all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


../libntp/libntp.a:
	cd ../libntp && $(MAKE)

check-local: authcert authspeed
	./authcert < $(srcdir)/certdata
	./authspeed -d -n 30000 $(srcdir)/auth.samplekeys
	./authspeed -m -n 30000 $(srcdir)/auth.samplekeys
.SUFFIXES:
.SUFFIXES: .c .o

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
