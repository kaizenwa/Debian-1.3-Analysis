#
# This file contains a sample .zirconrc file and explains the options
# that can be set and the effect they have. Th easiest way to do all
# this is to use the configuration panels provided by the zircon
# system itself. The file is in fact a tcl script that is executed by
# zircon when it startsup.
#

#nick YourNick
#nick AnotherNick
#nick AndAnother
# 
# This sets up a list of nicknames you like to use on IRC. The first
# item in the list is the one that will be used when connecting to a
# server.

#ircname {An IRC Name}
#ircname {Another IRC Name}
# 
# This sets up a list of ircnames you like to use on IRC. The first
# item in the list is the one that wil be used when connecting to a
# server. You cannot change the value of your ircname without
# reconnecting to the server.

#Server server.irc.org
#Server another.server.irc.org -port Port
#Server me.too.irc.org -port Port -oper opername -operpw passwd -script {...}
# 
#Server :: select server.irc.org
#
# The Server command introduces a new server to the system. The first
# parameter is the name of the server. The other parameters can be :
#
# -host hostname : by default the hostname is the name of the object
# -port portnumb : by default the port number is 6667
# -oper nickname : this will be sent to log you in as an IRC operator
# -operpw passwd : this will be sent with the previous nickname
# -script ...    : this is a feature under development but will allow
#		 : connection scripts for firewalled servers etc.
#
# You will normally only need the first form of the command. You
# should then use the Server :: select command to indicate your first 
# choice of IRC server to connect to.

#Channel *default* -open 1 -close 1 -closetime 120 -history 50 -quiet 0 \
#  -draw 0
#Channel #hottub -menu 1
#Channel #hotsex -open 1 -close 1 -menu 1 \
#  -msg {!JOIN !LEAVE !MODE !QUIT !TOPIC} -topics {{My Favourite Topic}}
# 
# This command sets up information about your favourite channels. The
# easiest way to set it up is to use the Channels configuration panel.
# This allows you to set up all the fields, except for the topics field
# which can be altered directly from the channel itslef using the
# Topic menu. You should set the channel *default* to have the default values
# for properties. Currently the default properties apply also to the
# info window. Note that if you wish to have a message window started
# up then you should use :
#
# Message somebody -join 1 etc. etc.
#
# The available options are :
#
# join		: join the channel on connection to the server
# open		: Popup the window when something happens in it
# close		: Close the window if it has been inactive for some time.
# closetime	: This the number of seconds before close takes effect
# quiet		: This turns off the bell
# jump		: This controls whether scrolling always jumps to the
#		  end when new text arrives.
# msg		: This a list of the information messages you want *NOT* to be
#		  sent to the channel. Possible values are :
#	JOIN 	- messages when people join channels
#	LEAVE	- messages when people leave channels
#	TOPIC	- messages indicating the topic has changed (The topic
#		  is always visible for a channel so you dont miss
#		  changes if you dont have this message)
#	QUIT	- messages when people QUIT irc.
#	MODE	- messages when there are mode changes
#	KICK	- messages when people are kicked from channels
#	KILL	- messages when people are killed from IRC.
#
# logfile	: The name of a file to which logging should be sent.
# key		: They key for the channel if any.
# icon		: A list of two icons one for normal use and one for
#		  when the channel has activity in it.
# topics	: A list of topics you would like attached to the
#		  Topic button.
# history	: The number of lines to be kept for scrolling back.
# ops		: A list of regular expressions for people you wish to
#		  auto-op when they join a channel.
# foreground
# background
# font
# width
# height	: these configure window defaults.

#Chat *default* -open 1 -close 1 -closetime 120 -history 50 -quiet 0 \
#  -buttons 0
# This sets up default information for DCC Chat windows.

#Message *default* -open 1 -close 1 -closetime 120 -history 50 -quiet 0 \
#  -buttons 0 -draw 0
# This sets up default information for Message windows.

#Notice *default* -open 1 -close 1 -closetime 120 -history 50 -quiet 0 \
#  -buttons 0
# This sets up default information for Notice windows.

#
#--------------------------------------------------
# Variables that control the Channel Listing process

# set showPublic 1
# showPublic controls whether or not public channels are shown in the
# listing. 1 means show, 0 don't show

# set showLocal 1
# showLocal controls whether or not local channels are shown in the
# listing. (local channels have names that start with an & rather than
# a #). 1 means show, 0 don't show

# set showPrivate {0}
# showPrivate controls whether or not private channels are shown in the
# listing. 1 means show, 0 don't show This is a pretty useless
# facility but is there because it is in irc II!!!

# set topicOnly 0
# If topicOnly is set to 1 then only channels with a topic set will be listed.

# set minMembers 3
# Only channels with >= minMemebers will be listed

# set listPattern {.*}
# Only channels whose names match this pattern will be listed. The
# patterns are full regular expressions rather than "glob" type
# patterns. They are fully documente din teh tcl manual or in the manual
# page for the regexp command. The pattern .* matches everything.

# set topicPattern {.*}
# Only channels whose names match this pattern will be listed.
# Patterns are as above.

# set noRefresh 1
# If noRefresh is set to 0 then Zircon will do a channel LIST when it
# starts up. This is not recommended!!

#------------------------------------------------------------------------
# Variables that control messages and dialog boxes

# set signoff {I run Zircon}
# This is the message that gets sent when you quit IRC.`

# set noConfirm { QUIT LEAVE KILL}
# Certain zircon actions cause dialog boxes to be popped up. It is
# possible to indicate that for certain of these you always wish to
# conform the action. Possible values are :
#	QUIT	- always quit IRC when the quit button is pressed
#	LEAVE	- always leave the channel when the leave button is pressed
#	KILL	- always carry out KILL operations
#	SAVECONF- always quit zircon without updating confifguration file

# set toInfo {ERROR SIGNOFF INFO}
# Certain information messages can appear either in channel windows or
# as pop up windows. It is possible to divert some of these to the
# zircon information window. Possible values are:
#	ERROR	- error messages are sent to info rather than a pop up
#	SIGNOFF	- When users quit do not indicate this in the channel
#		  windows to which they have been talking.
#	INFO	- Send the output of the server INFO request to the
#		  information window.
#	STATS	- ditto for the STATS command
#	LINKS	- ditto for the LINKS command
#	CTCP	- ditto for CTCP replies

# set verboseCTCP 0
# If verboseCTCP is 1 then information about CTCP messages iwll be
# sent to the informmation window

# set helpService ""
# This variable should contain the nick of an IRC help service. Help
# messages will be sent there by the Help button.

# set killPath 1
# If you are receiving server messages then if killPath is set to 1
# then the path will be removed from KILL messages.

#--------------------------------------------------------------------------
# Variables that control window behaviour

# set popInfo 1
# If popInfo is 1 then the information window will pop up when
# something appears in it, assuming that is that it has been closed!

# set friendsOn 1
# If friendsOn is set to 1 then the friends panel will only only show
# those friends who are actually on IRC.

#away {Meeting}
#away {Telephone}
#away {Coffee Time}
# 
# Useful away messages for the Away menu

#action	{despairs}
#action {smiles}
#action {giggles}
#action {bingles}
#
# Useful actions for the Action menu on channels.

# set invisible 0
# set wallops 0
# set srvmsg 0
# These, if set to 1, set you as invisible, get you wallops or get you
# server messages. You dont really want any of these do you?

# Service veg-bot -ops HELP
# Service nickname -host server -ops {MENU ITEMS}
#
# These are service providers you talk to regularly.
# The name is the nick of the service. The host
# is the server where the service is to be found so that security can be
# maintained (it can be omitted though) and ops is a list of
# commands that can be sent to the service. NoteServ and NickServ are
# already built into zircon so you dont need to add them.

# User Nick -friend 1
# User Nick2 -notify 1 -friend 1
#
# This command introduces your friends to the system. The second form
# also marks the user as notifiable i.e. you will be informed of their
# logins and logouts. If friendsOn is 1 ALL friends are assumed to be
# notifiable.

# ignore {fis!*@*demon.co.uk} notices public invites wallops notes ctcp others
# This command allows you to ignore various messages from users. Set
# it up from the People configuration panel.

# on JOIN {.+ nlfm!.+@.+} \
#	{if [operator $onPar0] { sendIRC MODE $onPar0 +o nlfm} }
# on JOIN {.+ ScottM!.+@.+} \
#    {if [operator $onPar0] {sendIRC MODE $onPar0 +o ScottM}}
# This allows you set up on conditions (but dont do opping like this -
# use the auto-op feature of Channels to do it!!!!)
#
#	on JOIN {Pattern List} {action}
#
#
# This will add it to the ons list for you. The Pattern List holds
# full regular expressions NOT glob style patterns. Patterns are
# matched case insensitively. The first pattern for JOIN
# matches channel name and the second matches nick!user@host. When a
# match is found the variables onPar0 and onPar1 are set to the values
# that were matched. Other events can be matched but are currently
# undocumented. The most useful is perhaps STARTUP. This will be
# executed when you connect to a server. It takes no patterns:
#
#	on STARTUP {} {actions...}
#
# in order to write an action you have to know how Zircon works
# internally. A more user friendly interface will be provided in the future.

#
# zbind {} <Meta-q> {doQUIT}
# 
# This sets up a keybinding such that when you type Meta-Q you will
# quit zircon. Thsi binding will be available in all your channel
# windows. If the first parameter is set to be a channel name then the
# binding will take effect only for that channel. The sequence is
# exactly the same as a tk bind sequence and the action requires you
# to understand the internals of zircon.......

#----------------------------------------------------------
# Other stuff
# set smiley :-)
# set scowl :-(
# set wink ;-)
# These can be generated by keyboard shortcuts - set them to your
# favourite strings.

#set busyMessage {I am busy and not accepting messages.}
# Set this to the string you want sent to people when you are busy and
# they try to message you.

#set trust(draw) {.*}
# This variable must be set if you wish to use the Sketch Pad feature.
# This setting allows anyone to send you sketches. You can change this
# to a list of full regular expressions matching nick!user@host format.
# N.B. I repeat FULL regular expressions *NOT* glob expressions as used
# in ircII. Read the tcl manual to find out about these if you dont
# know about them.

#set zircon(command) 1
# This will turn on the command line entry on the Info window. The
# present default is for it not to be there.

#set zircon(language) english
# This currently not used but will in the future permit messages etc.
# to be displayed in your local language. Volunteer translators always
# needed now!!

#set zircon(bellcmd) {code....}
# This command will be executed whenever zircon tries to ring the
# bell. The default version simply writes to ^g characters to stdout.
# If you have stdout redirected this means you dont hear the bell...
# If you are using the zircon sound facilities then if you have
# defined a bell sound then this will take precedence.

#set zircon(soundcmd) {code....}
# This command will be executed whenever zircon tries to play a sound.
# If it is nor defined nothing will happen. Currently the only sound
# supported is the bell sound. The command is executed with the value
# of the appropriate sound resource as a parameter. This is configured
# like foreground colour in your X resources file :
#
#	zircon*bell: clink.au
#	zircon*#dogs*bell: bark.au
#	zircon*#dogs*fifiBell: howl.au
#
# This should allow you to interface to any of the available sound
# playing programs. N.B. If you have some sound extension to tcl this
# will *NOT* work as the command is started using exec. If you have a
# sound extension to tcl you can probably find the command yourself and
# hack it....

#set zircon(envnick) IRCNICK
#set zircon(envname) IRCNAME
#set zircon(envserver) IRCSERVER
#
# Configuring these variables allows you to tailor the name of the
# environment variable that zircon will look for when setting up nick,
# irc name and server for your session. The values shown here are the
# default. This feature is really only useful if you use several
# different clients and want different nicks etc. when using them.
#
#set zircon(ircIImode) 1
#
# I don't know why anyone would want to do this, but setting this means
# that you dont have to hit Meta-Return to use the /ircII style commands
# that are supported by zircon - all your commands will be checked to
# see if they have a leading /.
#
#set zircon(action) SHift-Return
# 
# This controls the key sequence that is recognised for sending actions.
# Shift-Return is the original default but is pesky on some keyboards.
#
#set zircon(beep) BEEP
#
# Configures the text string inserted when the bell rings.
#
#set zircon(wavplayer)
#
# When a SOUND ctcp comes in, zircon will execute this program in the
# background passing the name of the sound file to it as a parameter.
#
#set zircon(wavpath)
#
# Zircon will look for an incoming sound file name in directories in this
# : separated directory list. If it finds the file, then the full pathname
# will be passed to the wavplayer program.
#
#set zircon(nicksize)
#
# If you set this to 0, then you can have nicks as long as you want. This
# only works on certain nets, so only use it if you are sure!!
#

