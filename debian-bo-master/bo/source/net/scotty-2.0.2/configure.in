dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during installation
dnl	to configure the system for the local environment.
AC_INIT(scotty.h)
AC_CONFIG_HEADER(config.h)

#----------------------------------------------------------------------------
#       Check if we should use gcc if available on this machine.
#----------------------------------------------------------------------------

AC_ARG_WITH(gcc, [  --with-gcc              use gcc for compilation],
	use_gcc=1)
if test -z "$use_gcc" ; then
    CC=${CC-cc}
else
    AC_PROG_CC
    if test "$CC" = "gcc" ; then
	CC="gcc -Wall"
    fi
fi
AC_SUBST(CC)
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB

AC_PREFIX_PROGRAM(scotty)

AC_DEFINE(HAVE_SNMP)

OSIMISLIBS=""
AC_SUBST(OSIMISLIBS)

SUBDIRS="tcpip ntping snmp"
AC_SUBST(SUBDIRS)

#----------------------------------------------------------------------------
#	Check if rpcgen is available. If not, use the files in 
#	tcpip/compat/*
#----------------------------------------------------------------------------

AC_CHECK_PROG(RPCGEN, rpcgen, rpcgen, echo)
if test "$RPCGEN" = "echo" ; then
    AC_WARN(couldn't find rpcgen. Will use precompiled files)
    cp tcpip/compat/* $srcdir/tcpip
fi

#----------------------------------------------------------------------------
#       Check to use extended tcl librarys. Not yet testet.
#               --with-tclX
#----------------------------------------------------------------------------

AC_ARG_WITH(tclX, [  --with tclX             use tclX extension library],
    AC_DEFINE(HAVE_TCLX) TCL_LIB="-ltclx")

#----------------------------------------------------------------------------
#       Check to use the tcl interface to msql.
#               --with-msql
#----------------------------------------------------------------------------

AC_ARG_WITH(msql, [  --with-msql             use msql extension library],
    msql=1, msql=0)
if test $msql = 1 ; then
    AC_DEFINE(HAVE_MSQL)
    SUBDIRS="$SUBDIRS bones"
    MSQL_LIB="-L/usr/local/Minerva/lib -lmsql"
    MSQL_INC="-I/usr/local/Minerva/include"
    AC_SUBST(MSQL_LIB)
    AC_SUBST(MSQL_INC)
fi

#----------------------------------------------------------------------------
#	Check if we should compile support for the cmip package.
#----------------------------------------------------------------------------

AC_ARG_WITH(cmip, [  --with-cmip             use the osimis cmip package], 
    osimis=1)
if test "$osimis" = 1 ; then
    AC_DEFINE(HAVE_OSIMIS)
    SUBDIRS="$SUBDIRS cmip"
    OSIMISLIBS="-L/usr/local/osimis/lib -L/usr/local/isode/lib -lisodesntx"
    OSIMISLIBS="$OSIMISLIBS -lsmisntx -luxsntx -loimsntx -lmsap -ldsap -lisode"
fi

#----------------------------------------------------------------------------
#	Check if we should compile support for the gdmo package.
#----------------------------------------------------------------------------

AC_ARG_WITH(gdmo, [  --with-gdmo             use the gdmo parser package],
    gdmo=1)
if test "$gdmo" = 1 ; then
    AC_PROG_YACC
    AC_PROG_LEX
    AC_DEFINE(HAVE_GDMO)
    SUBDIRS="$SUBDIRS gdmo"
fi

#----------------------------------------------------------------------------
#       Check how we build dynamic loadable libraries on this system.
#----------------------------------------------------------------------------

dynamic=0
AC_CHECK_PROG(have_tclsh, tclsh, yes)
if test "$have_tclsh" = yes ; then
    file=`echo 'puts $tcl_library/configInfo' | tclsh`
    if test -r $file ; then
	save_cc=$CC
	. $file
	CC=$save_cc
	dynamic=1
    fi
fi
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(DL_LIBS)
AC_SUBST(LD_FLAGS)

#----------------------------------------------------------------------------
#	Check if tcl is installed on this system. Interactively ask
#	for the directory if we can't find it in usual places.
#----------------------------------------------------------------------------

AC_ARG_WITH(tcl-include, 
	[  --with-tcl-include      set the tcl include directory],
	tcl_include=$withval)	
AC_ARG_WITH(tcl-library,
	[  --with-tcl-library      set the tcl library directory],
	tcl_library=$withval)

for f in $tcl_include $scotty_cv_path_tcl_inc $prefix/include /usr/local/tk4.0/include /usr/local/include /usr/local/include/tcl /usr/include /usr/include/tcl ; do
    AC_MSG_CHECKING(for tcl.h in $f)
    if test -f "$f/tcl.h" ; then
	scotty_cv_path_tcl_inc=$f
        TCL_INC="-I$f"
        AC_MSG_RESULT(yes)	
	break
    else
        AC_MSG_RESULT(no)
    fi
done

while test -z "$TCL_INC" ; do
    echo "Which directory contains tcl.h : "
    read f
    AC_MSG_CHECKING(for tcl.h in $f)
    if test -f "$f/tcl.h" ; then
	scotty_cv_path_tcl_inc=$f
        TCL_INC="-I$f"
        AC_MSG_RESULT(yes)	
	break
    else
        AC_MSG_RESULT(no)
    fi
done

AC_MSG_CHECKING(for tcl version number)
tcl_major_version=`awk '/TCL_MAJOR_VERSION/ {print $3}' $f/tcl.h`
tcl_minor_version=`awk '/TCL_MINOR_VERSION/ {print $3}' $f/tcl.h`
tcl_version="$tcl_major_version.$tcl_minor_version"
AC_MSG_RESULT("$tcl_version")

if test 7 -ne $tcl_major_version ; then
    AC_MSG_ERROR("tcl 7.4 or later needed")
fi
if test 4 -gt $tcl_minor_version ; then
    AC_MSG_ERROR("tcl 7.4 or later needed")
fi

for f in $tcl_library $scotty_cv_path_tcl_lib $prefix/lib /usr/local/tk4.0/lib /usr/local/lib /usr/lib ; do
    AC_MSG_CHECKING(for libtcl$tcl_version in $f)
    if test -f "$f/libtcl$tcl_version.a" ; then
	scotty_cv_path_tcl_lib=$f
        TCL_LIB="$TCL_LIB $f/libtcl$tcl_version.a"
        AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

while test -z "$TCL_LIB" ; do
    echo "Which directory contains libtcl$tcl_version.a : "
    read f
    AC_MSG_CHECKING(for libtcl$tcl_version in $f)
    if test -f "$f/libtcl$tcl_version.a" ; then
	scotty_cv_path_tcl_lib=$f
        TCL_LIB="$TCL_LIB $f/libtcl$tcl_version.a"
        AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

AC_SUBST(TCL_LIB)
AC_SUBST(TCL_INC)

#----------------------------------------------------------------------------
#	Check if tk is installed on this system. Interactively ask
#	for the directory if we can't find it in usual places.
#----------------------------------------------------------------------------

AC_ARG_WITH(tk-include,
	[  --with-tk-include       set the tk library directory],
	tk_include=$withval)
AC_ARG_WITH(tk-library,
	[  --with-tk-library       set the tk library directory],
	tk_library=$withval)

for f in $tk_include $scotty_cv_path_tk_inc $tcl_include $prefix/include /usr/local/tk4.0/include /usr/local/include /usr/local/include/tcl /usr/include /usr/include/tcl /usr/X386/include /usr/X11/include ; do
    AC_MSG_CHECKING(for tk.h in $f)
    if test -f "$f/tk.h" ; then
	scotty_cv_path_tk_inc=$f
        TK_INC="-I$f"
	AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

while test -z "$TK_INC" ; do
    echo "Which directory contains tk.h : "
    read f
    AC_MSG_CHECKING(for tk.h in $f)
    if test -f "$f/tk.h" ; then
	scotty_cv_path_tk_inc=$f
        TK_INC="-I$f"
	AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

AC_MSG_CHECKING(for tk version number)
tk_major_version=`awk '/TK_MAJOR_VERSION/ {print $3}' $f/tk.h`
tk_minor_version=`awk '/TK_MINOR_VERSION/ {print $3}' $f/tk.h`
tk_version="$tk_major_version.$tk_minor_version"
AC_MSG_RESULT("$tk_version")

if test 4 -ne $tk_major_version ; then
    AC_MSG_ERROR("tk 4.0 or later needed")
fi
if test 0 -gt $tk_minor_version ; then
    AC_MSG_ERROR("tcl 4.0 or later needed")
fi

for f in $tk_library $scotty_cv_path_tk_lib $tcl_library $prefix/lib /usr/local/tk4.0/lib /usr/local/lib /usr/lib /usr/X386/lib /usr/X11/lib ; do
    AC_MSG_CHECKING(for libtk$tk_version in $f)
    if test -f "$f/libtk$tk_version.a" ; then
	scotty_cv_path_tk_lib=$f
        TK_LIB="$f/libtk$tk_version.a"
        AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

while test -z "$TK_LIB" ; do
    echo "Which directory contains libtk$tk_version.a : "
    read f
    AC_MSG_CHECKING(for libtk$tk_version in $f)
    if test -f "$f/libtk$tk_version.a" ; then
	scotty_cv_path_tk_lib=$f
        TK_LIB="$f/libtk$tk_version.a"
        AC_MSG_RESULT(yes)
	break
    else
        AC_MSG_RESULT(no)
    fi
done

AC_SUBST(TK_LIB)
AC_SUBST(TK_INC)

#----------------------------------------------------------------------------
#	Check for Tcl_ValidateAllMemory and set TCL_MEM_DEBUG accordingly.
#----------------------------------------------------------------------------

oldLibs=$LIBS
LIBS="$LIBS $TCL_LIB -lm"
AC_CHECK_FUNC(Tcl_ValidateAllMemory,AC_DEFINE(TCL_MEM_DEBUG))
LIBS=$oldLibs

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_find_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.
#--------------------------------------------------------------------

AC_CHECK_PROG(tk_ok, xmkmf, 1, 0)
if test $tk_ok = 1; then
    AC_PATH_X
fi
if test "$XINCLUDE_DIR" != ""; then
    x_includes="$XINCLUDE_DIR"
fi
if test "$x_includes" = /usr/include; then
    XINCLUDES="# no special path needed"
elif test "$x_includes" != ""; then
    XINCLUDES=" -I$x_includes"
else
    AC_CHECKING(for X11 header files)
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/X11R6/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
	    fi
        done
    fi
fi
if test "$XINCLUDES" = nope; then
  AC_WARN(Couldn't find any X11 include files)
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)

if test "$XLIBRARY_DIR" != ""; then
    x_libraries="$XLIBRARY_DIR"
fi
if test "$x_libraries" = /usr/lib; then
    XLIBSW=-lX11
elif test "$x_libraries" != ""; then
    XLIBSW="-L$x_libraries -lX11"
else
    AC_CHECKING(for X11 library archive)
    AC_CHECK_LIB(X11, main, XLIBSW="-lX11", XLIBSW=nope)
    if test "$XLIBSW" = nope; then
	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/openwin/lib /usr/X11/lib /usr/X11R6/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		XLIBSW="-L$i -lX11"
	    fi
	done
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, main, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    AC_WARN(Couldn't find the X11 library archive. Using -lX11.)
    XLIBSW=-lX11
fi
AC_SUBST(XLIBSW)

#----------------------------------------------------------------------------
#	Check for the existence of various libraries.
#----------------------------------------------------------------------------

#--------------------------------------------------------------------
#       Check for the existence of various libraries.  The order here
#       is important, so that then end up in the right order in the
#       command line generated by make.  The -lsocket and -lnsl libraries
#       require a couple of special tricks:
#       1. Only use these libraries if they supply procedures that aren't
#          already present in the normal libraries.  This is because
#          IRIX 5.2 has libraries, but they aren't needed and they're
#          bogus:  they goof up name resolution if used.
#       2. On some SVR4 systems, can't use -lsocket without -lnsl too.
#          To get around this problem, first check for both libraries
#          together, and use them both if they're both needed.  If that
#          isn't the case, then check for them individually.
#--------------------------------------------------------------------

tk_both=1
AC_CHECK_FUNC(connect, tk_both=0)
AC_CHECK_FUNC(gethostbyname, tk_both=0)
tk_oldLibs=$LIBS
LIBS="$LIBS -lsocket"
AC_CHECK_LIB(nsl, main, , tk_both=0)
LIBS=$tk_oldLibs
if test "$tk_both" = 1; then
    echo "need -lsocket and -lnsl together"
    LIBS="$LIBS -lsocket -lnsl"
else
    AC_CHECK_LIB(socket, connect, [LIBS="$LIBS -lsocket"])
    AC_CHECK_LIB(nsl, gethostbyname, [LIBS="$LIBS -lnsl"])
fi

AC_CHECK_LIB(ieee, main, [LIBS="$LIBS -lieee"])
AC_CHECK_LIB(rpc, main, [LIBS="$LIBS -lrpc"])
AC_CHECK_LIB(rpcsvc, main, [LIBS="$LIBS -lrpcsvc"])
AC_CHECK_FUNC(res_mkquery, , AC_CHECK_LIB(resolv, main, [LIBS="$LIBS -lresolv"]))
AC_SUBST(LIBS)

#----------------------------------------------------------------------------
#	Checks for various include files missing on some machines.
#----------------------------------------------------------------------------

AC_CHECK_HEADERS(stdlib.h unistd.h malloc.h sys/select.h)

#----------------------------------------------------------------------------
#       Check for various Unix or library functions that can be used.
#----------------------------------------------------------------------------

AC_CHECK_FUNC(gethostent, AC_DEFINE(HAVE_GETHOSTENT))
AC_CHECK_FUNC(getnetent, AC_DEFINE(HAVE_GETNETENT))
AC_CHECK_FUNC(getprotoent, AC_DEFINE(HAVE_GETPROTOENT))
AC_CHECK_FUNC(getservent, AC_DEFINE(HAVE_GETSERVENT))
AC_CHECK_FUNC(getrpcent, AC_DEFINE(HAVE_GETRPCENT))

#----------------------------------------------------------------------------
#       Some older SUN RPC implementations are really ugly.
#----------------------------------------------------------------------------

AC_MSG_CHECKING(for struct rpcent)
AC_EGREP_CPP([^struct * rpcent],[
#include <netdb.h>
#include <rpc/rpc.h>
], AC_MSG_RESULT(yes); AC_DEFINE(HAVE_RPCENT), AC_MSG_RESULT(no))

#----------------------------------------------------------------------------
#       Checking for multicast options.
#----------------------------------------------------------------------------

AC_MSG_CHECKING(for multicast support)
AC_TRY_COMPILE([#include <sys/types.h>
#include <netinet/in.h>
#include <sys/socket.h>], [int i=IP_MULTICAST_TTL, j=IP_ADD_MEMBERSHIP;],
AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MULTICAST), AC_MSG_RESULT(no))

#----------------------------------------------------------------------------
#	Check for endian type needed by the snmp package.
#----------------------------------------------------------------------------

AC_C_BIGENDIAN

#----------------------------------------------------------------------------
#       Some more libraries for OSes that want your attention.
#----------------------------------------------------------------------------

AC_FUNC_GETMNTENT

#----------------------------------------------------------------------------
#	Configure ntping. Makes things easier here.
#----------------------------------------------------------------------------

AC_CONFIG_SUBDIRS(ntping)

AC_OUTPUT(Makefile doc/Makefile tcpip/Makefile snmp/Makefile snmp/mibs/Makefile library/Makefile tkined/Makefile examples/Makefile agents/Makefile cmip/Makefile gdmo/Makefile gdmo/mibs/Makefile bones/Makefile )
