# Commands covered:  dns
#
# This file contains a collection of tests for one or more of the Scotty
# built commands.  Sourcing this file into Scotty runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1994, 1995
#
# J. Schoenwaelder
# TU Braunschweig, Germany
# Institute for Operating Systems and Computer Networks
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that this copyright
# notice appears in all copies.  The University of Braunschweig
# makes no representations about the suitability of this
# software for any purpose.  It is provided "as is" without
# express or implied warranty.
#

if {[string compare test [info procs test]] == 1} then {source defs}

# set VERBOSE 1

test dns-1.1 {dns no arguments} {
    list [catch {dns} msg] $msg
} {1 {wrong # args: should be "dns ?-timeout t? ?-retries r? ?-server host? option arg"}}
test dns-1.2 {dns too many arguments} {
    list [catch {dns foo bar boo} msg] $msg
} {1 {wrong # args: should be "dns ?-timeout t? ?-retries r? ?-server host? option arg"}}
test dns-1.3 {dns wrong option} {
    list [catch {dns foo bar} msg] $msg
} {1 {bad option "foo": should be address, ptr, hinfo, mx, or soa}}

test dns-2.1 {dns timeout option} {
    dns -timeout 11
    dns -timeout
} {11}
test dns-2.2 {dns timeout option} {
    list [catch {dns -timeout foo} msg] $msg
} {1 {expected integer but got "foo"}}
test dns-2.3 {dns timeout option} {
    list [catch {dns -timeout 0} msg] $msg
} {1 {timeout must be positive}}
test dns-2.4 {dns retries option} {
    dns -retries 7
    dns -retries
} {7}
test dns-2.5 {dns retries option} {
    list [catch {dns -retries foo} msg] $msg
} {1 {expected integer but got "foo"}}
test dns-2.6 {dns retries option} {
    list [catch {dns -retries -1} msg] $msg
} {1 {negative retries}}
test dns-2.7 {dns server option} {
    dns -server localhost
    dns -server
} {127.0.0.1}
test dns-2.8 {dns server option} {
    list [catch {dns -server "no name"} msg] $msg
} {1 {can not lookup server "no name"}}
test dns-2.9 {dns server option} {
    dns -server 134.169.34.1 -retries 0 -timeout 1
    concat [dns -server] [dns -timeout] [dns -retries]
} {134.169.34.1 1 0}

# restore default settings...
dns -server 127.0.0.1 -retries 2 -timeout 2

if {[catch {dns ptr 127.0.0.1}]} {
    puts "skipping some dns tests (dns not running?)"
} else {
    test dns-3.1 {dns address option} {
	dns address localhost
    } {127.0.0.1}
    test dns-3.2 {dns address option} {
	list [catch {dns address "127.0.0.1"} msg] $msg
    } {0 127.0.0.1}
    test dns-3.3 {dns address option} {
	list [catch {dns address "1.2.3.4.5"} msg] $msg
    } {1 {domainname error}}
    test dns-3.4 {dns ptr option} {
	dns ptr 127.0.0.1
    } {localhost}
    test dns-3.5 {dns ptr option} {
	list [catch {dns ptr "no name"} msg] $msg
    } {1 {not a valid ip address}}
    test dns-3.6 {dns ptr option} {
	list [catch {dns ptr "1.2.3.4.5"} msg] $msg
    } {1 {not a valid ip address}}
}
