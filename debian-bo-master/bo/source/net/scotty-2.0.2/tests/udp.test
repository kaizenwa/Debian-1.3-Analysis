# Commands covered:  udp
#
# This file contains a collection of tests for one or more of the Scotty
# built commands.  Sourcing this file into Scotty runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1994, 1995
#
# J. Schoenwaelder
# TU Braunschweig, Germany
# Institute for Operating Systems and Computer Networks
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that this copyright
# notice appears in all copies.  The University of Braunschweig
# makes no representations about the suitability of this
# software for any purpose.  It is provided "as is" without
# express or implied warranty.
#

if {[string compare test [info procs test]] == 1} then {source defs}

# set VERBOSE 1

catch { foreach file [udp info] { udp close $file } }

test udp-1.1 {udp info} {
    udp info
} {}
test udp-1.2 {udp open} {
    string match file* [udp open]
} {1}
test udp-1.3 {udp open} {
    string match file* [udp open 8765]
} {1}
test udp-1.4 {udp open & udp info} {
    set f [udp open 8766]
    lindex [udp info $f] 1
} {8766}

catch { foreach file [udp info] { udp close $file } }
test udp-2.1 {udp close} {
    set f [udp open]
    udp close $f
    udp info
} {}
test udp-2.2 {udp close error} {
    list [catch {udp close stdin} msg] $msg
} {1 {bad udp handle "stdin"}}
test udp-2.3 {udp close error} {
    set f [udp open]
    udp close $f
    catch {udp close $f}
} {1}

catch { foreach file [udp info] { udp close $file } }
test udp-3.1 {udp connect} {
    set f [udp connect 127.0.0.1 echo]
    set i [udp info $f]
    udp close $f
    lrange $i 2 end
} {127.0.0.1 7}

catch { foreach file [udp info] { udp close $file } }
test udp-4.1 {udp send} {
    set f [udp open]
    udp send $f 127.0.0.1 echo "nase"
} {}
test udp-4.2 {udp send error} {
    set f [udp open]
    list [catch {udp send $f "nase"} msg] $msg
} {1 {wrong # args: should be "udp send file host port string"}}
test udp-4.3 {udp send error} {
    set f [udp connect 127.0.0.1 echo]
    list [catch {udp send $f 127.0.0.1 echo "nase"} msg] $msg
} {1 {wrong # args: should be "udp send file string"}}

catch { foreach file [udp info] { udp close $file } }
test udp-5.1 {udp receive} {
    set f [udp open]
    udp send $f 127.0.0.1 echo "nase"
    set msg [udp receive $f]
} {127.0.0.1 7 nase}
test udp-5.1 {udp receive error} {
    list [catch {udp receive stdin} msg] $msg
} {1 {bad udp handle "stdin"}}

catch { foreach file [udp info] { udp close $file } }
test udp-6.1 {udp says hello} {
    global scotty_version
    set date [lrange [getdate] 1 3]
    if {[catch {netdb hosts address [exec hostname]} name]} {
        set name "unknown"
    }
    if {[info exists scotty_version]} {
	set version $scotty_version
    } else {
	set version (unknown)
    }
    catch {
	set f [udp connect 134.169.34.33 syslog]
	udp send $f "<14>$date scotty: greetings from scotty $version at $name"
	udp close $f
    }
    set dummy ""
} {}
