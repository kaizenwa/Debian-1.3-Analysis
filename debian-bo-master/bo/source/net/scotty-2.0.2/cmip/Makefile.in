
# This is a Makefile for the cmip directory of scotty. If it has the
# name "Makefile.in" then it is a template for a Makefile; to generate
# the actual Makefile, run "./configure", which is a configuration
# script generated by the "autoconf" program (constructs like "@foo@"
# will get replaced in the actual Makefile.

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	/usr/local
exec_prefix =	$(prefix)

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -g

# To disable ANSI-C procedure prototypes reverse the comment 
# characters on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =	@XINCLUDES@

# A "-I" switch that can be used when compiling to make all the
# Tcl include files accessible (the configure script will try to
# set this value).
TCL_INCLUDES =	@TCL_INC@

# A "-I" switch that can be used when compiling to make all the
# Tk include files accessible (the configure script will try to
# set this value).
TK_INCLUDES =	@TK_INC@

# A "-I" switch that can be used when compiling to make all the
# isode include files accessible (the configure script will try to
# set this value).
ISODE_INCLUDES = -I/usr/local/isode/include

# A "-I" switch that can be used when compiling to make all the
# isode include files accessible (the configure script will try to
# set this value).
OSIMIS_INCLUDES = -I/usr/local/osimis/h

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

INSTALL =		@INSTALL@
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA =		@INSTALL_DATA@
RANLIB =		@RANLIB@
SRC_DIR =		@srcdir@
VPATH =			@srcdir@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC =		@CC@
CC_SWITCHES =	${CFLAGS} -DOSIMIS_3 -I${SRC_DIR} -I.. -I${SRC_DIR}/.. $(TCL_INCLUDES) $(TK_INCLUDES) $(X11_INCLUDES) ${ISODE_INCLUDES} ${OSIMIS_INCLUDES} ${PROTO_FLAGS}

SRCS =	cmipAction.c cmipDelete.c cmipGet.c cmipSet.c cmipCreate.c \
	cmipCancel.c cmipEvent.c cmipWait.c cmipTcl.c

OBJS =	cmipAction.o cmipDelete.o cmipGet.o cmipSet.o cmipCreate.o \
	cmipCancel.o cmipEvent.o cmipWait.o cmipTcl.o

.c.o:
	$(CC) -c $(CC_SWITCHES) $(ISODE_INCLUDES) $(OSIMIS_INCLUDES) $<

all: ../libscotty.a

../libscotty.a: $(OBJS)
	ar cru ../libscotty.a $(OBJS)
	$(RANLIB) ../libscotty.a

install:

depend: 
	cp Makefile Makefile.bak
	sed -e '/^# DO NOT DELETE THIS LINE/,$$d' < Makefile.bak > Makefile
	echo '# DO NOT DELETE THIS LINE' >> Makefile
	echo ' ' >> Makefile
	$(CC) -MM $(CC_SWITCHES) $(SRCS) >> Makefile

clean:
	@rm -f core *.o *~

distclean: clean
	@rm -f Makefile TAGS *.bak lmake.??? 

# DO NOT DELETE THIS LINE
