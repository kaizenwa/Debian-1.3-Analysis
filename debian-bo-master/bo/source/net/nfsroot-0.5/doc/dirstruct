Directory Structure

****
This file isn't finished yet.
****



Main objectives:
  *ro mounting of as much as possible on the server, for security
  *using small amount of diskspace per possible client
  *making the clients by default all the same as the server,
   but possible different defaults for all clients, or different
   values for specific clients.
  *make it work just by installing this package.

*************************************
process of creating /tftpboot/$hostip

First the basic reasoning behind it all:
  - I assume you (like me) want most of the files in /etc on the
    client to be identical to those on the server.
  - I want to use as little diskspace per client as possible
  - Be able to have a different 'default' for all clients file
    in /etc/whatever/whereever, and be able to overrule that
    for specific hosts.

I done that by making the clients mount /tftpboot/etc (rw, has to be),
and making (nearly) all entries symlinks to (on the client) /remote_etc.
As the /remote_etc dir on the client directory is the server's /etc,
the client wil mostly have the same configuration as the server, but this
can easily be overwritten by replacing the symlinks with real files.

Unfortunately, the /tftpboot/etc dir _must_ be exported and mounted rw 
(mount, and more importantly, ld.so), and thus any fool on the client
can in princible destroy all configuration files on /tftpboot/etc.
(maybe not when booted with ``my'' bootfloppies, but it will certainly
be possible if the fool uses his own bootfloppies).

So, it's better to put all the configuration files on the (hopefully secure)
server's /etc, as this is (or should be) exported ro. Use the programme
nfsrootetc to move all files from the /tftpboot/ directory to /etc/nfsroot/$hostip
(By putting the config stuff in /etc, I also compily with the debian standards).

The way mknfsroot creats the structure:
 1 For each dirsubdir in eighter /etc/nfsroot/default, or
   /etc/nfsroot/$hostip, create a subdir in /tfptboot/$hostip/
 2 For any file/dir/symlink in /etc, try to setup
   a link from ./remote_etc/$file to tftpboot/$hostip/etc/$file
   (this will fail $file lives in a subdir in /etc that wasn't
   created in step one, but that's intentional -- saves lot's of space, this way)
 3 for any file/dir/symlink in /etc/nfsroot/default, repeat step 2
 4 repeat step 2 (or 3, your choice) with /etc/nfsroot/$hostip, if exists.


