
This file contains a list of things that should be changed or added to
the current tkined version.

- The l command (leave group) should, IMHO, take the connection of the element
  out of the group with a node. Currently, the connection is invisible unless
  the group is expanded.

- Check the info texts. They are out of sync.

- stripchart.c:1098 guard zone broken if you make a very tall chart.

- Add better support for configuration options, e.g. the print command,
  always align to grid, default grid spacing. Something like a preferences
  section that is automatically maintained by tkined.

- Should we deny to put LINK objects into a group object?

- Attributes for EVENT objects: time, severity, objects, description,
  class

- Stripcharts and barcharts sometimes change their position when
  loading a previously saved map.

- Many tasks should be done using DoWhenIdle handlers so that no
  redundand operations are done on the canvas. Check out if we can
  do the same with m_label()!

- In some situations, the selection marks are somewhat outdated if the
  internal structure of an expanded group changes.

- Make internal pointers real pointers to get rid of those slow lookups.
  THIS IS NEARLY DONE. All I need is to clean up the use of the links
  attribute. And it would be a big win to seperate the generic part
  from the type specific, or at least use unions.

-? There is no support for pbm bitmap files, only xbm.

-? Should I remove the tkined.defaults file and use some init.tcl files
   instead? This would give some more flexibility.

-- Make PostScript dumps of selected regions or user defined media types.
   (The later may be the better/more general solution.)

-- Loading maps with expanded groups within expanded groups does not
   expand those inner groups.

-- The handling of options and user preferences should be reworked
   to make it easier to change and maintain them.

-- A label may not contain a " character because of too simple quoting
   in m_label().

-- allow user defined dialogs. There are at least three ways: 

   1. Use tcl's autoload function to search for files that contain
      dialog definitions in the form Dialog::foobar.

   2. Use some default definitions to let tkined know where it can find
      additional dialogs, e.g

	tkined.dialog.foobar: /usr/local/lib/simLan/simulan_dialog.tk

   3. Use a special ined command to define new dialogs, like

	ined create DIALOG foobar { body }

-- the ordering of tkined objects gets broken when saving a tkined image

-- better integration of URL references

-- LOG objects should save the current directory

-- stretching or shrinking networks is not well implemented. We need a
   better and more general mechanism to modify network and link points

-- stripcharts/barcharts/graphs should not be visible by applications
   so that a user can define and switch between representations. Go
   ahead and finish the DATA object.

-- predefined stream types(?): split, join, stripchart, barchart,
   file, 

-- An icon canvas widget and label for stripcharts and barcharts would
   allow to simplify the code and make things much faster.

-- An Event object should be added so that applications just throw
   out an event and Tkined is responsible to do something useful with
   it.

?? action attributes to bind popup menus to objects

?? select neighbours should select groups

?? key-codes for fast tool access

?? edit a group in another view (like good old idraw?)

