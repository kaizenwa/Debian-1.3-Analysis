@(#)$Id: INSTALL,v 2.11.2.1 1996/06/26 03:32:41 mrg Exp $

to compile ircii

  o  there are 2 main ways of configuring ircii for your system.  you
     can either run the `easyinst' script, or, if you know how to use
     gnu configure scripts, you can use that directly, and then edit
     include/config.h yourself.

  o  using easyinst:
      - in the same directory that this file is in, type `./easyinst'.
	if you are using an old version of system v, you might need
	`sh easyinst'.
      - this script asks you a few questions and then calls configure
        for you.
      - you will then need to run `make' and `make install'.

  o  using configure directly:
      - in the same directory that this file is in, type `./configure'.
	if you are using an old version of system v, you might need
	`sh configure'.

      - you can use the --with-default-server=server:port switch to set
	the default server and port.

      - this script tries to guess various things about your system
        that are important to ircii compiling.  it creates various files
        in this process.  configure takes a couple of minutes to run.

     WARNING: gnu sed vesrion 2.05 (and maybe 2.04 -- i don't know)
     will not function properly with this configure script.  gnu
     sed version 2.03 does.  please do not send me a bug report if
     you are using gnu sed version 2.05 (such as linux systems)

      - when this has finished, you might want to check the Makefile
        for the places ircii will be installed.  the defaults are
        /usr/local/lib, /usr/local/bin and /usr/local/man.  you can
        either do `make prefix=/local' or set it with configure, by
        calling configure with the `--prefix=/local' switch.

  o  compiling ircii - type `make' in the main ircii directory.  this
     will compile the `irc', `ircflush', `ircio', and `wserv'
     programs that reside in the source sub directory.

  o  once the programs are compiled, you can install them with
     `make install'.  this will install all the binaries, scripts,
     translation tables, and the ircii man page.  if you don't install
     the scripts then ircii becomes much less usable.

  o  you can now delete the object files and binaries from the source
     directory with `make clean'.  `make distclean' will also delete
     any file that `configure' created.  this is useful for then
     using the same sources to compile on a different architecture.


notes on SOCKS support.

  o  in order to compile in SOCKS support, you must use `configure'
     and specify the `--with-socks' switch.  you can optionally specify
     a path (e.g. `--with-socks=/usr/local/lib/libsocks.a').  otherwise,
     configure will look for the SOCKS library only in the directory
     specified by the `--prefix' option (`/usr/local/lib' by default).

  o  an irc server getting a connection through a SOCKS proxy will
     not be able to do RFC1413 identification properly.  if you have
     an identd running on the SOCKS proxy host, the irc server will
     incorrectly identify all users as `root'.

  o  SOCKS support is incompatible with ircii's support for non-blocking
     connects.  if you don't know what this means, don't worry about it.


notes on portability and bugs.

  o  if you encounter a bug, try the provided `ircbug' script which will
     submit a bug report and have it entered automatically into the
     ircii bugs database.  send email with the subject of `--help' (no
     body necessary, but it is ignored) to query-pr@ircii.eterna.com.au
     to see how to use this service.

  o  there is a bug in the compiler shipped with bsdi's operating
     sytem that causes ircii to fail to compile.  if you use the
     `gcc2' compiler rather than `gcc' or `cc' this problem is
     alleviated.  complain to bsdi about their broken compiler.

  o  some exotic mips machines are not yet accounted for in the
     configuration process, and must have certain things set
     specially in the Makefile (these are noted in the Makefile
     itself).

  o  there are problems with the configure script running under qnx.
     in the file qnx.patch exist patches for the defs.h.in and
     Makefile files that may need to be applied.  these can be applied
     by running `patch -p0 < qnx.pach' in the ircii directory.

  o  some versions of nextstep (3.x?) require some serious kludges
     to get ircii to compile and work.  if you have problems with
     missing __environ, __NXArgc, etc, run the make command again
     with "make CFLAGS=-O" (or "make CFLAGS='-g\ -O'" if you want
     debugging as well) for the final link, and see if that works.
     if not, you'll have to hack around with various flags, or the
     LIBS variable in the Makefile.

  o  ircII 2.9 should work on all IRIX platforms.  however, due to some
     stupid design choices by SVR4 that appear to be more losing under
     IRIX than other SVR4 derived systems, this may not be true.
