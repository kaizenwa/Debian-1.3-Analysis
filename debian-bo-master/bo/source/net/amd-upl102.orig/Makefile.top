#
# Copyright (c) 1989 Jan-Simon Pendry
# Copyright (c) 1989 Imperial College of Science, Technology & Medicine
# Copyright (c) 1989 The Regents of the University of California.
# All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Jan-Simon Pendry at Imperial College, London.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#      This product includes software developed by the University of
#      California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#
#	%W% (Berkeley) %G%
#
# $Id: Makefile.top,v 5.2.2.2 1992/05/31 16:37:29 jsp Exp $
#

# -------- Users may care to override these values --------
VER = ${REL}
SHELL = /bin/sh

# Machine architecture
ARCH = `PATH=$${PATH}:. /bin/sh ../config/arch`

# O/S Name
OS = `PATH=$${PATH}:. /bin/sh ../config/os-type`

# O/S Version number
OSVER = `OS=$${OS} PATH=$${PATH}:. /bin/sh ../config/os-version`

# version of make
Make = ${MAKE}
MAK  = ${Make} Make="${Make}" SHELL="${SHELL}"
MKCOM = -f ../Makefile.com -f ../Makefile.mods -f ../${PROG}/Makefile.${PROG} -f ../Makefile.build
MKARGS = -f Makefile.com -f Makefile.mods -f ${PROG}/Makefile.${PROG} -f Makefile.build

# -------- You should leave the rest alone! --------

OS_SUPPORTED = \
	386bsd acis43 aix3 aoi aux bsd43 bsd44 bsdi11 \
	concentrix dgux fpx4 freebsd hcx hlh42 hpux irix3 irix4 irix5 isc3 \
	linux mach2 mach3 netbsd news4 next osf1 pyrOSx riscix riscos \
	rtu6 sos3 sos4 sos5 stellix svr4 u2_2 u3_0 u4_0 u4_2 u4_3 u4_4 \
	umax43 utek utx32 xinu43

CHECK_OS_BROKEN_ON_HPUX = \
	case " ${OS_SUPPORTED} " in *" $${OS} "* ) ;; \
	*) case "$${OS}" in unknown);; *) echo "Unknown OS '$${OS}'";; esac; \
	   echo "OS should be one of ${OS_SUPPORTED}"; \
	   exit 1;; \
	esac
#
# This shell script version of the CHECK_OS works much better on all
# machines I've tried it on.  -Erez Zadok <ezk@cs.columbia.edu>
#
CHECK_OS = \
	( for i in ${OS_SUPPORTED}; do \
		if [ "x$${OS}" = "x$${i}" -o "x$${OS}" = "xunknown" ]; then \
			exit 0 ; \
		fi; \
	done; \
	echo "Unknown OS '$${OS}'"; \
	echo "OS should be one of ${OS_SUPPORTED}"; \
	exit 1 )

#
# "all" and "install" work in the architecture specific sub-directory.
# The other make rules work in the source directory.
#
make-all: all

all clean count install install.man lint amd amq mk-amd-map fsinfo fixmount wire-test hlfsd: FRC
	@CF=config OS="${OS}" ARCH="${ARCH}" MKARGS="${MKCOM}"; \
	OSVER="${OSVER}"; \
	${CHECK_OS} ; \
	echo "#	... ARCH appears to be \"$(ARCH)\"" ; \
	case "`echo ../$${CF}/M?kefile.config`" in \
	../$${CF}/Makefile.config) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.config";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.$${OS}`" in \
	../$${CF}/Makefile.$${OS}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.$${OS}";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.$${ARCH}_$${OS}`" in \
	../$${CF}/Makefile.$${ARCH}_$${OS}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.$${ARCH}_$${OS}";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.$${ARCH}_$${OS}_$${OSVER}`" in \
	../$${CF}/Makefile.$${ARCH}_$${OS}_$${OSVER}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.$${ARCH}_$${OS}_$${OSVER}";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.local`" in \
	../$${CF}/Makefile.local) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.local";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.local.$${OS}`" in \
	../$${CF}/Makefile.local.$${OS}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.local.$${OS}";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.local.$${ARCH}_$${OS}`" in \
	../$${CF}/Makefile.local.$${ARCH}_$${OS}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.local.$${ARCH}_$${OS}";; \
	esac; \
	case "`echo ../$${CF}/M?kefile.local.$${ARCH}_$${OS}_$${OSVER}`" in \
	../$${CF}/Makefile.local.$${ARCH}_$${OS}_$${OSVER}) MKARGS="$${MKARGS} -f ../$${CF}/Makefile.local.$${ARCH}_$${OS}_$${OSVER}";; \
	esac; \
	case "`echo ../A.$${ARCH}?$${OS}_$${OSVER}`" in ../A.$${ARCH}_$${OS}_$${OSVER});; *) mkdir ../A.$${ARCH}_$${OS}_$${OSVER}; esac; \
	echo cd ../A.$${ARCH}_$${OS}_$${OSVER}; \
	cd ../A.$${ARCH}_$${OS}_$${OSVER}; \
	echo $(MAK) $${MKARGS} ARCH=$${ARCH} OS=$${OS} OSVER=$${OSVER} $@; \
	$(MAK) $${MKARGS} ARCH=$${ARCH} OS=$${OS} OSVER=$${OSVER} $@

co diffs release: FRC
	$(MAK) ${MKARGS} ${MFLAGS} $@ OS=undef NAME=${NAME} REL=${REL} "VER=${VER}"

pat print tarfile sharfile filelist: FRC
	@$(MAK) ${MKARGS} ${MFLAGS} $@ OS=undef

doc:
	@$(MAK) ${MKCOM} ${MFLAGS} $@

FRC:
