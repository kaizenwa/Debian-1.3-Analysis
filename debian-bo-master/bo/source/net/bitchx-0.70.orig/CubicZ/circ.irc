eval load ~/.bxrc
echo (U
assign C0 [0;30m
assign C1 [0;34m
assign C2 [0;32m
assign C3 [0;36m
assign C4 [0;31m
assign C5 [0;35m
assign C6 [0;33m
assign C7 [0m
assign C8 [1;30m
assign C9 [1;34m
assign C10 [1;32m
assign C11 [1;36m
assign C12 [1;31m
assign C13 [1;35m
assign C14 [1;33m
assign C15 [1;37m
assign b1 [44m
assign b2 [42m
assign b3 [41m
assign b4 [43m
assign b5 [45m
assign b6 [46m
assign b7 [47m

alias tk.getmsg
{
        @tk.junk = K ## [msg]
        type ^U$tk.junk $^\^^{[$gettabkey($0)]} 
}

alias tk.getar
{
        type ^U$^\^^{[$gettabkey($0 AUTOREPLY)]}: 
}

bind ^] parse_command tk.getar 1
bind ^I parse_command tk.getmsg 1

alias doarsetup
{
        on ^public "% % *$ARTrigger*" {
                echo ${C8}\<${C11}$0${C8}\>${C7} $stripansi($2-)
                $addtabkey($0 AUTOREPLY)
        }
        on ^public_other "% % *$ARTrigger*" {
                echo ${C8}\<${C11}$0 $1${C8}\>${C7} $stripansi($2-)
                $addtabkey($0 AUTOREPLY)
        }
}
on ^send_dcc_chat * {
        echo > ${C8}=${C15}$0${C8}=${C7} $stripansi($1-)
        ^$addtabkey(\=$0)
}
on ^dcc_chat * {
        echo ${C8}=${C7}$0${C8}=${C7} $stripansi($1-)
        $addtabkey(\=$0)
}
on ^send_msg * {
        xecho -level crap > ${C8}[${C15}$0${C8}]${C7} $stripansi($1-)
        @LastMsgTMP = [$1-]
        @LastMsgSON = [$0]
        ^$addtabkey($0)
}

on ^msg * {
	if ([$msgdisplay]==[on])
           {
        	echo ${C2}[${C10}$0${C2}]${C7} $stripansi($1-) ${C3}\<${C11}\[${C7}$Z${C11}\]${C3}\:${C7}$stripansi($userhost())${C3}\>
           }{
        	echo ${C2}[${C10}$0${C2}]${C7} $stripansi($1-)
           } 
	^$addtabkey($0)
}

alias cfixsize if ([$0])
{
 @sz1 = [$0]
 @sz2 = sz1 / 1024
   if (sz2 > 0) {
  	if (sz2 >= 1024) {
		eval @function_return = [${sz2 / 1024}mb]
	}{
		eval @function_return = [${sz2}kb]}
	}
   {
	eval @function_return = [${sz1}kb]
   }{ eval @function_return = [${sz1}kb] }
} { eval @function_return = [$0kb] }

alias cffixsize { 
if ([$0])
{
 @sz1 = [$0]
 @sz2 = sz1 / 1024
   if (sz2 > 0.0) {
  	if (sz2 >= 1024) {
		eval @function_return = [${sz2 / 1024}mb/s]
	}{
		eval @function_return = [${sz2}kb/s]}
	}
   {
	eval @function_return = [${sz1}kb/s]
   } 
} { eval @function_return = [0.0kb/s] }
} { eval @function_return = [0.0kb/s] }

on ^cdcc_prepack * if ([$0]==[$C]) {msg $0     ** $2 packs ** $3 of $4 slots open, Queue : $5 of $6 ;msg $0                MinSpeed : $[-3]12kb/s   Record $cffixsize($7) ;msg $0     Total Offered $[-8]cfixsize($11) Total Grabbed $cfixsize($8) } {^notice $0       ** $2 pack ** $3 of $4 slots open, Queue : $5 of $6 ;^notice $0               MinSpeed : $[-3]12kb/s   Record $cffixsize($7) ;^notice $0          Total Offered $[-8]cfixsize($11) Total Grabbed $cfixsize($8)}
on ^cdcc_postpack -
on ^cdcc_pack * if ([$0]==[$C]) {msg $0  #$[-1]1 $[-3]4x [$[-8]cfixsize($3)] $[40]5- }{^notice $0 #$[-1]1 $[-3]4x [$[-8]cfixsize($3)]   $[40]5- }

doarsetup