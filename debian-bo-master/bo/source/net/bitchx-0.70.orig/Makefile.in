# IRC II - written by Michael Sandrof
# Copyright (c) 1991 - All Rights Reserved
# Modified by Matthew Green, 1993.
#
# @(#)$Id: Makefile.in,v 1.31.2.1 1995/11/01 13:20:28 mrg Exp $

# targets recognised by this makefile:
#   all, everything	- compiles ircii
#   install		- installs ircii and the scripts
#   installirc		- installs ircii
#   installscript 	- installs the scripts
#   installhelp		- installs the help files
#   installeverything   - all of the above
#   clean               - remove all .o files, core, and binaries
#   distclean           - remove all files geneated by compilation/installation.

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

# Where the ircII binary will be installed.
# 'make install' will compile and install the program
INSTALL_IRC = $(bindir)/BitchX

# Where the ircII library will be.  Generally this is the place that
# you put the scripts, help pages and translation tables.  It is
# very important that you set this correctly.
IRCLIB = @IRCLIB@

# Alternate paths home directory installs
#prefix = $(HOME)/irc/client
#exec_prefix = $(prefix)
#bindir = $(prefix)
#IRCLIB = $(bindir)/irclib

CC = @CC@
DEFS = @DEFS@
LIBS = @LIBS@ @DL_LIBS@

# if AIX system then -ldl will need to be changed to -lld
XREQ = @TCL_REQS@

# Remove the # from the following if you want a tcl BitchX
# If you don't have tcl.c then don't remove the # from TCL_SRCS
# TCLINC = -I@TCLINC@
# TCLLIB = @TCL_LIBS@
# TCL = -DWANT_TCL
# TCL_SRCS = tcl.c
# TCL_OBJS = tcl.o



# Set this to -g if you want to be able to debug the client, otherwise
# use -O to have the compiler do some optimization instead.
CFLAGS = @CFLAGS@
#CFLAGS = -O -g -Wall

# Set this to -s if you want the binary to be stripped.
# Also on SunOS and linux system -rdynamic might be wanted if you plan on
# using the modules and have compiled with include/config.h WANT_DLL
# defined.
LDFLAGS = @LDFLAGS@


# set this to whatever flag your compiler takes to turn on ansi mode.
# gcc is ansi by default, but you can specify -ansi anyhow.  Digital's
# 'cc' requires this, as may other non-gcc compilers.
# Typically, its "-ansi" or "-std1" or some such thing.
ANSIFLAGS = # -ansi

# Comment this out if you don't want color output. All ansi codes will then
# be stripped from output not just converted to a displayable format. 
COLOR = -DWANT_ANSI

#uncomment the following if you want the cd device player
# CD_PLAY = -DWANT_CD
# CD_SRCS = cdrom.c
# CD_OBJS = cdrom.o

# Use one of the following for mips systems:
# Choice 1, if your system has the wait3() call
# DEFS = -systype bsd43
# Choice 2, if your system has the wait2() call
# DEFS = -systype bsd43 -Duse_wait2
#
# Or, if you only have sysv installed, use one of the following:
# DEFS = -DMIPS_SYSV
# DEFS = -DMIPS_SYSV -Duse_wait2

## You probably don't need to change anything below this line

# Full path of the directory for ircII help files.  
# The help files are not within the source distribution, if you don't have
# them and want them, check out your nearest ircII archive.
# You may comment HELP_DIR, then the ircIIhelp service will be used.
# If you don't comment it out and want to use the IRCIIHelp service anyway,
# you must make sure that the directory doesn't exist.
HELP_DIR = $(IRCLIB)/help

# Full path of the directory in which to copy the
# IRCII scripts supplied with the code.  These scripts
# may be loaded by using the LOAD command in IRCII.
INSTALL_SCRIPT = $(IRCLIB)/script

# Default setting for IRC_PATH where irc will look for
# its script files if the environment variable is undefined.
# Usually, this should contain the same path as used for INSTALL_SCRIPT in
# the Makefile, but it can contain multiple path elements
# separated by colons. The path MUST lead to an existing directory,
# because the 'global' script is expected to be found there.
IRC_PATH = ~/.irc:$(INSTALL_SCRIPT):~/.BitchX:~/.Ctoolz:.

# This command will be used to install the irc help files.  If you don't
# want to install them, replace with the following:
# INSTALL_HELP_CMD = @echo The help files have not been installed.
INSTALL_HELP_CMD = @INSTALL_HELP_CMD@

## You shouldn't have to change anything below here

srcdir = .

RM = @RM@
LN = @LN@
CP = cp
MV = mv
INSTALL = ./bsdinstall -c -m 755
INSTALL_DATA = ../bsdinstall -c -m 644

VERSION = @VERSION@
_VERSION_ = BitchX

SHELL = /bin/sh
MAKE = make $(MFLAGS)
MFLAGS ='CC=$(CC)'					\
	'ANSIFLAGS=$(ANSIFLAGS)'			\
	'CFLAGS=$(CFLAGS)'				\
	'DEFS=$(DEFS)'					\
	'HELP_DIR=$(HELP_DIR)'				\
	'INSTALL_IRC=$(INSTALL_IRC)'			\
	'IRCLIB=$(IRCLIB)'				\
	'IRCPATH=$(IRC_PATH)'				\
	'LDFLAGS=$(LDFLAGS)'				\
	'LIBS=$(LIBS)'					\
	'LN=$(LN)'					\
	'_VERSION_=$(_VERSION_)'			\
	'RM=$(RM)'					\
	'COLOR=$(COLOR)'				\
	'TCL=$(TCL)'					\
	'TCL_SRCS=$(TCL_SRCS)'				\
	'TCL_OBJS=$(TCL_OBJS)'				\
	'CD_PLAY=$(CD_PLAY)'				\
	'CD_SRCS=$(CD_SRCS)'				\
	'CD_OBJS=$(CD_OBJS)'				\
	'TCLLIBFN=@TCLLIBFN@'				\
	'TCLINC=$(TCLINC)'				\
	'XREQ=${XREQ}' 					\
	'XLIBS=${TCLLIB}'

all: BitchX
everything: all

install: all installbin installscript

BitchX: source/Makefile Makefile
	@cd source; $(MAKE) all

dll: dll/Makefile Makefile
	@cd dll; $(MAKE) 

installeverything: install installscript installhelp

installbin: installirc

installirc: BitchX installdirs
	$(INSTALL) source/BitchX $(INSTALL_IRC)-$(VERSION)
	@if test -f $(INSTALL_IRC).old; then $(RM) $(INSTALL_IRC).old; fi
	@if test -f $(INSTALL_IRC); then $(MV) $(INSTALL_IRC) $(INSTALL_IRC).old; fi
	$(RM) $(INSTALL_IRC)
	$(LN) $(INSTALL_IRC)-$(VERSION) $(INSTALL_IRC)

installscript: installdirs
	-chmod -x script/*
	-@(								\
		if test -f $(INSTALL_SCRIPT)/local; then		\
			if test -f script/local; then 			\
				$(MV) script/local script/local.orig;	\
			fi;						\
		fi							\
	)
	cd script; for i in *; do $(INSTALL_DATA) $$i $(INSTALL_SCRIPT); done

installhelp: installdirs
	if test -f epic-2.003-help.tar.gz; then
		tar zxvf epic-2.003-help.tar.gz
		(cd help; tar cf - .) | (cd $(HELP_DIR); tar xf -)
	fi

installdirs:
	umask 022; ./mkinstalldirs $(IRCLIB) $(bindir) $(INSTALL_SCRIPT)

clena clean:
	@-if test -f source/Makefile; then cd source; $(MAKE) clean; cd ../dll; $(MAKE) clean; fi

distclean cleandir realclean: clean
	$(RM) Makefile source/Makefile dll/Makefile source/sig.inc config.status config.cache config.log easyinst.status include/defs.h

lint:
	@if test -f source/Makefile; then cd source; $(MAKE) lint; fi

autoconf: configure

configure: configure.in acconfig.h
	autoconf

autoheader: include/defs.h.in

include/defs.h.in: configure.in acconfig.h
	autoheader

export: distclean autoheader autoconf

package: export
	(cd ..;tar zcvf ircii-$(VERSION).tar.z ircii-2.8; )
