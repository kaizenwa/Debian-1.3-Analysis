dnl ----------------------------------------------------------
dnl configure.in for ircii, 2.3.  copyright (c) matthew green, 1993,
dnl except those bits attributed otherwise.
dnl thanks to the screen 3.3 configure.in for giving me examples to
dnl work from and steal ;)
dnl
dnl @(#)$Id: configure.in,v 1.47 1995/01/23 13:12:56 mrg Exp $

AC_REVISION($Revision: 1.48 $)dnl
AC_INIT(source/irc.c)
AC_CONFIG_HEADER(include/defs.h)



dnl ----------------------------------------------------------
dnl
dnl grok the version number - from source/irc.c
dnl

VERSION=`sed -n -e 's/";$//' -e '/const char irc_version.. = "/s///p' -e '/const char irc_version/q' < source/irc.c` 
echo this is ircii version $VERSION
echo
AC_SUBST(VERSION)




dnl ----------------------------------------------------------
dnl
dnl initial stuff
dnl

AC_PROG_CC
AC_PROG_CPP
AC_ISC_POSIX
AC_AIX
AC_PROG_GCC_TRADITIONAL


dnl ----------------------------------------------------------
dnl ----------------------------------------------------------
dnl
dnl System specific checks
dnl
dnl ----------------------------------------------------------
dnl ----------------------------------------------------------


dnl
dnl get these once.  check them later
dnl
unamer=`uname -r 2> /dev/null`
unames=`uname -s 2> /dev/null`

dnl ----------------------------------------------------------
dnl
dnl check for hpux, and hpux version
dnl

AC_MSG_CHECKING(for hpux version)
if test -f /hp-ux; then
  AC_MSG_RESULT(yes)
  hpux=1
  case $unames in
	A.09* | A.9* | a.9* | a.09* | 9* | 09*)
		;;
	A.08* | A.8* | a.8* | a.08* | 8* | 08*)
		AC_DEFINE(HPUX8)
		;;
	A.07* | A.B7* | A.7* | a.7* | a.07* | 7* | 07*)
		AC_DEFINE(HPUX7)
		;;
	*)
		AC_DEFINE(HPUXUNKNOWN)
		;;
  esac
else
  AC_MSG_RESULT(no)
fi



dnl ----------------------------------------------------------
dnl
dnl check for NeXT.. and -bsd switch
dnl

AC_MSG_CHECKING(for NeXT)
AC_EGREP_CPP(yes,
[#if defined(NeXT) || defined(__NeXT) || defined(__NeXT__)
  yes
#endif
],nextstep=1)

if test -n "$nextstep"; then
  AC_MSG_RESULT(yes)
  CFLAGS="$CFLAGS -posix"
  LIBS="$LIBS -lposix"
else
  AC_MSG_RESULT(no)
fi



dnl ----------------------------------------------------------
dnl
dnl check for ptx
dnl

AC_MSG_CHECKING(for sequent/ptx)
AC_EGREP_CPP(yes,
[#ifdef _SEQUENT_
  yes
#endif
], LIBS="$LIBS -lseq" seqptx=1 AC_MSG_RESULT(yes), AC_MSG_RESULT(no))



dnl ----------------------------------------------------------
dnl
dnl Checking for qnx
dnl

AC_MSG_CHECKING(for qnx)
case "$unames" in
  QNX*)
    AC_MSG_RESULT(yes)
    LDFLAGS=-N64k                  dnl 64k of stack
    CFLAGS="-w4 -O -g -fi=unix.h"  dnl better compile options
  ;;
  *)
    AC_MSG_RESULT(no)
esac




dnl ----------------------------------------------------------
dnl
dnl Checking for solaris
dnl

AC_MSG_CHECKING(for solaris)
if /bin/sun 2> /dev/null
then
	case "$unamer" in
	4.*)
		AC_MSG_RESULT(no) 
		sunos4=1
		;;
	5.*)
		AC_MSG_RESULT(yes)
		AC_DEFINE(__solaris__)
		AC_DEFINE(SVR4)
		svr4=1
		;;
	esac
else
	AC_MSG_RESULT(no)
	AC_MSG_CHECKING(for SVR4)
	AC_EGREP_CPP(yes, [

#if defined(SVR4) || defined(__svr4__)
  yes
#endif
	], svr4=1)
fi

if test -n "$svr4"
then
	AC_MSG_RESULT(yes)
	LIBS="-L/usr/ccs/lib $LIBS"
	AC_DEFINE(SVR4)
else
	if test ! -n "$sunos4"
	then
		AC_MSG_RESULT(no)
	fi
fi
AC_CHECK_LIB(sun, getpwnam)


dnl ----------------------------------------------------------
dnl
dnl do ultrix/posix stuff
dnl

AC_MSG_CHECKING(for ultrix)
case "$unames" in
	ULTRIX | Ultrix | ultrix)
		AC_MSG_RESULT(yes.  We'll not use POSIX termios then.)
		test -z "$GCC" && CC="$CC -YBSD"
		ultrix = 1
		;;
	*)
		AC_MSG_RESULT(no)
		AC_MSG_CHECKING(for POSIX.1)
		AC_EGREP_CPP(yes, [

#include <sys/types.h>
#include <unistd.h>
main () 
{
#ifdef _POSIX_VERSION
yes
#endif
}

		],
		AC_DEFINE(POSIX) AC_MSG_RESULT(yes); posix=1,
		AC_MSG_RESULT(no))
		;;
esac


dnl ----------------------------------------------------------
dnl
dnl testing for svr3/wollengong tcp's /usr/netinclude
dnl

AC_MSG_CHECKING(for -I/usr/netinclude)
if test -d /usr/netinclude; then
  AC_MSG_RESULT(yes)
  CFLAGS="$CFLAGS -I/usr/netinclude"
else
  AC_MSG_RESULT(no)
fi
  




dnl ----------------------------------------------------------
dnl
dnl Checking for headers, functions, and a type declarations
dnl

AC_CHECK_HEADERS(fcntl.h limits.h memory.h netdb.h stdarg.h string.h)
AC_CHECK_HEADERS(sys/fcntl.h sys/file.h sys/ptem.h sys/select.h)
AC_CHECK_HEADERS(sys/syslimits.h sys/time.h sys/twg_config.h sys/un.h)
AC_CHECK_HEADERS(sys/wait.h termcap.h unistd.h)

AC_CHECK_FUNC(fchmod,, AC_DEFINE(NEED_FCHMOD))
AC_CHECK_FUNC(getcwd,, AC_DEFINE(NEED_GETCWD))
AC_CHECK_FUNC(getpass, AC_DEFINE(HAVE_GETPASS),)
AC_CHECK_FUNC(getpgid, AC_DEFINE(HAVE_GETPGID),)
AC_CHECK_FUNC(gettimeofday, AC_DEFINE(HAVE_GETTIMEOFDAY),)
AC_CHECK_FUNC(memmove, AC_DEFINE(HAVE_MEMMOVE),)
AC_CHECK_FUNC(scandir, AC_DEFINE(HAVE_SCANDIR),)
AC_CHECK_FUNC(setsid, AC_DEFINE(HAVE_SETSID),)
AC_CHECK_FUNC(strtoul,, AC_DEFINE(NEED_STRTOUL))
AC_CHECK_FUNC(strerror,, AC_DEFINE(NEED_STRERROR))
AC_CHECK_FUNC(sysconf, AC_DEFINE(HAVE_SYSCONF),)
AC_CHECK_FUNC(uname, AC_DEFINE(HAVE_UNAME),)

AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_DIRENT
AC_TYPE_SIGNAL
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T


dnl ----------------------------------------------------------
dnl
dnl testing for WINS
dnl

if test x$ac_cv_header_sys_twg_config_h = xyes
then
  AC_DEFINE(WINS)
fi


dnl ----------------------------------------------------------
dnl
dnl check for struct linger
dnl

AC_MSG_CHECKING(for struct linger)
AC_EGREP_HEADER([struct( |	)*linger], sys/socket.h, AC_MSG_RESULT(yes), AC_DEFINE(NO_STRUCT_LINGER) AC_MSG_RESULT(no, ugh.))



dnl ----------------------------------------------------------
dnl
dnl We need getsid(), getpgid(), or getpgrp().
dnl

if test x$ac_cv_func_getsid != xyes && test x$ac_cv_func_getpgid != xyes
then
  AC_CHECK_FUNC(getpgrp, AC_FUNC_GETPGRP, echo No job control. Game over.)
fi



dnl ----------------------------------------------------------
dnl
dnl work out wait type..
dnl

if test x$posix != x1
then
AC_MSG_CHECKING(for bsd wait)
AC_TRY_LINK(
[
#include <sys/types.h>
#include <sys/wait.h>
],
[
	union wait x;
	int y;
#ifdef WEXITSTATUS
	y = WEXITSTATUS(x);
#endif
],
	AC_MSG_RESULT(yes) AC_DEFINE(BSDWAIT) bsdwait=1,
	AC_MSG_RESULT(no) AC_CHECK_FUNC(waitpid,, AC_DEFINE(NEED_WAITPID))
        )
fi



dnl ----------------------------------------------------------
dnl
dnl checking for select()
dnl

olibs="$LIBS"
AC_CHECK_FUNC(select, ,
  AC_CHECK_LIB(socket, select, LIBS="$LIBS -lsocket",
    AC_CHECK_LIB(nsl, select, LIBS="$LIBS -lnsl",
      AC_CHECK_LIB(inet, select, LIBS="$LIBS -linet",
        AC_CHECK_LIB(cposix, select, LIBS="$LIBS -lcposix",
          AC_CHECK_LIB(net, select, LIBS="$LIBS -lnet",
            AC_MSG_WARN(i can not find select.  you might need to help me)))))))



dnl ----------------------------------------------------------
dnl
dnl termcap or curses
dnl
if test x$hpux = x1 -o x$aix = x1
then
	LIBS="-lcurses $LIBS"
	AC_DEFINE(USING_CURSES)
else
  olibs="$LIBS"
  AC_CHECK_LIB(termcap, tgetent, LIBS="-ltermcap $olibs",
    AC_CHECK_LIB(termlib, tgetent, LIBS="-ltermlib $olibs",
      AC_CHECK_LIB(curses, tgetent, LIBS="-lcurses $olibs",
        AC_CHECK_LIB(xtermcap, tgetent, LIBS="-lxtermcap $olibs",
          AC_MSG_WARN(i can not find tgetent.  you might need to help me)))))
fi



dnl ----------------------------------------------------------
dnl
dnl signal handling
dnl

AC_CHECK_FUNCS(sigaction sigset signal, break)
if test -n "$ac_cv_func_sigaction"; then
  if test -n "$ac_cv_func_sigset"; then
    AC_MSG_CHECKING(for reliable signals)
    AC_TRY_RUN([
#include <sys/types.h>
#include <signal.h>

#ifndef SIGCHLD
# define SIGCHLD SIGCLD
#endif
#ifdef USE_SIGSET
# define signal sigset
#endif

int got;

#ifdef SIGVOID
void
#endif
hand()
{
  got++;
}

main()
{
  (void)signal(SIGCHLD, hand);
  kill(getpid(), SIGCHLD);
  kill(getpid(), SIGCHLD);
  if (got < 2)
    exit(1);
  exit(0);
}
    ], AC_MSG_RESULT(looks ok.),
    AC_DEFINE(SYSVSIGNALS) AC_MSG_RESULT(ugh. no),
    AC_DEFINE(SYSVSIGNALS) AC_MSG_RESULT(cross-compiling.  No assumptions made)
    )
  fi
fi


dnl ----------------------------------------------------------
dnl
dnl use wait3 or waitpid?
dnl

if test x$bsdwait = x1
then
  AC_MSG_CHECKING(for wait3 declaration)
  AC_EGREP_CPP([wait3( |	|\()], dnl )
[
#include <sys/types.h>
#include <signal.h>
#include <sys/wait.h>
], AC_DEFINE(WAIT3_DECLARED) AC_MSG_RESULT(yes), AC_MSG_RESULT(no))
else
  AC_MSG_CHECKING(for waitpid declaration)
  AC_EGREP_CPP([waitpid( |	|\()], dnl )
[
#include <sys/types.h>
#include <signal.h>
#include <sys/wait.h>
], AC_DEFINE(WAITPID_DECLARED) AC_MSG_RESULT(yes), AC_MSG_RESULT(no))
fi

dnl
dnl sun_len in <sys/un.h>?
dnl

AC_MSG_CHECKING(for sun_len in <sys/un.h>)
AC_EGREP_CPP([sun_len], 
[
#include <sys/un.h>
], AC_DEFINE(HAVE_SUN_LEN) AC_MSG_RESULT(yes), AC_MSG_RESULT(no))


dnl ----------------------------------------------------------
dnl
dnl check for sys_errlist declaration
dnl

AC_MSG_CHECKING(for sys_errlist declaration)
AC_TRY_RUN([
#include <sys/types.h>
#include <stdio.h>
#include <errno.h>
main()
{
  char *s = sys_errlist[0];
  exit(0);
}
],
  AC_MSG_RESULT(yes)
  AC_DEFINE(SYS_ERRLIST_DECLARED),
  AC_MSG_RESULT(no), :)



dnl ----------------------------------------------------------
dnl
dnl need this for dcc stuff
dnl

AC_CHECK_SIZEOF(unsigned int, 4)
if test "$ac_cv_sizeof_unsigned_int" = 4; then
	AC_DEFINE(UNSIGNED_INT32)
else
	AC_CHECK_SIZEOF(unsigned long, 4)
	if test "$ac_cv_sizeof_unsigned_long" = 4; then
		AC_DEFINE(UNSIGNED_LONG32)
	else
		AC_DEFINE(UNKNOWN_32INT)
	fi
fi



dnl ----------------------------------------------------------
dnl
dnl Generate signal list
dnl this is all stolen from perl-4.036's Configure.  larry is god.
dnl

echo "generating a list of signal names..."
set X `cat /usr/include/signal.h /usr/include/sys/signal.h /usr/include/signal.h 2>&1 | awk '
$1 ~ /^#define$/ && $2 ~ /^SIG[A-Z0-9]*$/ && $3 ~ /^[1-9][0-9]*$/ {
  [sig[$3] = substr($2,4,20)]
  if (max < $3 && $3 < 60) {
	max = $3
  }
}

END {
  for (i=1; i<=max; i++) {
    [if (sig[i] == "")]
      printf "%d", i
    else
      [printf "%s", sig[i]]
    if (i < max)
      printf " "
  }
  printf "\n"
}
'`
shift
case $# in
0)
  if test -f /bin/csh; then
     set X `/bin/csh -cf 'kill -l'`
     shift
     case $* in
     0) 
       set HUP INT QUIT ILL TRAP ABRT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM
       ;;
    esac
  fi
  ;;
esac

sig_name="ZERO $*"
if test -f source/sig.inc; then
  /bin/rm -f source/sig.inc
fi
[echo $sig_name | sed -e 's/$/"};/' -e 's/ /", "/g' -e 's/^/char *signals[] = { "/' >> source/sig.inc]



dnl ----------------------------------------------------------
dnl
dnl work out UNIX mail dir..
dnl

AC_MSG_CHECKING(for unix mail directory)

for foo in /var/spool/mail /usr/spool/mail /var/mail /usr/mail
do
  if test -d $foo; then
    mdir=$foo
    break
  fi
done

if test -n "$mdir"; then
  UNIX_MAIL=\"$mdir\"
else
  UNIX_MAIL=\"unknown\"
fi

AC_MSG_RESULT($mdir)

AC_DEFINE_UNQUOTED(UNIX_MAIL, "$mdir")





dnl ----------------------------------------------------------
dnl ----------------------------------------------------------
dnl
dnl closing stuff
dnl
dnl ----------------------------------------------------------
dnl ----------------------------------------------------------


dnl ----------------------------------------------------------
dnl
dnl libraries
dnl

if test ! -n "$libsocket"; then
	AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket",)
fi

dnl this is for isc.  need the nsl_s library as well.
if test ! -n "$libinet"; then
	AC_CHECK_LIB(inet, socket, libnsl=1; LIBS="$LIBS -linet -lnsl_s",)
fi

if test ! -n "$libnsl"; then
	AC_CHECK_LIB(nsl, gethostname, LIBS="$LIBS -lnsl",)
fi

AC_CHECK_LIB(dgc, inet_addr, LIBS="$LIBS -ldgc",)
AC_CHECK_LIB(resolv, gethostbyname,
  olibs=$LIBS
  LIBS="$LIBS -lresolv"
  AC_TRY_RUN([
#include <netdb.h>
main()
{
  struct hostent *hp;

  hp = gethostbyname("foo");
  exit(0);
}
],,LIBS=$olibs, :))

dnl check for crypt() library call in libcrypt
AC_CHECK_LIB(crypt, crypt, LIBS="$LIBS -lcrypt",)

dnl check for gnu malloc, less hoggy than bsd's.
AC_CHECK_LIB(gnumalloc, malloc, LIBS="$LIBS -lgnumalloc",)


dnl ----------------------------------------------------------
dnl 
dnl find unix programs, determine compiling flags, and write it all
dnl

if test -z "$CFLAGS"; then CFLAGS=-g ; fi
if test -z "$LDFLAGS"; then LDFLAGS= ; fi
RM="rm -f"
LN="ln -s"

if test ! -n "$bindir";
then
	bindir=\${exec_prefix}/bin
fi

if test ! -n "$IRCLIB";
then
	IRCLIB=\${prefix}/lib/irc
fi

if test -n "$nextstep"; then
  LIBS=`echo $LIBS | sed -e 's/-lposix/-lsys_s -lposix/'`
fi

AC_SUBST(RM)
AC_SUBST(LN)
AC_SUBST(IRCLIB)
AC_SUBST(bindir)
AC_OUTPUT(Makefile source/Makefile)


dnl ----------------------------------------------------------
dnl
dnl Commencement
dnl

echo
echo well there we are, you now might want to look in include/config.h
echo and see if there is anything you might want to tune, else you can
echo just run a make here..  good luck!
echo

