	Frequently Asked Questions for BitchX by panasync

Panasync: email edwac@sk.sympatico.ca
Author: rumble
Date: October 17, 1996

Purpose:  This faq is a sort of union of all the important Doc's for BitchX
	thrown together in a unified form.  This will probably go nowhere.
	This is also a one-night thing that I did in about an hour.  There
	is not much info in this thing, so add things to it,etc, msg me with
	your ideas so that bitchx can have an effective new-user FAQ.

##A: Information on BitchX

1. Introduction:

	BitchX is an innovative and dynamic substitute IRC client for ircii
	to be run on unix platforms.  Its author, Panasync, is constantly
	revising, upgrading, and fixing this client, and as a result, has
	many features which do not exist in any other publically available
	client.  It is most likely the best ircii client created to this date.

2. What OS's will BitchX run on?

	According to some people, BitchX will work without much problem on the
	following UNIX flavours:  HP-UX, DEC Unix, BSDI 2.0 and 2.1, SunOS 5, 
	SunOS 4.1.x, Ultrix, AIX, Irix, and (perhaps most importantly) Linux.	

3. What does BitchX need to run?

	At a bare minimum, you need to have a shell account with at least 1 Meg
	of free space on your quota.  Other than that, you'll just have to see
	if BitchX will work straight out of the box.  With a small donation of
	time, you should be able to get BitchX working within a very short time
	period.

##B: Getting BitchX

1. Where is BitchX available?

	(Note: look for filenames of ircii-pana-??.tar.gz and such)

        Primary site: sunsite.unc.edu /pub/Linux/system/Network/chat/
	Alternate sites: ftp.thirdwave.net /pub/irc/clients/BitchX
			ftp.novasys.com /pub/irc/BitchX
			ftp.sodre.net /pub/users/espresso/irc/clients/BitchX
			ftp.rotfl.com
			ftp://nctuccca.edu.tw
	Primary Web site:  www.sasknet.com/~pionh
		* - try it out

	BitchX is also available while on EFnet by dcc.
		Official BitchX channel:  #bitchx on the EFNet

	/msg panasync cdcc list
	    ^For the newest binary (usually, the binary is released before the 
	source is.  Also, getting the binary is probably best for new users
	because it requires no compilation or other complicated procedures).
		Note: The actual title is usually:  BitchX-68D linux binary
	Binary for other operating systems are usually available by asking.

	More good news!!  Thanks to panasync's great work, BitchX is becoming
	a part of the Debian Linux Distribution.  Way to go!!

2. What to do when you have the source.

	At this time, read the INSTALLATION file that comes with the source
	for the most complete instructions.

##C: Compiling BitchX: Reoccuring questions, etc

1. Tips on compiling.

	For now, simply read the documentation that comes with the BitchX
	source ~/BitchX/INSTALLATION for tips on successfull compilation.

##D: What to do when BitchX is up and running.

1. What to do after installation is over.

	After installation of a binary, either by getting a precompiled binary
	or by compiling the source, yourself, you will need to run the binary.
	Hopefully the binary is in your search path.  Type BitchX or an
	alternative name for your ircii-pana binary.  It will act just the same
	as ircii, obviously.  Take a little time to view the help files.

	If you haven't already done so, create a .BitchX directory in you home
	directory.  Then move the BitchX.help file in /BitchX/CubicZ to that
	dir.  From within irc, utilize the /bhelp index command and explore.

2. Choosing a script, what to look for.

	As panasync often says, he made BitchX a standalone client for use
	without "scripts".  This does not mean that scripts have no place.  
	The most popular scripts include whirred and scz-te.  Both of these
	scripts are unique in that scz-te does a good job using BitchX's
	special features, while not wasting CPU time and/or memory.  Whirred
	is a more comprehensive and complete script pack which is more feature-
	filled.  It takes time to decide if you want to use a script.  
		
	This question is answered in this FAQ becuase it is FA'ed!!

3. Botlists, user lists, friendslists.

	BitchX contains very comprehensive friends/shit listing features.  The
	command for both is the same, but uses a numeric style permission model.
	/adduser <nick|host mask> <channel|*> [userlevel] [auto-op] [protection]
	To add a friend to your internal list, type the following quick-ref:

		/adduser rumble #bitchx 50 2 1 
	This will give user rumble auto-op on #bitchx at all times, and you 
	will deop anybody who deops rumble, and rumble is not exempt from flood
	protection.  For more detailed help, read the online help.

4. The BitchX auto-op feature doesn't want to work!

	Assuming that the correct user-permissions have been outlined, there is
	one major thing that people neglect to do.  First, and most common, you
	need to /set aop on in order to auto-op people.  Also, in clients before
	68 or so (not too sure, hehe) there were problems with the Aop feature,
	of which most known problems have been fixed, for now anyways. :)

5. Saving all of your stuff.

	Assuming you decide to mess around with the /set's etc, things will
	need to be saved to a file in order to take affect next session.  The
	/saveall command will make a file and record all /set's, userlists, and
	other variables.  This will make your changes permanent, until you want
	to change them back again! :) (BTW, you can delete your save file which
	effectively removes all the changes you make!)

6. Customizing your shell for BitchX and ircii.

	There are quite a few things that you can do to your shell in order
	to enhance your irc experience.  I will go over a few of the basics.
	First of all, we shall assume that you are using the bash shell.  If
	you are using the tcsh/csh/korn shell, you will have to figure this
	out for yourselves for the most part.  However, for the c shells, the
	setenv PATH="" command effectively replaces export PATH="".  To create
	a standard file that is read every time you load up your shell (ie. 
	every time you login), you will want to edit the file called .profile, 
	.bash_profile, or .cshrc depending on your shell.  Place all the lines
	in the following paragraph in either of those files.

	To set a default ircserver:  export IRCSERVER="irc-2.mit.edu"
	a default realname field:    export IRCNAME="Are we there yet?"
	a default IRC nick:          export IRCNICK="biggahuna"
	There are others, inquire about them.

##D: Writing scripts for BitchX, your .ircrc

1. What files does bitchx read when it loads?

	BitchX reads two files, generally, on startup.  One is called .ircrc
	which is common to ircii as well as to BitchX.  The other file is
	.bitchxrc, which is much less common.  You can put any commands you
	want executed on startup into these files, and they will be read when
	the client loads.  Loading scripts, or creating aliases such as:
		alias j join
	are appropriately placed into .ircrc

2. What are set format's?

	Set format's are panasync's way of allowing users of BitchX to create
	their own look and feel within bitchx, without writing slow "on 
	^window" commands and such, as found in scripts such as lice.  Within
	these BitchX-unique set functions is the ability to create a fast,
	colourful look for your client.

3. What the colour codes mean.
	(This is taken straight out of ~/BitchX/doc/BitchX-format and 
	summarized\appended by me)

	Colour Selections

	%W %w bold white and white
	%K %k bold black and black
	%G %g bold green and green
	%Y %y bold yellow and yellow
	%C %c bold cyan and cyan
	%B %b bold blue and blue
	%P %p bold purple/magenta(whatever) and purple/magenta(whatever)
	%M %m "		"	"	"	"	"	"	"
	%R %r bold red and red
	%n null colour (colour off)
	%0-9 Background colors
	%F flashing foreground
	%U underline text.

4. Using the colour codes.

	All of the above %?'s can be used in /set format_'s to customize the
	colour output.  By typing:
		/set format_mail %RMail%n has arrived with %YYour%n name on it!
	This will cause the normal You have new mail message to output:
		Mail has arrived with Your name on it!
	where the word "Mail" will appear red, "has arrived with" will appear
	normal, "Your" appearing bold yellow, and "name on it!" will appear
	normal.  This can be done for all set format_'s!

5. Ok, how do I know what $0, $1 etc mean in the set format_'s?

	Well, there is no rule because each set format_ has a different purpose
	and time to appear.  If you are up to extensive testing, try making the
	/set format_ functions you are curious equal to $0 by inputing:
		/set format_whois_nick $0-
	The next time you do a whois on somebody it will display something 
	like: 
		-------------------------------------- - -- --
		panasync edwards sabre40.sk.sympatico.ca
		Realname	| BitchX: Are we there yet?
		....
		|_______________________________
	in this instance, $0 is "panasync" $1 is "edwards" and $2 is "sabre40.*"
	and so on.  You can try this with every set format_, but it does get
	very tedious.

