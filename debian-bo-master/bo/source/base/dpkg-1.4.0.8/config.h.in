/* config.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define to empty if the keyword does not work.  */
#undef const

/* Define if you don't have vprintf but do have _doprnt.  */
#undef HAVE_DOPRNT

/* Define if you have the vprintf function.  */
#undef HAVE_VPRINTF

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef mode_t

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef pid_t

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
#undef WORDS_BIGENDIAN

/* Define if inline functions a la GCC are available.  */
#undef HAVE_INLINE

/* Define if sysinfo is available.  */
#undef HAVE_SYSINFO

/* Define if __NR_sysinfo is available.  */
#undef HAVE_NRSYSINFO

/* Define if inline functions a la GCC are available.  */
#undef HAVE_ALPHASORT_DECLARATION

/* Define if function attributes a la GCC 2.5 and higher are available.  */
#undef HAVE_GNUC25_ATTRIB

/* Define if constant functions a la GCC 2.5 and higher are available.  */
#undef HAVE_GNUC25_CONST

/* Define if nonreturning functions a la GCC 2.5 and higher are available.  */
#undef HAVE_GNUC25_NORETURN

/* Define if printf-format argument lists a la GCC are available.  */
#undef HAVE_GNUC25_PRINTFFORMAT

/* Set this to the canonical Debian architecture string for this CPU type. */
#undef ARCHITECTURE

/* Set this to 1 to build new archives by default. */
#define BUILDOLDPKGFORMAT 0

/* Set this string to append something to the version number. */
#define ARCHBINFMT ""

/* The number of bytes in a unsigned int.  */
#undef SIZEOF_UNSIGNED_INT

/* The number of bytes in a unsigned long.  */
#undef SIZEOF_UNSIGNED_LONG

/* Define if you have the alphasort function.  */
#undef HAVE_ALPHASORT

/* Define if you have the scandir function.  */
#undef HAVE_SCANDIR

/* Define if you have the strerror function.  */
#undef HAVE_STRERROR

/* Define if you have the strsignal function.  */
#undef HAVE_STRSIGNAL

/* Define if you have the strtoul function.  */
#undef HAVE_STRTOUL

/* Define if you have the unsetenv function.  */
#undef HAVE_UNSETENV

/* Define if you have the vsnprintf function.  */
#undef HAVE_VSNPRINTF

/* Define if you have the <sys/cdefs.h> header file.  */
#undef HAVE_SYS_CDEFS_H

/* These are from config.h.bot, pasted onto the end of config.h.in. */

#ifdef HAVE_SYS_CDEFS_H
#include <sys/cdefs.h>
#endif

/* Use the definitions: */

/* Give us an unsigned 32-bit data type. */
#if SIZEOF_UNSIGNED_LONG==4
#define UWORD32 unsigned long
#elif SIZEOF_UNSIGNED_INT==4
#define UWORD32 unsigned int
#else
#error I do not know what to use for a UWORD32.
#endif

/* The maximum length of a #! interpreter displayed by dpkg-deb. */
#ifdef PATH_MAX
#define INTERPRETER_MAX PATH_MAX
#else
#define INTERPRETER_MAX 1024
#endif

/* GNU C attributes. */
#ifndef FUNCATTR
#ifdef HAVE_GNUC25_ATTRIB
#define FUNCATTR(x) __attribute__(x)
#else
#define FUNCATTR(x)
#endif
#endif

/* GNU C printf formats, or null. */
#ifndef ATTRPRINTF
#ifdef HAVE_GNUC25_PRINTFFORMAT
#define ATTRPRINTF(si,tc) format(printf,si,tc)
#else
#define ATTRPRINTF(si,tc)
#endif
#endif
#ifndef PRINTFFORMAT
#define PRINTFFORMAT(si,tc) FUNCATTR((ATTRPRINTF(si,tc)))
#endif

/* GNU C nonreturning functions, or null. */
#ifndef ATTRNORETURN
#ifdef HAVE_GNUC25_NORETURN
#define ATTRNORETURN noreturn
#else
#define ATTRNORETURN
#endif
#endif
#ifndef NONRETURNING
#define NONRETURNING FUNCATTR((ATTRNORETURN))
#endif

/* Combination of both the above. */
#ifndef NONRETURNPRINTFFORMAT
#define NONRETURNPRINTFFORMAT(si,tc) FUNCATTR((ATTRPRINTF(si,tc),ATTRNORETURN))
#endif

/* GNU C constant functions, or null. */
#ifndef ATTRCONST
#ifdef HAVE_GNUC25_CONST
#define ATTRCONST const
#else
#define ATTRCONST
#endif
#endif
#ifndef CONSTANT
#define CONSTANT FUNCATTR((ATTRCONST))
#endif

/* Declare strerror if we don't have it already. */
#ifndef HAVE_STRERROR
const char *strerror(int);
#endif

/* Declare strsignal if we don't have it already. */
#ifndef HAVE_STRSIGNAL
const char *strsignal(int);
#endif

/* Declare scandir if we don't have it already. */
#ifndef HAVE_SCANDIR
struct dirent;
int scandir(const char *dir, struct dirent ***namelist,
            int (*select)(const struct dirent *),
            int (*compar)(const void*, const void*));
#endif

/* Declare alphasort if we don't have it already. */
#if !defined(HAVE_ALPHASORT) || !defined(HAVE_ALPHASORT_DECLARATION)
struct dirent;
int alphasort(const struct dirent *a, const struct dirent *b);
#endif

/* Declare unsetenv if we don't have it already. */
#ifndef HAVE_UNSETENV
void unsetenv(const char *x);
#endif

/* Define strtoul if we don't have it already. */
#ifndef HAVE_STRTOUL
#define strtoul strtol
#endif

/* Sort out sysinfo */
#if !defined(HAVE_SYSINFO) && defined(HAVE_NRSYSINFO)
#include <linux/sys.h>
#include <linux/kernel.h>
#include <linux/unistd.h>
static inline _syscall1(int,sysinfo,struct sysinfo*,info)
#endif

/* Define WCOREDUMP if we don't have it already - coredumps won't be
 * detected, though.
 */
#ifndef WCOREDUMP
#define WCOREDUMP(x) 0
#endif

/* Set BUILDOLDPKGFORMAT to 1 to build old-format archives by default.
 */
#ifndef BUILDOLDPKGFORMAT
#define BUILDOLDPKGFORMAT 0
#endif
