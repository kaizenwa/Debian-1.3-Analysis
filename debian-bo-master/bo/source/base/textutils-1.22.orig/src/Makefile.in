# Makefile.in generated automatically by automake 1.1l from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@
RANLIB = @RANLIB@
GENCAT = @GENCAT@
PERL = @PERL@
GMSGFMT = @GMSGFMT@
CC = @CC@

AUTOMAKE_OPTIONS = ansi2knr

bin_PROGRAMS = cat cksum comm csplit cut expand fmt fold head join md5sum \
nl od paste pr sort split sum tac tail tr unexpand uniq wc

noinst_HEADERS = system.h
EXTRA_DIST =

datadir = $(prefix)/@DATADIRNAME@
localedir = $(datadir)/locale

INCLUDES = -I.. -I$(srcdir) -I$(top_srcdir)/lib -I../intl
DEFS = -DLOCALEDIR=\"$(localedir)\" @DEFS@
LDADD = @INTLLIBS@ ../lib/libtu.a

sort_LDADD = $(LDADD) @POW_LIBM@
sort_DEPENDENCIES = $(LDADD)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)

CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
o = @U@o
ANSI2KNR = @ANSI2KNR@
cat_SOURCES = cat.c
cat_OBJECTS =  cat.$o
cat_LDADD = $(LDADD)
cat_DEPENDENCIES =  ../lib/libtu.a
cat_LDFLAGS = 
cksum_SOURCES = cksum.c
cksum_OBJECTS =  cksum.$o
cksum_LDADD = $(LDADD)
cksum_DEPENDENCIES =  ../lib/libtu.a
cksum_LDFLAGS = 
comm_SOURCES = comm.c
comm_OBJECTS =  comm.$o
comm_LDADD = $(LDADD)
comm_DEPENDENCIES =  ../lib/libtu.a
comm_LDFLAGS = 
csplit_SOURCES = csplit.c
csplit_OBJECTS =  csplit.$o
csplit_LDADD = $(LDADD)
csplit_DEPENDENCIES =  ../lib/libtu.a
csplit_LDFLAGS = 
cut_SOURCES = cut.c
cut_OBJECTS =  cut.$o
cut_LDADD = $(LDADD)
cut_DEPENDENCIES =  ../lib/libtu.a
cut_LDFLAGS = 
expand_SOURCES = expand.c
expand_OBJECTS =  expand.$o
expand_LDADD = $(LDADD)
expand_DEPENDENCIES =  ../lib/libtu.a
expand_LDFLAGS = 
fmt_SOURCES = fmt.c
fmt_OBJECTS =  fmt.$o
fmt_LDADD = $(LDADD)
fmt_DEPENDENCIES =  ../lib/libtu.a
fmt_LDFLAGS = 
fold_SOURCES = fold.c
fold_OBJECTS =  fold.$o
fold_LDADD = $(LDADD)
fold_DEPENDENCIES =  ../lib/libtu.a
fold_LDFLAGS = 
head_SOURCES = head.c
head_OBJECTS =  head.$o
head_LDADD = $(LDADD)
head_DEPENDENCIES =  ../lib/libtu.a
head_LDFLAGS = 
join_SOURCES = join.c
join_OBJECTS =  join.$o
join_LDADD = $(LDADD)
join_DEPENDENCIES =  ../lib/libtu.a
join_LDFLAGS = 
md5sum_SOURCES = md5sum.c
md5sum_OBJECTS =  md5sum.$o
md5sum_LDADD = $(LDADD)
md5sum_DEPENDENCIES =  ../lib/libtu.a
md5sum_LDFLAGS = 
nl_SOURCES = nl.c
nl_OBJECTS =  nl.$o
nl_LDADD = $(LDADD)
nl_DEPENDENCIES =  ../lib/libtu.a
nl_LDFLAGS = 
od_SOURCES = od.c
od_OBJECTS =  od.$o
od_LDADD = $(LDADD)
od_DEPENDENCIES =  ../lib/libtu.a
od_LDFLAGS = 
paste_SOURCES = paste.c
paste_OBJECTS =  paste.$o
paste_LDADD = $(LDADD)
paste_DEPENDENCIES =  ../lib/libtu.a
paste_LDFLAGS = 
pr_SOURCES = pr.c
pr_OBJECTS =  pr.$o
pr_LDADD = $(LDADD)
pr_DEPENDENCIES =  ../lib/libtu.a
pr_LDFLAGS = 
sort_SOURCES = sort.c
sort_OBJECTS =  sort.$o
sort_LDFLAGS = 
split_SOURCES = split.c
split_OBJECTS =  split.$o
split_LDADD = $(LDADD)
split_DEPENDENCIES =  ../lib/libtu.a
split_LDFLAGS = 
sum_SOURCES = sum.c
sum_OBJECTS =  sum.$o
sum_LDADD = $(LDADD)
sum_DEPENDENCIES =  ../lib/libtu.a
sum_LDFLAGS = 
tac_SOURCES = tac.c
tac_OBJECTS =  tac.$o
tac_LDADD = $(LDADD)
tac_DEPENDENCIES =  ../lib/libtu.a
tac_LDFLAGS = 
tail_SOURCES = tail.c
tail_OBJECTS =  tail.$o
tail_LDADD = $(LDADD)
tail_DEPENDENCIES =  ../lib/libtu.a
tail_LDFLAGS = 
tr_SOURCES = tr.c
tr_OBJECTS =  tr.$o
tr_LDADD = $(LDADD)
tr_DEPENDENCIES =  ../lib/libtu.a
tr_LDFLAGS = 
unexpand_SOURCES = unexpand.c
unexpand_OBJECTS =  unexpand.$o
unexpand_LDADD = $(LDADD)
unexpand_DEPENDENCIES =  ../lib/libtu.a
unexpand_LDFLAGS = 
uniq_SOURCES = uniq.c
uniq_OBJECTS =  uniq.$o
uniq_LDADD = $(LDADD)
uniq_DEPENDENCIES =  ../lib/libtu.a
uniq_LDFLAGS = 
wc_SOURCES = wc.c
wc_OBJECTS =  wc.$o
wc_LDADD = $(LDADD)
wc_DEPENDENCIES =  ../lib/libtu.a
wc_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
LINK = $(CC) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in ansi2knr.1 ansi2knr.c


PACKAGE = @PACKAGE@
VERSION = @VERSION@

DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) \
	$(TEXINFOS) $(MANS) $(EXTRA_DIST)

TAR = tar
SOURCES = cat.c cksum.c comm.c csplit.c cut.c expand.c fmt.c fold.c head.c join.c md5sum.c nl.c od.c paste.c pr.c sort.c split.c sum.c tac.c tail.c tr.c unexpand.c uniq.c wc.c
OBJECTS = cat.$o cksum.$o comm.$o csplit.$o cut.$o expand.$o fmt.$o fold.$o head.$o join.$o md5sum.$o nl.$o od.$o paste.$o pr.$o sort.$o split.$o sum.$o tac.$o tail.$o tr.$o unexpand.$o uniq.$o wc.$o

default: all

.SUFFIXES:
.SUFFIXES: .c .o ._c ._o
$(srcdir)/Makefile.in: @MAINT@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL) 
	cd $(top_srcdir) && automake --gnits src/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	$(NORMAL_INSTALL)
	$(mkinstalldirs) $(bindir)
	@list="$(bin_PROGRAMS)"; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`"; \
	     $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	list="$(bin_PROGRAMS)"; for p in $$list; do \
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

.c.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	rm -f *.o core

clean-compile:

distclean-compile:
	rm -f *.tab.c

maintainer-clean-compile:

ansi2knr: ansi2knr.o
	$(LINK) ansi2knr.o $(LIBS)

ansi2knr.o: $(CONFIG_HEADER)

mostlyclean-krextra:

clean-krextra:

distclean-krextra:
	rm -f ansi2knr

maintainer-clean-krextra:

.c._c:
	$(ANSI2KNR) $< > $*.tmp && mv $*.tmp $@

._c._o:
	@echo "$(COMPILE) -c $<"
	@rm -f _$*.c
	@ln $< _$*.c && $(COMPILE) -c _$*.c && mv _$*.o $@ && rm _$*.c

._c.l_o:
	@echo "$(LIBTOOL) --mode=compile $(COMPILE) -c $<"
	@rm -f _$*.c
	@ln $< _$*.c && $(LIBTOOL) --mode=compile $(COMPILE) -c _$*.c && mv _$*.lo $@ && rm _$*.c

.c._o:
	$(ANSI2KNR) $< > $*.tmp && mv $*.tmp $*._c
	@echo "$(COMPILE) -c $*._c"
	@rm -f _$*.c
	@ln $*._c _$*.c && $(COMPILE) -c _$*.c && mv _$*.o $@ && rm _$*.c

.c.l_o:
	$(ANSI2KNR) $< > $*.tmp && mv $*.tmp $*._c
	@echo "$(LIBTOOL) --mode=compile $(COMPILE) -c $*._c"
	@rm -f _$*.c
	@ln $*._c _$*.c && $(LIBTOOL) --mode=compile $(COMPILE) -c _$*.c && mv _$*.lo $@ && rm _$*.c

mostlyclean-kr:
	rm -f *._o *.l_o *._c _*.c _*.o

clean-kr:

distclean-kr:
	rm -f ansi2knr

maintainer-clean-kr:
$(cat_OBJECTS): ../config.h

cat: $(cat_OBJECTS) $(cat_DEPENDENCIES)
	$(LINK) $(cat_LDFLAGS) $(cat_OBJECTS) $(cat_LDADD) $(LIBS)
$(cksum_OBJECTS): ../config.h

cksum: $(cksum_OBJECTS) $(cksum_DEPENDENCIES)
	$(LINK) $(cksum_LDFLAGS) $(cksum_OBJECTS) $(cksum_LDADD) $(LIBS)
$(comm_OBJECTS): ../config.h

comm: $(comm_OBJECTS) $(comm_DEPENDENCIES)
	$(LINK) $(comm_LDFLAGS) $(comm_OBJECTS) $(comm_LDADD) $(LIBS)
$(csplit_OBJECTS): ../config.h

csplit: $(csplit_OBJECTS) $(csplit_DEPENDENCIES)
	$(LINK) $(csplit_LDFLAGS) $(csplit_OBJECTS) $(csplit_LDADD) $(LIBS)
$(cut_OBJECTS): ../config.h

cut: $(cut_OBJECTS) $(cut_DEPENDENCIES)
	$(LINK) $(cut_LDFLAGS) $(cut_OBJECTS) $(cut_LDADD) $(LIBS)
$(expand_OBJECTS): ../config.h

expand: $(expand_OBJECTS) $(expand_DEPENDENCIES)
	$(LINK) $(expand_LDFLAGS) $(expand_OBJECTS) $(expand_LDADD) $(LIBS)
$(fmt_OBJECTS): ../config.h

fmt: $(fmt_OBJECTS) $(fmt_DEPENDENCIES)
	$(LINK) $(fmt_LDFLAGS) $(fmt_OBJECTS) $(fmt_LDADD) $(LIBS)
$(fold_OBJECTS): ../config.h

fold: $(fold_OBJECTS) $(fold_DEPENDENCIES)
	$(LINK) $(fold_LDFLAGS) $(fold_OBJECTS) $(fold_LDADD) $(LIBS)
$(head_OBJECTS): ../config.h

head: $(head_OBJECTS) $(head_DEPENDENCIES)
	$(LINK) $(head_LDFLAGS) $(head_OBJECTS) $(head_LDADD) $(LIBS)
$(join_OBJECTS): ../config.h

join: $(join_OBJECTS) $(join_DEPENDENCIES)
	$(LINK) $(join_LDFLAGS) $(join_OBJECTS) $(join_LDADD) $(LIBS)
$(md5sum_OBJECTS): ../config.h

md5sum: $(md5sum_OBJECTS) $(md5sum_DEPENDENCIES)
	$(LINK) $(md5sum_LDFLAGS) $(md5sum_OBJECTS) $(md5sum_LDADD) $(LIBS)
$(nl_OBJECTS): ../config.h

nl: $(nl_OBJECTS) $(nl_DEPENDENCIES)
	$(LINK) $(nl_LDFLAGS) $(nl_OBJECTS) $(nl_LDADD) $(LIBS)
$(od_OBJECTS): ../config.h

od: $(od_OBJECTS) $(od_DEPENDENCIES)
	$(LINK) $(od_LDFLAGS) $(od_OBJECTS) $(od_LDADD) $(LIBS)
$(paste_OBJECTS): ../config.h

paste: $(paste_OBJECTS) $(paste_DEPENDENCIES)
	$(LINK) $(paste_LDFLAGS) $(paste_OBJECTS) $(paste_LDADD) $(LIBS)
$(pr_OBJECTS): ../config.h

pr: $(pr_OBJECTS) $(pr_DEPENDENCIES)
	$(LINK) $(pr_LDFLAGS) $(pr_OBJECTS) $(pr_LDADD) $(LIBS)
$(sort_OBJECTS): ../config.h

sort: $(sort_OBJECTS) $(sort_DEPENDENCIES)
	$(LINK) $(sort_LDFLAGS) $(sort_OBJECTS) $(sort_LDADD) $(LIBS)
$(split_OBJECTS): ../config.h

split: $(split_OBJECTS) $(split_DEPENDENCIES)
	$(LINK) $(split_LDFLAGS) $(split_OBJECTS) $(split_LDADD) $(LIBS)
$(sum_OBJECTS): ../config.h

sum: $(sum_OBJECTS) $(sum_DEPENDENCIES)
	$(LINK) $(sum_LDFLAGS) $(sum_OBJECTS) $(sum_LDADD) $(LIBS)
$(tac_OBJECTS): ../config.h

tac: $(tac_OBJECTS) $(tac_DEPENDENCIES)
	$(LINK) $(tac_LDFLAGS) $(tac_OBJECTS) $(tac_LDADD) $(LIBS)
$(tail_OBJECTS): ../config.h

tail: $(tail_OBJECTS) $(tail_DEPENDENCIES)
	$(LINK) $(tail_LDFLAGS) $(tail_OBJECTS) $(tail_LDADD) $(LIBS)
$(tr_OBJECTS): ../config.h

tr: $(tr_OBJECTS) $(tr_DEPENDENCIES)
	$(LINK) $(tr_LDFLAGS) $(tr_OBJECTS) $(tr_LDADD) $(LIBS)
$(unexpand_OBJECTS): ../config.h

unexpand: $(unexpand_OBJECTS) $(unexpand_DEPENDENCIES)
	$(LINK) $(unexpand_LDFLAGS) $(unexpand_OBJECTS) $(unexpand_LDADD) $(LIBS)
$(uniq_OBJECTS): ../config.h

uniq: $(uniq_OBJECTS) $(uniq_DEPENDENCIES)
	$(LINK) $(uniq_LDFLAGS) $(uniq_OBJECTS) $(uniq_LDADD) $(LIBS)
$(wc_OBJECTS): ../config.h

wc: $(wc_OBJECTS) $(wc_DEPENDENCIES)
	$(LINK) $(wc_LDFLAGS) $(wc_OBJECTS) $(wc_LDADD) $(LIBS)
fold._o tr._o fmt._o sort._o tail._o split._o cut._o comm._o csplit._o \
join._o head._o od._o sum._o cat._o tac._o wc._o nl._o md5sum._o \
uniq._o paste._o expand._o pr._o unexpand._o cksum._o : $(ANSI2KNR)

tags: TAGS

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f$$here/ID $(SOURCES) $(HEADERS)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES)
	tags=; \
	here=`pwd`; \
	list="$(SUBDIRS)"; for subdir in $$list; do \
	  test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	done; \
	test -z "$(ETAGS_ARGS)$(SOURCES)$(HEADERS)$$tags" \
	  || cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $(SOURCES) $(HEADERS) -o $$here/TAGS

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src
distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
cat.$o cat.l$o: cat.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
cksum.$o cksum.l$o: cksum.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
comm.$o comm.l$o: comm.c ../config.h ../lib/getopt.h system.h \
	../lib/linebuffer.h ../lib/error.h
csplit.$o csplit.l$o: csplit.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h ../lib/xstrtoul.h ../lib/xstrtol.h
cut.$o cut.l$o: cut.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
expand.$o expand.l$o: expand.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
fmt.$o fmt.l$o: fmt.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h ../lib/xstrtol.h
fold.$o fold.l$o: fold.c ../config.h ../lib/getopt.h system.h \
	../lib/xstrtol.h ../lib/error.h
head.$o head.l$o: head.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
join.$o join.l$o: join.c ../config.h ../lib/getopt.h system.h \
	../lib/long-options.h ../lib/xstrtol.h ../lib/error.h \
	../lib/memcasecmp.h
md5sum.$o md5sum.l$o: md5sum.c ../config.h ../lib/getopt.h \
	../lib/long-options.h ../lib/md5.h ../lib/getline.h system.h \
	../lib/error.h
nl.$o nl.l$o: nl.c ../config.h ../lib/getopt.h ../lib/linebuffer.h \
	system.h ../lib/error.h ../lib/xstrtol.h
od.$o od.l$o: od.c ../config.h ../lib/getopt.h system.h \
	../lib/xstrtoul.h ../lib/xstrtol.h ../lib/error.h
paste.$o paste.l$o: paste.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
pr.$o pr.l$o: pr.c ../config.h ../lib/getopt.h system.h ../lib/error.h \
	../lib/xstrtol.h
sort.$o sort.l$o: sort.c ../config.h system.h ../lib/long-options.h \
	../lib/error.h ../lib/xstrtod.h
split.$o split.l$o: split.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h ../lib/xstrtol.h
sum.$o sum.l$o: sum.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
tac.$o tac.l$o: tac.c ../config.h ../lib/getopt.h system.h \
	../lib/error.h
tail.$o tail.l$o: tail.c ../config.h ../lib/getopt.h system.h \
	../lib/xstrtoul.h ../lib/xstrtol.h ../lib/error.h
tr.$o tr.l$o: tr.c ../config.h ../lib/getopt.h system.h ../lib/error.h
unexpand.$o unexpand.l$o: unexpand.c ../config.h ../lib/getopt.h \
	system.h ../lib/error.h
uniq.$o uniq.l$o: uniq.c ../config.h ../lib/getopt.h system.h \
	../lib/linebuffer.h ../lib/error.h ../lib/xstrtol.h \
	../lib/memcasecmp.h
wc.$o wc.l$o: wc.c ../config.h ../lib/getopt.h system.h ../lib/error.h

info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: install-binPROGRAMS
	$(NORMAL_INSTALL)

install-data: 
	$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-binPROGRAMS

all: $(ANSI2KNR) $(PROGRAMS) $(HEADERS) Makefile

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install
installdirs:
	$(mkinstalldirs)  $(bindir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-krextra mostlyclean-kr mostlyclean-tags \
		mostlyclean-generic

clean:  clean-binPROGRAMS clean-compile clean-krextra clean-kr \
		clean-tags clean-generic mostlyclean

distclean:  distclean-binPROGRAMS distclean-compile distclean-krextra \
		distclean-kr distclean-tags distclean-generic clean
	rm -f config.status

maintainer-clean:  maintainer-clean-binPROGRAMS maintainer-clean-compile \
		maintainer-clean-krextra maintainer-clean-kr \
		maintainer-clean-tags maintainer-clean-generic \
		distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-krextra distclean-krextra \
clean-krextra maintainer-clean-krextra mostlyclean-kr distclean-kr \
clean-kr maintainer-clean-kr tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info dvi installcheck \
install-exec install-data install uninstall all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(PROGRAMS): $(LDADD)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
