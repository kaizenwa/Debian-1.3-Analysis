.\" Copyright 1994 Peter Orbaek
.\" May be distributed under the GNU General Public License
.TH CAGE 8 "10 May 1994" "Linux 1.1.9" "Linux Programmer's Manual"
.SH NAME
cage \- provide a login cage for potential intruders
.SH SYNOPSIS
.B cage
.SH DESCRIPTION
.B cage
is meant to be started as a users shell from the
.I /etc/passwd
file, and provides a 
.IR chroot (2)'ed
environment for that user.

In order to be able to use chroot(), cage needs to be setuid root.

A directory to mimic a restricted root directory is compiled into
the
.B cage
program, by default 
.I /usr/cage.
When
.B cage
is run as a shell, it will chroot to that directory, and look for a
.I /etc/passwd
file relative to that directory. This file decides which shell to
exec for the given user. When logged in, such an encaged user will
only be able to see a small part of the "world", and he or she will
hardly notice, but can potentially do lesser harm.

.B Cage
fakes
.I /var/run/utmp
and 
.I /var/log/wtmp
entries inside the cage so 
.IR last (1)
and 
.IR getlogin (3)
will work inside the cage.

Unfortunately, 
.IR ttyname (3)
won't work inside the cage, unless you mimic a /dev directory inside
the cage, something that is not advisable, except for a few device files
such as /dev/tty, /dev/null and /dev/zero.

.SH FILES
.I /etc/passwd,
.I /var/run/utmp
.I /var/log/wtmp
.SH "SEE ALSO"
.BR chroot (2),
.BR last (1),
.BR getlogin (3),
.BR ttyname (3),
.BR login (8),
.BR getty (8),
.BR init (8).
.SH AUTHOR
Peter Orbaek (poe@daimi.aau.dk)
.SH NOTE
This is still in beta, bevare!
