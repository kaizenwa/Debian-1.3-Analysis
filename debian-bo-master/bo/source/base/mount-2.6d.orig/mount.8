.\" Copyright (c) 1996 Andries Brouwer
.\"
.\" This page is somewhat derived from a page that was
.\" (c) 1980, 1989, 1991 The Regents of the University of California
.\" and had been heavily modified by Rik Faith and myself.
.\" (Probably no BSD text remains.)
.\" Fragments of text were written by Werner Almesberger, Remy Card,
.\" Stephen Tweedie and Eric Youngdale.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 960705, aeb: version for mount-2.5k
.\" 970114, aeb: xiafs and ext are dead; romfs is new
.\"
.TH MOUNT 8 "5 July 1996" "Linux 2.0" "Linux Programmer's Manual"
.SH NAME
mount \- mount a file system
.SH SYNOPSIS
.BI "mount [\-hV]"
.LP
.BI "mount \-a [\-fnrvw] [\-t " vfstype ]
.br
.BI "mount [\-fnrvw] [\-o " options " [,...]] " "device " | " dir"
.br
.BI "mount [\-fnrvw] [\-t " vfstype "] [\-o " options "] " "device dir"
.SH DESCRIPTION
All files accessible in a Unix system are arranged in one big
tree, the file hierarchy, rooted at
.BR / .
These files can be spread out over several devices. The
.B mount
command serves to attach the file system found on some device
to the big file tree. Conversely, the
.BR umount (8)
command will detach it again.

The standard form of the
.B mount
command, is
.RS
.br
.BI "mount \-t" " type device dir"
.RE
This tells the kernel to attach the file system found on
.I device
(which is of type
.IR type )
at the directory
.IR dir .
The previous contents (if any) and owner and mode of
.I dir
become invisible, and as long as this file system remains mounted,
the pathname
.I dir
refers to the root of the file system on
.IR device .

Three forms of invocation do not actually mount anything:
.RS
.br
.B "mount \-h"
.RE
prints a help message;
.RS
.br
.B "mount \-V"
.RE
prints a version string; and just
.RS
.BI "mount [-t" " type" ]
.RE
lists all mounted file systems (of type
.IR type )
- see below.

The
.I proc
file system is not associated with a special device, and when
mounting it, an arbitrary keyword, such as
.I proc
can be used instead of a device specification.
(The customary choice
.I none
is less fortunate: the error message `none busy' from
.B umount
can be confusing.)

Most devices are indicated by a file name (of a block special device), like
.IR /dev/sda1 ,
but there are other possibilities. For example, in the case of an NFS mount,
.I device
may look like
.IR knuth.cwi.nl:/dir .

The file
.I /etc/fstab
(see
.BR fstab (5)),
may contain lines describing what devices are usually
mounted where, using which options. This file is used in three ways:
.LP
(i) The command
.RS
.br
.BI "mount \-a [-t" " type" ]
.RE
(usually given in a bootscript) causes all file systems mentioned in
.I fstab
(of the proper type) to be mounted as indicated, except for those
whose line contains the
.B noauto
keyword.
.LP
(ii) When mounting a file system mentioned in
.IR fstab ,
it suffices to give only the device, or only the mount point.
.LP
(iii) Normally, only the superuser can mount file systems.
However, when
.I fstab
contains the
.B user
option on a line, then anybody can mount the corresponding system.
.LP
Thus, given a line
.RS
.br
.B "/dev/cdrom  /cd  iso9660  ro,user,noauto,unhide"
.RE
any user can mount the iso9660 file system found on his CDROM
using the command
.RS
.br
.B "mount /dev/cdrom"
.RE
or
.RS
.br
.B "mount /cd"
.RE
For more details, see
.BR fstab (5).

The programs
.B mount
and
.B umount
maintain a list of currently mounted file systems in the file
.IR /etc/mtab .
If no arguments are given to
.BR mount ,
this list is printed.
When the
.I proc
filesystem is mounted (say at
.IR /proc ),
the files
.I /etc/mtab
and
.I /proc/mounts
have very similar contents. The former has somewhat
more information, such as the mount options used,
but is not necessarily up-to-date (cf. the
.B \-n
option below).

.SH OPTIONS
The full set of options used by an invocation of
.B mount
is determined by first extracting the
options for the file system from the
.I fstab
table, then applying any options specified by the
.B \-o
argument, and finally applying a
.BR \-r " or " \-w
option, when present.

Options available for the
.B mount
command:
.TP
.B \-v
Verbose mode.
.TP
.B \-f
Causes everything to be done except for the actual system call; if it's not
obvious, this ``fakes'' mounting the file system.  This option is useful in
conjunction with the
.B \-v
flag to determine what the
.B mount
command is trying to do. It can also be used to add entries for devices
that were mounted earlier with the -n option.
.TP
.B \-n
Mount without writing in
.IR /etc/mtab .
This is necessary for example when
.I /etc
is on a read-only file system.
.TP
.B \-r
Mount the file system read-only. A synonym is
.BR "\-o ro" .
.TP
.B \-w
Mount the file system read/write. This is the default. A synonym is
.BR "\-o rw" .
.TP
.BI \-t " vfstype"
The argument following the
.B \-t
is used to indicate the file system type.  The file system types which are
currently supported are listed in
.IR linux/fs/filesystems.c :
.IR minix ", " ext ", " ext2 ", " xiafs ", " hpfs ,
.IR fat ", " msdos ", " umsdos ", " vfat ,
.IR proc ", " nfs ", " iso9660 ", " smbfs ", " ncpfs ,
.IR affs ", " ufs ", " romfs ,
.IR sysv ", " xenix ", " coherent .
Note that the last three are equivalent and that
.I xenix
and
.I coherent
will be removed at some point in the future \(em use
.I sysv
instead. Since kernel version 2.1.21 the types
.I ext
and
.I xiafs
do not exist anymore.

The type
.I iso9660
is the default.  If no
.B \-t
option is given, or if the
.B auto
type is specified, the superblock is probed for the filesystem type
.RI ( minix ", " ext ", " ext2 ", " xia ", " iso9660 ", " rom
are supported).
If this probe fails and
.I /proc/filesystems
exists, then all of the filesystems listed there will be tried,
except for those that are labeled "nodev" (e.g.,
.I proc
and
.IR nfs ).

Note that the
.B auto
type may be useful for user-mounted floppies.
Warning: the probing uses a heuristic (the presence of appropriate `magic'),
and could recognize the wrong filesystem type.

More than one type may be specified in a comma separated
list.  The list of file system types can be prefixed with
.B no
to specify the file system types on which no action should be taken.
(This can be meaningful with the
.B \-a
option.)

For example, the command:
.RS
.RS
.B "mount \-a \-t nomsdos,ext"
.RE
mounts all file systems except those of type
.I msdos
and
.IR ext .
.RE
.TP
.B \-o
Options are specified with a
.B \-o
flag followed by a comma separated string of options.
Some of these options are only useful when they appear in the
.I /etc/fstab
file.  The following options apply to any file system that is being
mounted:
.RS
.TP
.B async
All I/O to the file system should be done asynchronously.
.TP
.B auto
Can be mounted with the
.B \-a
option.
.TP
.B defaults
Use default options:
.BR rw ", " suid ", " dev ", " exec ", " auto ", " nouser ", and " async.
.TP
.B dev
Interpret character or block special devices on the file system.
.TP
.B exec
Permit execution of binaries.
.TP
.B noauto
Can only be mounted explicitly (i.e., the
.B \-a
option will not cause the file system to be mounted).
.TP
.B nodev
Do not interpret character or block special devices on the file
system.
.TP
.B noexec
Do not allow execution of any binaries on the mounted file system.
This option might be useful for a server that has file systems containing
binaries for architectures other than its own.
.TP
.B nosuid
Do not allow set-user-identifier or set-group-identifier bits to take
effect.
.TP
.B nouser
Forbid an ordinary (i.e., non-root) user to mount the file system.
This is the default.
.TP
.B remount
Attempt to remount an already-mounted file system.  This is commonly
used to change the mount flags for a file system, especially to make a
readonly file system writeable.
.TP
.B ro
Mount the file system read-only.
.TP
.B rw
Mount the file system read-write.
.TP
.B suid
Allow set-user-identifier or set-group-identifier bits to take
effect.
.TP
.B sync
All I/O to the file system should be done synchronously.
.TP
.B user
Allow an ordinary user to mount the file system.  This option implies
the options
.BR noexec ", " nosuid ", and " nodev
(unless overridden by subsequent options, as in the option line
.BR user,exec,dev,suid ).
.RE

.SH "FILESYSTEM SPECIFIC MOUNT OPTIONS"
The following options apply only to certain file systems.
We sort them by file system. They all follow the
.B \-o
flag.

.SH "Mount options for affs"
.TP
\fBuid=\fP\fIvalue\fP and \fBgid=\fP\fIvalue\fP
Set the owner and group of the root of the file system (default: uid=gid=0,
but with option
.B uid
or
.B gid
without specified value, the uid and gid of the current process are taken).
.TP
\fBsetuid=\fP\fIvalue\fP and \fBsetgid=\fP\fIvalue\fP
Set the owner and group of all files.
.TP
.BI mode= value
Set the mode of all files to
.IR value " & 0777"
disregarding the original permissions.
Add search permission to directories that have read permission.
The value is given in octal.
.TP
.B protect
Do not allow any changes to the protection bits on the file system.
.TP
.B usemp
Set uid and gid of the root of the file system to the uid and gid
of the mount point upon the first sync or umount, and then
clear this option. Strange...
.TP
.B verbose
Print an informational message for each successful mount.
.TP
.BI prefix= string
Prefix used before volume name, when following a link.
.TP
.BI volume= string
Prefix (of length at most 30) used before '/' when following a symbolic link.
.TP
.BI reserved= value
(Default: 2.) Number of unused blocks at the start of the device.
.TP
.BI root= value
Give explicitly the location of the root block.
.TP
.BI bs= value
Give blocksize. Allowed values are 512, 1024, 2048, 4096.
.TP
.BR grpquota " / " noquota " / " quota " / " usrquota
These options are accepted but ignored.

.SH "Mount options for coherent"
None.

.SH "Mount options for ext"
None.
Note that the `ext' file system is obsolete. Don't use it.
Since Linux version 2.1.21 extfs is no longer part of the kernel source.

.SH "Mount options for ext2"
The `ext2' file system is the standard Linux file system.
Due to a kernel bug, it may be mounted with random mount options
(Linux 2.0).
.TP
.BR bsddf " / " minixdf
Set the behaviour for the
.I statfs
system call. The
.B minixdf
behaviour is to return in the
.I f_blocks
field the total number of blocks of the file system, while the
.B bsddf
behaviour (which is the default) is to subtract the overhead blocks
used by the ext2 file system and not available for file storage. Thus
.RE
.nf

% mount /k -o minixdf; df /k; umount /k
Filesystem   1024-blocks  Used Available Capacity Mounted on
/dev/sda6      2630655   86954  2412169      3%   /k
% mount /k -o bsddf; df /k; umount /k
Filesystem   1024-blocks  Used Available Capacity Mounted on
/dev/sda6      2543714      13  2412169      0%   /k

.fi
(Note that this example shows that one can add command line options
to the options given in
.IR /etc/fstab .)

.TP
.BR check " / " check=normal " / " check=strict
Set checking level. When at least one of these options is set (and
.B check=normal
is set by default) the inodes and blocks bitmaps are checked upon mount
(which can take half a minute or so on a big disk).
With strict checking, block deallocation checks that the block to free
is in the data zone.
.TP
.BR check=none " / " nocheck
No checking is done.
.TP
.B debug
Print debugging info upon each (re)mount.
.TP
.BR errors=continue " / " errors=remount-ro " / " errors=panic
Define the behaviour when an error is encountered.
(Either ignore errors and just mark the file system erroneous and continue,
or remount the file system read-only, or panic and halt the system.)
The default is set in the filesystem superblock, and can be
changed using
.BR tune2fs (8).
.TP
.BR grpid " or " bsdgroups " / " nogrpid " or " sysvgroups
These options define what group id a newly created file gets.
When
.BR grpid
is set, it takes the group id of the directory in which it is created;
otherwise (the default) it takes the fsgid of the current process, unless
the directory has the setgid bit set, in which case it takes the gid
from the parent directory, and also gets the setgid bit set
if it is a directory itself.
.TP
\fBresgid=\fP\fIn\fP and \fBresuid=\fP\fIn\fP
The ext2 file system reserves a certain percentage of the available
space (by default 5%, see
.BR mke2fs (8)
and
.BR tune2fs (8)).
These options determine who can use the reserved blocks.
(Roughly: whoever has the specified uid, or belongs to the specified group.)
.TP
.BI sb= n
Instead of block 1, use block
.I n
as superblock. This could be useful when the filesystem has been damaged.
Usually, copies of the superblock are found every 8192 blocks: in
block 1, 8193, 16385, ...
(Thus, one gets hundreds or even thousands of copies of the superblock
on a big filesystem. I do not know of options to mke2fs that would
cause fewer copies to be written.)
.TP
.BR grpquota " / " noquota " / " quota " / " usrquota
These options are accepted but ignored.

.SH "Mount options for fat"
.TP
.BR blocksize=512 " / " blocksize=1024
Set blocksize (default 512).
.TP
\fBuid=\fP\fIvalue\fP and \fBgid=\fP\fIvalue\fP
Set the owner and group of all files. (Default: the uid and gid
of the current process.)
.TP
.BI umask= value
Set the umask (the bitmask of the permissions that are
.B not
present). The default is the umask of the current process.
The value is given in octal.
.TP
.BI check= value 
Three different levels of pickyness can be chosen:
.RS
.TP
.B r[elaxed]
Upper and lower case are accepted and equivalent, long name parts are
truncated (e.g.
.I verylongname.foobar
becomes
.IR verylong.foo ),
leading and embedded spaces are accepted in each name part (name and extension).
.TP
.B n[ormal]
Like "relaxed", but many special characters (*, ?, <, spaces, etc.) are
rejected.  This is the default.
.TP
.B s[trict]
Like "normal", but names may not contain long parts and special characters
that are sometimes used on Linux, but are not accepted by MS-DOS are
rejected. (+, =, spaces, etc.)
.RE
.TP
.BR conv=b[inary] " / " conv=t[ext] " / " conv=a[uto]
The
.I fat
file system can perform CRLF<-->NL (MS-DOS text format to UNIX text
format) conversion in the kernel. The following conversion modes are
available:
.RS
.TP
.B binary
no translation is performed.  This is the default.
.TP
.B text
CRLF<-->NL translation is performed on all files.
.TP
.B auto
CRLF<-->NL translation is performed on all files that don't have a
"well-known binary" extension. The list of known extensions can be found at
the beginning of
.I fs/fat/misc.c
(as of 2.0, the list is: exe, com, bin, app, sys, drv, ovl, ovr, obj,
lib, dll, pif, arc, zip, lha, lzh, zoo, tar, z, arj, tz, taz, tzp, tpz,
gz, tgz, deb, gif, bmp, tif, gl, jpg, pcx, tfm, vf, gf, pk, pxl, dvi).
.PP
Programs that do computed lseeks won't like in-kernel text conversion.
Several people have had their data ruined by this translation. Beware!

For file systems mounted in binary mode, a conversion tool
(fromdos/todos) is available.
.RE
.TP
.B debug
Turn on the
.I debug
flag.  A version string and a list of file system parameters will be
printed (these data are also printed if the parameters appear to be
inconsistent).
.TP
.BR fat=12 " / " fat=16
Specify either a 12 bit fat or a 16 bit fat.  This overrides
the automatic FAT type detection routine.  Use with caution!
.TP
.B quiet
Turn on the
.I quiet
flag.  Attempts to chown or chmod files do not return errors,
although they fail. Use with caution!
.TP
.B "sys_immutable, showexec, dots, nodots, dotsOK=[yes|no]"
Various misguided attempts to force Unix or DOS conventions
onto a FAT file system.

.SH "Mount options for hpfs"
.TP
\fBuid=\fP\fIvalue\fP and \fBgid=\fP\fIvalue\fP
Set the owner and group of all files. (Default: the uid and gid
of the current process.)
.TP
.BI umask= value
Set the umask (the bitmask of the permissions that are
.B not
present). The default is the umask of the current process.
The value is given in octal.
.TP
.BR case=lower " / " case=asis
Convert all files names to lower case, or leave them.
(Default:
.BR case=lower .)
.TP
.BR conv=binary " / " conv=text " / " conv=auto
For
.BR conv=text ,
delete some random CRs (in particular, all followed by NL)
when reading a file.
For
.BR conv=auto ,
choose more or less at random between
.BR conv=binary " and " conv=text .
For
.BR conv=binary ,
just read what is in the file. This is the default.
.TP
.B nocheck
Do not abort mounting when certain consistency checks fail.

.SH "Mount options for iso9660"
Normal
.I iso9660
filenames appear in a 8.3 format (i.e., DOS-like restrictions on filename
length), and in addition all characters are in upper case.  Also there is
no field for file ownership, protection, number of links, provision for
block/character devices, etc.

Rock Ridge is an extension to iso9660 that provides all of these unix like
features.  Basically there are extensions to each directory record that
supply all of the additional information, and when Rock Ridge is in use,
the filesystem is indistinguishable from a normal UNIX file system (except
that it is read-only, of course).
.TP
.B norock
Disable the use of Rock Ridge extensions, even if available. Cf.\&
.BR map .
.TP
.BR check=r[elaxed] " / " check=s[trict]
With
.BR check=relaxed ,
a filename is first converted to lower case before doing the lookup.
This is probably only meaningful together with
.B norock
and
.BR map=normal .
(Default:
.BR check=strict .)
.TP
\fBuid=\fP\fIvalue\fP and \fBgid=\fP\fIvalue\fP
Give all files in the file system the indicated user or group id,
possibly overriding the information found in the Rock Ridge extensions.
(Default:
.BR uid=0,gid=0 .)
.TP
.BR map=n[ormal] " / " map=o[ff]
For non-Rock Ridge volumes, normal name translation maps upper
to lower case ASCII, drops a trailing `;1', and converts `;' to `.'.
With
.B map=off
no name translation is done. See
.BR norock .
(Default:
.BR map=normal .)
.TP
.BI mode= value
For non-Rock Ridge volumes, give all files the indicated mode.
(Default: read permission for everybody.)
.TP
.B unhide
Also show hidden and associated files.
.TP
.B block=[512|1024|2048]
Set the block size to the indicated value.
(Default:
.BR block=1024 .)
.TP
.BR conv=a[uto] " / " conv=b[inary] " / " conv=m[text] " / " conv=t[ext]
(Default:
.BR conv=binary .)
Since Linux 1.3.54 this option has no effect anymore.
(And non-binary settings used to be very dangerous,
often leading to silent data corruption.)
.TP
.B cruft
If the high byte of the file length contains other garbage,
set this mount option to ignore the high order bits of the file length.
This implies that a file cannot be larger than 16MB.
The `cruft' option is set automatically if the entire CDROM
has a weird size (negative, or more than 800MB). It is also
set when volume sequence numbers other than 0 or 1 are seen.

.SH "Mount options for minix"
None.

.SH "Mount options for msdos"
See mount options for fat.
If the
.I msdos
file system detects an inconsistency, it reports an error and sets the file
system read-only. The file system can be made writeable again by remounting
it.

.SH "Mount options for ncp"
Just like
.IR nfs ", the " ncp
implementation expects a binary argument (a
.IR "struct ncp_mount_data" )
to the mount system call. This argument is constructed by
.BR ncpmount (8)
and the current version of
.B mount
(2.5k) does not know anything about ncp.

.SH "Mount options for nfs"
Instead of a textual option string, parsed by the kernel, the
.I nfs
file system expects a binary argument of type
.IR "struct nfs_mount_data" .
The program
.B mount
itself parses the following options of the form `tag=value',
and puts them in the structure mentioned:
.BI rsize= n,
.BI wsize= n,
.BI timeo= n,
.BI retrans= n,
.BI acregmin= n,
.BI acregmax= n,
.BI acdirmin= n,
.BI acdirmax= n,
.BI actimeo= n,
.BI retry= n,
.BI port= n,
.BI mountport= n,
.BI mounthost= name,
.BI mountprog= n,
.BI mountvers= n,
.BI nfsprog= n,
.BI nfsvers= n,
.BI namlen= n.
The option
.BI addr= n
is accepted but ignored.
Also the following Boolean options, possibly preceded by
.B no
are recognized:
.BR bg ,
.BR fg ,
.BR soft ,
.BR hard ,
.BR intr ,
.BR posix ,
.BR cto ,
.BR ac ,
.BR tcp ,
.BR udp .
For details, see
.BR nfs (5).

Especially useful options include
.TP
.B rsize=8192,wsize=8192
This will make your nfs connection much faster than with the default
buffer size of 1024.
.TP
.B soft
This option allows the kernel to time out if the nfs server is not
responding for some time, otherwise it will try forever. The time can be
specified with
.BR timeo=time .
This option is useful if your nfs server sometimes doesn't respond or will
be rebooted while some process tries to get a file from the server.

.SH "Mount options for proc"
.TP
\fBuid=\fP\fIvalue\fP and \fBgid=\fP\fIvalue\fP
These options are recognized, but have no effect as far as I can see.

.SH "Mount options for romfs"
None.

.SH "Mount options for smbfs"
Just like
.IR nfs ", the " smb
implementation expects a binary argument (a
.IR "struct smb_mount_data" )
to the mount system call. This argument is constructed by
.BR smbmount (8)
and the current version of
.B mount
(2.5k) does not know anything about smb.

.SH "Mount options for sysv"
None.

.SH "Mount options for ufs"
None.

.SH "Mount options for umsdos"
See mount options for msdos.

.SH "Mount options for vfat"
First of all, the mount options for fat are recognized.
Furthermore, there are
.TP
.B uni_xlate
Translate unhandled Unicode characters to special escaped sequences.
This lets you backup and restore filenames that are created with any
Unicode characters. Without this option, a '?' is used when no
translation is possible. The escape character is ':' because it is
otherwise illegal on the vfat filesystem. The escape sequence
that gets used, where u is the unicode character,
is: ':', (u & 0x3f), ((u>>6) & 0x3f), (u>>12).
.TP
.B posix
Allow two files with names that only differ in case.
.TP
.B nonumtail
First try to make a short name without sequence number,
before trying
.IR name~num.ext .

.SH "Mount options for xenix"
None.

.SH "Mount options for xiafs"
None. Although nothing is wrong with xiafs, it is not used much,
and is not maintained. Probably one shouldn't use it.
Since Linux version 2.1.21 xiafs is no longer part of the kernel source.

.SH "THE LOOP DEVICE"
One further possible type is a mount via the loop device. For example,
the command

.nf
.B "  mount /tmp/fdimage /mnt -t msdos -o loop=/dev/loop3,blocksize=1024"
.fi

will set up the loop device
.I /dev/loop3
to correspond to the file
.IR /tmp/fdimage ,
and then mount this device on
.IR /mnt .
This type of mount knows about three options, namely
.BR loop ", " offset " and " encryption ,
that are really options to
.BR losetup (8).
If no explicit loop device is mentioned
(but just an option `\fB\-o loop\fP' is given), then
.B mount
will try to find some unused loop device and use that.

.SH FILES
.I /etc/fstab
file system table
.br
.I /etc/mtab
table of mounted file systems
.br
.I /etc/mtab~
lock file
.br
.I /etc/mtab.tmp
temporary file
.SH "SEE ALSO"
.BR mount (2),
.BR umount (2),
.BR fstab (5),
.BR umount (8),
.BR swapon (8),
.BR nfs (5),
.BR mountd (8),
.BR nfsd (8),
.BR mke2fs (8),
.BR tune2fs (8),
.BR losetup (8)
.SH BUGS
It is possible for a corrupted file system to cause a crash.
.PP
Some Linux file systems don't support
.B "\-o sync"
(the ext2fs
.I does
support synchronous updates (a la BSD) when mounted with the
.B sync
option).
.PP
The
.B "\-o remount"
may not be able to change mount parameters (all
.I ext2fs
parameters, except
.BR  sb ,
are changeable with a remount, for example, but you can't change
.B gid
or
.B umask
for the
.IR fatfs ).
.SH HISTORY
A
.B mount
command appeared in Version 6 AT&T UNIX.
