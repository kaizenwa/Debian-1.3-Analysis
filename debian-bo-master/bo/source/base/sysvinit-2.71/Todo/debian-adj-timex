From: Michael Meskes <meskes@feivel.topsystem.de>
Subject: Bug#5650: adjtimex makes the kernel discipline the hardware clock (fwd)
To: miquels@cistron.nl
Date: Thu, 5 Dec 1996 09:58:31 +0100 (MET)

Carlos Fonseca writes:
> Package: adjtimex
> Version: 1.2-2
> ... 
> Another possibility is to have the line
> 
> /usr/sbin/adjtimex -tick ${TICK} -frequency ${FREQ}
> 
> directly in /etc/init.d/boot near where clock -a is called (surrounded by
> if [-x ...], or whatever), and configure TICK and FREQ in a separate file. 

Could we do this? That is you chnage /etc/init.d/boot and I change adjtimex?

Michael

-- 
Michael Meskes                         | Projekt-Manager
meskes@topsystem.de                    | topsystem Systemhaus GmbH
meskes@debian.org                      | Europark A2, Adenauerstr. 20
Go SF 49ers! Use Debian GNU/Linux!     | 52146 Wuerselen

From: Michael Meskes <meskes@topsystem.de>
Subject: Re: Bug#5650: adjtimex makes the kernel discipline the hardware clock
To: miquels@cistron.nl (Miquel van Smoorenburg)
Date: Wed, 11 Dec 1996 16:41:44 +0100 (MET)

Miquel van Smoorenburg writes:
> I'm afraid I missed the original thread. Do you have some more info?

I only have the bug report. Here it is:

Package: adjtimex
Version: 1.2-2

When used with the latest kernels (2.0.26 here), the -status option of
adjtimex does not work as documented. In particular, -status 4 does not
prevent the kernel from disciplining the hardware clock, since this is now
controlled by 'time_state' in kernel/time.c (which gets set to TIME_OK
whenever sys_adjtimex is called to set parameters), and not by txc.status
(which is what the -status option changes, and seems to have a different
use).

I don't know whether or not it is possible to access time_state from a
user process, but changing /etc/rc.boot/adjtimex to the following, will
prevent the kernel from updating the hardware clock as long as the script
itself runs less than 11 minutes after boot (and will not introduce much
error if it runs immediately after, as the system time will have been set
not long before). 

-----
#!/bin/sh

#
# you have to adjust these values manually
#

TICK=10000 #
FREQ=0 # 

# Do not mess with -status here, as its meaning has changed from kernels
# 1.2.* to 2.0.*
/usr/sbin/adjtimex -tick ${TICK} -frequency ${FREQ}

# Now force time_state=TIME_BAD in the kernel by re-setting the time
# manually from the hardware clock (this may even work with 1.2.*)
GMT="-u" 		# This should(?) be exported by /etc/init.d/boot
/sbin/clock -a ${GMT}	# clock -s would also do
-----

Another possibility is to have the line

/usr/sbin/adjtimex -tick ${TICK} -frequency ${FREQ}

directly in /etc/init.d/boot near where clock -a is called (surrounded by
if [-x ...], or whatever), and configure TICK and FREQ in a separate file. 

Carlos


Hope this helps. I haven't found the time to look into it in more detail.

Michael

-- 
Michael Meskes                         | Projekt-Manager
meskes@topsystem.de                    | topsystem Systemhaus GmbH
meskes@debian.org                      | Europark A2, Adenauerstr. 20
Go SF 49ers! Use Debian GNU/Linux!     | 52146 Wuerselen

