.\" This file describes all fields shown by ps or top. It is read
.\" using .so from both ps.1 and top.1
.\" Copyright 1996 Helmut Geyer <Helmut.Geyer@iwr.uni-heidelberg.de>
.TH ps_fields 7 "16 Jul 1996" "" "Linux Manual"
.SH NAME
ps_fields \- field descriptions used by ps and top
.PP
Here descriptions for all fields used by ps or top are given. Each
field is associated to two strings, the 
.IR "field header" ,
which is displayed by the program to indicate which informatioon is
provided and the 
.IR "field tag" ,
which is used in the 
.B -o
or
.B --format 
command line options as well as in the 
.B $PS_FORMAT 
and
.B $TOP_FORMAT
environment variables to indicate which fields are to be displayed. 
in both command line options (which can be given multiple times) and
the environment variables the syntax of the fields is a
comma-separated list of tags (case-insensitive) with an optional
fields size assignment: 
.I tag1[=n1],tag2[=n2],...

The format here is:
.TP 0.5i
.B HEADER (tag) 
description.

(tag) is only listed if it differs from a lower case version of the
header. Sometimes similar fields are bundled for a common description.

.TP 0.5i
.B USER, RUSER, SUSER, FSUSER, UID, RUID, SUID, FSUID
the effective, real, saved, filesystem user names and ids of the process
.TP 0.5i
.B GROUP, RGROUP, SGROUP, FSGROUP, GID, RGID, SGID, FSGID
the effective, real, saved, filesystem group names and ids of the process
.TP 0.5i
.B PID, PPID 
the process number of the process and its parent process
.TP 0.5i
.B PGID
the process group id of the process.
.TP 0.5i
.B TPGID
the terminal process group id (i.e. the process id of the process
currently owning the controlling terminal) or -1 if the process
doesn't have any controlling terminal.
.TP 0.5i
.B SID
the session id of the process.
.TP 0.5i
.B NI (nice) 
the nice value (lower values mean higher priority) of the process
.TP 0.5i
.B PRI
the scheduler priority of a process. Higher values mean higher
priority
.TP 0.5i
.B TIME
the cpu time (both user and system) of the process in seconds, if in
cumulative mode, the cpu times of all terminated children is added.
In cumulative mode, this field is labeled 
.BR CTIME .
.TP 0.5i
.B ELAPSED (etime)
the real time between the start of the process and the current time.
.TP 0.5i
.B UTIME, STIME
as TIME , but just cpu time in user resp. kernel space. In cumulative
mode a leading 
.B C 
will be added to the field headers.
.TP 0.5i
.B %CPU (pcpu)
CPU usage in percent for the process. Note that this value differs
between ps and top:  ps calculates this value basically as
TIME/ELAPSED, while top calculates cpu usage of the process between
two updates. So in ps this is a global property of the process, while in
top the local property will be shown.
.TP 0.5i
.B TT (tty)
the controlling tty of the process (or ?, if it hasn't one)
.TP 0.5i
.B COMMAND (comm)
The command name of the process.
.TP 0.5i
.B COMMAND (args)
The full command line (with arguments) of the process. Should be used
together with one or more 
.B -w
flags to ps.
.TP 0.5i
.B VSZ
This is the virtual size of the process.(this used to be labeled VSIZE,
but POSIX wants VSZ).
.TP 0.5i
.B RSS
The resident set size of the process. Note that this field may differ
a little from the RES field, which is differently obtained from the
kernel.
.TP 0.5i
.B %MEM (pmem)
percentage of real memory used by the process as derived from RSS.
.TP 0.5i
.B STAT (state)
A short description of the process's state: 
.B R
for running,
.B S 
for sleeping, 
.B D
for uninteruptible sleeping (usually I/O),
.B T
for stopped or traced process. An additional 
.B W 
indicates that the process has no resident pages, a
.B N
indicates a nice level greater than 0, a
.B <
a nice level less than 0 (i.e. a superpriviledged task).
A trailing
.B > 
indicates that the process exceeded a soft limit.
.TP 0.5i
.B START (start_time) 
starting time of the process.
.TP 0.5i
.B FLAGS 
process flags as described in <linux/sched.h>. Note that at this time
(Linux 2.0.?) these flags are not unique.
.TP 0.5i
.B MINFL (min_flt), MAJFL (maj_flt)
Number of minor resp. major page faults. If in cumulative mode, those
of all reaped children are added and a leading 
.B C
is added to the header.
.TP 0.5i
.B TMOUT (timeout)
??
.TP 0.5i
.B ALARM
??
.TP 0.5i
.B S_CODE (start_code), E_CODE (end_code)
Address of beginning resp. end of the code segment.
.TP 0.5i
.B STACKP (start_stack)
Address of the process' stack bottom.
.TP 0.5i
.B ESP, EIP
kernel stack pointers.
.TP 0.5i
.B WCHAN 
Name (if a valid kernel symbol table can be found) or address of the
kernel wait channel the process is sleeping in.
For the kernel symbol table libproc scans the following files:
.nf
            $PS_SYSTEM_MAP
            /boot/System.map-`uname -r`
            /boot/System.map
            /lib/modules/`uname -r`/System.map
            /etc/psdatabase
            /boot/psdatabase-`uname -r`
            /boot/psdatabase,
            /lib/modules/`uname -r`/psdatabase
.fi
So usually you don't have to use 
.I psupdate
if you install the map link file from the kernel.
.TP 0.5i
.B  BLOCKED (sig_block), IGNORED (sig_ignore), CATCHED (sig_catch), SIGNAL (sig_pend)
Masks describing which signals are blocked, ignored, caught or
pending. Note that there is an alternative display of signals
available with the BSD personality of ps.
.TP 0.5i
.B ENVIRONMENT (environ)
displays the environment of the process. As this ususally is quite
large, it should be combined with one or more 
.B -w 
flags to ps.
.\" VM fields 
.TP 0.5i
.B LCK (vm_lock)
pages locked in i/o in kb.
.TP 0.5i
.B DATA (vm_data)
data size.
.TP 0.5i
.B STACK (vm_stack)
stack size.
.TP 0.5i
.B EXE (vm_exe)
executable size.
.TP 0.5i
.B LIB (vm_lib)
library size. This is, differently from the LRS field the size of the
complete library used, not just of those pages the process actually
uses. So it may happen that LIB is larger than VSZ!
.\" statm fields
The next fields describe similar data as some of the fields above but
are calculated differently (and are, usually, more precise) at the
cost of a little more calculation time.
.TP 0.5i
.B SIZE (m_size)
The virtual size of the process.
.TP 0.5i
.B RES (m_res)
The resident size of the process.
.TP 0.5i
.B SHRD (m_share)
The size of all shared pages (libraries, code and data).
.TP 0.5i
.B TRS (m_trs)
Text resident size.
.TP 0.5i
.B DRS (m_drs)
Data resident size.
.TP 0.5i
.B DT (m_dt)
Number of dirty pages.
.TP 0.5i
.B LRS (m_lrs)
Library resident size, i.e. size of all shared library pages used by
the process. Due to its determination (pages above 0x60000000 in the
process's memory) this makes sense only for a.out shared libraries. 
.TP 0.5i
.B SWAP (m_swap)
The non-resident size of the process.
.SH NOTES

The fields user, ruser, group, rgroup, pid, ppid, pgid, pcpu,
vsz, nice, etime, time, tty, comm, args  and their
associated headers are as of POSIX 1003.2.


.SH BUGS

The 
.B comm 
field displays only the basename of the command, not the full path as
POSIX wants. This is, however, considered a feature. Use 
.B args
for full information.

