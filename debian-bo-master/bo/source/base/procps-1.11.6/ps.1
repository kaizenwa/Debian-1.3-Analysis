.\" This file Copyright 1992 Michael K. Johnson (johnsonm@sunsite.unc.edu)
.\" and 1996 Charles L. Blake (cblake@bbn.com)
.\" It may be distributed under the GNU Public License, version 2, or
.\" any higher version.  See section COPYING of the GNU Public license
.\" for conditions under which this file may be redistributed.
.TH PS 1 "01 Oct 1996" "Cohesive Systems" "Linux Programmer's Manual"
.SH NAME
ps \- report process status
.SH SYNOPSIS
There are two sets of command line options for ps, toggled by the 
Environment variable 
.BR PS_PERSONALITY . 
.The first is the default behaviour modeled after the 
BSD implementation of ps:
 
.B ps
[\fB\-\fR] [\fBlujsvmaxgScewhrnu\fR] [\fBt\fIxx\fR] \
[\fBO\fR[\fB+\fR|\fB-\fR]\fIk1\fR[[\fB+\fR|\fB-\fR]\fIk2\fR...]] \
[\fIpids\fR]
 
The second is modeled after the SVR4 resp. POSIX definition of the ps
command. This is toggled by setting
.B PS_PERSONALITY
to
.BR POSIX :
 
.B ps 
[\-[\fBaAcdefjlNV\fR]] [\-[\fBgG\fR] \fIgrouplist\fR] [\-[\fBuU\fR] \
\fIuserlist\fR] [\-\fBt\fR \fItty\fR] [\-[\fBps\fR] \fIpidlist\fR] \
[\-\fBo\fR \fIformatstring\fR] 
 
Both versions support the following long options:

.B \-\-sort
[ + | - ] \fIkey\fR[,[ + | - ] \fIkey\fR[, ... ]]
.br
.B "\-\-help"
.br
.B "\-\-version"
.br
.B \-\-cumulative
.br
.B \-\-cols
\fIlinewidth\fR
.br
.B \-\-{user,User} 
\fIuserlist\fR
.br
.B \-\-{group,Group}
\fIgrouplist\fR
.br
.B \-\-format
\fIformatstring\fR
.br
.B \-\-forest
.br
.B \-\-{pid,sid}
\fIpidlist\fR
.br
.B \-\-tty
\fItty\fR
.br
.B \-\-deselect
.br
.B \-\-width 
\fInr of lines\fR
 
.SH DESCRIPTION
.B "ps "
gives a snapshot of the current processes.  If you want a repetitive
update of this status, use
.BR top .
This man page documents the
.IR /proc -based
version of
.BR ps ,
or tries to. 
.B ps 
will fit the output to the width of the current terminal. If it can't
determin this (e.g. if output goes to a pipe), it will assume a line
width of 80 chars. Using 
.B \-\-cols
you can force assumption of a line length. 
.PP
.SH "BSD STYLE COMMAND\-LINE OPTIONS"
Command line arguments may optionally be preceeded by a '\-', but
there is no need for it.  There are also some "long options" in GNU style;
see below for those.
.PD 0
.TP 0.5i
.B "l "
long format
.TP 0.5i
.B "u "
user format: gives user name and start time
.TP 0.5i
.B "j "
jobs format: pgid sid
.TP 0.5i
.B "s"
signal format
.TP 0.5i
.B "v "
vm format
.TP 0.5i
.B "m "
displays memory info (combine with
.B p
flag to get number of pages).
.TP 0.5i
.B "f "
"forest" family tree format for command line
.TP 0.5i
.B "a "
show processes of other users too
.TP 0.5i
.B "x "
show processes without controlling terminal
.TP 0.5i
.B "g "
ignored for compatibility reasons.
.TP 0.5i
.B "S "
add child cpu time and page faults
.TP 0.5i
.B "c "
command name from task_struct
.TP 0.5i
.B "e "
show environment after command line and ` + '
.TP 0.5i
.B "w "
wide output: don't truncate command lines to fit on one line.
To be exact, every w that is specified will add another possible
line to the output. If the space isn't needed it isn't used. You
may up to 100
.BR w 's.
.TP 0.5i
.B "h "
no header
.TP 0.5i
.B "r "
running procs only
.TP 0.5i
.B "n "
numeric output for
.BR USER " and " WCHAN .
.PD 1
.TP 0.5i
.BI t xx
only procs with controlling tty \fIxx\fR; for \fIxx\fR you may use either the
name of a device file under "/dev" or that name with either
.IR tty " or " cu
sliced off.  This is the reverse heuristic that ps uses to print out the
abbreviated tty name in the \fBTT\fR field, e.g.
.BR "ps -t1" .
.TP 0.5i
.BR O [ + | - ] \fIk1 [,[ + | - ] \fIk2 [, ... ]]
Order the process listing according to the multi-level sort specified by
the sequence of \fIshort\fR keys from \fBSORT KEYS\fR, \fIk1\fR, \fIk2\fR, ...
Default order specifications exist for each of the various formats of \fBps\fR.
These are over-ridden by a user specified ordering.  The `+' is quite optional,
merely re-iterating the default direction on a key.  `-' reverses direction only
on the key it precedes.  As with \fBt\fR and \fIpids\fR, the O option must be
the last option in a single command argument, but specifications in successive
arguments are catenated.
.TP 0.5i
.I pids
List only the specified processes; they are comma-delimited.  The 
list must be given immediately after the last option in a single command-line
argument, with no intervening space, e.g.
.BR "ps -j1,4,5" .
Lists specified in subsequent arguments are catenated, e.g.
.B ps -l 1,2 3,4 5 6
will list all of the processes 1-6 in long format.  If pids are given, they
are listed no matter what.  If a tty is given matching processes are listed
no matter what.  These two features override the 'a' and 'x' flags.
.SH "POSIX STYLE COMMAND\-LINE OPTIONS"
Note that you have to prepend options with a '\-', conversely to the
BSD style. Options without argument may, however, be grouped together.
.PD 0
.TP 0.5i
.B \-a
show information on all processes but process group leaders and
processes not associated with a terminal (usually these are none or
next to none, so this is useless in most cases).
.TP 0.5i
.B "\-A"
show information on all processes.
.TP 0.5i
.B "\-c"
compatibilty option (makes no sense on Linux machines).
.TP 0.5i
.B \-d
show information on all processes but process group leaders.
.TP 0.5i
.B \-e
show information on every process.
.TP 0.5i
.B \-f
use full format (uid,pid,ppid,start_time,tty,time,args)
.TP 0.5i
.B \-g 
.I grouplist
show information on processes whose group is in grouplist. Both group
ids and group names may be specified in grouplist.
.TP 0.5i
.B \-G 
.I grouplist
same as 
.B -g
but match list with the real group of the process.
.TP 0.5i
.B \-j
add job information (pgid,sid) to format
.TP 0.5i
.B \-l
use long format (flags,state,uid,pid,ppid,pri,nice,wchan,tty,time,comm)
.TP 0.5i
.B \-N
show information on all processes i
.B but
those corresponding to the
command\-line options specifying users, groups or process ids.
.TP 0.5i
.B \-o
.I formatstring
user the format specified by formatstring. See below for more
information.
.TP 0.5i
.B \-p
.I pidlist
show information on processes whose id is specified in pidlist.
.TP 0.5i
.B \-s
.I sidlist
show information on session leaders whose session id is specified in sidlist.
.TP 0.5i
.B \-t
.I tty
show information on processes whose controlling terminal is tty.
.TP 0.5i
.B \-u
.I userlist
show information on processes whose owner is in userlist. Both user
ids and user names may be specified in userlist.
.TP 0.5i
.B \-U 
.I userlist
same as 
.B -u
but match list with the real owner of the process.
.B \-V
show version number.
.B \-w
wide output: don't truncate command lines to fit on one line.
To be exact, every w that is specified will add another possible
line to the output. If the space isn't needed it isn't used. You
may up to 100
.BR w 's.

You may use more than one 
.BR " \-g" , " \-o" , " \-p" , " \-s" and " \-u" 
options. It isn't possible to use one of the options selecting real
ids together with one using effective (i.e. usual) ids. If both are
mixed, real ones are used for all selections.

.SH "LONG COMMAND\-LINE OPTIONS"
These options are preceeded by a double\-hyphen.
.PD 0
.TP 0.5i
.B \-\-color
try to use color markup of processes (see COLOR SUPPORT below).
.TP 0.5i
.B \-\-cumulative
show cumulative times and page faults (as the BSD 
.B S
command\-line option).
.TP 0.5i
.B \-\-cols 
\fIlinewidth\fR
forces ps to assume lines are \fIlinewidth\fR long.
.TP 0.5i
.B \-\-width
\fInr of lines\fR
tells ps to use up to nr additional lines to display a single process.
.TP 0.5i
.B \-\-deselect
as the POSIX
.B -N
option.
.TP 0.5i
.B \-\-forest
as the BSD 
.B f
option.
.TP 0.5i
.B \-\-format 
as the POSIX 
.B \-o
option.
.TP 0.5i
.BR "\-\-group" , "\-\-Group"
as the POSIX
.B -g
resp.
.B -G
options.
.TP 0.5i
.B "\-\-help"
Get a help message that summarizes the usage and gives a list of
supported sort keys.  This list may be more up to date than this man
page.
.TP 0.5i
.B \-\-nocolor
do not use color markup.
.TP 0.5i
.BR "\-\-pid" , "\-\-sid"
as the POSIX
.B -p
resp.
.B -s
options.
.TP 0.5i
.BR \-\-sort\fI [ + | - ] \fIkey [,[ + | - ] \fIkey [, ... ]]
Choose a \fImulti-letter key\fR from the \fBSORT KEYS\fR section. The
`+' is really optional since default direction is increasing numerical
or lexicographic order.
E.g.:
.B ps -jax --sort uid,-ppid,+pid
.TP 0.5i
.B \-\-tty
as the POSIX
.B -t
option.
.TP 0.5i
.BR "\-\-user" , "\-\-User"
as the POSIX
.B -u
resp.
.B -U
options.
.TP 0.5i
.B "\-\-version"
Display version and source of this program.
.SH "SORT KEYS"
Note that the values used in sorting are the internal values \fBps\fR uses and
\fInot\fR the `cooked' values used in some of the output format fields.  If
someone wants to volunteer to write special comparison functions for the cooked
values, ... ;-)

SHORT   LONG            DESCRIPTION
.PD 0
.TP 0.5i
c       cmd             simple name of executable
.TP 0.5i
C       cmdline         full command line
.TP 0.5i
f       flags           flags as in long format F field
.TP 0.5i
g       pgrp            process group ID
.TP 0.5i
G       tpgid           controlling tty process group ID
.TP 0.5i
j       cutime          cumulative user time
.TP 0.5i
J       cstime          cumulative system time
.TP 0.5i
k       utime           user time
.TP 0.5i
K       stime           system time
.TP 0.5i
m       min_flt         number of minor page faults
.TP 0.5i
M       maj_flt         number of major page faults
.TP 0.5i
n       cmin_flt        cumulative minor page faults
.TP 0.5i
N       cmaj_flt        cumulative major page faults
.TP 0.5i
o       session         session ID
.TP 0.5i
p       pid             process ID
.TP 0.5i
P       ppid            parent process ID
.TP 0.5i
r       rss             resident set size
.TP 0.5i
R       resident        resident pages
.TP 0.5i
s       size            memory size in kilobytes
.TP 0.5i
S       share           amount of shared pages
.TP 0.5i
t       tty             the minor device number of tty
.TP 0.5i
T       start_time      time process was started
.TP 0.5i
U       uid             user ID number
.TP 0.5i
u       user            user name
.TP 0.5i
v       vsize           total VM size in bytes
.TP 0.5i
y       priority        kernel scheduling priority
.PD 1
.so man7/ps_fields.7
.so man7/ps_color.7
.PP
.SH "SEE ALSO"
.BR top (1),
.BR psupdate (8),
.BR libproc_output (3),
.BR readproc (3),
.BR openproc (3),
.BR /usr/include/proc/readproc.h ,
.BR /usr/src/linux/fs/proc/array.c .

.SH NOTES
The member
.B used_math
of
.B task_struct
is not shown, since
.B crt0.s
checks to see if math is present.  This causes the math flag to be set
for all processes, and so it is worthless.
.PP
Programs swapped out to disk will be shown without command line
arguments, and unless the
.B c
option is given, in parentheses.
.PP
.B %CPU
shows the cputime/realtime percentage.  It will not add up to 100%
unless you are lucky.  It is time used divided by the time the process
has been running.
.PP
The
.B SIZE
and
.B RSS
fields don't count the page tables and the
.B task_struct
of a proc; this is at least 12k of memory that is always resident.
.B SIZE
is the virtual size of the proc (code+data+stack).
.PP
To perform the device number to name mapping \fBps\fR maintains a file called
"/etc/psdevtab" (updated whenever "/dev" becomes newer \fIand\fR permissions
allow update).  If permissions do not allow update, every invokation of
\fBps\fR requires a stat(2) of every file in the "/dev" directory.  If "/dev"
changes often on your system you should run \fIps\fR as root often. ;-)  I
may add a fallback file under $HOME under force of popular demand.
.SH BUGS
There are probably a lot of bugs still in the ps and libproc code. One
of the more often occurring problems is that there seem to be new
serial devices every other week, so often ps does not recognize a
device as a TTY device. To enable ps to recognize a new serial device
simply add the major device number to the list in 
.IR devname.c .
.SH AUTHOR
.B ps
was originally written by Branko Lankester (lankeste@fwi.uva.nl) Michael K.
Johnson (johnsonm@sunsite.unc.edu) re-wrote it significantly to use the proc
filesystem, changing a few things in the process.  Michael Shields
(mjshield@nyx.cs.du.edu) added the pid-list feature.  Charles
Blake(cblake@bbn.com) added multi-level sorting, the dirent-style library, the
device name-to-number mmaped database, the approximate binary search directly
on System.map, and many code and documentation cleanups and is the current
maintainer of the proc-ps suite. Helmut
Geyer(Helmut.Geyer@iwr.uni-heidelberg.de) added support for POSIX
style options, color support, arbitrary formats, a lot of
documentation and libproc changes.

