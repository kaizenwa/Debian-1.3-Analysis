# commments only allowed directly before the Module: line
# the description line must start with ` ' (space)

Module: 3c501
 io=0x280    IO base address
 irq=5       IRQ
 (Probes ports: 0x280, 0x300)

Module: 3c503
 io=0         (It will complain if you don't supply an \\\"io=0xNNN\\\")
 irq=0        (IRQ software selected by driver using autoIRQ)
 xcvr=0       (Use xcvr=1 to select external transceiver.)
 (Probes ports: 0x300, 0x310, 0x330, 0x350, 0x250, 0x280, 0x2A0, 0x2E0)

Module: 3c505
 io=0x300
 irq=0
 (Probes ports: 0x300, 0x280, 0x310)

Module: 3c507
 io=0x300
 irq=0
 (Probes ports: 0x300, 0x320, 0x340, 0x280)

Module: 3c509
 io=0
 irq=0

Module: ac3200
 io=0          (Checks 0x1000 to 0x8fff in 0x1000 intervals)
 irq=0         (Read from config register)
 (EISA probing..)

Module: apricot
 io=0x300  (Can't be altered!)
 irq=10

Module: arcnet
 io=0       IO base address.
 irqnum=0   Interrupt number.
 shmem=0    Shared memory: 1=yes
 num=0      Interface number. If there's more than one, number successively.

 PLEASE SET THESE MANUALLY! When probing without an explicit address,
 the driver looks at the following possible addresses:
   Suggested ones:
 	0x300, 0x2E0, 0x2F0, 0x2D0
   Other ones:
        0x200, 0x210, 0x220, 0x230, 0x240, 0x250, 0x260, 0x270,
        0x280, 0x290, 0x2A0, 0x2B0, 0x2C0, 0x310, 0x320, 0x330,
        0x340, 0x350, 0x360, 0x370, 0x380, 0x390, 0x3A0, 0x3E0, 0x3F0

Module: at1700
 io=0x260
 irq=0
 (Probes ports: 0x260, 0x280, 0x2A0, 0x240, 0x340, 0x320, 0x380, 0x300)

Module: atp
 *Not modularized*
 (Probes ports: 0x378, 0x278, 0x3BC; fixed IRQs: 5 and 7)

Module: cdu31a
 SONY CDU-31a CD
 cdu31a_port=0x000
 cdu31a_irq=0

 This driver doesn't auto-configure when loaded from a module.
 You must set cdu31a_port=<hex-number> in the arguments. This driver won't
 load unless you do that. The drive won't use interrupts unless you set
 cdu31a_irq, so it's advised you do that as well.

Module: de4x5
 io=0x000b
 irq=10
 is_not_dec=0 (For non-DEC card using DEC 21040/21041/21140 chip,
 set this to 1) (EISA, and PCI probing)

Module: de600
 de600_debug=0
 (On port 0x378, irq 7 -- lpt1;  compile time configurable)

Module: de620
 bnc=0, utp=0  <-- Force media by setting either.
 io=0x378        (also compile-time configurable)
 irq=7

Module: depca
 io=0x200
 irq=7
 (Probes ports: ISA:  0x300, 0x200; EISA:  0x0c00)

Module: e2100
 io=0          (It will complain if you don't supply an \\\"io=0xNNN\\\")
 irq=0         (IRQ software selected by driver)
 mem=0         (Override default shared memory start of 0xd0000)
 xcvr=0        (Use xcvr=1 to select external transceiver.)
 (Probes ports: 0x300, 0x280, 0x380, 0x220)

Module: eepro
 io=0x200
 irq=0
 (Probes ports: 0x200, 0x240, 0x280, 0x2C0, 0x300, 0x320, 0x340, 0x360)

Module: eexpress
 io=0x300
 irq=0
 (Probes ports: 0x300, 0x270, 0x320, 0x340)

Module: ewrk3
 io=0x300
 irq=5
 (With module no autoprobing! On EISA-bus does EISA probing. Static
 linkage probes ports on ISA bus:
 0x100, 0x120, 0x140, 0x160, 0x180, 0x1A0, 0x1C0,
 0x200, 0x220, 0x240, 0x260, 0x280, 0x2A0, 0x2C0, 0x2E0,
 0x300,        0x340, 0x360, 0x380, 0x3A0, 0x3C0)

Module: hp
 io=0          (It will complain if you don't supply an \\\"io=0xNNN\\\")
 irq=0         (IRQ software selected by driver using autoIRQ)
 (Probes ports: 0x300, 0x320, 0x340, 0x280, 0x2C0, 0x200, 0x240)

Module: hp-plus
 io=0          (It will complain if you don't supply an \\\"io=0xNNN\\\")
 irq=0         (IRQ read from configuration register)
 (Probes ports: 0x200, 0x240, 0x280, 0x2C0, 0x300, 0x320, 0x340)

Module: hp100
 hp100_port=0 (IO-base address)
 (Does EISA-probing, if on EISA-slot; On ISA-bus probes all ports from
 0x100 thru to 0x3E0 in increments of 0x020)

Module: ibmtr
 io=0xA20
 (Probes ports: 0xA20, 0xA24 -- Ok, 0x220, 0x224, but IBM style..)

Module: lance
 *Not modularized*
 (PCI, and ISA probing; \\\"CONFIG_PCI\\\" needed for PCI support) 
 (Probes ISA ports: 0x300, 0x320, 0x340, 0x360)

Module: loopback 
 *Static kernel component*

Module: ne
 io=0          (Explicitly *requires* an \\\"io=0xNNN\\\" value)
 irq=0         (Tries to determine configured IRQ via autoIRQ)
 (Probes ports: 0x300, 0x280, 0x320, 0x340, 0x360)

Module: net_init 
 *Static kernel component*

Module: ni52
 *Not modularized*
 (Probes ports:  0x300, 0x280, 0x360, 0x320, 0x340
         mems:   0xD0000, 0xD2000, 0xC8000, 0xCA000,
                 0xD4000, 0xD6000, 0xD8000 )

Module: ni65 
 *Not modularized*  **16MB MEMORY BARRIER BUG**
 (Probes ports:  0x300, 0x320, 0x340, 0x360)

Module: pi2
 *Not modularized* (well, NON-STANDARD modularization!)
 Only one card supported at this time.
 (Probes ports: 0x380, 0x300, 0x320, 0x340, 0x360, 0x3A0)

Module: plip
 No options; goes to IO=0x278, IRQ=2

Module: ppp
 No options (ppp-2.2+ has some, this is based on non-dynamic
 version from ppp-2.1.2d)

Module: seeq8005
 *Not modularized*
 (Probes ports: 0x300, 0x320, 0x340, 0x360)

Module: sk_g16
 *Not modularized*
 (Probes ports: 0x100, 0x180, 0x208, 0x220m 0x288, 0x320, 0x328, 0x390)

Module: skeleton 
 *Skeleton*

Module: slhc
 No configuration parameters

Module: slip
 slip_maxdev=256 (default value from SL_NRUNIT on slip.h)

Module: smc-ultra
 io=0          (It will complain if you don't supply an \\\"io=0xNNN\\\")
 irq=0         (IRQ val. read from EEPROM)
 (Probes ports:  0x200, 0x220, 0x240, 0x280, 0x300, 0x340, 0x380)

Module: tulip
 *Partial modularization*
 (init-time memory allocation makes problems..)

Module: tunnel
 No insmod parameters

Module: wavelan
 io=0x390      (Settable, but change not recommended)
 irq=0         (Not honoured, if changed..)

Module: wd
 io=0          (It will complain if you don't supply an \\\"io=0xNNN\\\")
 rq=0         (IRQ val. read from EEPROM, ancient cards use autoIRQ)
 mem=0         (Force shared-memory on address 0xC8000, or whatever..)
 mem_end=0     (Force non-std. mem. size via supplying mem_end val.)
                 (eg. for 32k WD8003EBT, use mem=0xd0000 mem_end=0xd8000)
 (Probes ports:  0x300, 0x280, 0x380, 0x240)

Module: znet
 *Not modularized*
 (Only one device on Zenith Z-Note (notebook?) systems,
 configuration information from (EE)PROM)

Module: mcdx
 mcdx=io,irq
 
 io	IO port, e.g. 0x300
 irq	interrupt
