Changes between freetype.004f and freetype.004g
(made by David)

- major dokumentation updates

(made by Mark)

1. C/lib/ttraster.c: The gcc -pedantic flag on Unix reports a minor assignment
                     conflict.

2. C/lib/ttfile.c: The SEEK_* macros are in <unistd.h> in SunOS 4.1.*.

3. C/lib/ttconfig.h: The checks to determine if LOOSE_ACCESS should be set or
                     not had to be rearranged a little to work right.

5. C/timer.c: SunOS 4.1.* in particular, does not define CLOCKS_PER_SEC.
              However, <sys/param.h> has the equivalent HZ macro defined.

(made by Robert)

- changed ttflib.a to libttf.a in all makefiles.

Changes between freetype.004e and freetype.004f
(made by Robert)

- minor dokumentation updates

- removed Pas.new directory for Alpha release 3.
  Will reappear in freetype.005a.

(made by Werner)

- definition of TRUE and FALSE moved from ttraster.c to tttypes.h

- a new, simple Load_TrueType_Glyph() routine which replaces
  Load_TrueType_Glyphs(). Now the glyphs won't be loaded all at once but
  rather on demand only. zoom and glyph has been modified to use this
  function. Still no support for CMap tables.

- Release_TrueType_Glyph() added. This and the former function use malloc()
  and free() currently. Should be changed until the new memory management
  is out.

- the global variable `glyphs' no longer exists.

- all platform dependent preprocessor definitions which were only introduced
  to handle X11 have been replaced with the `X11' symbol.

- win_x11.c: under X11 you can now see the current index in the window
  title. Something has happened with the formatting of this file. I
  corrected it. Additionally all tabs have been removed.

- some other minor changes and formatting stuff.

Changes between freetype.004d and freetype.004e
(made by Primoz):

- HPUX Makefiles

(made by David):

- big Pascal changes ( see Pas.new/lib/changes.txt)
- Docs/layout.txt added

Changes between freetype.004c and freetype.004d
(made by Joerg):

-new function char *Tags_to_String( Long tag, char * str )

(made by Werner):

- warnings from -ansi -pedantic has been removed
- some further code cleanup
- will now compile under SunOS 5.4 (Solaris) too; I
  provided two new makefiles.

(made by Miguel):

-amiga support

(made by Robert):

- grayscale support for X11

Changes between freetype.004b and freetype.004c
(made by Joerg):

- adds support for IBM VisualAge C++
- adds support for AIX 4.1
- adds definitions for the TTF table tags (file tttags.h)
- changes tttables.h and tttables.c to use the tag definitions
- modifies LookUp_TrueType_Table to perform a binary search over the tab

(made by Werner):

- two new files (ttindex.c, ttindex.h) for character code to glyph index
  handling
- missing code for TTF format 4 and 6 added.

(made by Robert):

- add -pedantic -ansi to CFLAGS in makefile.gcc
- fix a few gcc warnings (lots of warnings still remain)

Changes between freetype.004a and freetype.004b
(made by Miguel and Robert):

- better support for big endian cpus (ttfile.c,tttable.c) 
- use FT_BYTE_ORDER instead of LITTLE_ENDIAN (several files)
- fix typo in ttfile.h
- use int main() (zoom.c, timer.c)

Changes between freetype.004 and freetype.004a
(made by Werner):

- Doku and commentary cleanups.

Changes between freetype.004 and freetype.003
(made by David):

- Added an ALLOC macro to 'ttmemory.h'. This allows us to allocate
  from the Font Pool without having to use the infamous (void**)&
  typecast. As the 'Alloc' function still exists, we are not obliged
  to change all the code once.

  By the way, the new code will look more like the Pascal one :)

- Added the READ_xxx macros to 'ttfile.h'. We can now get rid of
  Do16 etc. Now I have to do that to the Pascal code.

- Added a main configuration file called 'ttconfig.h' included
  by 'tttypes.h' (and thus by all library components). Please add
  all #defines here, even development ones, with a comment on their
  function.

- Modified 'tttables.c' to make it use the new ALLOC and READ_xxx
  macros. This component should now be fully portable.

- Added a file "header.h" to the /C/lib directory. This file contains
  templates of headers to use in the source. There is one template
  for component interface/body description , as well as two templates
  for function definitions.

- Added headers to all files (I think) and some functions.

- Changed FS_Graphics_640x480x16  to FS_Graphics_Mono and
          FS_Graphics_320x200x256 to FS_Graphics_Gray where needed.

  These names were really too PC-ish ;-)

- Added "raster.doc" to the Docs directory which will evolve into a
  documentation of the rasterizer eventually.

- Started with a license, copied from the MIDAS Sound System's one.
  Freeware, under the copyright of the authors (David Turner,
  Robert Wilhelm, Werner Lemberg). Still not definite.

- Changed very few things in Pas/Lib/TTIns.Pas

  I would accept a LGPL but want to read it thoroughly before doing this.
  For now, we just keep the copyright...

---------------------------------------------------------------------

Changes between freetype.003w and freetype.003 (made by Werner):

- Makefile fixes and additions.

- Added CMap0 and CMap2 loading to the C version of TTTables.
  The Pascal version handles CMap0 and CMap4 but Werner's version
  seems very promising. We'll need to synchronize these.

- Added keys 0 and 9 for going to next and previous 100th glyph :)
  for easy navigation in CJK fonts.

- FreeType.txt and History.txt moved to the Docs directory.

- Added an 'Alpha Release 2.004' to FreeType.txt. Though I don't
  think we should get too maniac on upgrade numbers in this text :)

- Also added the mailing list address.

---------------------------------------------------------------------

Changes between freetype.003 and freetype.001:

- Linux Makefile changes for new directory layout
- various minor typos fixed
- X11 XImage support 
- X11 XSetWMProperties call added
- emx support
  

---------------------------------------------------------------------

Changes between freetype.001 and the Alpha Release 2 :

- Directory structure has evolved as suggested by Werner. The makefile.gcc
  must be changed... I introduced a debug/ directory to host the debugger
  (which is still yet to come in the C version).

- The raster component is now called "ttraster" and supports grayscaling.
  However, its interface should evolve again.. (note that its spec is still
  freetype-independent).

- 'ttdisp' has disappeared, we now use two header files "fullscr.h" or
  "win_x11.h" to define full-screen or windowed display, and several bodies
  as :

   fs_os2  : Full Screen OS/2 (32bit, gcc)
   fs_dos  : Full Screen Dos  (16bit, Borland C 3.1)
   win_x11 : Windowed X display

  I could not test win_x11 properly (hi Robert), but it didn't
  change much from previous work...

  Now, every file beginning with 'tt' is only related to the engine
  internals, not the test suite...

- The test programs now accept the '-g' option for grayscaling support. Note
  that grayscaling display is not implemented in win_x11 yet. Gray scaling
  works with 8bit pixmaps, and uses a palette of 5 gray levels. Default
  palette is taken from the standard VGA gray colors 16 to 31.

  They have been renamed to 'timer' and 'zoom'. If this conflicts
  with usual shell commands or utilities, let me know!

- As procedural and event based programming are quite different concepts, it
  probably would be a good idea to provide two different test suites (full
  screen and windowed). I could do a windowed OS/2 suite myself... the
  #ifdef's are becoming scary and I don't like the trick of using two cross
  referenced functions in disp_x11.c and zoom.c to handle events... Robert,
  could you look for this please??

  The windowed (X11) compilation of 'zoom' and 'timer' could not be
  tested on my system. Please check it and report correctives!!

- Parts of the debugger can be found in Pas/debug, it is just a
  very small thing now, but it introduces a new component 'ttdebug'
  that  should  not  be  included  in the final release but is very
  useful for displaying opcodes, stacks, etc.

  I am using the Turbo Vision class library (yes, that's object Pascal) to
  get a fullscreen text debugger. If you know of some good similar C
  library, let me know! (by good I mean: simple, efficient and easily
  obtainable, Motif does not fit in any of these categories). I only hope
  that we won't need this debugger a lot :) (let's be optimistic)...

- The Pascal source code grayscaling code is late. The C code will
  be the raster reference for at least freetype.001 .

- Werner, you should find my very light changes to 'tttables.c' (mainly the
  loading of the character mapping tables and some more structs
  definitions). You can start with them and adapt them freely...
