How to compile this C version.
------------------------------

Here are the instructions to compile the test programs with gcc:


A. Display component selection:
-------------------------------

See section D for compiling with makefiles.

Choose one of the following display components, according to your
system (or create your own):

  - fs_os2.c      FullScreen OS/2
  - fs_dos.c      FullScreen DOS
  - win_x11.c     Windowed X11

and compile it

example:

  gcc -c -O fs_os2.c


B. Component Compilation:
-------------------------

Compile all the library files in ./lib

Example:

cd lib
gcc -Wall -O3 -c tt*.c

      ^    ^   ^
      |    |   |___ compile only
      |    |
      |     full optimization (optional)
      |
       full warnings

You should get no warnings!


C. Test programs:
-----------------

Link them with standard ANSI libs and the previously compiled components
(don't forget math and X11 libs if you compile under Un*x-like systems).

Examples :

gcc -Wall -O3 zoom.c fs_os2.o lib/tt*.o -I./lib
gcc -Wall -O3 timer.c win_x11.o lib/tt*.o -I./lib -lm -L/usr/X11R6/lib -lX11

Here you are, you can now start 'zoom' and 'timer'.


D. Makefiles:
-------------

We provide makefiles for GNU make and gcc called 'makefile.gcc' and
'makefile.emx'. They are configured to compile the test programs under
Un*xish operating systems (X11 version) and under DOS (fullscreen version)
using the emx compiler.

Makefiles for some other operating systems and compilers are provided also.

Before running make for X11 you should configure the makefile variables
which define the locations of the X11 libraries and header files.

If you want to contribute a makefile for your specific platform use
makefile.gcc as a template and modify it accordingly.

Note: under some Un*x systems GNU make is called gmake.

Then say

    `make -f makefile.gcc'            (Un*x clones)
or
    `make -f makefile.emx'            (emx-gcc)

You must add the option `-acmw' to the EMXOPT environment variable to have
enough priviledges to run `zoom'.

