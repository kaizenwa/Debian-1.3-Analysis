v1.3	! This release is huge. There are simply too many things that have
	! either changed or been added. You probably want to review the
	! documentation. Here are some:
	- One now defines a color gradient and assigns it to a rendering
	  option. i.e. "-bgstyle topdown -grad1 red,blue -bggrad grad1".
	- Split some more code into util.c which holds some common
	  functions.
	- Option to choose bar_size separately for the FgGrad effect.
	- Option to ask XBanner to linger around after rendering is done
	  so that the X server does not reset. (Useful for people using a
	  XDM chooser. Idea by Frank Wuebbeling - thanks!).
	- Option to make XBanner display glinting stars on the corners of
	  the letters.
	- Color cycling can be done to the background gradient, or the
	  rendering effects: FgGrad, Backlight, FatText, Fade. One more
	  possibility is to continually change the FG color of *ANY* effect
	  except FgGrad along a color gradient.
	- Many enhancements for portability (not yet complete).
	- Added BG style 'Fill' which is a simple single-color filling of
	  the root window.
	- Added option to do Fill BG via flag (-bgfill) or a boolean X
	  resource. This is so you can choose -bgfill and still bgstyle of
	  topdown or any other.
	- A lot more bounds checking added to the resource handling routine.
	- Added option to control speed of cycling colors.
	- Added BG Style 'Plasma' with 2 new options to control it, by
	  adjusting the 'Graininess Factor' and the number of colors it
	  uses. The algorithm I ripped off someone else's program. He left
	  no traces of name or copyright, so I cannot even credit him.
	- Misc. speedups. Added check for GCC and inline for those functions
	  I felt should be inlined. See xbanner.h for the _inline #define
	  and change it if your compiler is not GCC but has inline.
	- Added option INT_PLASMA to xb_config.h to use integer arithmetics
	  for PlasmaClouds. 40% faster, looks great for sky-like clouds,
	  but not as great for more than 2 light shade colors.
	- Changed XGetImage in the PlasmaCloud effect to XCreateImage. If
	  we write over all the bitmap, why copy the screen first?
	- One can now specify '-bggrad color,color[,...]' instead of using
	  '-bggrad grad1' and then '-grad1 color,color[,...]'
	- One can now provide a "repeat" for the BgGrad. This causes the
	  actual allocation of colors to be divided by the repeat. It's like
	  allocating red,green,blue and using them several times over the
	  entire screen.
	- Detached the PlasmaCloud code from backg.c and generalized it to
	  enable PlasmaClouds on other surfaces.
	- Added option in xb_config.h : OTHER_FRAND() - select your own
	  double-precision floating point random routine for PlasmaClouds.
	- Added rendering effect 'FgPlasma' which make the FG color be a
	  window into a pixmap filled with PlasmaClouds. Neat effect!
	- Corrected handling of negative values for -glintspeed, to slow
	  down the blinking of stars.
	- Added option -autofill which fills the BG in the median color of
	  the color gradient. Does a nice trick on the eyes when the login
	  box disappears.
	- Renamed the rootwin variable to a more correct name : rootpix
	- Added BG Style 'BgPix' and resources/options to set the filename.
	- Completely changed the handling of errors. Some errors were 
	  demoted to non-fatal status, and given fallbacks. Thanks to
	  marc <mwelz@cs.uct.ac.za> for pushing me in that direction.
	- Added lots of 'static' specifiers to functions that could use it
	  and removed them from the xbanner.h file. This should speed up
	  linking somewhat, and is cleaner.
	- It is now possible to display errors/warnings on the root window.
	- Reordered and cleaned-up xbanner.h, much nicer now.
	- Completed adding support for cycling more than 1 thing.
	- Completely re-ordered the options list in xres.c and created a
	  better system of help messages.
	- Added effect 'Shake' which can produce the infamous 'Nervous?
	  Tense? Tired?' - sign.
	- Reworked the documentation inside the code. Should be a bit
	  better now.
	- Added preliminary support for compiling under OpenVMS. For now
	  only the 'xbanner' and 'freetemp' binaries have been tested. See
	  the README in the VMS/ directory.
	- Fixed a problem when requesting to draw an empty string. It is
	  now done correctly, the effect set to None, and the font set to
	  'fixed' to shorten the time it takes to load. Thanks go to
	  Christopher Everett <ceverett@cyberramp.net> for reporting.
	- Fixed xb_check - it now properly handles spaces before keywords,
	  and the new multiple-word options like CycleColors: BG,FG
	- Added option to xb_check '-n <appname>' to recognize <appname>
	  as a valid name of an XBanner binary/link.
	- Added XPM support for OpenVMS - included two libraries for OpenVMS:
	  VAX_XPM.OLB, AXP_XPM.OLB - that should really make this
	  distribution much much bigger, but it's still OK.
	- Created Resource_Reference.html - a complete reference guide
	  to XBanner's resources. All you could ask. Command-line switch
	  information is included.
	- Added a call to XDestroyImage into plasma.c to avoid leaving an
	  XImage when we have a problem.
	- Added background style Ripples. It does about what it sounds that
          it does.
	- New file docs/Credits - lists who did what in XBanner (does not
	  include me of course).
	- One can now display multiple pixmaps by using a pixmap-list. To
	  specify a pixmap-list, use @pathname of the list of files to load.
	  Thanks to Landon Boyd <landon@ccn.cs.dal.ca> for the idea!
	- The label text is now parsed for environment variables! Use $$
	  to get a single $ sign. Use $VAR or ${VAR} for env. vars.

v1.2a	- Added #ifdef / #endif pair to fix a situation when HAS_XPM was
	  not defined, and still referenced some related variables.
	- Makefile was installing xb_check on top of xbanner. Fixed.
	- Split up effect.c into effect.c + colors.c
	* THIS VERSION WAS NOT RELEASED

v1.2	- A new effect: FgGrad - like Shadow but the FG color gets a color
	  gradient.
	- Changed the Makefile so as to include -L/usr/X11R6/lib which
	  should help compilations on some Linux machines.
	- One can use "-noul" on command line to turn off Underlining.
	- Added xb_check - a program that helps check resources of XBanner
	  for validity.
	- Silly mistake - I used # as the comment in XBanner.ad which
	  confused cpp... Should have been !. Fixed.
	- Added option to tell XBanner to print to stderr the values of
	  the calculated X,Y,Width,Height of the area to draw the text.
	  Good for debugging a resource file. Use -showcalc and -hidecalc.
	- Found and removed the last references to the obsolete
	  'xbanner-config' file, long since abolished.
	- Rechcecked and fixed those demos that did not fit into 1024x768
	  displays. Thanks to all those who have noted this to me.
	- Added option to load an image (.xpm) onto the root window.

v1.1	- A new feature: Gradient filled backgound fading from one color
	  to another.
	- Misc. changes to the Makefile to clean it up a bit.
	- A new home page location, sorry for having moved. Check out
	  http://chaos.fullerton.edu/XBanner/
	- Some fixes for the background thing.

v1.0a	- Added a few new ideas to the demo
	- The new 'xfontsel' tip in the font_tips file was given to me by
	  Kyle Ferrio <kylef@engin.umich.edu> (thanks!).
	- *** Note: This version was never released ***

v1.0    - Some more tuning to fix wrap-around of effects.

v0.9a	- Misc. tuning to fix problems of wrapping from side to side of the
	  Backlight effect.
	- Changed the order of some of the bounds checking. Was checking for
	  bad X position before checking that text isn't too wide. Fixed.
	- Cleaned up some commented out code. Reordered a bit.
	- Heavily commented effect.c - hopefully I'll know what I am doing
	  there the next time I have to look into it ... ;-)
	- Performance fix for FatText and StandIn2/Out2. They are now like
	  the other effects in speed.
	- Merged FatText into Backlight to reduce code size. They are really
	  so much the same when you look at the actual code...
	- Changed the way resources are kept. This was done to unify some
	  resources to have a common class - hence some command line options
	  have been changed. See docs/Resources for more info.

v0.9	- Retouched some of the code that selects the relevant portion
	  of the screen so the XImage routines don't take too long.
	  I hope I got it right this time ;-)
	- Removed some extraneous storing of zeros into zero-filled arrays
	  (I got them from calloc() and still stored 0's in them).
	- Added placement type "CenteredOnY". This centers the text line
	  on a given line. The Y value comes from Xbanner.Y and the X is
	  simply centered on that line (first step towards an idea by
	  Doug Ford).
	- Fade and Backlight are almost the same so I merged them to 1 func.
	- Cleaned the code a bit more
	- *** Now using real X resources. Some changes were necessary to
	  the names of the options. These are documented in the file
	  Resources.doc (along with a comrehensive list of all resources).
	- The above means a whole set of command line option. Try xbanner -h!
	- For using resources properly in X11R4 (that's only for my Ultrix
	  at work, I know, but...) there is a #define in xb_config.h
	- Error messages now carry a nice "XBanner:" prefix so you'll know.
	- xb_config.h option "RW_COLORS" has been removed. We now actually
	  check for the visual type to see if it can use R/W colors.
	- Improved the performance of all new effects at a very low cost
	  in memory consumption. Should be real good now.
	- Some more cleaning of the code from global variables
	- We now make sure that we need the FadeFrom/FadeTo colors before
	  allocation.
	- Reworked the placement code completely. I hope there will be no
	  more problems with it now.
	- New option: Undelined text. The resource is "XBanner.underlined",
	  you can select the thickness "XBanner.underlineThickness" and the
	  color "XBanner.underlineColor". Special color name "fgc" will use
	  the FG color, which will render some of the effects on the
	  underline as well as the text.

>> We jumped to 0.9 here because a first major release is pretty close now!

v0.05	- A few more checks added to make the program a bit more secure
	- Moved some code portions in main() to make it more readable
	- Commented some more of the code.
	- Added effect Fade, and FadeFrom/FadeTo to the options file.
	- Added new effect, called it Fade and changed Fade to Neon
	- Now looking to fix bugs, and add compatibility to other systems
	- Added the samples/ directory, and created a demo...
	- Fixed a bug that caused some wraparound of the effect
	- Changed operation so that we now take a snapshot of only the part
	  of the screen we are going to use for the effect -> big save in
	  server resources, and some save in computation time for effects.
	- Fixed a bug of accessing pixels out of pixmap/XImage bounds. Used
	  to cause a problem with white foreground on my machine.
	- Even more sanity checks, with nice error messages to go with them.
	- xb_config.h option RW_COLORS governs the use of a R/W color cell
	  for the FG color. This fixes a problem when the screen BG is the
	  same as the FG we are trying to draw.
	- Reversed the fading so that now logically FadeFrom is the color
	  closest to the characters, and FadeTo is farthest.
	- Changed the name for Neon to Backlight, and Fancy-3D to Thick
	- Added effect FatText - Thanks again to Oren Tirosh
	- Added effects StandOut2 and StandIn2 - both are different versions
	  of the original StandIn/StandOut
	- Added effect FunnyOutline
	- Redone some of the docs
	- Added the 'random_effect' utility to select a single config file
	  from a small list of config-files - randomly. Idea by Thilo
	  Wunderlich (Thanks!)

v0.04	- Seperated the graphics from the rest of the code for clarity
	- Started using a Makefile (built it with ezmake)
	- Reworked StandOut. Got a big help from Oren Tirosh on this one...
	  It now looks almost perfect!
	- Added xb_config.h - for configuration of different platform - future
	- Changed some of the effects with outlines so that the outline will
	  be done in the HiLite color. This gives a nice touch. The effects
	  which were modified are: Fancy-3D, Shadowed-Surround, 3d-Shadow
	- Changed the name of the 'Surround' effect to 'Outline' in the
	  config file and in the code. Respectively 'Shadowed-Surround'
	  became 'Shadowed-Outline'
	- Added another option - Thickness. It governs the thickness of the
	  letters in Fancy-3D, and the StandIn/StandOut outline Thickness.
	  Other outline effects use Surround_Min/Max.
	- Fixed the behavior of 3D-Shadow. It was incorrect in the number
	  of shadows it was making.
	- Added effect PopArt. It is a multiple-outline with the colors
	  of each outline layer alternating between the HiColor and the
	  ShadowColor
	- Added effect Coin. This effect gives somewhat of the appearance
	  of a metal Coin to the letters. It is a by-product of the work
	  on StandOut which I decided to keep.

v0.03   - Fixed the Shadowed-Surround effect's bad rendering of the shadow.
	  Was putting a small shadow very close to the outlined text.
	- Added options ShadowXoffest and ShadowYoffset to set the X/Y
	  distance of the shadow.
	- Added the effect StandIn, which is a simple inversion of StandOut,
	  so when StandOut is finally done correctly, this will also be OK.
	- Added option to specify color as #rrrrggggbbbb for people with
	  24-bit display and very sensitive eyes. More for completeness.
	- Cleaned the code and added function prototypes to be more ANSI.

v0.02	- Added Center placement for center of the screen
	- Completely reworked the code. Looks like a program now rather
	  than the mess it was before
	- Added the effect of StandOut (not working completely yet).
	- For the StandOut - added HiColor in the config file
	- Added option for using #rrggbb color notation
	- Included freetemp to remove all temporary resources in the server.
	- Introduced the Changes file

v0.01	- Initial release
