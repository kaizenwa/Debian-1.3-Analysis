*** awe_wave.c-nopnp	Tue Mar 18 23:13:13 1997
--- awe_wave.c	Tue Mar 18 23:21:34 1997
***************
*** 62,67 ****
--- 62,72 ----
  
  #endif /* AWE_HAS_GUS_COMPATIBILITY */
  
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ /* ISA PnP driver by Tom Lees */
+ #include <linux/pnp.h>
+ #endif
+ 
  /*----------------------------------------------------------------
   * debug message
   *----------------------------------------------------------------*/
***************
*** 171,176 ****
--- 176,186 ----
   * global variables
   *----------------------------------------------------------------*/
  
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ /* PnP info */
+ static struct pnp_device *awe_pnp_dev = NULL;
+ #endif
+ 
  /* awe32 base address (overwritten at initialization) */
  static int awe_base = 0;
  /* memory byte size (overwritten at initialization) */
***************
*** 462,467 ****
--- 472,481 ----
                bcopy((caddr_t)src, (caddr_t)dst, len)
  #endif
  
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ static void awe_pnp(enum pnp_event e, unsigned long data, struct pnp_device *dev);
+ #endif
+ 
  
  /*----------------------------------------------------------------
   * synth operation table
***************
*** 599,604 ****
--- 613,622 ----
  		awe_reset_samples();
  		awe_release_region();
  	}
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ 	if (awe_pnp_dev != NULL)
+ 		pnp_freedevice(awe_pnp_dev);
+ #endif
  }
  
  
***************
*** 3760,3765 ****
--- 3778,3791 ----
  awe_detect(void)
  {
  	int base;
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ 	if ((awe_pnp_dev = pnp_getdevice(PNP_EISAID('C','T','L',0x0021), awe_pnp))
+ 		!= NULL) {
+ /*		printk("SB AWE32 PnP: 0x%x.\n", awe_pnp_dev->io[0]);*/
+ 		awe_base = awe_pnp_dev->io[0];
+ 		return 1;
+ 	}
+ #endif
  #ifdef AWE_DEFAULT_BASE_ADDR
  	if (awe_detect_base(AWE_DEFAULT_BASE_ADDR))
  		return 1;
***************
*** 3773,3778 ****
--- 3799,3821 ----
  	awe_base = 0;
  	return 0;
  }
+ 
+ 
+ #if defined(CONFIG_PNP) || (defined(MODULE) && defined(CONFIG_PNP_MODULE))
+ 
+ static void
+ awe_pnp(enum pnp_event e, unsigned long data, struct pnp_device *dev)
+ {
+ 	if (awe_pnp_dev != dev)
+ 		return;
+ 	switch(e) {
+ 		case PNP_EVNT_RECONFIG:
+ 		awe_base = dev->io[0];
+ 		break;
+ 	}
+ }
+ 
+ #endif
  
  
  /*================================================================
