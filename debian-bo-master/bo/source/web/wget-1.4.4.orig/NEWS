News in 1.4.4: Bugfixes!

News in 1.4.3:
1. Is now a GNU utility --> GNU Wget!
2. Can do passive FTP.
3. Reads .netrc.
3. Info documentation expanded.
4. Compiles on pre-ANSI compilers.
5. Global wgetrc now goes to /usr/local/etc (i.e. $sysconfdir).
6. Lots of bugfixes.

------
News in 1.4.2:
1. New mirror site at ftp://sunsite.auc.dk/pub/infosystems/wget/, thanks to
   Karsten Thygesen.
2. Mailing list!  Mail to wget-request@sunsite.auc.dk to subscribe.
3. New option --delete-after for proxy prefetching.
4. New option --retr-symlinks to retrieve symbolic links like plain files.
5. rmold.pl -- script to remove files deleted on the remote server
6. --convert-links should work now.
7. Minor bugfixes.

------
News in 1.4.1:
1. Minor bugfixes.
2. Added -I (the opposite of -X).
3. Dot tracing is now customizable; try wget --dot-style=binary

------
Wget 1.4.0 [formerly known as Geturl] is an extensive rewrite of
Geturl. Although many things look suspiciously similar, most of the
stuff was rewritten, like recursive retrieval, HTTP, FTP and mostly
everything else. Wget should be now easier to debug, maintain and,
most importantly, use.

News in Wget 1.4.0:

* Recursive HTTP should now work without glitches, even with Location
  changes, server-generated directory listings and other naughty
  stuff.

* HTTP regetting is supported on servers that support Range
  specification. WWW authorization is supported -- try
  wget http://user:password@hostname/

* FTP support was rewritten and widely enhanced. Globbing should now
  work flawlessly. Symbolic links are created locally. All the 
  information the Unix-style ls listing can give is now recognized.

* Recursive FTP is supported, e.g.
  wget -r ftp://gnjilux.cc.fer.hr/pub/unix/util/

* You can specify "rejected" directories, to which you do not want to
  enter, e.g. with wget -X /pub

* Time-stamping is supported, with both HTTP and FTP. Try wget -N URL.

* A new texinfo reference manual is provided.  It can be read with Emacs,
  standalone info, or converted to HTML, dvi or postscript.

* Fixed a long-standing bug, so that Wget now works over SLIP
  connections.

* You can have a system-wide wgetrc (/usr/local/lib/wgetrc by
  default). Settings in $HOME/.wgetrc override the global ones, of
  course :-)

* You can set up quota in .wgetrc to prevent sucking too much
  data. Try `quota = 5M' in .wgetrc (or quota = 100K if you want
  your sysadmin to like you).

* Download rate is printed after retrieval.

* Wget now sends the `Referer' header when retrieving
  recursively.

* With the new --no-parent option Wget can retrieve FTP recursively
  through a proxy server.

* HTML parser, as well as the whole of Wget was rewritten to be much
  faster and less memory-consuming (yes, both).

* Absolute links can be converted to relative links locally. Check
  wget -k.

* Wget catches hangup, filtering the output to a log file and
  resuming work. Try kill -HUP %?wget.

* User-defined headers can be sent. Try
  wget http://fly.cc.her.hr/ --header='Accept-Charset: iso-8859-2'

* Acceptance/Rejection lists may contain wildcards.

* Wget can display HTTP headers and/or FTP server response with the
  new `-S' option.  It can save the original HTTP headers with `-s'.

* socks library is now supported (thanks to Antonio Rosella
  <Antonio.Rosella@agip.it>). Configure with --with-socks.

* There is a nicer display of REST-ed output.

* Many new options (like -x to force directory hierarchy, or -m to
  turn on mirroring options).

* Wget is now distributed under GNU General Public License (GPL).

* Lots of small features I can't remember. :-)

* A host of bugfixes.

------
News in 1.3:
1. Added FTP globbing support (ftp://fly.cc.fer.hr/*)
2. Added support for no_proxy
3. Added support for ftp://user:password@host/
4. Added support for %xx in URL syntax
5. More natural command-line options
6. Added -e switch to execute .geturlrc commands from the command-line
7. Added support for robots.txt
8. Fixed some minor bugs

------
News in 1.2:
1. Bug-fixes

------
News in 1.1 (features not present in 1.0):

1. REST supported in FTP
2. Proxy servers supported
3. GNU getopt used, which enables command-line arguments to be
   ordered as you wish, e.g.
   geturl http://fly.cc.fer.hr/ -vo log
   is the same as
   geturl -vo log http://fly.cc.fer.hr/
4. Netscape-compatible URL syntax for HTTP supported:
   host[:port]/dir/file
5. NcFTP-compatible colon URL syntax for FTP supported:
   host:/dir/file
6. <base href="xxx"> supported
7. autoconf supported
