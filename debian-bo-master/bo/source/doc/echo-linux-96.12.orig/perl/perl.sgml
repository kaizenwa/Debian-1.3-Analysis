<!doctype linuxdoc system>

<article>
<title>Quelques informations sur <em/perl/
<author>Olivier Aubert, <tt/Olivier.Aubert@enst-bretagne.fr/
<date>18 Juillet 1996

<abstract>
Ce document donne un certain nombre de points de départ concernant
<em/perl/. C'est une introduction générale au langage, mais pas à sa
programmation. Des références vers d'autres documents complémentaires
sont données tout au long de l'article.
</abstract>

<toc>

<sect>Introduction
<p>

<sect1>Présentation
<p>
<em/perl/ est un langage interprété (avec une phase interne de
pré-compilation) optimisé pour traiter des fichiers texte, mais qui
peut également être utilisé pour diverses tâches
d'administration-systèeme.

Sa syntaxe s'inspire très largement de celles de <em/C/, <em/awk/,
<em/sed/ et <em/sh/, ce qui rend son apprentissage très facile pour
toute personne ayant un peu d'expérience avec ces outils. Néanmoins,
pas d'affolement si vous ne les connaissez pas, vous pourrez apprécier
certains concepts avec un oeil neuf.

Il n'y a aucune limitation sur la taille des données ou sur leur
contenu (une chaîne peut contenir le caractère nul, et la gestion de
la mémoire qu'elle utilise n'est pas à la charge du programmeur).

Une grande quantité de modules permet de lui ajouter rapidement
diverses extensions (CGI, Tk, Msql, POSIX, Curses, NNTP, etc).

Un des ses avantages est qu'il permet d'écrire rapidement des
applications puissantes qui peuvent tourner immédiatement sur
plusieurs plates-formes différentes.  Son utilisation va donc du
prototypage rapide d'applications au développement complet de
programmes divers et portables.

<sect1>Historique
<p>
<em/perl/ a été conçu en 1987 par Larry Wall.  C'est à la même
personne que l'on doit le lecteur de news <tt/rn/ ainsi que
l'utilitaire <tt/patch/, bien connu des Linuxeurs/iens/istes.  Il
avait besoin à l'époque de générer des rapports sur le trafic engendré
par un système analogue aux News actuelles, et les outils dont il
disposait à l'époque étaient soit pas assez puissants, soit pas assez
souples.

Il a donc conçu un langage adapté à ses besoins, c'est-à-dire capable
d'analyser des données textuelles pour concevoir des rapports, d'où
l'acronyme utilisé: <em/Practical Extraction and Report
Language/. Cette signification <em/politiquement correcte/ n'est
apparue, d'après le folklore, qu'après le terme plus précis:
<em/Pathologically Eclectic Rubbish Lister/.

Ayant mis sa création à disposition d'autres personnes, il a ensuite
intégré de nombreuses fonctionnalités (appels systèmes, etc) qui lui
étaient demandées, ce qui a conduit le langage a être utilisé par de
nombreux administrateurs-système.

<sect1>Problème de version ?
<p>
Ces derniers temps ont vu une nouvelle source de problèmes émerger
dans la communauté <em/perl/, à l'occasion de la sortie de la version
5 du langage. La version précédente, généralement 4.036, était alors
utilisée depuis quelques années, quand la nouvelle version est
sortie. Celle-ci apporte de nombreuses améliorations, directement
visibles ou plus internes, tout en restant compatible avec les
anciennes versions du langage (il faut noter que certains scripts
écrits pour <em/perl/ version 1 fonctionnent encore sans changement
avec la version actuelle).

La compatibilité n'est cependant pas totale : un certain nombre
d'incompatibilités mineures ont été introduites et peuvent obliger à
reprendre certains scripts. L'exemple le plus courant est le fait que
le caractère <tt/@/ doit maintenant être précédé d'un <em/backslash/
à l'intérieur d'une chaîne de caractères, afin que le <tt/@/ ne soit
pas interprété comme un préfixe de tableau.

L'ensemble des incompatibilités, ainsi que les pièges les plus
courants pour les personnes utilisant <em/C/ ou <em/awk/ sont
présentés dans la page de manuel <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perltrap.html"
name="perltrap"></tt>

Cet article est consacré principalement à <em/perl5/, et plus
spécifiquement <em/perl5.003/ ou supérieur. Cette dernière version est
en effet celle qui est la plus pratique à utiliser ou installer, et la
seule activement maintenue.

<sect1>Qu'apporte perl5 par rapport à la version précédente ?
<p>
Voilà quelques unes des améliorations les plus évidentes:

<itemize>

<item>des <htmlurl
url="http://www.perl.com/perl/doc/manual/html/perldsc.html"
name="structures de données complexes">, grâce à l'introduction des
<htmlurl url="http://www.perl.com/perl/doc/manual/html/perlref.html"
name="références"> ;

<item>une approche orientée-objet, dont l'intérêt n'est pas simplement
académique: elle a permis en effet le développement de divers
<ref id="modules" name="modules"> rendant l'écriture des
scripts encore plus simple et plus rapide ;

<item>les <htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlre.html"
name="expressions régulières"> sont maintenant plus puissantes, et
la possibilité est offerte de placer des commentaires à l'intérieur,
afin d'expliquer leur fonctionnement ;

<item>la possibilité d'ajouter facilement de nouvelles fonctionnalités
venant de librairies C grâce au langage d'extension <em/XS/ (voir les
pages de manuel <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlxs.html"
name="perlxs"></tt>
et <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlxstut.html"
name="perlxstut"></tt>).

</itemize>

<sect>Où trouver les fichiers, indispensables ou superflus ?
<p>
<sect1>Sur le WWW
<p>
Le principal site WWW sur <em/perl/ est maintenu par Tom Christiansen,
un des gourous de <em/perl/. Son adresse est <url
url="http://www.perl.com/">. Il contient de nombreux documents sur
tous les aspects de <em/perl/, du plus technique au plus général en
passant par les inévitables guerres de religion entre les partisans de
différents langages (<em/perl/, <em/python/, <em/tcl/, etc).

De nombreux pointeurs vers d'autres sites y sont également
présents. C'est donc une mine de renseignements, que l'on peut
également visiter uniquement par curiosité.

Il propose également un service permettant d'accéder de manière
transparente au site <ref id="CPAN" name="CPAN"> le plus près de
chez vous.

<sect1>Par <tt/ftp/
<p>
Fin 1995, le besoin s'est fait sentir de regrouper les efforts de la
communauté <em/perl/ afin d'éviter d'avoir à réinventer la roue à
chaque fois. De cette idée est né le CPAN<label id="CPAN">, pour
<em/Comprehensive Perl Archive Network/, d'un principe analogue au
CTAN pour TeX.

Le site principal <url
url="ftp://ftp.funet.fi/pub/languages/perl/CPAN/"> centralise les
sources, la documentation ainsi que les nombreux modules existants. Il
est ensuite <em/mirrorisé/ sur l'ensemble des sites constituant le CPAN,
assurant ainsi un temps d'accès convenable.

En France, il existe deux sites CPAN:

<itemize>

<item><url url="ftp://ftp.ibp.fr/pub/perl/CPAN/">

<item><url url="ftp://ftp.pasteur.fr/pub/computing/unix/perl/CPAN/">

</itemize>

La lecture du fichier <htmlurl
url="http://www.perl.com/CPAN/ROADMAP.html" name="ROADMAP">
présent dans le répertoire
principal de ces sites est un bon point de départ pour se retrouver
dans son architecture.

Si vous cherchez un module particulier, allez voir la <htmlurl
url="http://www.perl.com/CPAN/modules/00modlist.long.html"
name="liste des modules">, postée régulièrement dans le groupe
<tt/comp.lang.perl.modules/ et disponible sur les sites <ref id="CPAN"
name="CPAN">.

<sect1>Par Usenet
<p>

<em/perl/ est également présent dans l'arboresence Usenet. Le groupe
initial, <tt/comp.lang.perl/ a subi en 1995 une réorganisation, suite
au trafic important qu'il supportait, et les groupes suivants sont
maintenant disponibles:

<descrip>

<tag><tt/comp.lang.perl.announce/</tag> Groupe modéré à faible trafic,
destiné à recevoir les annonces concernant <em/perl/, ses modules
ainsi que les FAQs ;

<tag><tt/comp.lang.perl.misc/</tag> Groupe général sur <em/perl/ ;

<tag><tt/comp.lang.perl.modules/</tag> Utilisation et développement
des modules ;

<tag><tt/comp.lang.perl.tk/</tag> À propos du module Tk de <em/perl/.

</descrip>

<sect>Où trouver de la documentation ?
<p>
<sect1>En ligne
<p>
<sect2>Accès
<p>
Depuis la version 5 de <em/perl/ un effort particulier a été porté sur
la documentation en ligne. L'unique page de manuel <tt/perl/ a été
réécrite et séparée en plusieurs fichiers, afin de faciliter sa
consultation. Pour voir les différentes pages disponibles, il suffit
de rentrer la commande

<tscreen><verb>% man perl</verb></tscreen>

ou encore, si les pages de manuel n'ont pas été installées
correctement sur votre système

<tscreen><verb>% perldoc perl</verb></tscreen>

<sect2>Organisation
<p>
Si l'on a l'intention de lire l'ensemble des pages (ce qui se fait
très bien), il est conseillé de les lire dans l'ordre proposé. Si l'on
cherche la syntaxe d'une commande particulière, il faut consulter le
document <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlfunc.html"
name="perlfunc"></tt>. Pour une référence complète sur les
expressions régulières, consulter le document <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlre.html"
name="perlre"></tt>

<sect2>Documentation des modules
<p>
<em/POD/, un nouveau format de documentation a été introduit dans
<em/perl5/. Il signifie <em/Plain Old Documentation/ et sa syntaxe est
décrite dans le document <tt><htmlurl
url="http://www.perl.com/perl/doc/manual/html/perlpod.html"
name="perlpod"></tt>.

C'est un format très simple, ne disposant pas de grandes possibilités
mais largement suffisant pour écrire des pages de manuel. De nombreux
convertisseurs existent pour le convertir ensuite dans d'autres
formats: texte, nroff, LaTeX, html. On dispose ainsi d'une
documentation unique et facilement consultable quel que soit le moyen
dont on dispose.

Un autre de ses avantages est qu'il est prévu pour être directement
intégré dans du code <em/perl/. Ainsi, la plupart des modules
contiennent leur propre documentation. Pour accéder à la documentation
du module <tt/File::Copy/ par exemple, il suffit d'exécuter la commande 

<tscreen><verb>
% perldoc File::Copy
</verb></tscreen>

Il est possible d'appliquer les convertisseurs du format <em/POD/
(<tt/pod2txt/, <tt/pod2html/, <tt/pod2man/, <tt/pod2html/) directement
sur les modules ou les scripts, afin d'en extraire cette documentation.

<sect1>Sur le WWW
<p>
J'ai déjà parlé du site <url url="http://www.perl.com/">, qui contient
des pointeurs vers de la documentation en ligne ou vers divers livres
consacrés à <em/perl/.

De nombreux tutoriaux, le plus souvent en anglais, sont également
disponibles. Il suffit de rentrer les termes de recherche <em/perl/ et
<em/tutorial/ dans un moteur de recherche pour les obtenir. Je ne peux
pas vraiment en conseiller un, étant donné que la documentation
standard de <em/perl/ m'a toujours suffi.

<sect1>De vrais livres
<p>
De nombreux livres existent, du livre de référence au simple
tutorial. La liste la plus à jour de ces ouvrages est disponible sur
le site WWW <url url="http://www.perl.com/">, à l'URL <url
url="http://www.perl.com/perl/info/books.html">.

Les ouvrages de référence, car écrits par Larry Wall, l'auteur du
langage, et d'autres spécialistes (Tom Christiansen, Randal
L. Schwartz), sont:

<descrip>

<tag/Programming Perl/ aussi appelé le <em/Camel Book/ à cause de
l'image de dromadaire présente sur sa couverture. C'est l'ouvrage de
référence pour <em/perl/. Une version est en cours de réécriture pour
intégrer les nouvelles fonctionnalités de <em/perl5/. Sa date de
sortie est prévue pour septembre 1996.

<tag/Learning Perl/ C'est un tutorial, couvrant uniquement les
possibilités de <em/perl4/. Une traduction française est disponible.

</descrip>

<em/(Attention, pub)/ J'ai également écrit un document d'introduction
à perl en français, dont les versions Postscript et dvi sont
disponibles à l'adresse <url
url="http://www-eleves.enst-bretagne.fr/~aubert/perl/">.

<sect>Informations complémentaires
<p>
Dans cette section se trouvent - pour l'instant - des informations
pouvant être utiles aux personnes désirant installer des
modules. D'autres informations plus spécifiques pourront y être
ajoutées, sur demande.

<sect1>Installation de modules<label id="modules">
<p>
L'introduction des modules et du langage d'extension <em/XS/ a
grandement facilité la vie des programmeurs ainsi que des
utilisateurs.  Un mécanisme (<tt/MakeMaker/) a été développé afin de rendre
l'installation de nouveau modules la plus simple possible. J'en
parlerai ici du point de vue de la personne qui doit installer un
nouveau module. Ce que je décris est valable surtout pour les systèmes
gérant les librairies dynamiques. La marche à suivre pour les autres
systèmes (librairies statiques) est presque identique mais impose de
recompiler une nouvelle version de l'interpréteur <tt/perl/. 

<sect2>Démarche générale
<p>
Voyons dans un premier temps la démarche générale, adaptée pour tous
les modules simples. Après avoir détarré l'archive du module et être
allé dans le répertoire ainsi créé, il suffit de procéder ainsi:

<tscreen>
<verb>
% less README
% less INSTALL
% perl Makefile.PL
% make
% make test
% make install
</verb>
</tscreen>

<sect2>Un exemple plus développé
<p>
Prenons l'exemple du module <em/Curses/ qui procure des routines
permettant de gérer la gestion d'un écran en mode texte. Il ne vient
pas avec la distribution standard de <em/perl/, il faut donc aller le
récupérer sur un des sites <ref id="CPAN" name="CPAN"> ; il se trouve
dans la catégorie <em/User Interfaces/.

Il faut ensuite détarrer le fichier archive rapatrié dans un
répertoire quelconque. Rappelons aux utilisateurs de Linux qu'il est
déconseillé de compiler quoi que ce soit en étant root : mieux vaut le
faire en tant qu'utilisateur normal, puis passer root pour faire
l'installation uniquement.

Dans le répertoire <tt/Curses-1.0/ ainsi créé se trouvent plusieurs
fichiers et répertoires dont nous allons voir les plus importants.

En premier lieu, bien lire les fichiers <tt/README/ et
<tt/INSTALL/. La marche à suivre y est indiquée. Dans le cas de
<em/Curses/ qui est un paquetage variant beaucoup d'une machine à
l'autre, il faut copier à la main le fichier du répertoire <tt/hints/
correspondant à son architecture dans le fichier <tt/c-config.h/ et
éditer le fichier <tt/Makefile.PL/ pour décommenter les lignes
relatives à son système d'exploitation.

Je vous rassure, <em/Curses/ fait partie des modules impliquant le
plus de manipulations. Dans la plupart des cas, comme par exemple pour
<em/GD/ ou <em/Msql/, il suffit d'avoir auparavant installé les
librairies adéquates sur son système si elles n'y étaint pas déjà.

Il faut ensuite lancer la commande <tscreen><verb>% perl
Makefile.PL</verb></tscreen> qui va faire un certain nombre de tests
et créer le fichier <tt/Makefile/.  Un simple <tt/make/ doit ensuite
suffire à construire l'extension.

<tt/% make test/ lance une série de tests afin de vérifier que le module
est correctement compilé. Il suffit enfin de passer root pour faire le
<tt/% make install/ qui ira installer les fichiers nécessaires dans les
bons répertoires (généralement,
<tt>/usr/local/lib/perl5/site_perl/</tt> ou
<tt>/usr/lib/perl5/site_perl/</tt>).

<sect1>Comment installer un module sans avoir les droits root ?
<p>
Les modules sont installés par défaut dans le répertoire standard des
librairies de <em/perl/. Si vous avez besoin d'un module mais que vous
n'avez pas les droits sur l'arborescence <tt>/usr/local</tt>, il est
toujours possible d'installer des modules dans votre répertoire
personnel, en précisant pour cela le répertoire adéquat lors de la
génération du fichier <tt/Makefile/:

<tscreen><verb>% perl Makefile.PL PREFIX=~</verb></tscreen>

ce qui va installer les modules dans le répertoire <tt>$HOME/lib</tt>.
Pour y accéder, il suffit de commencer le script par:

<tscreen><verb>
#!/usr/local/bin/perl

use lib "$ENV{HOME}/lib";
</verb></tscreen>

La documentation complète des attributs d'installation pouvant être
fixés est disponible par la commande:

<tscreen><verb>
% perldoc ExtUtils::MakeMaker
</verb></tscreen>

</article>
