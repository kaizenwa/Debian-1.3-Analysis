.\" Written by Michael Haardt, Fri Nov 25 14:51:42 MET 1994
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" Modifications, Sun Feb 26 14:39:45 1995, faith@cs.unc.edu
.\" "
.TH SETJMP 3 "November 25, 1994" "" "Library functions"
.SH NAME
setjmp \- save stack context for non-local goto
.SH SYNOPSIS
.ad l
#include <setjmp.h>
.sp
.BI "int setjmp(jmp_buf " env " );"
.ad b
.SH DESCRIPTION
\fBsetjmp\fP and \fBlongjmp\fP(3) are useful for dealing with errors
and interrupts encountered in a low-level subroutine of a program.
\fBsetjmp()\fP saves the stack context/environment in \fIenv\fP for
later use by \fBlongjmp()\fP.  The stack context will be invalidated
if the function which called \fBsetjmp()\fP returns.
.SH "RETURN VALUE"
It returns the value 0 if returning directly and non-zero
when returning from \fBlongjmp()\fP using the saved context.
.SH "CONFORMING TO"
POSIX
.SH NOTES
POSIX does not specify if the signal context will be saved or not.
If you want to save signal masks, use
.BR sigsetjmp (3).
\fBsetjmp()\fP makes programs hard to understand and maintain.  If
possible an alternative should be used.
.SH "SEE ALSO"
.BR longjmp "(3), " sigsetjmp "(2), " siglongjmp (2)
