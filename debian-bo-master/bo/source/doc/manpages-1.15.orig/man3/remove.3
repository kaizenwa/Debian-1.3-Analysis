.\" This file is derived from unlink.2, which has the following copyright:
.\"
.\" --snip--
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" --snip--
.\"
.\" Edited into remove.3 shape by:
.\" Graeme W. Wilford (G.Wilford@ee.surrey.ac.uk) on 13th July 1994
.\"
.TH REMOVE 3 "13 July 1994" Linux "GNU"
.SH NAME
remove \- delete a name and possibly the file it refers to
.SH SYNOPSIS
.B #include <stdio.h>
.sp
.BI "int remove(const char *" pathname );
.SH DESCRIPTION
.B remove
deletes a name from the filesystem. If that name was the
last link to a file and no processes have the file open the file is
deleted and the space it was using is made available for reuse.

If the name was the last link to a file but any processes still have
the file open the file will remain in existence until the last file
descriptor referring to it is closed.

If the name referred to a symbolic link the link is removed.

If the name referred to a socket, fifo or device the name for it is
removed but processes which have the object open may continue to use
it.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP 0.8i
.B EFAULT
.IR pathname " points outside your accessible address space."
.TP
.B EACCES
Write access to the directory containing
.I pathname
is not allowed for the process's effective uid, or one of the
directories in
.IR pathname
did not allow search (execute) permission.
.TP
.B EPERM
The directory containing
.I pathname
has the sticky-bit
.RB ( S_ISVTX )
set and the process's effective uid is neither the uid of the file to
be deleted nor that of the directory containing it.
.TP
.B ENAMETOOLONG
.IR pathname " was too long."
.TP
.B ENOENT
A directory component in
.I pathname
does not exist or is a dangling symbolic link.
.TP
.B ENOTDIR
A component used as a directory in
.I pathname
is not, in fact, a directory.
.TP
.B EISDIR
.I pathname
refers to a directory.
.TP
.B ENOMEM
Insufficient kernel memory was available.
.TP
.B EROFS
.I pathname
refers to a file on a read-only filesystem.
.SH "CONFORMING TO"
SVID, AT&T, POSIX, X/OPEN, BSD 4.3
.SH BUGS
In-felicities in the protocol underlying NFS can cause the unexpected
disappearance of files which are still being used.
.SH "SEE ALSO"
.BR unlink "(2), " rename "(2), " open "(2), " rmdir (2),
.BR mknod "(2), " mkfifo "(3), " link "(2), " rm "(1), " unlink (8).
