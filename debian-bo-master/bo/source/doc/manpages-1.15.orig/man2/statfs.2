.\" Copyright (c) 1989, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)statfs.2	6.5 (Berkeley) 7/23/91
.\"
.\" Modified Sat Jul 24 11:27:31 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.TH STATFS 2 "24 July 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
statfs, fstatfs \- get file system statistics
.SH SYNOPSIS
.B #include <sys/vfs.h>
.sp
.BI "int statfs(const char *" path ", struct statfs *" buf );
.br
.BI "int fstatfs(int " fd ", struct statfs *" buf );
.SH DESCRIPTION
.N Statfs
returns information about a mounted file system.
.I Path
is the path name of any file within the mounted filesystem.
.I Buf
is a pointer to a
.I statfs
structure defined as follows:

.RS
.nf
struct statfs {
   long    f_type;     /* type of filesystem (see below) */
   long    f_bsize;    /* optimal transfer block size */
   long    f_blocks;   /* total data blocks in file system */
   long    f_bfree;    /* free blocks in fs */
   long    f_bavail;   /* free blocks avail to non-superuser */
   long    f_files;    /* total file nodes in file system */
   long    f_ffree;    /* free file nodes in fs */
   fsid_t  f_fsid;     /* file system id */
   long    f_namelen;  /* maximum length of filenames */
   long    f_spare[6]; /* spare for later */
};

File system types:

linux/ext2_fs.h:  EXT2_OLD_SUPER_MAGIC  0xEF51
linux/ext2_fs.h:  EXT2_SUPER_MAGIC      0xEF53
linux/ext_fs.h:   EXT_SUPER_MAGIC       0x137D
linux/iso_fs.h:   ISOFS_SUPER_MAGIC     0x9660
linux/minix_fs.h: MINIX_SUPER_MAGIC     0x137F /* orig. minix */
linux/minix_fs.h: MINIX_SUPER_MAGIC2    0x138F /* 30 char minix */
linux/minix_fs.h: NEW_MINIX_SUPER_MAGIC 0x2468 /* minix V2 */
linux/msdos_fs.h: MSDOS_SUPER_MAGIC     0x4d44
linux/nfs_fs.h:   NFS_SUPER_MAGIC       0x6969
linux/proc_fs.h:  PROC_SUPER_MAGIC      0x9fa0
linux/xia_fs.h:   _XIAFS_SUPER_MAGIC    0x012FD16D
.fi
.RE
.PP
Fields that are undefined for a particular file system are set to \-1.
.B Fstatfs
returns the same information about an open file referenced by descriptor
.IR fd .
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
For
.BR statfs :
.TP 0.8i
.B ENOTDIR
A component of the path prefix of
.I Path
is not a directory.
.TP
.B EINVAL
.I path
contains a character with the high-order bit set.
.TP
.B ENAMETOOLONG
The length of a component of
.I path
exceeds 255 characters, or the length of
.I path
exceeds 1023 characters. [Documenter's note: are these values correct for
Linux?]
.TP
.B ENOENT
The file referred to by
.I path
does not exist.
.TP
.B EACCES
Search permission is denied for a component of the path prefix of
.IR path .
.TP
.B ELOOP
Too many symbolic links were encountered in translating
.IR path .
.TP
.B EFAULT
.I Buf
or
.I path
points to an invalid address.
.TP
.B EIO
An I/O error occurred while reading from or writing to the file
system.
.PP
For
.BR fstatfs :
.TP 0.8i
.B EBADF
.I Fd
is not a valid open file descriptor.
.TP
.B EFAULT
.I Buf
points to an invalid address.
.TP
.B EIO
An I/O error occurred while reading from or writing to the file
system.
.SH "CONFORMING TO"
4.4BSD.
.SH "SEE ALSO"
.BR stat (2)
