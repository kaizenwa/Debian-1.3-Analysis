.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH VM86 2 "24 July 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
vm86 \- enter virtual 8086 mode
.SH SYNOPSIS
.B #include <sys/vm86.h>
.sp
.BI "int vm86(struct vm86_struct * " info );
.SH DESCRIPTION
Enter VM86 mode with information as specified in
.IR info :

.RS
.nf
struct vm86_struct {
        struct vm86_regs regs;
        unsigned long flags;
        unsigned long screen_bitmap;
};

struct vm86_regs {
/*
 * normal regs, with special meaning for the segment descriptors..
 */
        long ebx;
        long ecx;
        long edx;
        long esi;
        long edi;
        long ebp;
        long eax;
        long __null_ds;
        long __null_es;
        long __null_fs;
        long __null_gs;
        long orig_eax;
        long eip;
        long cs;
        long eflags;
        long esp;
        long ss;
/*
 * these are specific to v86 mode:
 */
        long es;
        long ds;
        long fs;
        long gs;
};
.fi
.RE
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH ERRORS
.TP 0.8i
.B EPERM
Saved kernel stack exists. (This is a kernel sanity check; the saved
stack should only exist within vm86 mode itself.)
.SH "CONFORMING TO"
This call is specific to Linux on Intel processors, and should not be
used in programs intended to be portable.
