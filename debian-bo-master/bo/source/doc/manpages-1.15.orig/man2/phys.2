.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1993 Michael Haardt
.\" (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Fri Apr  2 11:32:09 MET DST 1993
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" Modified Sun Jul 25 10:49:24 1993 by Rik Faith <faith@cs.unc.edu>
.\"
.TH PHYS 2 "24 July 1993" "Linux 0.99.11" "Linux Programmer's Manual"
.SH NAME
phys \- allow a process to access physical addresses [NOT IMPLEMENTED]
.SH SYNOPSIS
.ad l
.nf
.BI "int phys(int " physnum ", char *" virtaddr ", long " size ,
.BI "char *" physaddr );
.fi
.ad b
.SH DESCRIPTION
.BR WARNING :
Since this function is not implemented as of Linux 0.99.11, it will always
return \-1 and set
.I errno
to
.BR ENOSYS .

\fBphys\fP maps arbitrary physical memory into a process's virtual
address space.  \fIphysnum\fP is  number (0\(en3) that specifies which
of the 4 physical spaces to set up.  Up to 4 \fBphys\fP calls can be
active at any one time.  \fIvirtaddr\fP is the process's virtual address.
\fIsize\fP is the number of bytes to map in.  \fIphysaddr\fP is the
physical address to map in.
.PP
Valid \fIvirtaddr\fP and \fIphysaddr\fP values are constrained by
hardware and must be at an address multiple of the resolution of the
CPU's memory management scheme.  If \fIsize\fP is non zero, \fIsize\fP
is rounded up to the next MMU resolution boundary.  If \fIsize\fP is
zero, any previous \fBphys\fP(2) mapping for that \fIphysnum\fP is
nullified.
.SH "RETURN VALUE"
On success, zero is returned.  On error, \-1 is returned, and
.I errno
is set appropriately.
.SH "CONFORMING TO"
Version 7.
.SH BUGS
\fBphys\fP is very machine dependent.
.SH "SEE ALSO"
.BR mmap "(2), " munmap (2)
