#! /usr/bin/make -f
#
# Last updated: Sat Dec 17 10:52:20 EST 1994 by imurdock.
#
# To make the binary distribution package, the ``Debianized'' source package
# and the context diff to the original package, type `./debian.rules dist'.
# Make sure that `debian.rules' is executable before the final distribution
# is made.
#
# Invoke each target with `./debian.rules <target>'.  All targets should be
# invoked with the package root as the current directory.
#
# The `binary' target must be run as root, as it needs to install files with
# specific ownerships.  The `diff' target assumes that you have the original
# source package available, unpacked, in ../$(p)-$(v).orig, or that you have
# the previous revision of the ``Debianized'' source package and context diff
# in the parent directory.

CC = gcc
CFLAGS = -O2
LDFLAGS = -s

# The name of the package (for example, `emacs').
s = glibc
p = glibcdoc
# The version of the package (for example, `19.28').
v = 1.92
# The Debian revision of the package (for example, `2').
d = 1

INSTALL_PROGRAM= install -s -g root -m 755 -o root
INSTALL_DIR= install -d -g root -m 755 -o root
INSTALL_DATA= install -g root -m 644 -o root

build:
# Builds the binary package.
#	./configure --prefix=/usr
	cd manual && makeinfo libc.texinfo && cd ..
	touch stamp-build

clean:
# Undoes the effect of `make -f debian.rules build'.
	-find . -name '*~' -o -name 'core' -o -name '#*' | xargs -n 1 rm -f
	-find . -name '*.orig' -o -name '*.rej' | xargs -n 1 rm -f
	cd manual && rm -f libc.info* && cd ..
	-make distclean
	-rm -f stamp-summary summary.texi
	rm -f stamp-build
	rm -rf debian-tmp

binary:
# Makes a binary package.
	test -f stamp-build || make -f debian.rules build
	rm -rf debian-tmp
	$(INSTALL_DIR) debian-tmp
	chmod g-s debian-tmp
	$(INSTALL_DIR) debian-tmp/DEBIAN
	$(INSTALL_DIR) debian-tmp/usr/info
	$(INSTALL_DATA) manual/libc.info* debian-tmp/usr/info
	$(INSTALL_DIR) debian-tmp/usr/doc/copyright
	$(INSTALL_DATA) debian.README debian-tmp/usr/doc/copyright/$(p)
	$(INSTALL_DIR) debian-tmp/usr/doc/examples/$(p)
	$(INSTALL_DATA) manual/examples/* debian-tmp/usr/doc/examples/$(p)
	chmod -R g-w debian-tmp/usr/doc/examples/$(p)
	chown -R root.root debian-tmp/usr/doc/examples/$(p)
#	rm -f debian-tmp/usr/info/libc.info*.gz
	gzip -9f debian-tmp/usr/info/*
	gzip -9f debian-tmp/usr/doc/examples/$(p)/*
	sed -e '2s/=/$(v)-$(d)/' debian.control >debian-tmp/DEBIAN/control
	chmod 644 debian-tmp/DEBIAN/control
	$(INSTALL_PROGRAM) debian.postinst debian-tmp/DEBIAN/postinst
	$(INSTALL_PROGRAM) debian.prerm debian-tmp/DEBIAN/prerm
	dpkg --build debian-tmp && dpkg-name -o -s .. debian-tmp.deb

source:
# Makes a source package.
	-test -f stamp-build && make -f debian.rules clean
	( cd .. && tar cf - $(s)-$(v) | gzip -9f > $(s)-$(v)-$(d).tar.gz )

diff:
# Makes a context diff.
	-test -f stamp-build && make -f debian.rules clean
	-test -d ../$(s)-$(v).orig || echo 'No original found'
	( cd .. && diff -cNr $(s)-$(v).orig $(s)-$(v) | gzip -9f \
	  > $(s)-$(v)-$(d).diff.gz )

changes:
# Prepares the package for distribution.
	cd .. && \
	rm -f *$(v)-$(d).changes && \
	dchanges ce=$(s)-$(v)/debian.Changelog *$(v)-$(d)* && \
	cd $(s)-$(v)








