<!--
	intervista.html
	Last modification: Tue, 15 Oct 1996 15:49:56 EET DST
	intervista.	David Miller		PJ 6: Intervista a David Miller	Interviste
  -->
<hr>	<!-- +++++++++++++++++++ -->

<font size=+2 color="#0000ff">Intervista a David Miller</font>
<address>
	<p align=right>
	<font size=+0>
	di
	<a href="mailto:paci@dei.unipd.it">
	Davide Barbieri</a>
	</font>
	</p>
</address>


<p><i>
<hr width=60% size=2>
Questa intervista e` stata fatta da Davide Barbieri a David Miller,
la persona che sta maggiormente lavorando al porting di Linux
su Sparc ed e` stata riportata fedelmente in inglese, perche'
David usa un linguaggio piuttosto particolare, che anche una
ottima traduzione non avrebbe ben reso.
<hr width=60% size=2>
</p></i>
<font size=+2 color="0000ff">
Interview
</font>
<br>
<ol>
<li><b>What is the status of the porting?</b>
<p>
The kernel is extremely stable and works on the following platforms as
of this moment:
<br>
<br>
<ol>
<li> All sun4c machines
<br>
<li> All sun4m machines, even SMP multiprocessor Sparcs.
The only nitch is that Cypress MBUS cpus are not
supported now, but they will be very soon.
<br>
</ol>
<p>
Userland is very robust, in fact this weekend Red Hat Software has
issued a code freeze of the Sparc sources, bug fixes only are allowed,
such that they can put together their first official release of Red
Hat Linux on the Sparc Platform.
<br>
<br>
<li><b>Why use Linux on a Sun?</b>
<p>
Three reasons:
<br>
<br>
<ol>
<li> If performance is all you care about, benchmark numbers
indicate Linux on the Sparc is faster than
Solaris and SunOS on all suported platforms
<br>
<br>
<li> Stability.  Linux on the Sparc can endure endless
days without going down when running the operating
system robustness tester called 'crashme'.  The
crashme programs basic strategy is to execute
random bytes as if they were program code and see
what happens.  This tool is very useful for finding
operating system bugs and race conditions.
<p>
Some are skeptical as to how indicative crashme is
to a real systems actual stability.  I usually ask
these people what kind of things they think happen
on their undergraduate computer science server when
the operating systems class has just learned about
how to use fork() ;-)
<p>
As it stands I have yet to see SunOS or Solaris, at any
patch level, last more than a few minutes at best when
crashme is run under them.
<br>
<br>
<li> The best support money cannot buy.  Most people are highly
skeptical about using Linux on production machines because
of the "support problem" they seem to think exists when
one uses free software.
<p>
First point I will make is that none of the people who
use Sparc Linux currently have any problems getting their
problems fixed/solved.  You could ask all of this on the
sparclinux mailing lists, and they would tell you.  One
site which runs Sparc Linux in production 24 hours a day
usually gets a bug fixed within 20 minutes when they report
them.  When I say 20 minutes, I mean within 20 minutes a
fixed kernel image is on your machine and you are back up
and running without the bug any more.  Try to get that
from Sun support, good luck and I have a bridge to sell
you. ;-)
<p>
Second point I will make, is that even with me telling
this to a potential production site that could use and
gain from Sparc Linux, they will still not feel comfortable
about just "relying" on the Linux community to be this
responsive and caring about fixing bugs.  To these people
my response is that entities like Red Hat Software do exist
who can supply (for a fee of course) that person you can
get to on the phone providing guarenteed support for your
Sparc systems running Linux.  Look at Cygnus, their entire
buisness is providing support for companies using the GNU
C Compiler and other GNU tools for development.
</ol>
<br>
<li><b>What difficulties are there in a porting like this?</b>
<p>
This may sound strange, but the problems one sees during
a port like this are probably similar to the problems a
person sees when writing any arbitrary program on a computer.
The only difference I can really point out is that the
debugging strategies are a bit different for a port of an
OS to a new machine.
<p>
To help alleviate this problem early on, I coded in support
to use KGDB (Kernel GDB) for the Sparc Linux kernel.  This
debugging strategy uses a two tiered strategy to debug the
entire operating system at the _source_ _code_ level.  A
small snippet of code runs in the kernel and handles the
break points, reading/writing of memory, and communitating
to the KGDB server which resides at the other end of one
the SparcStations serial lines.  The other side runs on
any machine running unix, it is just a plain copy of GDB
which understands Sparc executables and the like.  This
GDB invocation gives the small in-kernel debugging code
instructions and commands and does so over the serial line.
<p>
Many bugs were found expediantly because of this facility.
<br>
<br>
<li><b>Do you have any contact with SUN?</b>
<p>
No, I have no assosciation whatsoever with Sun Microsystems.
<p>
<ul>
<li>What they think of the porting?
</ul>
<p>
They probably could care less about the port, and in my
opinion this is a huge mistake on their part, giving the
performance and stability edge Sparc Linux has over thier
Proprietary OS's, and the fact that one can get complete
source for the Linux Sparc system on top of all that.
<br>
<br>
<li><b>How much interest is there on this project?</b>
<p>
The interest is huge.  And I expect interest to grow
exponentially as the next year progresses, especially
with the release of Red Hat Linux on the Sparc.
<br>
</ol>
<br>
Later,
David S. Miller
davem@caip.rutgers.edu
