#!/usr/bin/make -f
# debian.rules file for the GNU packages
# Invoke each target with: debian.rules <target>
# All should be invoked with the package root as the current directory
.PHONY: build checkdir checkroot

p = emacs-lisp-intro
v = 1.04
r = 1

pv  = $(p)-$(v)
pvr = $(p)-$(v)-$(r)

INSTALL_SCRIPT = install -g root -o root -m 755
INSTALL_DIR = install -g root -o root -d -m 755
INSTALL_DATA = install -g root -o root -m 644

build: checkdir
# Builds the binary package.
	makeinfo emacs-lisp-intro.texi
	touch stamp-build

clean: checkroot
# Undoes the effect of `make -f debian.rules build'.
	rm -f *.info*
	rm -f stamp-build
	rm -f *~
	rm -rf debian-tmp

binary: checkroot
# Makes a binary package.
	test -f stamp-build || make -f debian.rules build
	rm -rf debian-tmp
	$(INSTALL_DIR) debian-tmp/DEBIAN
	$(INSTALL_SCRIPT) debian.postinst debian-tmp/DEBIAN/postinst
	$(INSTALL_SCRIPT) debian.prerm debian-tmp/DEBIAN/prerm
	sed -e '2s/=/$(v)-$(r)/' debian.control >debian-tmp/DEBIAN/control
	$(INSTALL_DIR) debian-tmp/usr/doc/copyright
	$(INSTALL_DATA) debian.README debian-tmp/usr/doc/copyright/$(p)
	$(INSTALL_DIR) debian-tmp/usr/info
	for f in *.info*; do \
		$(INSTALL_DATA) $$f debian-tmp/usr/info/`basename $$f`; \
		gzip -v9 debian-tmp/usr/info/`basename $$f`; \
	done
	dpkg --build debian-tmp && dpkg-name -o -s .. debian-tmp.deb

source: checkdir
# Makes a source package.
	-test -f stamp-build && make -f debian.rules clean
	( cd .. && tar cf $(pvr).tar $(pv) && gzip -9f $(pvr).tar )

diff: checkdir
# Makes a context diff.
	-test -f stamp-build && make -f debian.rules clean
	test -d ../$(pv).orig || echo "Original in ../$(pv).orig?" || false
	( cd .. && \
	  ( diff -cNr $(pv).orig $(pv) > $(pvr).diff; \
	  [ $$? = 1 ] ) && \
	  gzip -9f $(pvr).diff )

checkdir:
	test -d ../$(pv)

checkroot: checkdir
	test root = "`whoami`"
 
stamp-build:
	make -f debian.rules build

# Local Variables:
#   mode: makefile
# End:
