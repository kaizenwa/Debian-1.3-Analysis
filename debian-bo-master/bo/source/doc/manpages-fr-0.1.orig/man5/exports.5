.\" Traduction 17/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH EXPORTS 5 "17 Octobre 1996" Linux "Manuel de l'administrateur Linux"
.UC 5
.SH NOM
exports \- Systemes de fichiers a exporter par NFS.
.SH SYNOPSIS
.B /etc/exports
.SH DESCRIPTION
Le fichier
.I /etc/exports
sert de liste de controle d'acces pour les systemes de fichiers
a exporter aux clients NFS. Il est utilise a la fois par le demon
de montage NFS
.BR mountd (8)
et par le demon serveur NFS
.BR nfsd (8).
.PP
Le format de ce fichier est similaire a celui de SunOS,
.IR exports,
avec plusieurs options supplementaires. Chaque ligne correspond a
un point de montage, et a une liste de machines, ou de noms de sous-reseaux
autorises a monter le systeme de fichier situe en ce point.
Une liste eventuelle de parametres est mise entre parentheses apres
le nom de machine. Les lignes blanches sont ignorees, et un # indique
un commentaire s'etendant jusqu'a la fin de la ligne.
.PP
.SS Options generales
.TP
.IR secure "\*d
Cette option reclame que les requetes proviennent d'un port internet
de numero inferieur a IPPORT_RESERVED (1024). 
Elle est en service par defaut. Pour la desactiver, introduire le 
mot\-cle
.IR insecure .
.TP
.IR ro
N'autorise que des requetes en lecture\-seule sur ce volume NFS.
Le comportement par defaut autorise egalement les requetes en 
ecriture, ce que l'on peut egalement mentionner explicitement en 
utilisant l'option
.IR rw .
.TP
.IR link_relative
Convertit les liens symboliques absolus (dont le contenu
commence par un slash) en lien relatifs en ajoutant le nombre
necessaire de "../" pour aller de l'emplacement du lien a la
racine du serveur. Cette option a une semantique assez subtile,
parfois surprenante lorsque la hierarchie n'est pas montee a
la racine.
.TP
.IR link_absolute
Laisse les liens symboliques tels qu'ils sont. C'est l'attitude par
defaut.
.SS Correspondance des UID
.PP
.I nfsd
effectue les controles d'acces aux fichiers du serveur en se basant sur
les UID et GID fournis avec chaque requete RPC NFS. L'utilisateur
s'attend a pouvoir acceder a ses fichiers sur le serveur NFS exactement
comme il y accederait sur un systeme de fichiers normal.

Ceci necessite que les memes UID et GID soient utilises sur le serveur
et sur la machine cliente. Ce n'est pas toujours vrai, et meme parfois
indesirable.
.PP
Il est souvent tres genant que le Super\-User d'une machine cliente
soit traite comme le Super\-User lorsqu'il accede aux fichiers du
serveur. Pour eviter ceci, l'UID 0 (root) est normalement transforme
en un autre UID : par exemple en UID anonyme
.IR nobody .
Ce mode operatoire s'appelle `root squashing' et est le comportement
par defaut. On peut le supprimer avec l'option
.IR no_root_squash .
.PP
Par defaut
.I nfsd
essaye d'obtenir un UID et un GID anonymes en cherchant au demarrage
l'utilisateur
.I nobody
dans le fichier des mots de passe. S'il n'en trouve pas, un UID et
un GID valant \-2 (en fait 65534) sont utilises. Ces valeurs peuvent
etre modifiees avec les options
.IR anonuid " et " anongid .
.PP
De plus,
.I nfsd
vous permet d'indiquer des UIDs ou GIDs arbitraires qui seront
transformes en utilisateur anonymes. Enfin, vous pouvez meme transformer
les requetes de tous les utilisateurs en UIG et GID anonymes avec
l'option
.IR all_squash " .
.PP
Pour etre utilise dans des sites ou les UIDs varient suivant les
machines,
.I nfsd
fournit une methode de conversion dynamique des UIDs du serveur
en UIDs du client et inversement.
Ceci est mis en service avec l'option
.I map_daemon
et utilise le protocole RPC UGID. Il faut que le demon de conversion
.BR ugidd (8)
soit actif sur le client.
.PP
Voici une liste complete des options de conversion :
.TP
.IR root_squash
Transforme les requetes des UID/GID 0 en UID/GID anonymes. Ceci ne
s'applique pas aux autres UID/GID sensibles comme 
.IR bin .
.TP
.IR no_root_squash
Ne pas transformer les UID/GID 0. Cette option est particulierement
utiles pour les stations sans disque.
.TP
.IR squash_uids " et " squash_gids
Cette option precise une liste d'UIDs ou de GIDs qui sont convertis
en utilisateurs anonymes. Une liste valide d'UIDs se presente ainsi :
.IP
squash_uids=0-15,20,25-50
.IP
Habituellement la liste a convertir est plus simple, comme dans :
.IP
squash_uids=0-100
.IP
.TP
.IR all_squash
Convertit tous les UID/GID en utilisateurs anonymes. Utiles pour
exporter avec NFS
des repertoires publiques de FTP, des repertoires de News, etc...
L'option inverse est
.IR no_all_squash ,
qui s'applique par defaut.
.TP
.IR map_daemon
Cette option active la conversion dynamique des UID/GID. Chaque
UID d'une requete NFS sera transforme en UID equivalent sur le serveur,
et l'UID des reponses NFS subira la transformation inverse.
Ceci necessite que le demon
.BR rpc.ugidd (8)
soit en fonctionnement sur le client.
La configuration par defaut est
.IR map_identity ,
qui laisse les UIDs intacts. Les options de `squash' s'appliquent
que la conversion dynamique soit utilisee ou non.
.TP
.IR anonuid " et " anongid
Ces options donne explicitement l'UID et le GID du compte anonyme.
Ceci est surtout utiles pour les clients PC/NFS, ou l'on desire
que toutes les requetes semblent provenir d'un utilisateur.
C'est le cas de l'entree
.I /home/joe
dans l'exemple ci-dessous, qui transforme toutes les requetes en
UID 150 (probablement celle de l'utilisateur joe).
.IP
.nf
.fi
.SH EXEMPLE
.PP
.nf
.ta +3i
# fichier /etc/exports d'exemple
/               maitre(rw) confiance(rw,no_root_squash)
/projects       proj*.local.domain(rw)
/usr            *.local.domain(ro) @trusted(rw)
/home/joe       pc001(rw,all_squash,anonuid=150,anongid=100)
/pub            (ro,insecure,all_squash)
.fi
.PP
La premiere ligne exporte l'ensemble du systeme de fichiers
vers les machines 
.I maitre
et 
.IR confiance .
En plus des droits d'ecriture, toutes conversions d'UID est abandonnee pour
l'hote
.IR confiance .
La deuxieme et la troisieme lignes montrent des exemples de noms
d'hotes generiques, et de sous-reseaux (`@trusted'). 

La quatrieme ligne montre une entree pour le client PC/NFS presente
plus haut.

La derniere ligne exporte un repertoire publique de FTP, a tous les
hotes dans le monde, en effectuant les requetes sous le compte
anonyme.
L'option
.I insecure 
permet l'acces aux clients dont l'implementation NFS n'utilise pas
un port reserve.
.SH INCONVENIENTS
Contrairement a d'autres implementations NFS, ce
.B nfsd
vous autorise a exporter a la fois un repertoire et un
sous-repertoire a destination du meme hote, par exemple :
.IR /usr " et " /usr/X11R6 .
Dans ce cas, l'option de montage la plus specifique s'applique.
Par exemple si un utilisateur sur le client accede a un fichier dans
.IR /usr/X11R6 ,
les options de montages fournies avec
.I /usr
s'appliquent egalement. 
C'est encore vrai lors de l'utilisation de caracteres generiques ou
de sous-reseaux.
.SH FICHIERS
.TP
.I /etc/exports
Fichier de configuration pour
.BR nfsd (8).
.TP
.I /etc/passwd
Fichier des mots de passe.
.TP
.PP
.SH DIAGNOSTIQUE
Une erreur de format dans le fichier est indiquee par
.BR syslogd (8)
avec le niveau NOTICE quand
l'un des demons
.BR nfsd (8)
ou
.BR mountd (8)
est lance.  Toute mention d'hote inconnu est indiquee a ce moment,
mais souvent tous les hotes ne sont pas encore connus de named(8)
lors du boot, ainsi lorsque des hotes sont retrouves, ceci est
indique avec les memes parametres
syslogd(8).
.SH "VOIR AUSSI"
.BR mountd (8),
.BR nfsd (8),
.BR nfs (5),
.BR passwd (5).
