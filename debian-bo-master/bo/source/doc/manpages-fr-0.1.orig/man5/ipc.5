.\" Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traduction 18/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH IPC 5 "18 Octobre 1996" Linux "Manuel de l'administrateur Linux"
.SH NOM
ipc \- Mecanisme Systeme V de communication entre processus.
.SH SYNOPSIS
.nf
.B
# include <sys/types.h>
.B
# include <sys/ipc.h>
.B
# include <sys/msg.h>
.B
# include <sys/sem.h>
.B
# include <sys/shm.h>
.SH DESCRIPTION
Cette page de manuel documente l'implementation sous Linux des
mecanismes Systeme V de communication entre processus :
les files de messages, les ensembles de semaphores, et les
segments de memoire partagee.
Par la suite, le mot
.B ressource
se rapportera a l'un de ces mecanismes.
.SS Autorisations d'acces aux ressources.
Pour chaque ressource, le systeme utilise une structure commune, de type
.BR "struct ipc_perm" ,
pour enregistrer les informations permettant de determiner les autorisations
concernant les operations ipc.
la structure
.B ipc_perm
definie dans le fichier
.I <sys/ipc.h>
inclut les membres suivants :
.sp
.nf
.sp
    ushort cuid;   /* UID du createur     */
    ushort cgid;   /* GID du createur     */
    ushort uid;    /* UID du proprietaire */
    ushort gid;    /* GID du proprietaire */
    ushort mode;   /* Autorisations r/w   */
.fi
.PP
Le membre
.B mode
de la structure
.B ipc_perm
definit, sur ses 9 bits de poids faibles, les permissions d'acces a la ressource,
pour un processus effectuant un appel systeme ipc.
Les permission sont interpretees ainsi (nombres en octal) :
.sp
.nf
	0400	Lecture par le proprietaire.
	0200	Ecriture par le proprietaire.
.sp .5
	0040	Lecture par le groupe.
	0020	Ecriture par le groupe.
.sp .5
	0004	Lecture par les autres.
	0002	Ecriture par les autres.
.fi
.PP
Les bits 0100, 0010 et 0001 (bits execution) ne sont pas utilises par ces appels 
systemes.
De plus,
"ecriture"
a la signification
"modification"
pour un ensemble de semaphores.
.PP
Le meme fichier d'en-tete definit egalement les constantes symboliques suivantes :
.TP 14
.B IPC_CREAT
Creer une entree si la cle n'existe pas.
.TP
.B IPC_EXCL
Echouer si la cle existe.
.TP
.B IPC_NOWAIT
Retourner une erreur eventuellement, mais ne pas attendre.
.TP
.B IPC_PRIVATE
Cle privee.
.TP
.B IPC_RMID
Supprimer la ressource.
.TP
.B IPC_SET
Positionner une option concernant la ressource.
.TP
.B IPC_STAT
Obtenir les options concernant la ressource.
.PP
Notez que
.B IPC_PRIVATE
est du type
.B key_t
alors que les autres constantes symboliques sont des options que l'on regroupe
avec un OU binaire (|) dans une variable de type
.BR int .
.SS Files de messages.
Une file de message est definie par un entier positif unique
.RI "( son " msqid )
et dispose d'une structure associee de type
.BR "struct msquid_ds" ,
definie dans
.IR <sys/msg.h> ,
qui contient les membres suivants :
.sp
.nf
  struct ipc_perm msg_perm;
  ushort msg_qnum;   /* nb messages dans la file    */
  ushort msg_qbytes; /* octets maxi dans la file    */
  ushort msg_lspid;  /* PID dernier appel msgsnd    */
  ushort msg_lrpid;  /* PID dernier appel msgrcv    */
  time_t msg_stime;  /* heure dernier appel msgsnd  */
  time_t msg_rtime;  /* heure dernier appel msgrcv  */
  time_t msg_ctime;  /* heure derniere modification */
.fi
.TP 11
.B msg_perm
est la structure
.B ipc_perm
qui indique les permissions d'acces sur la file de messages.
.TP
.B msg_qnum
est le nombre de messages actuellement dans la file.
.TP
.B msg_qbytes
Nombre maximal d'octets pour le contenu d'un message de la file.
.TP
.B msg_lspid
PID du processus qui a effectue le dernier appel systeme
.BR msgsnd .
.TP
.B msg_lrpid
PID du processus qui a effectue le dernier appel systeme
.BR msgrcv .
.TP
.B msg_stime
heure du dernier appel systeme
.BR msgsnd .
.TP
.B msg_rtime
heure du dernier appel systeme
.BR  msgcv .
.TP
.B msg_ctime
heure du dernier appel systeme qui a modifie un membre de la structure
.BR msqid_ds .
.SS Jeux de semaphores.
Un ensemble de semaphore est defini par un entier positif unique
.RI "(son " semid )
et dispose d'une structure associee de type
.BR "struct semid_ds" ,
definie dans
.IR <sys/sem.h> ,
qui contient les membres suivants :
.sp
.nf
  struct ipc_perm sem_perm;
  time_t sem_otime;  /* heure derniere operation    */
  time_t sem_ctime;  /* heure derniere modification */
  ushort sem_nsems;  /* nb semaphores dans le jeu   */
.fi
.TP 11
.B sem_perm
est la structure
.B ipc_perm
qui indique les permissions d'acces sur l'ensemble de semaphores.
.TP
.B sem_otime
Heure du dernier appel systeme
.BR semop .
.TP
.B sem_ctime
Heure du dernier appel systeme
.BR semctl ,
qui a modifie un membre de la structure ci-dessus ou l'etat d'un
semaphore de l'ensemble.
.TP
.B sem_nsems
Nombre de semaphores dans l'ensemble.
Chaque semaphore est reference par un nombre positif ou nul dans l'intervalle
.B 0
a
.BR sem_nsems\-1 .
.PP
Un semaphore est une structure
.B "struct sem"
contenant les membres suivants :
.sp
.nf
ushort semval;  /* valeur du semaphore                  */
ushort sempid;  /* PID derniere operation               */
ushort semncnt; /* Nb proc. en attente increment semval */
ushort semzcnt; /* Nb proc. en attente de semval = 0    */
.fi
.TP 11
.B semval
Valeur du semaphore : entier positif ou nul.
.TP
.B sempid
PID du dernier processus ayant effectue une operation sur
le semaphore.
.TP
.B semncnt
Nombre de processus bloques en attente de l'incrementation de
.BR semval .
.TP
.B semznt
Nombre de processus bloques en attente de la nullite de
.BR semval .
.SS Segments de memoire partagee.
Un segment de memoire partagee est defini par un entier positif unique
.RI "(son " shmid )
et dispose d'une structure associee de type
.BR "struct shmid_ds" ,
definie dans
.IR <sys/shm.h> ,
qui contient les membres suivants :
.sp
.nf
    struct ipc_perm shm_perm;
    int    shm_segsz;  /* taille segment              */
    ushort shm_cpid;   /* PID createur segment        */
    ushort shm_lpid;   /* PID derniere operation      */
    short  shm_nattch; /* Nombre d'attachements       */
    time_t shm_atime;  /* Heure dernier attachement   */
    time_t shm_dtime;  /* Heure dernier detachement   */
    time_t shm_ctime;  /* Heure derniere modification */
.fi
.TP 11
.B shm_perm
est la structure
.B ipc_perm
qui indique les permissions d'acces sur le segment de memoire partagee.
.TP
.B shm_segsz
Taille en octets du segment.
.TP
.B shm_cpid
PID du processus ayant cree le segment.
.TP
.B shm_lpid
PID du processus ayant effectue le dernier appel systeme
.B shmat
ou
.BR shmdt .
.TP
.B shm_nattch
Nombre d'attachements en cours pour ce segment.
.TP
.B shm_atime
Heure du dernier appel systeme
.BR shmat .
.TP
.B shm_dtime
Heure du dernier appel systeme
.BR shmdt .
.TP
.B shm_ctime
Heure du dernier appel systeme
.B shmctl
qui a modifie la structure
.BR shmid_ds .
.SH "VOIR AUSSI"
.BR ftok (3),
.BR msgctl (2),
.BR msgget (2),
.BR msgrcv (2),
.BR msgsnd (2),
.BR semctl (2),
.BR semget (2),
.BR semop (2),
.BR shmat (2),
.BR shmctl (2),
.BR shmget (2),
.B shmdt (2).
