.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 11:47:53 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 22 July 1995 by Michael Chastain (mec@duracef.shout.net):
.\"   Added 'swapflags' argument.
.\" Added historical remark, aeb, 950723.
.\"
.\" Traduction 15/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH SWAPON 2 "15 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
swapon, swapoff \- Activer / desactiver un fichier ou un peripherique de swap.
.SH SYNOPSIS
.B #include <unistd.h>
.br
.B #include <linux/swap.h>
.sp
.BI "int swapon(const char *" path ", int " swapflags );
.br
.BI "int swapoff(const char *" path );
.SH DESCRIPTION
.B swapon
active le swap sur le fichier ou le peripherique en mode bloc indique dans
.IR path .
.B swapoff
arrete le swap sur le fichier ou le peripherique en mode bloc indique dans
.IR path .
.PP
.B swapon
utilise un argument
.IR swapflags .
Si cet argument
a son bit
.I SWAP_FLAG_PREFER
a 1, la nouvelle zone de swap disposera d'une priorite plus
elevee que la zone de swap par defaut.

La priorite est codee ainsi :
.br
.sp
.I "    (prio << SWAP_FLAG_PRIO_SHIFT) & SWAP_FLAG_PRIO_MASK"
.br
.PP

Cette fonction ne peut etre appelee que par le Super\-User.
.SH "PRIORITE"
Chaque zone de swap a une priorite, haute ou basse. La priorite
par defaut est basse.
Parmi les zones de basses priorites, les nouvelles zones
sont toujours affectees d'une priorite inferieure a celle
des zones precedente.
.PP
Toutes les priorites fixees avec l'argument
.I swapflags
sont plus elevees que la priorite par defaut.
Elles peuvent prendre n'importe quelle valeur positive ou 
nulle choisie par l'appelant.
Plus la valeur est haute, plus la priorite est elevee.
.PP
Les pages de swap sont allouees dans les zones par ordre decroissant
de priorite. Pour des zones de priorite differentes, la plus haute
sera toujours remplie entierement avant d'utiliser la zone
de priorite plus faible.
Si deux ou plus de zones ont la meme priorite, et qu'il s'agit de
la plus haute priorite disponible, les pages sont allouees en
utilisant un algorithme Round\-Robin entre elles.
.PP
Sur linux 1.3.6, le noyau suit generalement ces regles, mais il
y a parfois des exceptions.
.SH "VALEUR RENVOYEE"
En cas de reussite 0 est renvoye, sinon \-1 est renvoye et
.I errno
contient le code d'erreur.
.SH ERREURS
De nombreuses erreurs peuvent survenir si
.I path
n'est pas valide.

.TP 0.8i
.B EPERM
L'utilisateur n'est pas Super\-User ou il y a plus de
.B MAX_SWAPFILES
zones de swap actives (8 sous Linux 1.3.6).
.TP
.B EINVAL
.I path 
existe mais n'est ni un chemin regulier, ni un peripherique bloc.
.TP
.B ENOENT
.I path 
n'existe pas.
.TP
.B ENOMEM 
Pas assez de memoire pour demarrer le swapping.
.SH "CONFORME A"
Ces fonctions sont specifiques a Linux
.SH NOTES
La partition ou le fichier doivent etre prepares par 
.BR mkswap (8).
.SH HISTORIQUE
Le second argument `swapflags' a ete introduit dans Linux 1.3.2.
.SH "VOIR AUSSI"
.BR mkswap "(8), " swapon "(8), " swapoff (8)
