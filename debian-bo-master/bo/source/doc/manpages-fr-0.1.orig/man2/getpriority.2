.\" Copyright (c) 1980, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)getpriority.2	6.9 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 16:33:19 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction  11/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\"
.TH GETPRIORITY 2 "11 Octobre 1996" BSD "Manuel du programmeur Linux"
.SH NOM
getpriority, setpriority \- Lire/Ecrire la priorite d'ordonnancement du processus
.SH SYNOPSIS
.B #include <sys/time.h>
.br
.B #include <sys/resource.h>
.sp
.BI "int getpriority(int " which ", int " who );
.br
.BI "int setpriority(int " which ", int " who ", int " prio );
.SH DESCRIPTION
La priorite d'ordonnancement du processus, du groupe de processus ou
de l'utilisateur, comme precise dans
.I which
et
.I who
est lue avec
.B getpriority
et fixee avec
.B setpriority.
.I Which
doit etre l'un des elements
.BR PRIO_PROCESS,
.BR PRIO_PGRP,
ou
.BR PRIO_USER,
et
.I who
est interprete en fonction de
.I which
(un ID de processus pour
.B PRIO_PROCESS,
un ID de groupe de processus pour
.B PRIO_PGRP,
et un ID d'utilisateur pour
.BR PRIO_USER).
Une valeur nulle pour
.I who
indique le processus, groupe ou utilisateur courant.
.I Prio
est une valeur dans l'intervalle \-20 a 20.  
La priorite par defaut est 0, les priorites les
plus faibles indiquant un ordonnancement le
plus favorable.

La fonction
.B getpriority
retourne la plus haute priorite (la plus basse valeur numerique)
dont a beneficie le processus.
La fontion
.B setpriority
fixe la priorite des processus indiques a la valeur fournie.
Seul le Super\-User peut diminuer la valeur numerique de la priorite
(favoriser le processus).

.SH "VALEUR RENVOYEE"
Comme
.B getpriority
peut tout a fait renvoyer la valeur \-1, il faut
effacer la variable externe
.I errno
avant l'appel afin de verifier si une valeur \-1 indique une
erreur ou une priorite legitime.

.B setpriority
renvoie 0 s'il reussit, ou \-1 s'il echoue, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B ESRCH
Aucun processus ne correspond aux valeurs de
.I which
et
.I who.
.TP
.B EINVAL
.I Which
n'etait ni
.BR PRIO_PROCESS,
ni
.BR PRIO_PGRP,
ni
.BR PRIO_USER.
.PP
De plus
.B setpriority
echouera pour les erreurs suivantes :
.TP
.B EPERM
Un processus correspond bien aux valeurs indiquees, mais ni son
UID reel, ni son UID effectif ne correspondent a ceux
de l'appelant.
.TP
.B EACCES
Tentative de favoriser un processus sans etre Super\-User.
.SH HISTORIQUE
Cette fonction est apparue dans BSD 4.2.
.SH "VOIR AUSSI"
.BR nice "(1), " fork "(2), " renice (8)
