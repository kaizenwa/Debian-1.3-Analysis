.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH GET_PRIORITY_MAX 2 "14 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
sched_get_priority_max, sched_get_priority_min  \- Obtenir l'intervalle de
priorites statiques de l'ordonnanceur.
.SH SYNOPSIS
.B #include <sched.h>
.sp
\fBint sched_get_priority_max(int \fIpolicy\fB);
.sp
\fBint sched_get_priority_min(int \fIpolicy\fB);
.fi
.SH DESCRIPTION
.B sched_get_priority_max 
renvoie la valeur maximale de priorite qui puisse etre
utilise avec la politique d'ordonnancement identifiee 
par \fIpolicy\fR.

.B sched_get_priority_min 
renvoie la valeur minimale de priorite qui puisse etre
utilise avec la politique d'ordonnancement identifiee 
par \fIpolicy\fR.

Les valeurs de \fIpolicy\fR pour les politiques 
d'ordonnancement proposees sont :
.IR SCHED_FIFO , 
.IR SCHED_RR ,
et
.IR SCHED_OTHER .

Les processus ayant des valeurs de priorites hautes sont
selectionnes avant les processus de basses priorites.
Ainsi la valeur renvoyee par
\fBsched_get_priority_max\fR sera superieure a celle renvoyee
par \fBsched_get_priority_min\fR.

Linux offre un intervalle de priorites statiques allant de
1 a 99 pour les politiques d'ordonnancements \fISCHED_FIFO\fR 
et \fISCHED_RR\fR
et une priorite statique 0 pour \fISCHED_OTHER\fR. 
Les intervalles de priorites des differents algorithmes ne sont
pas modifiables.

Les intervalles peuvent varier suivant les systemes POSIX, et
il est conseille pour une application portable d'utiliser
un intervalle de priorites virtuel, que l'on associera avec
l'intervalle donne par \fBsched_get_priority_max\fR et
\fBsched_get_priority_min\fR.
 
POSIX.1b reclame une distance d'au moins 32 entre les valeurs
maximale et minimale des politiques \fISCHED_FIFO\fR 
et \fISCHED_RR\fR.

Les systemes POSIX sur lesquels
.B sched_get_priority_max
et
.B sched_get_priority_min
sont disponibles definissent
.I _POSIX_PRIORITY_SCHEDULING
dans <unistd.h>.

.SH "VALEUR RENVOYEE"
.B sched_get_priority_max
et
.B sched_get_priority_min
renvoient les valeurs de priorites maximale/minimale s'ils
reussissent.
En cas d'echec \-1 est renvoye, et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B EINVAL
le parametre \fIpolicy\fR ne correspond pas a une
politique d'ordonnancement supportee.
.SH STANDARDS
POSIX.1b (formerly POSIX.4)
.SH "VOIR AUSSI"
.BR sched_setscheduler (2), 
.BR sched_getscheduler (2), 
.BR sched_setparam (2), 
.BR sched_getparam (2). 
.PP
.BR sched_setscheduler (2) 
contient la description des politiques d'ordonnancement de
Linux.
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(standard POSIX.1b)
.br
.I ISO/IEC 9945-1:1996
