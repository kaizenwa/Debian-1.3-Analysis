.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH SCHED_SETPARAM 2 "14 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
sched_getparam, sched_setparam \- Lire et ecrire les parametres 
d'ordonnancement.
.SH SYNOPSIS
.B #include <sched.h>
.sp
\fBint sched_setparam(pid_t \fIpid\fB, const struct sched_param *\fIp\fB);
.sp
\fBint sched_getparam(pid_t \fIpid\fB, struct sched_param *\fIp\fB);
.sp
.nf
.ta 4n
\fBstruct sched_param {
	...
	int \fIsched_priority\fB;
	...
};
.ta
.fi
.SH DESCRIPTION
.B sched_setparam
fixe les parametres associes a la politique d'ordonnancement 
du processus identifie par \fIpid\fR. 
Si \fIpid\fR vaut zero, les parametres concernant le processus
en cours sont fixes. L'interpretation des parametres depend
de la politique d'ordonnancement utilisee. Actuellement les
trois politiques suivants sont disponibles sous Linux :
.IR SCHED_FIFO , 
.IR SCHED_RR ,
et
.IR SCHED_OTHER.

.B sched_getparam
lit les parametres associes a la politique d'ordonnancement 
du processus identifie par \fIpid\fR. 
Si \fIpid\fR vaut zero, les parametres concernant le processus
en cours sont lus.

.B sched_setparam
verifie la validite de \fIp\fR pour la politique concernee. Le parametre
\fIp->sched_priority\fR doit se situer dans l'intervalle obtenu
par \fBsched_get_priority_min\fR et
\fBsched_get_priority_max\fR.

Les systemes POSIX sur lesquels
.B sched_setparam
et
.B sched_getparam
sont disponibles definissent
.I _POSIX_PRIORITY_SCHEDULING
dans <unistd.h>.

.SH "VALEUR RENVOYEE"
.BR sched_setparam
et
.BR sched_getparam
renvoient 0 s'ils reussissent.
En cas d'echec, \-1 est renvoye, et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B ESRCH
Le processus numero \fIpid\fR n'existe pas.
.TP
.B EPERM
Le processus appelant n'a pas les privileges necessaires. L'appel
.BR sched_setparam
necessite un UID effectif egal a celui du processus identifie par
.IR pid ,
ou doit etre Super\-User.
.TP
.B EINVAL
Le parametre \fIp\fR n'a pas de sens pour la politique 
d'ordonnancement utilisee.
.SH STANDARDS
POSIX.1b (POSIX.4)
.SH "VOIR AUSSI"
.BR sched_setscheduler (2), 
.BR sched_getscheduler (2), 
.BR sched_get_priority_max (2), 
.BR sched_get_priority_min (2), 
.BR nice (2), 
.BR setpriority (2), 
.BR getpriority (2), 
.PP
.BR sched_setscheduler (2) 
decrit les politiques d'ordonnancement sous Linux.
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(standard POSIX.1b)
.br
.I ISO/IEC 9945-1:1996
