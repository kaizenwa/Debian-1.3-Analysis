.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" Modified Fri Jul 23 21:51:36 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Jul 25 10:53:24 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Nov 01 18:56:43 1995 by Michael Haardt
.\"  (michael@cantor.informatik.rwth-aachen.de)
.\" 
.\" Traduction  10/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" 
.TH KILL 2 "10 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
kill \- Envoyer un signal a un processus.
.SH SYNOPSIS
.nf
.B #include <signal.h>
.sp
.BI "int kill(pid_t " pid ", int " sig );
.fi
.SH DESCRIPTION
\fBkill()\fP
peut etre utilise pour envoyer n'importe quel signal a n'importe
quel processus ou groupe de processus.
.PP
Si \fIpid\fP est positif, le signal \fIsig\fP est envoye au processus \fIpid\fP.
Dans ce cas 
.B kill
renvoie 0 s'il reussit, ou une valeur negative s'il echoue.
.PP
Si \fIpid\fP vaut \-1, alors le signal \fIsig\fP est envoye a tous les
processus sauf le premier (init) dans l'ordre decroissant des numeros
dans la table des processus (par ex: shutdown envoie le signal SIGTERM
a tous les processus).
Dans ce cas, 
.B kill
renvoie 0 s'il reussit, ou 
la derniere condition d'erreur renvoyee par \fBsend_sig()\fP 
s'il echoue.
.PP
Si \fIpid\fP est inferieur a \-1, alors le signal \fIsig\fP
est envoye a tous les processus du groupe \fI\-pid\fP.
Dans ce cas, le nombre de processus auxquels le signal a ete envoye
est renvoye, ou une valeur negative en cas d'echec.
.SH "VALEUR RENVOYEE"
En cas de reussite 0 est renvoye (sauf si \fIpid\fP inferieur a \-1),
en cas d'echec une valeur negative est retournee et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EINVAL
Numero de signal invalide.
.TP
.B ESRCH
Le processus ou le groupe de processus n'existe pas.
Remarquez qu'un processus existant peut etre un zombie,
c'est a dire qu'il s'est deja termine mais que son pere n'a pas 
encore lu sa valeur de retour avec \fBwait()\fP.
.TP
.B EPERM
L'UID effectif du processus ayant appele
.B kill()
n'est pas egal a l'UID effectif du processus
\fIpid\fP,
et il ne s'agit pas du Super\-User.
.SH "BUGS"
On ne peut pas envoyer de signal au processus numero un (init), qui ne
dispose pas de routine de gestion de signaux.
Ceci evite que le systeme soit arrete accidentellement.
.SH "CONFORME A"
SVID, AT&T, POSIX.1, X/OPEN, BSD 4.3
.SH "VOIR AUSSI"
.BR _exit "(2), " exit "(2), " signal "(2), " signal (7)
