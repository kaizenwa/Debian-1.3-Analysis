.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1996-04-10  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"             First version written
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH NANOSLEEP 2 "14 Octobre 1996" "Linux 1.3.85" "Manuel du programmeur Linux"
.SH NOM
nanosleep \- Arreter l'execution pendant une duree donnee.
.SH SYNOPSIS
.B #include <time.h>
.sp
\fBint nanosleep(const struct timespec *\fIreq\fB, struct timespec *\fIrem\fB);
.fi
.SH DESCRIPTION
.B nanosleep
suspend l'execution du programme en cours pour une duree valant
au moins
.IR *req .
Cette fonction peut se terminer plus tot que prevu si un signal a
ete recu par le processus. Dans ce cas, elle renvoie \-1, 
positionne \fIerrno\fR a la valeur
.BR EINTR ,
et inscrit le temps restant dans la structure pointee par
.IR rem
a moins que
.I rem
soit
.BR NULL .
La valeur de
.I *rem
peut etre utilisee pour rappeler a nouveau
.B nanosleep
afin de terminer la pause.

La structure
.I timespec
est utilisee pour indiquer l'intervalle de temps en nano-secondes.
Elle est definie dans 
.I <time.h>
et a la forme suivante
.sp
.RS
.nf
.ne 12
.ta 8n 16n 32n
struct timespec
{
	time_t	tv_sec;			/* secondes */
	long	tv_nsec;		/* nano-secondes */
};
.ta
.fi
.RE
.PP
La valeur du champ nano-seconde doit etre dans l'intervalle 0 a 999 999 999.

par rapport
.BR sleep  (3)
et
.BR usleep (3),
.B nanosleep
a l'avantage de n'affecter aucun signal, d'etre au standard POSIX,
de fournir une meilleure resolution, et de permettre de continuer facilement
un sommeil interrompu par un signal.
.SH ERREURS
En cas d'erreur ou d'interruption, l'appel systeme
.B nanosleep
renvoie \-1 et place dans
.I errno
une des valeurs suivantes :
.TP 0.8i
.B EINTR
La pause a ete interrompue par un signal non-bloque delivre au
processus. Le temps restant de sommeil a ete inscrit dans 
*\fIrem\fR pour que le processus puisse terminer facilement son
sommeil.
.TP
.B EINVAL
La valeur du champ
.I tv_nsec
n'est pas dans l'intervalle 0 a 999\ 999\ 999 ou
.I tv_sec
est negatif.
.SH BUGS
L'implementation actuelle de
.B nanosleep
est construite sur le mecanisme de temporisation du noyau, qui
dispose d'une resolution valant 1/\fIHZ\fR\ s 
(10\ ms sur Linux/i386 et 1\ ms sur Linux/Alpha).
Ainsi,
.B nanosleep
dormira toujours pour une duree au moins egale au temps specifie, 
mais il peut prendre jusqu'a 10 ms de plus (i386) avant de faire
redemarrer le processus.
Pour la meme raison, la valeur retournee dans *\fIrem\fR en cas 
d'interruption par un signal est arrondie au multiple superieur
de 1/\fIHZ\fR\ s.

Certaines applications necessitant des pauses plus precises
(par exemple pour le controle de peripheriques materiels
avec un delai critique),
.B nanosleep
peut aussi offrir des pauses avec une precision plus elevee.
Si le processus est mis sous le controle d'un ordonnanceur
temps reel comme
.I SCHED_FIFO
ou
.IR SCHED_RR ,
les pauses jusqu'a 2\ ms seront effectuees avec des boucles
d'une precision de l'ordre de la micro-seconde.

.SH STANDARDS
POSIX.1b
.SH "VOIR AUSSI"
.BR sleep (3),
.BR usleep (3),
.BR sched_setscheduler (2),
et
.BR timer_create (2).
