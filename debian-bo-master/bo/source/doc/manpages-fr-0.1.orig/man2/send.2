.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)send.2	6.9 (Berkeley) 5/1/91
.\"
.\" Traduction 15/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH SEND 2 "15 Octobre 1996" BSD "Manuel du programmeur Linux"
.SH NOM
send, sendto, sendmsg \- Envoyer un message sur une socket.
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/socket.h>
.sp 2
.BI "int send(int " s ", const void *" msg ", int " len
.BI ", unsigned int " flags );
.sp
.BI "int sendto(int " s ", const void *" msg ", int " len
.BI "unsigned int " flags ", const struct sockaddr *" to ", int " tolen );
.sp
.BI "int sendmsg(int " s ", const struct msghdr *" msg
.BI ", unsigned int " flags );
.SH DESCRIPTION
ATTENTION: Ceci provient d'une page BSD.  Sous Linux 0.99.11,
.B sendmsg
n'est pas implemente.

N.D.T. : et sous Linux 2.0 ?

.BR Send ,
.BR sendto ,
et
.B sendmsg
permettent de transmettre un message a destination d'une
autre socket.
.B Send
ne peut etre tilise qu'avec les sockets
.I connectee
alors que
.B sendto
et
.B sendmsg
peuvent etre utilises tout le temps.

L'adresse de la cible est donnee par
.I to
avec la longueur 
.I tolen.
la longueur du message est indiquee dans
.IR len .
Si le message est trop long pour etre transmis integralement
au protocole sous\-jacent, l'erreur
.B EMSGSIZE
sera declenchee et rien ne sera emis.

Aucune indication d'echec de distribution n'est
fournie par
.BR send .
Seules les erreurs locales sont detectees, et indiquees
par une valeur de retour \-1.

Si la socket ne dispose pas de la place suffisante pour
le message, alors
.B send
va bloquer, a moins que la socket ait ete configuree en mode
d'entrees/sorties non\-bloquantes.
On peut utiliser l'appel systeme
.BR select (2)
pour verifier s'il est possible d'emettre des donnees.

le parametre
.I flags
peut contenir une ou plusieurs des options suivantes

.nf
#define	MSG_OOB        0x1  /* Traiter les donnees hors\-bande */
#define	MSG_DONTROUTE  0x4  /* Contourner le routage           */
.fi

L'option
.B MSG_OOB
est utilisee pour emettre des donnees 
.I hors\-bande
sur une socket qui l'autorise (par ex :
.BR SOCK_STREAM ).
Le protocole sous\-jacent doit egalement autoriser l'emission
de donnees
.I hors\-bande.

.B MSG_DONTROUTE
est utilisee par les programmes de diagnostique ou de routage.

Voir
.BR recv (2)
pour une descrption de la structure
.IR msghdr .
.SH "VALEUR RENVOYEE"
les appels systemes retournent le nombre de caracteres
emis, ou \-1 s'ils echouent, auquel cas 
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B EBADF
Descripteur de socket invalide.
.TP
.B ENOTSOCK
l'argument
.I s
n'est pas une socket.
.TP
.B EFAULT
Un parametre pointe en dehors de l'espace d'adresssage accessible
.TP
.B EMSGSIZE
La socket necessite une emission integrale du message mais la taille
de celui\-ci ne le permet pas.
.TP
.B EWOULDBLOCK
La socket est non\-bloquante et l'operation demandee bloquerait.
.TP
.B ENOMEM
Pas assez de memoire pour le noyau.
.TP
.B ENOBUFS
La file d'emission de l'interface reseau est pleine. Ceci
indique generalement une panne de l'interface reseau, mais
peut egalement etre du a un engorgement passager.
.SH HISTORIQUE
Cet appel systeme est apparu dans BSD 4.2.
.SH "VOIR AUSSI"
.BR fcntl "(2), " recv "(2), " select "(2), " getsockopt "(2), "
.BR socket "(2), " write (2)
