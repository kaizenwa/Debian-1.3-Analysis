.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Tom Bjorkholm & Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 1996-04-01 Tom Bjorkholm <tomb@mydata.se>
.\"            First version written
.\" 1996-04-10 Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"            revision
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH R_GET_INTERVAL 2 "14 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
sched_rr_get_interval  \- Obtenir l'intervalle SCHED_RR pour le processus
indique.
.SH SYNOPSIS
.B #include <sched.h>
.sp
\fBint sched_rr_get_interval(pid_t \fIpid\fB, struct timespec *\fItp\fB);
.sp
.nf
.ta 4n 12n 24n
\fBstruct timespec {
	time_t	tv_sec;	/* seconds */
	long	tv_nsec;	/* nanoseconds */
};
.ta
.fi
.SH DESCRIPTION
.B sched_rr_get_interval 
remplit la structure \fItimespec\fR pointee par \fItp\fR 
avec le "round robin time quantum" du processus identifie par \fIpid\fR.
Si \fIpid\fR vaut zero, le time quantum du processus en cours est
ecrit dans *\fItp\fR. 
Le processus identifie doit etre ordonnance avec la politique
.I SCHED_RR.

La valeur "round robin time quantum" n'est pas modifiable sous 
Linux 1.3.81.

les systemes POSIX sur lesquels
.B sched_rr_get_interval
est disponible, definissent
.I _POSIX_PRIORITY_SCHEDULING
dans <unistd.h>.

.SH "VALEUR RENVOYEE"
.B sched_rr_get_interval
renvoie 0 s'il reussit.
en cas d'echec, \-1 est renvoye, et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B ESRCH
Le processus numero \fIpid\fR n'existe pas.
.TP 0.8i
.B ENOSYS
L'appel systeme n'a pas encore ete implemente.
.SH STANDARDS
POSIX.1b (POSIX.4)
.SH BUGS
Avec Linux 1.3.81, \fBsched_rr_get_interval\fR renvoit une erreur 
ENOSYS, car SCHED_RR n'a pas ete totalement implemente et teste.

.SH "VOIR AUSSI"
.BR sched_setscheduler (2) 
decrit les politiques d'ordonnancement de Linux.
.PP
.I Programming for the real world \- POSIX.4
by Bill O. Gallmeister, O'Reilly & Associates, Inc., ISBN 1-56592-074-0
.br
.I IEEE Std 1003.1b-1993
(standard POSIX.1b)
.br
.I ISO/IEC 9945-1:1996
