.\" Copyright (c) 1993 Luigi P. Bai (lpb@softint.com) July 28, 1993
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 28 10:57:35 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Nov 28 16:43:30 1993, Rik Faith (faith@cs.unc.edu)
.\"          with material from Giorgio Ciucci (giorgio@crcc.it)
.\" Portions Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\"
.\" Traduction 16/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH SHMGET 2 "16 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
shmget \- Allouer un segment de memoire partagee.
.SH SYNOPSIS
.ad l
.B #include <sys/ipc.h>
.sp
.B #include <sys/shm.h>
.sp
.BI "int shmget(key_t " cle ", int " size ", int " shmflg );
.ad b
.SH DESCRIPTION
.B shmget()
renvoie l'identificateur du segment de memoire partagee
associe a la valeur de l'argument
.IR cle .
Un nouveau segment memoire, de taille 
.I size
arrondie au multiple superieur de
.BR PAGE_SIZE ,
est cree si
.I cle
a la valeur
.B IPC_PRIVATE
ou si aucun segment de memoire partagee n'est associe a
.IR cle ,
et
.B IPC_CREAT
est present dans
.I shmflg.
.PP
.I shmflg
est compose de :
.TP 12
.B IPC_CREAT
pour creer un noveau segment. Sinon
.B shmget()
recherchera le segment associe a \fIcle\fP, verifiera que
l'appelant a la permission de recevoir l'identifiant \fIshmid\fP 
associe au segment, et controlera que le segment n'est pas
detruit.
.TP
.B IPC_EXCL
est utilise avec \fBIPC_CREAT\fP pour garantir l'echec si
le segment existe deja.
.TP
.B mode d'acces (les 9 bits de poids faibles)
indiquant les permissions pour le proprietaire, le groupe et
les autres.
Actuellement la permission d'execution n'est pas utilisee 
par le systeme.
.PP
Si un nouveau segment est cree, les permissions d'acces de
.I shmflg
sont copiees dans le membre
.I shm_perm
de la structure
.I shmid_ds
decrivant le segment. Cette structure est definie ainsi :
.PP
.in +0.5i
.nf
struct shmid_ds {
  struct          ipc_perm shm_perm; /* Permissions d'acces       */
  int             shm_segsz;         /* Taille segment en octets  */
  time_t          shm_atime;         /* Heure dernier attachement */
  time_t          shm_dtime;         /* Heure dernier detachement */
  time_t          shm_ctime;         /* Heure dernier changement  */
  unsigned short  shm_cpid;          /* PID du createur           */
  unsigned short  shm_lpid;          /* PID du dernier operateur  */
  short           shm_nattch;        /* Nombre d'attachements     */
  /* ------------- Les champs suivants sont prives -------------- */
  unsigned short  shm_npages;        /* Taille segment en pages   */
  unsigned long   *shm_pages;        /* Taille d'une page (?)     */
  struct shm_desc *attaches;         /* Descript. attachements    */
};
.fi
.in -0.5i
.PP
.in +0.5i
.nf
struct ipc_perm
{
  key_t  key;
  ushort uid;   /* UID et GID effectifs du proprietaire    */
  ushort gid;
  ushort cuid;  /* UID et GID effectif du createur         */
  ushort cgid;
  ushort mode;  /* Mode d'acces sur 9 bits de poids faible */
  ushort seq;   /* numero de sequence                      */
};
.fi
.PP
De plus, durant la creation, le systeme initialise la structure
.B shmid_ds
associee au segment comme suit :
.IP
.B shm_perm.cuid
et
.B shm_perm.uid
contiennent l'UID effectif de l'appelant.
.IP
.B shm_perm.cgid
and
.B shm_perm.gid
contiennent le GID effectif de l'appelant.
.IP
Les 9 bits de poids faibles de
.B shm_perm.mode
contiennent les 9 bits de poids faibles de
.IR shmflg .
.IP
.B shm_segsz
prend la valeur
.IR size.
.IP
.BR shm_lpid ,
.BR shm_nattch ,
.B shm_atime
et
.B shm_dtime
sont mis a 
.BR 0.
.IP
.B shm_ctime
contient l'heure actuelle
.PP
.PP
.SH "AUTRES APPELS SYSTEMES"
.TP
.B fork()
Apres un
.B fork()
le fils herite des segments de memoire partagee.
.TP
.B exec()
Apres un
.B exec()
tous les segments de memoire partagee sont detaches (pas detruits).
.TP
.B exit()
Lors d'un
.B exit()
tous les segments de memoire partagee sont detaches (pas detruits).
.PP
.SH "VALEUR RENVOYEE"
Un identificateur de segment 
.IR shmid 
valide est renvoye en cas de reussite, sinon \-1 est renvoye et
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 12
.B EINVAL
\fBSHMMIN\fP > \fIsize\fP ou
\fIsize\fP > \fBSHMMAX\fP, ou \fIsize\fP plus grand que la taille du segment.
.TP
.B EEXIST
On a indique
.B IPC_CREAT | IPC_EXCL
et le segment existe deja.
.TP
.B EIDRM
Le segment est detruit.
.TP
.B ENOSPC
Tous les ID de memoire partagee sont utilises, ou l'allocation
d'un segment partage de taille
.I size
depasserait les limites de memoire partagee du systeme.
.TP
.B ENOENT
Aucun segment n'est associe a \fIcle\fP, et 
.B IPC_CREAT
n'etait pas indique.
.TP
.B EACCES
L'appelant n'a pas les autorisations d'acces au segment.
.TP
.B ENOMEM
Pas assez de memoire.
.SH NOTES
.B IPC_PRIVATE
n'est pas une option mais une valeur de type
.BR key_t .
Si cette valeur speciale est utilisee comme
.IR cle ,
l'appel systeme ignore tout sauf les 9 bits de poids faibles
de
.I shmflg
et tente de creer un nouveau segment.
.PP
Les limites suivantes influent sur l'appel systeme
.BR shmget " :"
.TP 11
.B SHMALL
Nombre maximal de pages de memoire partagee sur le systeme.
.TP
.B SHMMAX
Taille maximale d'un segment partage (actuellement 4 Mo).
.TP
.B SHMMIN
Taille minimale d'un segment partage.
(actuellement 1 octet, bien que
.B PAGE_SIZE
soit la valeur effectivement utilisee).
.TP
.B SHMMNI
Nombre maximal de segments de memoire partagee sur le systeme 
(actuellement 4096).
.PP
Il n'y a pas de limite pour le nombre de segments partages par
processus (sauf SHMMNI).
.SH BUGS
Indiquer a la fois
.B IPC_CREAT
et
.B IPC_EXCL
dans
.I shmflg
garantit seulement la creation d'un nouveau segment, et non pas
l'exclusivite d'acces a ce segment.
.SH "VOIR AUSSI"
.BR ftok (3),
.BR ipc (5),
.BR shmctl (2),
.BR shmat (2),
.BR shmdt (2).
