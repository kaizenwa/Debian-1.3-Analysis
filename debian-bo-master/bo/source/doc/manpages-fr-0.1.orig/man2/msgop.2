.\" Copyright 1993 Giorgio Ciucci (giorgio@crcc.it)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traduction 14/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH MSGOP 2 "14 Octobre 1996" "Linux 0.99.13" "Manuel du programmeur Linux"
.SH NOM
msgop \- Operations sur les messages.
.SH SYNOPSIS
.nf
.B
# include <sys/types.h>
.br
.B
# include <sys/ipc.h>
.br
.B
# include <sys/msg.h>
.fi
.sp
.BI "int msgsnd ( int " msqid ,
.BI "struct msgbuf * " msgp ,
.BI "int " msgsz ,
.BI "int " msgflg " )"
.sp
.BI "int msgrcv ( int " msqid ,
.BI " struct msgbuf * " msgp ,
.BI " int " msgsz ,
.BI " long " msgtyp ,
.BI " int " msgflg " )"
.SH DESCRIPTION
Pour envoyer ou recevoir un message, le processus appelant alloue
une structure comme celle-ci :

.nf
struct msgbuf {
  long  mtype;    /* type de message ( > 0 ) */
  char  mtext[1]; /* contenu du message      */
};
.fi

avec une table
.B mtext
de taille
.IR msgsz ,
valeur entiere non-negative.

Le membre 
.B mtype
doit avoir une valeur strictement positive qui puisse
etre utilisee par le processus lecteur pour la
selection de messages (voir plus bas).
.PP
Le processus doit avoir une permission d'ecriture sur la
file pour envoyer un message, et une permission de
lecture pour en recevoir un.
.PP
L'appel systeme
.B msgsnd
insere une copie du message pointe par l'argument
.I msgp
dans la file dont l'identificateur est indique par la valeur
de l'argument
.IR msqid .
.PP
L'argument
.I msgflg
precise le comportement de l'appel systeme si l'insertion du
nouveau message necessite plus de
.B msg_qbytes
dans la file.
En indiquant
.B IPC_NOWAIT
le message ne sera pas envoye et l'appel systeme echouera en retournant
.BR EAGAIN
dans
.BR errno .

Sinon, le processus sera suspendu jusqu'a ce que la condition de
blocage soit levee (auquel cas le message sera envoye et l'appel
systeme reuussira), ou que la file soit supprimee
(auquel cas l'appel systeme echouera et 
.B errno
contiendra
.BR EIDRM ),
ou que le processus recoive un signal a intercepter (auquel cas
l'appel systeme echouera et 
.B errno
contiendra
.BR EINTR ).
.PP
Si l'appel reussit, la structure de file de messages sera mise
a jour ainsi :
.IP
.B msg_lspid
contient le PID du processus appelant.
.IP
.B msg_qnum
est incremente de 1.
.IP
.B msg_stime
est rempli avec l'heure actuelle.
.PP
l'appel systeme
.B msgrcv
lit un message depuis la file indiquee par
.I msqid
dans la structure
.B msgbuf
pointee par l'argument
.IR msgp ,
en extrayant le message en cas de reussite.
.PP
L'argument
.I msgsz
indique la taille maximale en octets du membre
.B mtext
de la structure pointee par l'argument
.IR msgp .
Si le contenu du message est plus long que
.IR msgsz 
octets, et si l'argument
.I msgflg
contient
.BR MSG_NOERROR ,
alors le message sera tronque (et la partie tronquee sera perdue).
Sinon le message ne sera pas extrait de la file, et l'appel
systeme echouera en indiquant
.BR E2BIG
dans
.B errno
.PP
L'argument
.I msgtyp
indique le type de message desire :
.IP
Si
.I msgtyp
vaut
.BR 0 ,
le premier message est lu.
.IP
Si
.I msgtyp
est superieur a
.BR 0 ,
alors le premier message de type
.I msgtyp
est extrait de la file.
Si
.I msgflg
contient
.B MSG_EXCEPT
l'inverse est effectue, le premier message de
type 
.B different
de
.I msgtyp
est extrait de la file.
.IP
Si
.I msgtyp
est inferieur a 
.BR 0 ,
le premier message de la file avec un type inferieur ou egal
a la valeur absolue de
.I msgtyp
est extrait.
.PP
L'argument
.I msgflg
est compose d'un
.I OU
binaire ( | ) avec les options suivantes :
.IP
.B IPC_NOWAIT
Si aucun message du type desire n'est present, l'appel systeme echoue
et
.B errno
est fixe a
.BR ENOMSG.
.IP
.B MSG_EXCEPT
Utilise avec
.I msgtyp
superieur a
.B 0
pour lire les messages de type different de
.IR msgtyp.
.IP
.B MSG_NOERROR
Tronque silencieusement les messages trop longs
.PP
Si aucun message du type requis n'est disponible et
si on n'a pas demande
.B IPC_NOWAIT
dans
.IR msgflg ,
Le processus appelant est bloque jusqu'a l'occurrence d'un
des evenements suivants.
.IP
Un message du type desire arrive dans la file.
.IP
La file de messages est supprimee.
L'appel systeme echoue et 
.B errno
contient
.BR EIDRM.
.IP
Le processus appelant recoit un signal a intercepter.
L'appel systeme echoue et
.B errno
contient
.BR EINTR.
.PP
Si l'appel systeme reussit, la structure decrivant la file de messages
est mise a jour comme suit :
.IP
.B msg_lrpid
est rempli avec le PID du processus appelant.
.IP
.B msg_qnum
est decremente de 1
.IP
.B msg_rtime
est rempli avec l'heure actuelle.
.SH "VALEUR RENVOYEE"
En cas d'echec les deux appels systemes renvoient
.B \-1
et 
.B errno
contient le code d'erreur. 
Sinon
.B msgsnd
renvoie
.B 0
et
.B msgrvc
renvoie le nombre d'octets copies dans la table
.B mtext.
.SH ERREURS
.B msgsnd :
.TP 11
.B EAGAIN
Le message n'a pas pu etre envoye a cause de la limite
.B msg_qbytes
pour la file et de la requete
.B IPC_NOWAIT
dans
.IR mgsflg.
.TP
.B EACCES
le processus appelant n'a pas de permissions de lecture dans la file.
.TP
.B EFAULT
.I msgp
pointe en dehors de l'espace d'adressage accessible.
.TP
.B EIDRM
La file de message a ete supprimee
.TP
.B EINTR
Un signal est arrive avant d'avoir pu ecrire quoi que ce soit.
.TP
.B EINVAL
.I msqid
ou
.I mtype
ou
.I msgsz
sont invalides.
.TP
.B ENOMEM
pas assez de memoire pour le noyau.
.PP
.B msgrcv :
.TP
.B E2BIG
message trop long, et
.B MSG_NOERROR
n'a pas ete requis.
.TP
.B EACCES
Le processus appelant n'a pas de permission de lecture dans la file.
.TP
.B EFAULT
.I msgp
pointe en dehors de l'espace d'adressage accessible.
.TP
.B EIDRM
La file de messages a ete supprimee.
.TP
.B EINTR
Un signal est arrive avant d'avoir pu lire quoi que ce soit.
.TP
.B EINVAL
.I msgqid
ou
.I msgsz
invalides.
.TP
.B ENOMSG
.B IPC_NOWAIT
a ete requis et aucun message du type reclame n'existe dans la file.
.SH NOTES
Les limites systemes suivantes influent sur
.B msgsnd :
.TP 11
.B MSGMAX
Taille maximum d'un message : l'implementation Linux 0.99.13 fixe cette
limite a 4080 bytes.
.TP
.B MSGMNB
Taille maximale d'une file de messages. Peut etre augmentee par
le Super\-User.
.SH "VOIR AUSSI"
.BR ipc (5),
.BR msgctl (2),
.BR msgget (2),
.BR msgrcv (2),
.BR msgsnd (2).
