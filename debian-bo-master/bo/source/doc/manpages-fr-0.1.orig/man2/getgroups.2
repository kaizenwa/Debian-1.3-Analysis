.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" 
.\" Traduction  10/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" 
.TH GETGROUPS 2 "11 Octobre 1996" "Linux 0.99.11" "Manuel du programmeur Linux"
.SH NOM
getgroups, setgroups \- Lire/ecrire la liste des groupes d'un processus
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "int getgroups(int " size ", gid_t " list []);
.sp 2
.B #define __USE_BSD
.br
.B #include <grp.h>
.sp
.BI "int setgroups(size_t " size ", const gid_t *" list );
.SH DESCRIPTION
.TP
.B getgroups
retourne une liste
.IR list
contenant jusqu'a
.I size
groupes aditionnels.
Si
.I size
vaut zero,
.I list
n'est pas modifiee, mais le nombre total de groupes supplementaires
pour le processus est renvoye.
.TP
.B setgroups
fixe des groupes supplementaires pour le processus. Seul le Super\-User peut
utiliser cette fonction.
.SH "VALEUR RENVOYEE"
.TP
.B getgroups
renvoie le nombre de groupes stockes dans
.I list
(si 
.I size 
vaut zero, le nombre total de groupes supplementaires du processus
est renvoye)
s'il reussit, ou \-1 s'il echoue, auquel cas
.I errno
contient le code d'erreur.
.TP
.B setgroups
renvoie 0 s'il reussit, ou \-1 s'il echoue, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP
.B EFAULT
.I list
pointe en dehors de l'espace d'adressage accessible.
.TP
.B EPERM
Pour
.BR setgroups ,
l'utilisateur n'est pas le Super\-User.
.TP
.B EINVAL
Pour
.BR setgroups ,
.I gidsetsize
est plus grand que
.B NGROUPS
(32 avec Linux 0.99.11).
.SH "CONFORME A"
.B getgroups
est conforme a POSIX.1 (et present dans BSD 4.3).  Comme
.B setgroups
necessite des privileges, il n'est pas couvert par POSIX.1.
.SH BUGS
La constante symbolique
.B __USE_BSD
ne devrait probablement pas etre necessaire pour utiliser
.BR setgroups .
.SH "VOIR AUSSI"
.BR initgroups "(3), "
