.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified Wed Jul 21 23:02:38 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 9/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH _EXIT 2 "9 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM 
_exit \- Mettre fin au processus en cours d'execution.
.SH SYNOPSIS
.B #include <unistd.h>
.sp
.BI "void _exit (int " status );
.SH DESCRIPTION
.B _exit
met fin immediatement au processus en cours, les descripteurs de
fichiers lui appartenant sont fermes, tous ses fils
eventuels sont herites par le processus 1 (init),
et son pere recoit un signal
.B SIGCHLD.

Si le processus est le leader de son groupe, le signal
.B SIGHUP
est envoye a tous les autres processus du groupe.

.I status
est retourne au processus pere comme valeur de sortie et peut
etre recupere en utilisant un appel systeme de la famille
.B wait.
Tant que cette valeur n'est pas lue par le pere, le processus
reste a l'etat zombie.

.SH "VALEUR RENVOYEE"
.B _exit
ne retourne jamais de valeur.
.SH "CONFORME A"
SVID, AT&T, POSIX, X/OPEN, BSD 4.3
.SH NOTES
.B _exit
n'appelle aucune fonction programmee par la fonction
.B atexit
du C ANSI, et ne vide pas les buffers d'entree/sortie standards. 

Pour effectuer ces operations, il faut utiliser la fonction
.BR exit (3).
.SH EXEMPLE
.nf
        #include <stdio.h>
        #include <unistd.h>

int
main (void)
{
        FILE * fp;

        fp = fopen ("foo", "w");
        if (!fp)
                return (1);
        fprintf (fp, "Probablement pas ecrit !");
        _exit (0);
        /* Le buffer n'a pas ete vide */
}
.fi
.SH "VOIR AUSSI"
.BR fork "(2), " execve "(2), " waitpid "(2), " wait4 "(2), " kill "(2), "
.BR wait "(3), " exit (3)
