.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\"
.\"
.\" Traduction  11/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" 
.TH MLOCK 2 "11 Octobre 1996" "Linux 1.3.43" "Manuel du programmeur Linux"
.SH NOM
mlock \- Desactive la pagination pour certaines parties de la memoire.
.SH SYNOPSIS
.nf
.B #include <sys/mman.h>
.sp
\fBint mlock(const void *\fIaddr\fB, size_t \fIlen\fB);
.fi
.SH DESCRIPTION
.B mlock
desactive la pagination (paging) pour la portion de memoire
debutant a l'adresse
.I addr
avec une longueur de
.I len
octets. 
Quand l'appel systeme
.B mlock
reussit, on a l'assurance que toutes les pages contenant une partie 
de la zone memoire specifiee resident en memoire vive (RAM) et y
resteront jusqu'a un deverrouillage par la fonction
.B munlock
ou
.B munlockall,
ou encore jusqu'a ce que le processus se termine ou demarre
un programme avec
.BR exec.

Les processus fils n'heritent pas du verrouillage des pages
a travers un
.BR fork.

Il y a deux domaines principaux d'applications au verrouillage
de pages : les algorithmes en temps reel, et le traitement
de donnees confidentielles.
Les applications temps reel reclament un comportement temporel
deterministe, et la pagination est, avec l'ordonnancement, une
cause majeure de delais imprevus.
Ces algorithmes basculent habituellement sur un
comportement d'ordonnancement temps reel avec
.BR sched_setscheduler.

Les logiciels de cryptographie manipulent souvent quelques
octets hautement confidentiels, comme des mots de passe ou
des cles privees. A cause de la pagination ces donnees secretes
risquent d'etre transferees sur un support physique ou elles
pourraient etre lues par un ennemi longtemps apres que le
logiciel se soit termine.

Il n'y a pas d'empilement des verrouillages memoire, ce qui
signifie qu'une page verrouillee plusieurs fois par
.B mlock
ou
.B mlockall
sera liberee en un seul appel a
.B munlock
pour la zone memoire correspondante ou par un appel a
.BR munlockall.


Les pages qui sont verrouilles par plusieurs zones, ou
par plusieurs processus restent verrouillees en memoire vive tant qu'il
y a au moins un processus ou une zone qui les verrouille.

Sur les systemes POSIX ou
.B mlock
et
.B munlock
sont disponibles, la constante symbolique
.B _POSIX_MEMLOCK_RANGE
est definie dans <unistd.h> et la valeur symbolique
.B PAGESIZE
de <limits.h> indique le nombre d'octets par page.
.SH "VALEUR RENVOYEE"
.B mlock
renvoie 0 si il reussit, ou \-1 s'il echoue, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B ENOMEM
Une partie des adresses incluses dans la zone desiree ne correspond
pas a une page de l'espace d'adressage accessible, ou le processus
a essaye de depasser le nombre maximal de pages verrouillees.
.TP
.B EPERM
L'appelant n'a pas les privileges appropries, seul le Super\-User 
peut verrouiller des pages.
.TP
.B EINVAL
.I len
n'est pas un nombre positif.
.SH STANDARDS
POSIX.1b, SVR4
.SH "VOIR AUSSI"
.BR munlock(2),
.BR mlockall(2), 
.BR munlockall(2) .
