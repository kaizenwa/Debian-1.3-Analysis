.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Wed Jul 21 21:53:01 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 9/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH CHOWN 2 "9 Octobre 1996" "Linux 0.99.11" "Manuel du programmeur Linux"
.SH NOM 
chown, fchown \- Modifier l'appartenance d'un fichier.
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <unistd.h>
.sp
.BI "int chown(const char *" path ", uid_t " owner ", gid_t " group );
.br
.BI "int fchown(int " fd ", uid_t " owner ", gid_t " group );
.SH DESCRIPTION
Le proprietaire et le groupe du fichier designe par le chemin
.I path
ou par le descripteur de fichier
.I fd
sont modifies. Seul le Super\-User peut changer le proprietaire d'un fichier. Le
proprietaire peut changer le groupe du fichier pour n'importe quel groupe auquel
il appartient. Le Super\-User peut changer le groupe arbitrairement.

Si l'argument
.I owner
ou 
.I group
vaut \-1, l'element correspondant n'est pas change.
.SH "VALEUR RENVOYEE"
.BR chown " et " fchown
renvoient 0 s'ils reussissent, ou \-1 s'ils echouent, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
Suivant le type de syteme de fichiers, plusieurs erreurs peuvent etre
renvoyees. Les plus courantes pour  
.B chown
sont les suivantes :

.TP 1.0i
.B EPERM
L'UID effectif du processus ne correspond pas a celui du fichier, et n'est 
pas nul, ou le proprietaire
.I owner
ou le groupe
.I group
sont specifies incorrectement.
.TP
.B EROFS
Le fichier specifie reside sur un systeme de fichiers en lecture seule.
.TP
.B EFAULT
.I path
pointe en dehors de l'espace d'adressage accessible.
.TP
.B ENAMETOOLONG
.I path
est trop long.
.TP
.B ENOENT
Le fichier n'existe pas.
.TP
.B ENOMEM
Pas assez de memoire pour le noyau.      
.TP
.B ENOTDIR
Un element du chemin d'acces n'est pas un repertoire.
.TP
.B EACCES
L'acces a un element du chemin est interdit.                  
.TP
.B ELOOP
.I path
contient une reference circulaire (a travers un lien symbolique)
.PP
Les erreurs courantes pour
.B fchown
sont les suivantes :
.TP 1.0i
.B EBADF
Le descripteur de fichier est invalide
.TP
.B ENOENT
Cf chown. 
.TP
.B EPERM
Cf chown. 
.TP
.B EROFS
Cf chown. 
.SH NOTES
.B chown
ne suit pas les liens symboliques.

Le prototype de la fonction
.B fchown
est seulement utilisable si la constante symbolique
.B __USE_BSD
est definie.
.SH "VOIR AUSSI"
.BR chmod "(2), " flock "(2)"
