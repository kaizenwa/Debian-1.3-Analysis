.\" -*- nroff -*- 
.\"
.\" Copyright (C) 1995 Michael Shields <shields@tembel.org>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and author of this work.
.\"
.\" Traduction  12/10/1996 Christophe BLAESS (ccb@club-internet.fr)
.\" 
.TH MPROTECT 2 "12 Octobre 1996" "Linux 1.2" "Manuel du programmeur Linux"
.SH NOM
mprotect \- Controler les autorisations d'acces a une partie de la memoire.
.SH SYNOPSIS
.nf
.B #include <sys/mman.h>
.sp
\fBint mprotect(caddr_t \fIaddr\fB, size_t *\fIlen\fB, int \fIprot\fB);
.fi
.SH DESCRIPTION
.B mprotect
controle la maniere d'acceder a une portion de la memoire. Si un
acces interdit se produit, le programme recoit un signal
.BR SIGSEGV.
.PP
.I prot
est un OU binaire ( | ) entre les valeurs suivantes
.TP 0.8i
.B PROT_NONE
On ne peut pas acceder du tout a la zone de memoire.
.TP
.B PROT_READ
On peut lire la zone de memoire.
.TP
.B PROT_WRITE
On peut ecrire dans la zone de memoire.
.TP
.B PROT_EXEC
La zone de memoire peut contenir du code executable.
.PP
La nouvelle protection remplace toute autre protection precedente.
Par exemple, si la memoire a ete marquee precedemment \fBPROT_READ\fR, 
et si l'on apppelle \fBmprotect\fR avec \fBPROT_WRITE\fR, la zone
concernee ne sera plus lisible.
.SH "VALEUR RENVOYEE"
.B mprotect
renvoie 0 si il reussit, ou \-1 s'il echoue, auquel cas
.I errno
contient le code d'erreur.
.SH ERREURS
.TP 0.8i
.B EINVAL
\fIaddr\fR n'est pas un pointeur valide.
.TP
.B EFAULT
La memoire n'est pas accessible.
.TP
.B EACCES
L'acces specifie n'est pas possible sur ce type de memoire. Ceci
se produit par exemple si vous utilisez
.BR mmap (2)
pour representer un fichier en lecture\-seule en memoire, et
si vous demandez de marquer cette zone avec
.BR PROT_WRITE.
.TP
.B ENOMEM
Pas assez de memoire pour le noyau
.SH "EXEMPLE D'UTILISATION"
.nf
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/mman.h>

int
main(void)
{
    char *p;
    char c;

    /* Allocation d'un buffer, protection 
       par defaut PROT_READ|PROT_WRITE. */
    p = malloc(1024);
    if (!p) {
        perror("Impossible d'allouer 1024 octets");
        exit(errno);
    }

    c = p[666];         /* lecture ok */
    p[666] = 42;        /* ecriture ok */

    /* Buffer marque en lecture-seule */
    if (mprotect(p, 1024, PROT_READ)) {
        perror("Impossible d'utiliser mprotect");
        exit(errno);
    }

    c = p[666];         /* lecture ok */
    p[666] = 42;        /* ecriture, fin du programme avec SIGSEGV */

    exit(0);
}
.fi
.SH "VOIR AUSSI"
.BR mmap (2)
