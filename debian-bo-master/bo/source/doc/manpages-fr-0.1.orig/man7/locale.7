.\" (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\" Modified Sat Jul 24 17:28:34 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traduction 20/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH LOCALE 7 "20 Octobre 1996" Linux "Manuel de l'administrateur Linux"
.SH NAME
locale \- Description du support multi-langages.
.SH SYNOPSIS
.nf
.B #include <locale.h>
.fi
.SH DESCRIPTION
Un localisation est un ensemble de regles linguistiques et culturelles.
Ceci couvre des aspects tels que la langue utilisee pour les messages,
le jeu de caracteres, les convention lexicographiques etc...
Un programme doit etre capable de determiner sa localisation et
d'agir en consequence pour etre portable dans divers environnements
culturels.
.PP
Le fichier d'en\-tete
.B <locale.h>
declare les types de donnees, les fonctions et les macros utilises
pour ces taches.
.PP
Les fonctions qu'il declare sont
.B setlocale()
pour indiquer la localisation et
.B localeconv()
pour obtenir des informations sur le formattage des nombres.
.PP
Il existe differentes categories d'informations locales qui peuvent
ettre utiles a un programme. Elles sont declarees en tant que macros.
En les utilisant comme premier argument de la fonction
.BR setlocale() ,
il devient possible de fixer l'une de ces informations :
.TP
.B LC_COLLATE
est utilise pour modifier le comportement des fonctions
.B strcoll()
et
.BR strxfrm() ,
qui permettent les comparaisons de chaines dans l'alphabet local.
Par exemple le double-s allemand, est ordonne comme 'ss'.
.TP
.B L_CTYPE
permet de modifier les manipulations et classifications de caracteres,
comme celles des fonctions
.B isupper()
et
.BR toupper() ,
et celles des fonctions travaillant sur des caracteres multi\-octets
comme
.B mblen()
ou
.BR wctomb() .
.TP
.B LC_MONETARY
modifie les informations renvoyees par
.B localeconv()
pour decrire le formattage habituel des nombres, en accord avec des
details comme le point decimal ou la virgule decimale.
.TP
.B LC_MESSAGES
configure la langue utilisee pour afficher les messages.
.TP
.B LC_TIME
modifie le comportement de la fonction
.B strftime()
affichant l'heure dans un format local. Par exemple la plupart de
l'Europe utilise un format horaire sur 24 heures, alors que les
USA utilisent un format sur 12 heures.
.TP
.B LC_ALL
regroupe toutes les categories ci-dessus.
.PP
Si le second argument de la fonction
.B setlocale()
est une chaine de caracteres vide,
.BR """""" ,
ceci correspond a la localisation par defaut, determinee avec les
etapes suivantes :
.IP 1.
Si une variable d'environnement 
.BR LC_ALL 
n'est pas nulle, sa valeur est utilisee.
.IP 2.
Si une variable d'environnement ayant le meme nom que les categories
mentionnees ci\-dessus est non nulle, sa valeur est utilisee pour
la categorie en question.
.IP 3.
Si une variable d'environnement 
.BR LANG 
est non nulle, sa valeur est utilisee.
.PP
Les valeurs concernant le formattage numerique sont disponibles
dans une structure
.BR "struct lconv" ,
renvoyee par la fonction
.BR localeconv() ,
declaree ainsi :
.nf
struct lconv
{
  /* -------- Informations numeriques (non\-monetaires) ------- */

  char *decimal_point;    /* Separateur decimal                 */
  char *thousands_sep;    /* Separateur des milliers            */
  /* 
   * Chaque element  indique  un  nombre de chiffres  dans  chaque
   * groupe.
   * Les elements d'indice les plus eleves correspondent aux grou-
   * pes les plus a gauche.
   * Un element de valeur CHAR_MAX signifie l'arret du groupement.
   * Un element de valeur 0  signifie que  l'element precedent est
   * utilise pour tous les groupes plus a gauche.
   *
   * NDT : c'est pas clair ? ben, la V.O. non plus !  ;-)
   */
  char *grouping;

  /* ----------------- Informations monetaires ---------------- */

  /* Les trois premiers caracteres correspondent au symbole     */
  /* monetaire d'apres ISO 4217. Le quatrieme symbole est le    */
  /* separateur, le cinquieme est '\\0'.                         */
  char *int_curr_symbol;
  char *currency_symbol;	/* Symbole monetaire local.     */
  char *mon_decimal_point;	/* Caractere separateur decimal */
  char *mon_thousands_sep;	/* Caract. separateur milliers  */
  char *mon_grouping;		/* Comme 'grouping' (ci\-dessus) */
  char *positive_sign;		/* Signe pour valeurs positives */
  char *negative_sign;		/* Signe pour valeurs negatives */
  char int_frac_digits;		/* Int'l fractional digits.     */
  char frac_digits;		/* Local fractional digits.     */
  /* 1 : le symbole monetaire precede les valeurs positives,    */
  /* 0 : le symbole monetaire suit les valeurs positives.       */
  char p_cs_precedes;
  /* 1 si un espace separe le symbole monetaire d'une valeur +  */
  char p_sep_by_space;
  /* 1 : le symbole monetaire precede les valeurs negatives,    */
  /* 0 : le symbole monetaire suit les valeurs negatives.       */
  char n_cs_precedes;
  /* 1 si un espace separe le symbole monetaire d'une valeur -  */
  char n_sep_by_space;
  /* Positions des signes plus et moins :
   * 0 Parentheses autour de la valeur et du symbole monetaire.
   * 1 Le signe precede la valeur et le symbole monetaire.
   * 2 Le signe suit la valeur et le symbole monetaire.
   * 3 Le signe precede immediatement le symbole monetaire.
   * 4 Le signe suit immediatement le symbole monetaire.
   */
  char p_sign_posn;
  char n_sign_posn;
};
.fi
.SH "CONFORME A"
POSIX.1
.PP
Pour l'instant les seules localisation supportees par Linux sont :
.B """C"""
,
.B """POSIX"""
(identique a C),
.B """ISO-8859-1"""
(latin-1 europeen) et
.B """KOI-8"""
(russe).
.SH "VOIR AUSI"
.BR setlocale "(3), " localeconv "(3), " locale "(1), " localedef (1)
