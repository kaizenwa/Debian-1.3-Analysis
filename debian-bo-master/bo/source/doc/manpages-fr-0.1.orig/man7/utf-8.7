.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) Markus Kuhn, 1996
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\"
.\"
.\" Traduction 20/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH UTF-8 7 "20 Octobre 1996" Linux "Manuel de l'administrateur Linux"
.SH NOM
UTF-8 \- Un encodage Unicode multi\-octet compatible ASCII.
.SH DESCRIPTION
Le jeu de caracteres
.B Unicode
(voir \fBunicode\fP(7)) est constitue d'un codage sur 16 bits. 
L'encodage Unicode le plus evident (connu sous le nom de
.BR UCS-2 )
consiste en une sequence de mots de 16 bits. De telles chaines
peuvent contenir, comme fragments de caractere 16 bits, des octets
comme '\\0' or '/' qui ont une signification particuliere dans les noms
de fichiers, et les parametres de fonctions de bibliotheque C.
De plus la majorite des outils UNIX attendent des fichiers ASCII et
ne peuvent pas lire des caracteres representes par des mots de 16 bits
sans subir des modifications majeures.

Pour ces raisons, 
.RB l' UCS-2
n'est pas un encodage externe de
.RB l' Unicode
utilisable dans les noms de fichiers, les variables d'environnement,
les fichiers textes, etc...
Le sur\-ensemble d'Unicode
.BR "ISO 10646 Universal Character Set (UCS)" ,
occupe meme un espace de codage sur 31 bits, et l'encodage evident
.B UCS-4
(une sequence de mots sur 32 bits) a les memes inconvenients.

L'encodage
.B UTF-8
de
.RB l' Unicode
et de
.RB l' UCS
n'a pas ces inconvenients et est un moyen d'utiliser le jeu de
caracteres
.B Unicode
sous les systemes d'exploitation compatibles UNIX.
.SH PROPRIETES.
l'encodage
.B UTF-8 
a les proprietes suivantes :
.TP 0.2i
*
Les caracteres
.B UCS
0x00000000 a 0x0000007f (le jeu
.B US-ASCII
classique) sont encodes simplement par les octets 0x00 a 0x7f (compatibilite ASCII)
Ceci signifie que les fichiers et les chaines qui contiennent uniquement des
caracteres du jeu ASCII 7 bits ont exactement le meme codage en
.B ASCII
et en
.BR UTF-8 .
.TP
*
Tous les caracteres
.B UCS
superieurs a 0x7F sont encodes en sequences consistant uniquement
en octets dans l'intervalle 0x80 a 0xFD, ainsi aucun octet
ASCII n'apparait en tant que partie d'un autre caractere (plus
de problemes avec '\\0' ou '/').
.TP
*
L'ordre de tri lexicographique des chaines
.B UCS-4
est preserve.
.TP
*
Tous les 2^31 caracteres de l'UCS peuvent etre encodes en utilisant
.BR UTF-8 .
.TP
*
Les octets 0xFE et 0xFF ne sont jamais utilises dans le codage
.BR UTF-8 .
.TP
* 
Le premier octet d'une sequence multi\-octet representant un 
caractere
.B UCS
non\-ASCII est toujours dans l'intervalle 0xC0 a 0xFD et indique la
longueur de la sequence multi\-octets.
Tous les octets suivants de cette sequence sont dans l'intervalle 0x80 a 0xBF. 
Ceci permet une re-synchronisation aisee et permet un encodage robuste
face aux octets manquants.
.TP
*
les caracteres
.B UTF-8
codes en
.B UCS
peuvent avoir jusqu'a 6 octets de longs, neanmoins les caracteres
.B Unicode
ne peuvent avoir au plus que 3 octets de long. Comme Linux utilise
uniquement le sous\-ensemble
.B Unicode
16 bits de 
.RB l' UCS ,
sous Linux,
.B UTF-8
les sequences multi\-octets peuvent seulement avoir 1, 2 ou 3
octets de long.
.SH ENCODAGE
Les sequences d'octets suivantes sont utilisees pour representer un
caractere. Les sequences utilisees dependent du numero de code UCS
du caractere :
.TP 0.4i
0x00000000 - 0x0000007F:
.RI 0 xxxxxxx
.TP
0x00000080 - 0x000007FF:
.RI 110 xxxxx 
.RI 10 xxxxxx
.TP
0x00000800 - 0x0000FFFF:
.RI 1110 xxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.TP
0x00010000 - 0x001FFFFF:
.RI 11110 xxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.TP
0x00200000 - 0x03FFFFFF:
.RI 111110 xx
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.TP
0x04000000 - 0x7FFFFFFF:
.RI 1111110 x
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.RI 10 xxxxxx
.PP
Les positions de bits
.I xxx
sont remplies avec les bits du numero de code du caractere en
representation binaire. Seule la plus petite sequence multi\-octets
permettant de representer un numero de code doit etre utilisee.
.SH EXEMPLES
Le caractere
.B Unicode
0xA9 = 1010 1001 (le symbole copyright) est encode
en UTF-8 comme :
.PP
.RS
11000010 10101001 = 0xC2 0xA9
.RE
.PP
et le caractere 0x2260 = 0010 0010 0110 0000 (Le symbole "non egal") est encode ainsi :
.PP
.RS
11100010 10001001 10100000 = 0xE2 0x89 0xA0
.RE
.SH STANDARDS
ISO 10646, Unicode 1.1, XPG4, Plan 9.
.SH AUTEUR
Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.SH "VOIR AUSSI"
.B unicode(7)
