.\" Copyright 1995 Robert K. Nichols (Robert.K.Nichols@att.com)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Traduction 18/10/1996 par Christophe Blaess (ccb@club-internet.fr)
.\"
.TH ST 4 "18 Octobre 1996" Linux "Manuel du programmeur Linux"
.SH NOM
st \- Lecteur de bandes SCSI.
.SH SYNOPSIS
.nf
.B #include <sys/mtio.h>
.sp
.BI "int ioctl(int " fd ", int " request " [, (void *)" arg3 "])"
.BI "int ioctl(int " fd ", \s-1MTIOCTOP\s+1, (struct mtop *)" mt_cmd ")"
.BI "int ioctl(int " fd ", \s-1MTIOCGET\s+1, (struct mtget *)" mt_status ")"
.BI "int ioctl(int " fd ", \s-1MTIOCPOS\s+1, (struct mtpos *)" mt_pos ")"
.fi
.SH DESCRIPTION
Le driver
.B st
fournit une interface vers un grand nombre de lecteurs de bandes SCSI.
Actuellement, ce driver prend le controle de tous les peripheriques detectes de
type
\(lqacces sequentiel\(rq.
Le driver
.B st
utilise un numero majeur valant 9.
.PP
Chaque peripherique utilise deux numeros mineurs :
un numero mineur principal
.IR n ,
assigne sequentiellement dans l'ordre de detection et
un numero mineur \(lqno-rewind\(rq
.IR "" ( n "+ 128)."

Les peripheriques ouverts avec le numero principal recevront une commande
\s-1REWIND\s+1 a la fermeture.
Les peripheriques ouverts avec le numero \(lqno-rewind\(rq ne la recevront
pas.
Les options comme la densite, ou la taille de bloc ne sont pas codees dans
les numeros mineurs.
Ces options doivent etre indiquees par des appels systemes
.B ioctl()
explicites et restent en vigueur quand le peripherique est ferme puis
reouvert.
.PP
Les fichiers speciaux sont crees typiquement ainsi :
.RS
.nf
mknod -m 660 /dev/st0 c 9 0
mknod -m 660 /dev/st1 c 9 1
mknod -m 660 /dev/nst0 c 9 128
mknod -m 660 /dev/nst1 c 9 129
.fi
.RE
.PP
Il n'existe pas de peripheriques blocs correspondants.
Les peripheriques caracteres offrent par defaut une memoire\-tampon 
et une lecture anticipee. Ils supportent les lectures/ecritures de
taille quelconque, limitees par la taille des buffers internes du
driver, (32768 octets par defaut mais modifiable soit par une option
de demarrage du systeme, soit a la recompilation du noyau).
.PP
Le fichier special de peripherique
.B /dev/tape
est generalement un lien symbolique, ou meme un lien materiel sur
le lecteur de bandes par defaut.
.SH "IOCTLS"
Le driver supporte trois requetes ioctl.
Les requetes non reconnues par
.B st
sont transmises au controleur
.BR scsi .
Les definitions ci-dessous sont extraites de
.BR /usr/include/linux/mtio.h :
.SS "\s-1MTIOCTOP\s+1 \- Efectue une operation sur la bande."
.PP
Cette requete prend un argument du type
.BR "(struct mtop *)" 
indiquant l'operation a effectuer.
Certains controleurs ne permettent pas toutes les operations.
Le controleur renvoie une erreur EIO s'il n'accepte pas l'operation.
.PP
.nf
.ta +.4i +.7i +1i
/* Structure \s-1MTIOCTOP\s+1 \-  pour les operations sur bande */
struct mtop {
	short	mt_op;		/* operations definies ci\-dessous */
	int	mt_count;	/* combien d'operations           */
};
.fi
.PP
Operations sur bande magnetique :

[NDT] Je conserve les termes de \fIfilemark\fP, et \fIsetmark\fP a
defaut de termes precis en francais.

.PD 0
.IP MTBSF 14
Reculer la bande de
.B mt_count
filemarks.
.IP MTBSFM
Reculer la bande de
.B mt_count
filemarks.
Repositionner la bande sur le cote EOT de la derniere filemark.
.IP MTBSR
Reculer la bande de
.B mt_count
enregistrements (blocs bande).
.\" Backward space over
.\" .B mt_count
.\" records (tape blocks).
.IP MTBSS
Reculer la bande de
.B mt_count
setmarks.
.IP MTEOM
Aller a la fin des enregistrements (ajouter des fichiers).
.IP MTERASE
Effacer la bande.
.IP MTFSF
Avancer la bande de
.B mt_count
filemarks.
.IP MTFSFM
Avancer la bande de
.B mt_count
filemarks.
Positionner la bande du cote BOT de la derniere filemark.
.IP MTFSR
Avancer de
.B mt_count
enregistrements (blocs bande).
.IP MTFSS
Avancer de
.B mt_count
setmarks.
.IP MTNOP
Ne rien faire \- Vider les buffers du driver \- A utiliser
avant de lire le statut avec \s-1MTIOCGET\s+1.
.IP MTOFFL
Rembobiner la bande et eteindre le lecteur.
.IP MTRESET
Reinitialiser le lecteur.
.IP MTRETEN
Retendre la bande.
.IP MTREW
Rembobiner la bande.
.IP MTSEEK
Rechercher sur la bande le bloc numero
.BR mt_count .
Cette operation necessite soit un controleur SCSI-2 qui supporte la
commande \s-1LOCATE\s+1 (adresse specifique au peripherique), soit
un lecteur SCSI-1 compatible Tandberg (Tandberg, Archive
Viper, Wangtek, ... ).
Le numero de bloc devrait toujours etre un numero renvoye precedemment
par \s-1MTIOCPOS\s+1 car ce nombre est specifique au lecteur.
.IP MTSETBLK
Positionner la longueur de blocs du lecteur a la valeur specifiee dans
.BR mt_count .
Une longueur de bloc nulle place le lecteur dans le mode de blocs de
tailles variables.
.IP MTSETDENSITY
Fixe la densite de la bande a celle codee dans
.BR mt_count .
Les codes de densite utiles sont :
.RS 18
.nf
.ta +.5i +1.5i +.5i
0x00	Implicite	0x11	QIC-525
0x04	QIC-11	0x12	QIC-1350
0x05	QIC-24	0x13	DDS
0x0F	QIC-120	0x14	Exabyte EXB-8200
0x10	QIC-150	0x15	Exabyte EXB-8500
.fi
.RE 
.IP MTWEOF
Ecrire
.B mt_count
filemarks.
.IP MTWSM
Ecrire
.B mt_count
setmarks.
.IP MTSETDRVBUFFER 8
Positionner diverses options du controleur ou du lecteur en fonction
des bits encodes dans
.BR mt_count .
Ces options concernent le type de buffer du lecteur, 6 options
booleennes du controleur, et le seuil d'ecriture du buffer.
Ces parametres ne sont initialises que si le peripherique a ete
detecte.
La configuration persistent lorsque le peripherique est ferme et
reouvert.
Une simple operation peut affecter 
(a) uniquement le type de buffer,
(b) uniquement les options booleennes, ou
(c) uniquement le seuil d'ecriture.
.PD
.IP
Une valeur ayant ses 4 bits de poids forts a 0 sera utilisee pour indiquer le
type de buffer du lecteur. Les types de buffer sont :
.RS 12
.IP 0 4
Le controleur ne renverra pas le statut \s-1BON\s+1 en ecriture avant que
les donnees ne soient reellement ecrites sur le support.
.PD 0
.IP 1
Le controleur peut renvoyer le statut \s-1BON\s+1 en ecriture des que les
donnees ont ete transmises aux buffers internes du lecteur de bande.
.IP 2
Le controleur peut renvoyer le statut \s-1BON\s+1 en ecriture des que les
donnees ont ete transmises aux buffers internes du lecteur de bande, si
toutes les ecritures precedentes des buffers 
sur le support se sont deroulees correctement.
.PD
.RE
.IP ""
Pour controler le seuil d'ecriture, on doit inclure dans 
.B mt_count
la constante
\s-1MT_ST_WRITE_THRESHOLD\s+1 associee avec le nombre de blocs dans
les 28 bits de poids faibles par un \fIOU\fP binaire ( | ).
Le nombre de blocs concerne des blocs de 1024 octets, et non pas la
taille physique des blocs sur la bande.
Le seuil ne peut pas exceder la taille des buffers internes du controlleur.
(voir
.BR \s-1DESCRIPTION\s+1 ,
plus bas).
.IP
Pour valider ou invalider les options booleennes, la valeur
.B mt_count
doit inclure la constante \s-1MT_ST_BOOLEANS\s+1 associee par un \fIOU\fP
binaire avec une combinaison des options suivantes.
Chaque option non specifiee sera invalidee.
Les options booleennes sont :
.IP
.PD 0
.RS
.IP "\s-1MT_ST_BUFFER_WRITES\s+1  (Defaut: vrai)"
Operations d'ecriture en buffer.
Si cette option est invalidee, et si l'enregistreur utilise une longueur
de bloc fixe, toutes les operations d'ecriture doivent se faire avec une
longueur multiple de celle du bloc.
Cette option doit etre fausse pour creer des archives multi-volume
fiables.

.IP "\s-1MT_ST_ASYNC_WRITES\s+1  (Defaut: vrai)"
Quand cette option est validee, les operations d'ecriture retournent
immediatement si les donnees tiennent dans le buffer du driver, sans 
attendre que celles\-ci soient effectivement transmises au lecteur de
bande.
Le seuil du buffer d'ecriture determine le taux de remplissage du
buffer avant d'effectuer une commande SCSI.
Toute erreur renvoyee par le peripherique sera conservee jusqu'a 
l'operation suivante.
Cette option doit etre fausse pour creer des archives multi-volume
fiables.

.IP "\s-1MT_ST_READ_AHEAD\s+1  (Defaut: vrai)"
Cette option indique au driver de fournir un cache en lecture, ainsi
qu'une lecture anticipee des donnees.
Si cette option est invalidee, et que le lecteur utilise une taille de
blocs fixe, toutes les operations de lecture doivent se faire avec une
taille multiple de celle du bloc.

.IP "\s-1MT_ST_TWO_FM\s+1  (Defaut: faux)"
Cette option modifie le comportement du driver quand un fichier est
ferme. L'attitude normale consiste a ecrire une seule filemark, neanmoins
si cette option est validee, le driver ecrira deux filemarks et
replacera la tete au-dessus de la seconde.
.PD
.IP
Note:
Cette option ne doit pas etre utilisee avec les lecteurs de bandes QIC 
car ils ne sont pas capables d'ecraser une filemark.
Ces lecteurs detectent la fin des donnees enregistrees en cherchant
de la bande vierge a la place des deux filemarks consecutives habituelles.
.PP
.PD 0
.IP "\s-1MT_ST_DEBUGGING\s+1  (Defaut: faux)"
Cette option valide les divers messages de debugging du driver, si
celui\-ci a ete compile avec la constante \s-1DEBUG\s+1 definie).

.IP "\s-1MT_ST_FAST_EOM\s+1  (Defaut: faux)"
Cette option indique que les operations \s-1MTEOM\s+1 doivent etre envoyees
directement au lecteur, ce qui peut accelerer les operations, mais aussi
faire perdre au driver le compte des pistes du fichier en cours, normalement 
renvoye par la requete \s-1MTIOCGET\s+1.
Si \s-1MT_ST_FAST_EOM\s+1 est invalide, le driver repondra a des requetes
\s-1MTEOM\s+1 en se deplacant en avant fichier par fichier.

.IP \s-1EXEMPLE\s+1
.nf
.ta +.4i +.7i +1i
.BI "struct mtop " mt_cmd ;
.IB "mt_cmd.mt_op" " = \s-1MTSETDRVBUFFER\s+1;"
.IB "mt_cmd.mt_count" " = \s-1MT_ST_BOOLEANS\s+1 |"
.B "		\s-1MT_ST_BUFFER_WRITES\s+1 |"
.B "		\s-1MT_ST_ASYNC_WRITES\s+1;"
.BI "ioctl(" fd ", \s-1MTIOCTOP\s+1, &" mt_cmd ");"
.fi
.RE
.PD
.SS "\s-1MTIOCGET\s+1 \- Obtenir le statut"
.PP
Cette requete prend un argument du type
.BR "(struct mtget *)" .
Le driver renvoie une erreur EIO si le controleur rejette une operation.
.PP
.nf
/* Structure pour \s-1MTIOCGET\s+1 - Statut d'une bande magnetique */
struct mtget {
	long	mt_type;
	long	mt_resid;
	/* Les registres suivants dependent du materiel */
	long	mt_dsreg;
	long	mt_gstat;
	long	mt_erreg;
	/* Ces deux derniers champs sont parfois inutilises */
	daddr_t	mt_fileno;
	daddr_t	mt_blkno;
};
.fi
.IP \fBmt_type\fP 11
Le fichier d'en\-tete definit plusieurs valeurs pour
.BR mt_type ,
mais le driver actuel renvoie uniquement les types generiques
\s-1MT_ISSCSI1\s+1 (lecteur SCSI-1 generique) et \s-1MT_ISSCSI2\s+1 (lecteur SCSI-2 generique).
.PD 0
.IP \fBmt_resid\fP
est toujours nul.
(Non implemente pour les lecteurs de bande SCSI.)
.IP \fBmt_dsreg\fP
renvoie la configuration actuelle de la longueur de bloc (dans les 24 bits de poids faibles)
et la densite (dans les 8 bits de poids forts).
Ces champs sont definis par \s-1MT_ST_BLKSIZE_SHIFT\s+1, \s-1MT_ST_BLKSIZE_MASK\s+1,
\s-1MT_ST_DENSITY_SHIFT\s+1, et \s-1MT_ST_DENSITY_MASK\s+1.
.IP \fBmt_gstat\fP
renvoie des informations generiques de statut (independants du peripherique).
Le fichier d'en\-tete definit les macros suivantes pour tester les bits de statut :
.RS
.HP 4
\s-1GMT_EOF(\s+1\fIx\fP\s-1)\s+1 :
La bande est positionnee juste apres une filemark (toujours faux apres une
operation \s-1MTSEEK\s+1).
.HP
\s-1GMT_BOT(\s+1\fIx\fP\s-1)\s+1 :
La bande est positionnee juste au debut du premier fichier (toujours faux
apres ne operation \s-1MTSEEK\s+1).
.HP
\s-1GMT_EOT(\s+1\fIx\fP\s-1)\s+1 :
Une operation a atteinte la fin physique de la bande (End Of Tape).
.HP
\s-1GMT_SM(\s+1\fIx\fP\s-1)\s+1 :
La bande est positionnee sur une setmark (toujours faux apres une
operation \s-1MTSEEK\s+1).
.HP
\s-1GMT_EOD(\s+1\fIx\fP\s-1)\s+1 :
La bande est positionnee a la fin des donnees enregistrees.
.HP
\s-1GMT_WR_PROT(\s+1\fIx\fP\s-1)\s+1 :
La bande est protegee en ecriture. Pour certaines enregistreurs
ceci signifie qu'ils ne supportent pas l'ecriture sur ce type de bande.
.HP
\s-1GMT_ONLINE(\s+1\fIx\fP\s-1)\s+1 :
La derniere operation
.B open()
a trouve le lecteur pret a agir, avec une bande a l'interieur.
.HP
\s-1GMT_D_6250(\s+1\fIx\fP\s-1)\s+1, \s-1GMT_D_1600(\s+1\fIx\fP\s-1)\s+1, \s-1GMT_D_800(\s+1\fIx\fP\s-1)\s+1 :
Ces informations \(lqgeneriques\(rq de statut renvoient la densite actuelle des lecteurs
de bandes 9-pistes \(12" seulement.
.HP
\s-1GMT_DR_OPEN(\s+1\fIx\fP\s-1)\s+1:
Le lecteur ne contient pas de bande.
.HP
\s-1GMT_IM_REP_EN(\s+1\fIx\fP\s-1)\s+1:
Mode de rapport immediat (non supporte).
.RE
.IP \fBmt_erreg\fP
Le seul champ defini dans
.B mt_erreg
est le nombre d'erreurs corrigees, dans les 16 bits de poids faibles
(comme definie par les masques \s-1MT_ST_SOFTERR_SHIFT\s+1 et \s-1MT_ST_SOFTERR_MASK\s+1).
A cause d'incompatibilites dans les methodes utilisees par les lecteurs
pour rendre compte des corrections d'erreur, cette valeur n'est pas toujours
fournie.
.IP \fBmt_fileno\fP
renvoie le numero du fichier en cours (commencant a 0). La valeur
est mise a \-1 si le numero du fichier est inconnu (par exemple apres
un \s-1MTBSS\s+1 ou un \s-1MTSEEK\s+1).
.IP \fBmt_blkno\fP
renvoie le numero de bloc (commencant a 0) a l'interieur du fichier en cours.
Cette valeur est mise a \-1 quand le numero de bloc est inconnu (par exemple
apres un \s-1MTBSF\s+1, un \s-1MTBSS\s+1, ou un \s-1MTSEEK\s+1).
.PD
.SS "\s-1MTIOCPOS\s+1 \- Obtenir la position de la bande"
.PP
Cette requete prend un argument du type
.B "(struct mtpos *)"
et renvoie une valeur, specifique au lecteur, correspondant au numero de bloc
en cours, et qui n'est pas la meme que
.B mt_blkno
renvoyee par \s-1MTIOCGET\s+1.
Ce lecteur doit etre un SCSI-2 qui supporte la commande \s-1READ POSITION\s+1
ou un lecteur SCSI-1 compatible Tandberg (Tandberg, Archive Viper, Wangtek, ... ).
.PP
.nf
/* Structure pour commande \s-1MTIOCPOS\s+1 - Obtenir la position */
struct	mtpos {
	long 	mt_blkno;	/* current block number */
};

.fi
.SH "VALEUR RENVOYEE"
.IP EIO 14
L'operation demandee a echoue.
.IP ENOSPC
Une ecriture a echouee car la fin de bande a ete atteinte.
.IP EACCES
Tentative d'ecriture ou d'effacement sur une bande protegee en ecriture.
(Ceci ne peut pas etre detecte lors de 
.BR open() .)
.IP ENXIO
Durant l'ouverture, le lecteur de bande n'existe pas.
.IP EBUSY
Le peripherique est deja utilise ou le driver n'a pas assez de memoire.
.IP EOVERFLOW
Tentative de lire ou d'ecrire un bloc de longueur variable plus grand
que la taille des buffers internes du controlleur.
.IP EINVAL
Un appel systeme
.B ioctl()
a un argument illegal, ou la taille de bloc demandee etait incorrecte.
.IP ENOSYS
Appel systeme
.BR ioctl() 
inconnu.
.SH COPYRIGHT
Copyright \(co 1995 Robert K. Nichols.
.PP
Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.
Additional permissions are contained in the header of the source file.
.SH "VOIR AUSSI"
.BR mt (1)
