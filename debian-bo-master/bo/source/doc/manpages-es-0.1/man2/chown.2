.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Wed Jul 21 21:53:01 1993 by Rik Faith (faith@cs.unc.edu)
.\" Translated 18 Dec 1995 Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 1 Jul 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.TH CHOWN "1 Julio 1996" "Linux 0.99.11" "Manual del Programador"
.SH NOMBRE
chown, fchown \- cambia el propietario de un fichero
.SH SINOPSIS
.B #include <sys/types.h>
.br
.B #include <unistd.h>
.sp
.BI "int chown(const char *" path ", uid_t " owner ", gid_t " group );
.br
.BI "int fchown(int " fd ", uid_t " owner ", gid_t " group );
.SH DESCRIPCIÓN
Cambia el propietario del fichero especificado por
.I path
ó 
.I fd
Solamente el superusuario puede cambiar el propietario de un fichero.
El propietario de un fichero puede cambiar el grupo de dicho fichero a
cualquier grupo al que dicho usuario es miembro. El superusuario
puede cambiar el grupo arbitrariamente.

Si a 
.I owner
ó 
.I group
se asigna \-1, entonces dicho ID-es no se alteran.
.SH "VALOR REGRESADO"
En caso de éxito, cero regresa. Si se encuentra algún error \-1, y
.I errno
es asignado apropiadamente.
.SH ERRORES
Dependiendo del sistema de ficheros, otros errores pueden generarse.
Los errores más generales para
.B chown
son:

.TP 1.0i
.B EPERM
El UID efectivo no coincide con el propietario del fichero, y no es cero:
ó el propietario
.I (owner)
o grupo 
.I (group)
han sido especificados incorrectamente. 
.TP
.B EROFS
El fichero en cuestión reside en una zona de solo-lectura del sistema
de ficheros.
.TP
.B EFAULT
.I path
señala fuera de su espacio de direcciones accesible.
.TP
.B ENAMETOOLONG
.I path
es demasiado largo.
.TP
.B ENOENT
El fichero no existe.   
.TP
.B ENOMEM
No hubo suficiente memoria accesible en el kernel.
.TP
.B ENOTDIR
Un componente del prefijo 
.I path
no es un directorio.
.TP
.B EACCES
Permiso de busqueda denegado en un componente del camino (path).
.TP
.B ELOOP
.I path
contiene una referencia circular (por ejemplo, una ligadura simbólica a si
misma).
.PP
Los errores comunes para
.B fchown
se listan a continuación:
.TP 1.0i
.B EBADF
El descriptor no es válido.
.TP
.B ENOENT
Lea nota anterior.
.TP
.B EPERM
Lea nota anterior.
.TP
.B EROFS
Lea nota anterior.
.SH NOTAS
El prototipo para
.B fchown
sólo está disponible  si 
.B __USE_BSD
está definido.
.SH "VÉASE"
.BR chmod "(2), " flock "(2)"


