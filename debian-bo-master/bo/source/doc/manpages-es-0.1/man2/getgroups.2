.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright 1993 Rickard E. Faith (faith@cs.unc.edu)
.\" Translated 8 Jan 1996 Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 1 Jul 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.TH GETGROUPS 2 "1 Julio 1996" "Linux 0.99.11" "Manual del Programador"
.SH NOMBRE
getgroups, setgroups \- obtiene/asigna la lista de acceso de grupo
.SH SINOPSIS
.B #include <unistd.h>
.sp
.BI "int getgroups(int " size ", gid_t " list []);
.sp 2
.B #define __USE_BSD
.br
.B #include <grp.h>
.sp
.BI "int setgroups(size_t " size ", const gid_t *" list );
.SH DESCRIPCIÓN
.TP
.B getgroups
Se regresa como mucho 
.I size
grupos suplementarios en            
.IR list .
Si 
.I size
es cero,
.I list
no se modifica, pero se regresa el número total de grupos 
suplementarios para el
proceso.
.TP
.B setgroups
Asigna los grupos suplementarios para el proceso. Sólo el superusuario   
puede usar esta función.
.SH "VALOR REGRESADO"
.TP
.B getgroups
En caso de éxito, el número de grupos almacenado en
.I list
regresa (si   
.I size
es cero, no obstante, el número de IDes de grupos suplementarios asociados 
con el proceso se regresa). En caso de error, \-1 regresa, y
.I errno
se asigna apropiadamente.
.TP
.B setgroups
En caso de éxito, se regresa 0. Si hay un error, \-1, y       
.I errno
se asigna apropiadamente.
.SH ERRORES
.TP
.B EFAULT
.I list
tiene una dirección inválida.
.TP
.B EPERM
Para
.BR setgroups ,
el usuario no es superusuario.
.TP
.B EINVAL
Para
.BR setgroups ,
.I gidsetsize
es más grande que 
.B NGROUPS
(32 para Linux 0.99.11).
.SH "CONFORMA CON"
.B getgroups
conforma con  POSIX.1 ( está presente en BSD 4.3).  Puesto que
.B setgroups
requiere privilegios, no está cubierto por  POSIX.1.
.SH BUGS
La bandera
.B __USE_BSD
probablemente no debería ser requerida por
.BR setgroups .
.SH "VÉASE"
.BR initgroups "(3), "


