.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt (u31b3hs@pool.informatik.rwth-aachen.de)
.\" Modified Sat Jul 24 13:22:07 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 21 Aug 1994 by Michael Chastain (mec@shell.portal.com):
.\"   Referenced 'clone(2)'.
.\" Modified 10 June 1995 by Andries Brouwer (aeb@cwi.nl)
.\" Translated 25 December Miguel A. Sepulveda (miguel@typhoon.harvard.edu)
.\" Modified 1 Jul 1996 Miguel A. Sepulveda (angel@vivaldi.princeton.edu)
.TH FORK 2 "1 Julio 1996" "Linux 1.2.9" "Manual del Programador"
.SH NOMBRE
fork, vfork \- crea el descendiente de un proceso (child process).
.SH SINOPSIS
.B #include <unistd.h>
.sp
.B pid_t fork(void);
.br
.B pid_t vfork(void);
.SH DESCRIPCION
.B fork
crea un proceso descendiente que difiere de su procesor ascendiente sólo
en su PID y PPID, y en el hecho que el uso de recursos esté asignado a 0.
Los candados de fichero (file locks) y las señales pendientes no se
heredan.
.PP
En linux,   
.B fork
está implementado usando páginas copia-en-escritura (copy-on-write),
así que la única penalización incurrida por fork es el tiempo y memoria
requeridas para duplicar las tablas de las páginas del ascendiente,
y para crear una estructura de tarea (task structure) para el descendiente.
.SH "VALOR REGRESADO"
En caso de éxito, el PID del proceso descendiente se regresa en el
hilo de ejecución (execution thread) de su ancestro,
y un 0 regresa en el hilo de ejecución del descendiente. En caso de fallo,
se regresará un \-1 en el contexto del ascendiente, no se creará ningún  
proceso descendiente, y
.I errno
será asinado apropiadamente.
.SH ERRORES
.TP
.B EAGAIN
.B fork
no puede asignar sufficiente memoria para copiar las tablas de páginas del
ancestro y asignar una estructura de tarea para el descendiente. 
.SH BUGS
En Linux,   
.B vfork
es simplemente un alias para
.BR fork .
.br
.B fork
nunca regresa el error      
.BR ENOMEM .
.SH "CONFORMA CON"
SVID, AT&T, POSIX, X/OPEN, BSD 4.3
.SH "VÉASE"
.BR clone "(2), " execve "(2), " wait (2)
