.\" Michael Haardt (michael@cantor.informatik.rwth.aachen.de) Sat Sep  3 22:00:30 MET DST 1994
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" Sun Feb 19 21:32:25 1995, faith@cs.unc.edu edited details away
.\"
.\" A DO: This manual page should go more into detail how DES is perturbed, 
.\" which string will be encrypted, and what determines the repetition factor.
.\" Is a simple repetition using ECB used, or something more advanced?  I hope
.\" the presented explanations are at least better than nothing, but by no
.\" means enough.
.\" "
.\"
.\" Traducido al castellano (con permiso) por:
.\" Sebastian Desimone (chipy@argenet.com.ar) (desimone@fasta.edu.ar)
.TH CRYPT 3 "Enero 9, 1995" "" "Manual del Programador Linux"
.SH NOMBRE
crypt \- encriptación de passwords y datos
.SH SINOPSIS
.B #include <unistd.h>
.sp
.BI "char *crypt(const char *" key ", const char *" salt );
.SH DESCRIPCION
.B crypt
es la función de encriptación de passwords. Está basada en el 
algoritmo DES (Data Encryption Standard) con algunas variaciones tendientes
(junto con otras cosas) a desalentar el uso de implementaciones hardware
de buscadores de claves.
.PP
.I key
es un password tipeado por el usuario. 
.PP
.I salt
es una cadena de dos caracteres elegidas del conjunto 
[\fBa\fP\(en\fBzA\fP\(en\fBZ0\fP\(en\fB9./\fP]. Esta cadena es usada para
variar el algoritmo en uno de 4096 modos diferentes.
.PP
Al tomar el 7 bit más bajo de cada caracter de 
.IR key ,
una clave de 56 bits es obtenida. Esta clave de 56 bits es usada para 
encryptar repetidamente una cadena constante (usualmente una cadena 
consistente de todos ceros). El valor retornado apunta al password
encriptado, una serie de 13 imprimibles caracteres (los primeros dos
caracteres representan \fBsalt\fP en si).
El valor retornado apunta a los datos constantes cuyo contenido es
sobreescrito por cada llamada.
.PP
Cuidado: El espacio de claves consiste de
.if t 2\s-2\u56\s0\d
.if n 2**56
igual a 7.2e16 valores posibles. Exhaustivas búsquedas en este espacio de 
claves son posibles usando computadoras paralelas. Software, como 
.BR crack (1),
estan disponibles y pueden buscar en la porción del espacio de claves que
es generalmente usados por los humanos para sus passwords. Dado que, la
selección de passwords debe, como mínimo, permitir palabras y nombres 
comunes, el uso del programa 
.BR passwd (1)
que chequea passwords vulnerables durante el proceso de selección es
recomendado.
.PP
El algoritmo DES en si tiene unas peculiaridades que hacen el uso 
de la interface
.BR crypt (3)
sea una pobre elección para otro fin más allá de la autenticación de
passwords. Si está planeando usar la interface
.BR crypt (3)
para un proyecto criptográfico, no lo haga !: obtenga un buen libro
sobre encriptación y una de las ampliamente disponibles librerias DES.
.\" This level of detail is not necessary in this man page. . .
.\" .PP
.\" When encrypting a plain text P using DES with the key K results in the
.\" encrypted text C, then the complementary plain text P' being encrypted
.\" using the complementary key K' will result in the complementary encrypted
.\" text C'.
.\" .PP
.\" Weak keys are keys which stay invariant under the DES key transformation.
.\" The four known weak keys 0101010101010101, fefefefefefefefe, 1f1f1f1f0e0e0e0e
.\" and e0e0e0e0f1f1f1f1 must be avoided.
.\" .PP
.\" There are six known half weak key pairs, which keys lead to the same
.\" encrypted data.  Keys which are part of such key clusters should be
.\" avoided.
.\" Sorry, I could not find out what they are.
.\""
.\" .PP
.\" Heavily redundant data causes trouble with DES encryption, when used in the
.\" .I codebook
.\" mode that
.\" .BR crypt (3)
.\" implements.  The
.\" .BR crypt (3)
.\" interface should be used only for its intended purpose of password
.\" verification, and should not be used at part of a data encryption tool.
.\" .PP
.\" The first and last three output bits of the fourth S-box can be
.\" represented as function of their input bits.  Empiric studies have
.\" shown that S-boxes partially compute the same output for similar input.
.\" It is suspected that this may contain a back door which could allow the
.\" NSA to decrypt DES encrypted data.
.\" .PP
.\" Making encrypted data computed using crypt() publically available has
.\" to be considered insecure for the given reasons.
.SH "CONFORME A"
SVID, X/OPEN, BSD 4.3
.SH "VER TAMBIEN"
.BR login "(1), " passwd "(1), " encrypt "(3), " getpass "(3), " passwd (5)
