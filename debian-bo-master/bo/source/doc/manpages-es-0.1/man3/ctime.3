.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:49:27 1993 by Rik Faith (faith@cs.unc.edu)
.\"
.\" Traducido al castellano (con permiso) por:
.\" Sebastian Desimone (chipy@argenet.com.ar) (desimone@fasta.edu.ar)
.TH CTIME 3  "Enero 9, 1995" "BSD" "Manual del Programador de Linux"
.SH NOMBRE
asctime, ctime, gmtime, localtime, mktime \- transforman fechas y horas
binarias a ASCII
.SH SINOPSIS
.nf
.B #include <time.h>
.sp
.BI "char *asctime(const struct tm *" timeptr );
.sp
.BI "char *ctime(const time_t *" timep );
.sp
.BI "struct tm *gmtime(const time_t *" timep );
.sp
.BI "struct tm *localtime(const time_t *" timep );
.sp
.BI "time_t mktime(struct tm *" timeptr );
.sp
.BI "extern char *" tzname [2];
.BI "long int " timezone ;
.BI "extern int " daylight ;
.fi
.SH DESCRIPCION
La funciones \fBctime()\fP, \fBgmtime()\fP y \fBlocaltime()\fP toman
todas un argumento de tipo \fItime_t\fP que representa la hora calendario.
Al ser interpretado como un valor de hora absoluto, este representa el 
número de segundos transcurridos desde 00:00:00 de Enero 1, 1970, 
Coordinated Universal Time (UTC).
.PP
Las funciones \fBasctime()\fP y \fBmktime()\fP toman un argumento
representando la hora descompuesta, que es una representación binaria
separada en año, mes, día, etc. La hora descompuesta es guardada en 
una estructura \fItm\fP que es definida en \fI<time.h>\fP como sigue:
.sp
.RS
.nf
.ne 12
.ta 8n 16n 32n
struct tm
{
	int	tm_sec;			/* seconds */
	int	tm_min;			/* minutes */
	int	tm_hour;		/* hours */
	int	tm_mday;		/* day of the month */
	int	tm_mon;			/* month */
	int	tm_year;		/* year */
	int	tm_wday;		/* day of the week */
	int	tm_yday;		/* day in the year */
	int	tm_isdst;		/* daylight saving time */
};
.ta
.fi
.RE
.PP
Los miembros de la estructura \fItm\fP son:
.TP
.I tm_sec
El número de segundos, normalmente en el rango de 0 a 59, pero puede llegar
a 61 para permitir saltar segundos (leap seconds)
.TP
.I tm_min
El número de segundos, en el rango 0 a 59.
.TP
.I tm_hour
El número de horas pasada la medianoche, en el rango 0 a 23.
.TP
.I tm_mday
El día del mes, en el rango de 1 a 31.
.TP
.I tm_mon
El número de mes desde Enero, en el rango 0 a 11.
.TP
.I tm_year
El número de años desde 1900. 
.TP
.I tm_wday
El número de dias desde el Domingo, en el rango 0 a 6. 
.TP
.I tm_yday
El número de dias desde Enero 1, en el rango 0 a 365.
.TP
.I tm_isdst
Una bandera que indica si la hora de resguardo a la luz de día esta en efecto
en la hora descripta. El valor es positivo si el resguardo está en efecto,
cero si no lo está, y negativo si la información no está disponible.
.PP
La función \fBctime()\fP convierte la hora calendario \fItimep\fP en una
cadena de la forma
.sp
.RS
"Wed Jun 30 21:49:08 1993\\n"
.RE
.sp
Las abreviaciones para los dias de la semana son `Sun', `Mon', `Tue', `Wed',
`Thu', `Fri', y `Sat'.  Las abraviaciones para los meses son `Jan',
`Feb', `Mar', `Apr', `May', `Jun', `Jul', `Aug', `Sep', `Oct', `Nov', y
`Dec'. El valor retornado apunta a una cadena alojada estaticamente que
puede ser sobreescrita por subsecuentes llamadas a cualquiera de las
funciones de fecha u hora. Las funciones también asignan la variable externa
\fItzname\fP con la información acerca de la zona horaria corriente.
.PP
La función \fBgmtime()\fP convierte la hora calendario \fItimep\fP en una
respresentación descompuesta de la hora, expresada en Coordinated Universal
Time (UTC).
.PP
La función \fBlocaltime()\fP convierte la hora calendario \fItimep\fP en
una representación descompuesta, expresada relativa a la zona horaria
especificada por el usuario. La función asigna la variable externa \fItzname\fP 
con información acerca de la zona horaria corriente, \fItimezone\fP con la
diferencia entre Coordinated Universal Time (UTC) y la hora local estandar 
en segundos, y \fIdaylight\fP a un valor distinto de cero si las reglas del
estandar US de hora de resguardo a la luz del día se aplican. 
.PP
La función \fBasctime()\fP convierte la descomposición de la hora 
\fItimeptr\fP en una cadena con el mismo formato que \fBctime()\fP.
El valor retornado apunta a una cadena alojada estaticamente que
puede ser sobreescrita por subsecuentes llamadas a cualquiera de las
funciones de fecha u hora.
.PP
La función \fBmktime()\fP convierte una descomposición de una estructura
horaria a una representación de hora calendaria. La función ignora los 
contenidos especifícos en los miembros de la estructura \fItm_wday\fP y
\fItm_yday\fP y los recalcula desde otra información en la descomposición
de la estructura horaria. Llamando a \fBmktime()\fP también asigna la 
variable externa \fItzname\fP con información acerca de la corriente 
zona horaria. Si la descomposición horaria no puede ser representada
como hora calendaria, \fBmktime()\fP retorna un valor de (time_t)(\-1)
y no altera los miembros \fItm_wday\fP y \fItm_yday\fP de la estructura 
horaria descompuesta.
.SH "CONFORME A"
SVID 3, POSIX, BSD 4.3, ISO 9899
.SH "VER TAMBIEN"
.BR date "(1), " gettimeofday "(2), " time "(2), " tzset (3),
.BR difftime "(3), " strftime (3)
