.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Mon Mar 29 22:41:16 1993, David Metcalfe
.\" Modified Sat Jul 24 21:35:16 1993, Rik Faith (faith@cs.unc.edu)
.\"
.\" Traducido al castellano (con permiso) por:
.\" Sebastian Desimone (chipy@argenet.com.ar) (desimone@fasta.edu.ar)
.TH BSEARCH 3  "Diciembre 23, 1995" "GNU" "Manual del Programador de Linux"
.SH NOMBRE
bsearch \- búsqueda binaria de una cadena ordenada.
.SH SINOPSIS
.nf
.B #include <stdlib.h>
.sp
.BI "void *bsearch(const void *" key ", const void *" base ", size_t " nmemb ,
.RS
.BI "size_t " size ", int (*" compar ")(const void *, const void *));
.RE
.fi
.SH DESCRIPCION
La función \fBbsearch()\fP busca en una cadena de \fInmemb\fP objectos,
donde el primer miembro está apuntado por \fIbase\fP, por un miembro
que coincida el objecto apuntado por \fIkey\fP. El tamaño de cada miembro 
de la cadena es especificado por \fIsize\fP.
.PP
El contenido de la cadena debe ser ordenado en forma ascendente de acuerdo
a la función de comparación referenciada por \fIcompar\fP. La rutina
\fIcompar\fP espera tener dos argumentos que apunten a el objeto \fIkey\fP
y a un miembro de la cadena, en ese orden, y debe retornar un entero menor, 
igual o mayor que cero si el objeto \fIkey\fP es encontrado
menor, igual o mayor (respectivamente) que el miembro de la cadena.
.SH "VALOR RETORNADO"
La función \fBbsearch()\fP retorna un puntero al miembro que coincide
de la cadena, o NULL si no hay coincidencia. Si hay múltiples elementos que
coinciden con la clave, el elemento retornado está sin especificar.
.SH "CONFORME A"
SVID 3, BSD 4.3, ISO 9899
.SH "VER TAMBIEN"
.BR qsort (3)
