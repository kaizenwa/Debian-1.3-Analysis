ACS revision history

ACS 0.21 release notes  (03/30/96)

There are several changes, most of which are only visible in subtle
ways from the outside.

1. The code is more conformant with the upcoming standard, particularly
in the use of complex, templates, lifetime of temporaries, and for
scope.  This should fix problems compiling with g++ 2.7.

2. Element commons are freed properly.

3. The manner in which elements are loaded into the matrix is
different, and should be faster for large circuits with latency.
Model bypass is more complete, because it is no longer necessary
to do anything with a latent model.  It makes little difference
for small circuits, and circuits that are mostly active.  Speed
gains on small circuits are offset by #4.

4. The bypass criteria are more strict.  It was possible to get
incorrect results through interaction between model evaluation
bypass and iteration damping.  This release will not bypass anything
when damping is in effect.  There is a slight speed penalty.

5. Logic devices work even when there is no analog model.  The bug
causing a failure in this case has been fixed.  The "bug" (that
could in a twisted sense be called a feature) that leads to random
mapping on start-up is still there.  The logic model still needs
work.

6. The code is somewhat more object-oriented.  Some classes have
been changed to be more general.
 ------------------------------------------------------------------
ACS 0.20 release notes  (11/22/95)

This release adds the level-3 MOSFET model.  It is Spice compatible.

Actually, it was there a long time ago but was removed because it
didn't work correctly.  This one has been tested and seems to match
Spice results, and have convergence characteristics a little better
than Spice 2g6.  Like the level 1 and 2 models, only Meyer's
capacitance model is implemented. (like Spice 3).
 ------------------------------------------------------------------
ACS 0.19 release notes  (10/31/95)

This release offers "improved" convergence.

Several new options have been added to control iteration damping.
In some cases, the program will take a partial step in an attempt
to tame the wild fluctuations that can occur during iteration with
Newton's method.  This version appears to be considerably more
robust than Spice 2g6.  Several test circuits that fail to converge
on Spice do converge on ACS.  The cost of this is sometimes slower
convergence.  It generally takes about 2 more iterations per step
than the previous version.  This can be turned off, using the
"dampstrategy" option at a slight cost in robustness.  See the
manual on the options command for more information.
 ------------------------------------------------------------------
ACS 0.18 release notes  (05/12/95)

This release offers improved memory management and exception
handling, primarily aimed at MSDOS systems.

Bug fixes:

1. For all ... Out of memory exceptions are properly trapped.
Version 0.17 would crash if it ran out of memory.  Now you get a
reasonable message.  It was only a real problem on MSDOS systems.

2. MSDOS floating point exceptions are trapped.  In 0.17, underflow
exceptions and null floating point exceptions could sometimes cause
an abort.  I don't know why, but the 80287 can generate a null
exception when apparently nothing is wrong.

3. MSDOS only: Evade underflow in exp().  A large negative argument
to exp can give bogus results.  This was a known (to me) in Microsoft
C 5.1.  Apparently Borland has the same behavior.  It may be a
hardware problem.  The fix is to not call exp with an argument
beyond -200, and return 0 instead.

4. Don't use "-fast-math" with g++.  (Makefile change).  It doesn't
make any difference in speed, and it sometimes causes problems,
particularly the one in #3 above.

Performance improvements:

1. Most elements no longer store values from the past.  Only
inductors and capacitors do.  This means that some probes are no
longer available.  Some other data has been moved to improve memory
usage.  This change increases the capacity of the MSDOS version by
about 10 transistors.  Unix systems will swap less.

Other visible changes:

1. The method of attaching models to devices has been changed, to
improve maintainability.  There are a few noticeable side effects.

a. The default models -d-, -n- are no longer available.  These were
not documented.

b. Model names must now be unique.  If you have a diode model named
"foo", you may not also have a mosfet model named "foo".

c. A diode can reference a mosfet model.  The diode will be equivalent
to the source-bulk diode in the mosfet.  This is a byproduct of
using C++ derived classes.  The mosfet model is derived from the
diode model.

2. Exception handling in batch mode is different.  It is still not
right.
 ------------------------------------------------------------------
ACS 0.17 release notes  (04/21/95)

The primary difference in this release is reorganization and C++.
A side benefit is that it is slightly faster, and uses slightly
less memory.  (The program is bigger, but it stores data more
efficiently, for a net improvement.)  It is a transitional release,
with some of the code still in C.  I hope to have a full C++ version
this summer.

Bug fixes:

1. Voltage source (vs, vcvs, ccvs) probes (current, power, etc.)
now really work.

2. Fixed bug that caused strange results with mutual inductance
after other parts of the circuit are changed.

3. Fixed memory leak in subcircuits and complex devices.

4. Fixed bug that caused a crash when probed elements were deleted.
 ------------------------------------------------------------------
ACS 0.16 release notes  (12/10/94)

New features:

1. New components: current controlled switch, current controlled
current source, current controlled voltage source.  Any simple two
terminal element (not a diode) can be used as a probe, not just 
a voltage source.

2. Diode transit time parameter works.

3. Mutual inductance.  The coupled coils must be linear.  Only
pairs of coupled inductors are supported in this release.  A future
release will probably support multiply coupled inductors.

Bug fixes:

1. Continuing a transient analysis now works as documented.
 ------------------------------------------------------------------
ACS 0.15 release notes  (07/31/94)

Version 0.15 is supposed to be a minimal bug fix release to 0.14,
but does have one new component.

1. Some additional ports are supported, including VMS.  An HP port
is supplied as a user contribution, but I have not tested it.

2. New component: voltage controlled switch.  Spice-3 compatible.

3. Fixed bug that caused unpredictable behavior (usually loss of
a probe, sometimes a crash) after replacing a component.

4. Fixed bug that caused incorrect evaluation and initialization
of logic devices when there is no analog model.

5. Fixed a bug in truncation error control that sometimes caused
it to become a no-op.  It still seems to usually work the same as
Spice, except that ACS will actually use at least the time steps
you ask for.  Spice will pick all the steps and interpolate for
the points you ask for.  This will usually cause ACS to use more
time steps than Spice, hence often slower simulations.

6. Fixed another bug in truncation error that sometimes caused a
divide by zero.
 ------------------------------------------------------------------
ACS 0.14 release notes  (07/05/94)

Version 0.14 was supposed to be a minimal bug fix release to 0.13.
The same bugs are still there and there are a few small additions
mostly aimed at coping with convergence problems.

1. The truncation error formula was changed to use the third
derivative of charge instead of the second derivative of current.
These two numbers are theoretically equal, but in practice they
are not.  The second derivative of current uses 3 terms to compute
by divided differences.  The third derivative of charge uses 4
terms.  Using the odd number of terms catches the error due to the
oscillatory nature of the trapezoid rule.  An even number of terms
tends to lose this error.  Also, using charge tends to mask it.
So, I have changed it to a less accurate, more optimistic method,
the same as Spice.  It now seems to work about the same as Spice,
in the sense that it usually chooses about the same step sizes.
Strictly, the old method is "better" but it tends to run away on
stiff poles, trying for excess accuracy that doesn't matter.  Your
comments on this matter are welcome.  If you know of any good papers
on this, please let me know.

2. The "stiff" option has been removed from the transient command.
Instead, use the .options "trapezoid" or "gear".  For now, "gear"
implies first order and is equivalent to the old "stiff".  (A
cop-out.)  Actually, for stiff poles you want a first order method
because the error is lower.

3. You can specify the integration method individually on any
capacitor or inductor.

4. A bug causing the MSDOS version (2 byte integers) to mess up
probes of other than nodes was fixed.

5. A bug that sometimes caused it to perpetually repeat the same
time step was fixed.  (SPICE would have reported "time step too
small" and stopped.)

6. A bug that messed up step control when a dormant model wakes up
and finds out it has been sleeping too long has been fixed.

7. "Mosflags" and "diodeflags" are different and there are more of
them.  There are lots of them and they may be useful in taming
convergence problems.  They control the heuristics that are applied
when there appears to be a convergence problem.  I have yet to find
a circuit that could not be made to converge by judicious application
of the flags and options, but any one setting is no better than
Spice, and many are worse.  One combination of flags gives Spice
style limiting, which more often than not makes convergence worse.

8. "vmax" and "vmin" options as part of convergence heuristics.
The default value of "limit" now large enough to essentially remove
it.  These limits sometimes help convergence, but more often hurt.

9. The "damp" option actually works.

10. The diode "off" flag works correctly.

11. There is a new command "alarm" that prints a message when a
value exceeds a range.  The syntax is the same as the "plot" command.
 ------------------------------------------------------------------
ACS 0.13 release notes  (03/11/94)

Version 0.13 adds several new features and has several bug fixes
and performance improvements.

1. Fourier analysis really works.
The "Fourier" command does a transient analysis but prints the
results in the frequency domain.  It is similar to the Spice command
of the same name but not exactly the same.  It is significantly
more accurate than Spice because the transient time steps are chosen
for the best match to the Fast Fourier Transform.  Considerably
more flexibility is available than in Spice.

2. Transient time step control by truncation error (finally).

3. Several options have been added to display diagnostics.

4. Fixed the default value for idsat, issat, ad, and as in the
mos-diode.  In 0.12, the default area was 1 square meter, which
gave mosfet capacitors in the 500 uf range.  This sometimes caused
strange results.

5. Added some node probes, mostly for diagnostic use.

6. Fixed the "F" probe on linear elements.  (Capacitor charge,
inductor flux, admittance current, resistor voltage)  It used to
give an obviously bogus answer.


Other changes:

1. Some general changes in the interest of improving code quality
in general.

2. Function headers are in ANSI style, rather than K&R style.  This
version will compile as either C or C++.  Future versions will
require a C++ compiler.
 ------------------------------------------------------------------
ACS 0.12 release notes  (10/09/93)

Version 0.12 is a maintenance release.  It adds no features (except Ultrix
support) but fixes several bugs and changes some porting details.  It
should be easier to port this version than previous versions.

The bug fixes are significant enough that you should upgrade to 0.12 even
if you are not having any problems.
 ------------------------------------------------------------------
ACS 0.11 release notes  (07/26/93)

Version 0.11 fixes a few bugs in 0.10.  0.10 was supposed to be
posted on alt.sources but due to a problem with the feed it never
happened.

New features:

1. New MOSFET and diode probes.  All information available from
the Spice 2 "op" analysis is now available as probes.  For MOSFET
these include cbd, cbs, cgsovl, cgdovl, cgbovl, cgs, cgd, cgb,
vdsat, vth.  Other (non-spice) new probes include cgst, cgdt, cgbt.
(cgst = Cgs total = cgsovl + cgs.) These were available before by
probing the value of the internal element but it was less convenient.
Now it is simple and has the same name as in Spice.  These probes
are also available in transient analysis, so you can see (for
example) the dynamic variations in capacitance.

Bugs fixed:

1. Pass arguments to tr_volts and family by pointer instead of the
whole structure.  This is less likely to tickle a bug in Microsoft
C.  The MSDOS version of ACS 0.10 crashed frequently due to this
bug.  (Strictly, this is a Microsoft-C bug, not an ACS bug but the
effect is the same.)

2. The AC "Z" probes work again.  They were broken in 0.10.

3. The size of the buffer for text plots is increased allowing
support for wider screens.  The old version would crash if you did
plots with outwidth set to wider than 128.  The fix is to make it
bigger, with a new constant MAXWIDTH, and trap the width setting
bigger than MAXWIDTH.  The current max is 256 for MSDOS and 512
for unix.  The plotting code should probably be redone.

4. Width is narrower by 1 so setting width to 80 won't leave blank
lines on an 80 column screen.

5. MOSFET capacitance now matches Spice (Meyer model)

6. Level 1 model linear region gds calculation was wrong, but close
enough to often go unnoticed.  It is correct and matches Spice now.

7. The value of an AC source now is compatible with Spice.  That
is, plain value is the DC-tran value.  In old versions of ACS a
plain value applied to all analyses including AC.  You needed to
prefix the value with "DC" to make it not apply to AC.  Actually,
it worked as documented.  Now it works like Spice, which makes more
sense.  This was a major source of strange results in AC analysis.
 ------------------------------------------------------------------
 ------------------------------------------------------------------
