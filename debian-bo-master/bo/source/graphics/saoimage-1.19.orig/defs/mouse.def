#ifndef lint
static unsigned char SccsMouseId[] = "%W%  %G%";
#endif

/* Module:	Mouse.def
 * Purpose:	Declare mouse pointer icon bitmaps and parameters
 * Modified:	{0} Michael VanHilst	initial version      31 December 1987
 *		{n} <who> -- <does what> -- <when>
 */

/* BTNBOX CURSOR */
#define button_width 16
#define button_height 16
#define button_x_hot 7
#define button_y_hot 7
static unsigned char button_bits[] = {
   0xe0, 0x03, 0xf8, 0x0f, 0x1c, 0x1c, 0xc6, 0x31,
   0xf6, 0x37, 0x33, 0x66, 0x1b, 0x6c, 0x1b, 0x6c,
   0x1b, 0x6c, 0x33, 0x66, 0xf6, 0x37, 0xc6, 0x31,
   0x1c, 0x1c, 0xf8, 0x0f, 0xe0, 0x03, 0x00, 0x00 };
#define button_mask_width 16
#define button_mask_height 16
static unsigned char button_mask_bits[] = {
   0xe0, 0x03, 0xf8, 0x0f, 0xfc, 0x1f, 0xfe, 0x3f,
   0xfe, 0x3f, 0xff, 0x7f, 0xff, 0x7f, 0x7f, 0x7f,
   0xff, 0x7f, 0xff, 0x7f, 0xfe, 0x3f, 0xfe, 0x3f,
   0xfc, 0x1f, 0xf8, 0x0f, 0xe0, 0x03, 0x00, 0x00 };

/* COLOR CURSOR */
#define cgraph_width 16
#define cgraph_height 16
#define cgraph_x_hot 8
#define cgraph_y_hot 8
static unsigned char cgraph_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xf0, 0x1f,
   0x38, 0x38, 0x18, 0x30, 0x0c, 0x60, 0x0c, 0x61,
   0x8c, 0x63, 0x0c, 0x61, 0x0c, 0x60, 0x18, 0x30,
   0x38, 0x38, 0xf0, 0x1f, 0xc0, 0x07, 0x00, 0x00 };
#define color_mask_width 16
#define color_mask_height 16
static unsigned char color_mask_bits[] = {
   0x00, 0x00, 0xc0, 0x07, 0xf0, 0x1f, 0xf8, 0x3f,
   0xfc, 0x7f, 0xfc, 0x7f, 0xfe, 0xff, 0xfe, 0xff,
   0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfc, 0x7f,
   0xfc, 0x7f, 0xf8, 0x3f, 0xf0, 0x1f, 0xc0, 0x07 };

/* CURSOR MODE CURSOR */
#define cursor_width 16
#define cursor_height 16
#define cursor_x_hot 0
#define cursor_y_hot 0
static unsigned char cursor_bits[] = {
   0x00, 0x00, 0x3e, 0x00, 0x8e, 0x7f, 0x1e, 0x40,
   0x3a, 0x40, 0x72, 0x40, 0x60, 0x40, 0x04, 0x40,
   0x04, 0x40, 0x04, 0x40, 0x04, 0x40, 0x04, 0x40,
   0x04, 0x40, 0x04, 0x40, 0xfc, 0x7f, 0x00, 0x00 };
#define cursor_mask_width 16
#define cursor_mask_height 16
static unsigned char cursor_mask_bits[] = {
   0x7f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xe0, 0xff, 0xe0, 0xff, 0xe0, 0xfe, 0xe0,
   0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0,
   0x0e, 0xe0, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff };

/* PAN CURSOR */
#define pan_width 16
#define pan_height 16
#define pan_x_hot 0
#define pan_y_hot 0
static unsigned char pan_bits[] = {
   0xfe, 0xff, 0xc1, 0xff, 0xf1, 0xff, 0xe1, 0xff,
   0xc5, 0xff, 0x8d, 0xff, 0x9f, 0xff, 0xff, 0xff,
   0xff, 0xff, 0x71, 0xb6, 0xad, 0xa5, 0xad, 0xa5,
   0x31, 0x94, 0xbd, 0x95, 0xbd, 0xb5, 0xff, 0xff };
#define pan_mask_width 16
#define pan_mask_height 16
static unsigned char pan_mask_bits[] = {
   0x7e, 0x00, 0x7f, 0x00, 0x7f, 0x00, 0x7f, 0x00,
   0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };

/* SPACE SHUTTLE CURSOR */
#define shuttle_width 16
#define shuttle_height 16
#define shuttle_x_hot 8
#define shuttle_y_hot 0
static unsigned char shuttle_bits[] = {
   0x80, 0x03, 0xc0, 0x06, 0x40, 0x04, 0x60, 0x0c,
   0x20, 0x08, 0x20, 0x08, 0x20, 0x08, 0x20, 0x08,
   0x20, 0x08, 0x20, 0x08, 0x30, 0x18, 0x18, 0x30,
   0x0c, 0x60, 0x04, 0x40, 0xfc, 0x7e, 0x80, 0x03 };
#define shuttle_mask_width 16
#define shuttle_mask_height 16
static unsigned char shuttle_mask_bits[] = {
   0x80, 0x03, 0xc0, 0x07, 0xc0, 0x07, 0xe0, 0x0f,
   0xe0, 0x0f, 0xe0, 0x0f, 0xe0, 0x0f, 0xe0, 0x0f,
   0xe0, 0x0f, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f,
   0xfc, 0x7f, 0xfc, 0x7f, 0xfc, 0x7f, 0x80, 0x03 };

#ifdef IMTOOL
#ifdef FINGER
/* FINGER ON KEY CURSOR */
#define key_width 16
#define key_height 16
#define key_x_hot 0
#define key_y_hot 0
static unsigned char key_bits[] = {
   0x00, 0x18, 0x3e, 0x0c, 0x0e, 0x06, 0x1e, 0x03,
   0xba, 0x03, 0xb2, 0x83, 0xc0, 0xc1, 0xe0, 0x40,
   0x70, 0x60, 0x38, 0x30, 0x10, 0x18, 0x30, 0x0c,
   0xe0, 0x07, 0xf8, 0x1f, 0x08, 0x10, 0x08, 0x10 };
#define key_mask_width 16
#define key_mask_height 16
static unsigned char key_mask_bits[] = {
   0x7f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff,
   0xfc, 0xff, 0xfc, 0xff, 0xfc, 0x7f, 0xf8, 0x3f,
   0xfc, 0x3f, 0xfc, 0x3f, 0xfc, 0x3f, 0x1c, 0x38 };
#else
/* CROSS-HAIR CURSOR */
#define key_width 16
#define key_height 16
#define key_x_hot 7
#define key_y_hot 7
static unsigned char key_bits[] = {
   0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
   0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x3e, 0x3e,
   0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
   0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00};
#define key_mask_width 16
#define key_mask_height 16
static unsigned char key_mask_bits[] = {
   0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01,
   0xc0, 0x01, 0xc0, 0x01, 0x3f, 0x7e, 0x3f, 0x7e,
   0x3f, 0x7e, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01,
   0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0x00, 0x00};
#endif
#endif

/* MISSILE CURSOR */
#define missile_width 16
#define missile_height 16
#define missile_x_hot 15
#define missile_y_hot 0
static unsigned char missile_bits[] = {
   0x00, 0x80, 0x00, 0x60, 0x00, 0x70, 0x00, 0x38,
   0x00, 0x1e, 0x00, 0x0f, 0x80, 0x0f, 0xe0, 0x07,
   0xf0, 0x03, 0xf0, 0x01, 0xf0, 0x01, 0xe0, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
#define missile_mask_width 16
#define missile_mask_height 16
static unsigned char missile_mask_bits[] = {
   0x00, 0x80, 0x00, 0x60, 0x00, 0x70, 0x00, 0x38,
   0x00, 0x1e, 0x00, 0x0f, 0x80, 0x0f, 0xe0, 0x07,
   0xf0, 0x03, 0xf0, 0x01, 0xf8, 0x01, 0xfc, 0x00,
   0x3c, 0x00, 0x1e, 0x00, 0x07, 0x00, 0x03, 0x00 };

#ifdef NOTUSED
/* PLAIN CURSOR */
#define plain_width 16
#define plain_height 16
#define plain_x_hot 7
#define plain_y_hot 7
static unsigned char plain_bits[] = {
   0x00, 0x00, 0xfe, 0x3f, 0x02, 0x20, 0x02, 0x20,
   0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x02, 0x20,
   0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x02, 0x20,
   0x02, 0x20, 0xfe, 0x3f, 0x00, 0x00, 0x00, 0x00 };
#define plain_mask_width 16
#define plain_mask_height 16
static unsigned char plain_mask_bits[] = {
   0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0x07, 0x70,
   0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70,
   0x07, 0x70, 0x07, 0x70, 0x07, 0x70, 0x07, 0x70,
   0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0x00, 0x00 };
#endif
