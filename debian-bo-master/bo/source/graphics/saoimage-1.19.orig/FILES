clralloc.c: * Purpose:	Allocate and free colors
clralloc.c: * Purpose:	Allocate color cells with and overlay plane if possible
clralloc.c: * Purpose:	un-alloc alloc'd color map cells
clralloc.c: * Purpose:	Create a private colormap with some of the default map's colors
clrctrl.c: * Purpose:	Control colors
clrctrl.c: * Purpose:	Things to do when a buttonbox color menu button is selected
clrctrl.c: * Purpose:	Alter color based on mouse events
clrctrl.c: * Purpose:	Install a new pre-defined color table
clrctrl.c: * Purpose:	Reverse all colors at once (respond to invert button)
clrctrl.c: * Purpose:	Make necessary adjustment after a request to change use of
clrhard.c: * Purpose:	Get common named colors
clrhard.c: * Purpose:	Set up basic hardware colors
clrhard.c: * Purpose:	Get color parameters from named cursor colors
clrhard.c: * Purpose:	Allocate defined colors for cursors and overlays
clrhard.c: * Purpose:	Free cell color overlay colors
clrhard.c: * Purpose:	Free cursor color if it is not one of the essential ones
clrhard.c: * Purpose:	Alloc a read-only color cell with a common color
clrhard.c: * Purpose:	Set up the rgb values in the Xcolor
clrhard.c: * Purpose:	Given rgb values, set the pixel
clrinit.c: * Purpose:	Allocate the needed colors
clrinit.c: * Purpose:	Claim and set up colors (and do any needed initial work)
clrinit.c: * Purpose:	Get basic info about the color hardware on hand
clrinit.c: * Purpose:	Verify that server can provide a satisfactory colormap
clrmap.c: * Purpose:	Set up the cell storemap XColor array
clrmap.c: * Purpose:	Fill the color map according to the color vertex tables
clrmap.c: * Purpose:	Fill XColor storemap from individual cellmaps
clrmap.c: * Purpose:	Fill cellstore values based on table values
clrmenu.c: * Purpose:	Read and Write file and internally stored color tables
clrmenu.c: * Purpose:	Get a new pre-defined color table and load it for use
clrmenu.c: * Purpose:	Open and read a color table file, and load it into the
clrmenu.c: * Purpose:    Open and write a color table file
clrmenu.c: * Purpose:
clrmenu.c: * Purpose:	Load an internally stored color table for use
clrmenu.c: * Purpose:	Load one color of the internal color table
clrread.c: * Purpose:	Read and Write file and internally stored color tables
clrread.c: * Purpose:	Parse values after color identifier
clrread.c: * Purpose:	Read color table entries for one color
clrread.c: * Purpose:	Get next processable line, and prepare a copy for processing
clrread.c: * Purpose:	Point at first non-space character if it might be parsable
clrread.c: * Purpose:	Convert all characters to upper case and null terminate word
clrsetup.c: * Purpose:	Set parameters for the current color mode
clrsetup.c: * Purpose:	Set up color parameters unique to overlay type usage
clrsetup.c: * Purpose:	Set up color parameters unique to cell usage without overlay
clrsetup.c: * Purpose:	Initialize color parameters for halftone mode
clrsetup.c: * Purpose:	Set the pixel values in the color cellstore
clrsetup.c: * Purpose:	Copy the red, green, and blue valuesto another XColor
clrsetup.c: * Purpose:	Set the cellstore entries for an overlay cursor
clrvary.c: * Purpose:	Interactive color manipulation keyed to mouse position
clrvary.c: * Purpose:	Modify colors as per mode and the mouse position
clrvary.c: * Purpose:	change color table cell_levels as per new contrast and bias
cmddisp.c: * Purpose:	Set options from command line pertaining to display
cmddisp.c: * Purpose:	Parse command line for coordinate adjustment or rotation
cmddisp.c: * Purpose:	Parse command line for display color parameters
cmddisp.c: * Purpose:	Parse command line for image scaling parameters
cmddisp.c: * Purpose:	Parse the command line for window and server parameters
cmdimage.c: * Purpose:	Set options from command line
cmdimage.c: * Purpose:	Parse commandline to find an image file name
cmdimage.c: * Purpose:	Parse command line for image file type
cmdimage.c: * Purpose:	Parse command line for image file reading parameters
cmdimage.c: * Purpose:	Parse command line for socket or pipe connection stuff
cmdnew.c: * Purpose:	Orchestrate remembering and forgeting commandline arguments
cmdnew.c: * Purpose:	Save the original command line in a static string for use
cmdnew.c: * Purpose:	Enter a new command line and respond to it.
cmdnew.c: * Purpose:	Given a new command line, parse it and do what is called for
cmdnew.c: * Purpose:	Undo parameters checked for defaults when loading a new image
cmdnew.c: * Purpose:	Set the current display parameters for reloading the image
cmdnew.c: * Purpose:	Allocate space used for commandline
cmdnew.c: * Purpose:	Free the space used for parsing the command line
cmdnew.c: * Purpose:	Break a command string into tokens (mimic initial command line)
cmdnew.c: * Purpose:	Having the image record set, do all that is needed to load
cmdparse.c: * Purpose:	Set options from command line
cmdparse.c: * Purpose:	Process options to set filename and change defaults
cmdparse.c: * Purpose:	Parse command line for things settings from the etc menu
cmdparse.c: * Purpose:	Print tokens on one line to be like original command line
cmdparse.c: * Purpose:	Print error mesage and list of command line switches
crdinvrt.c: * Purpose:	Compute reverse transform and unknown transform parameters
crdinvrt.c: * Purpose:	Compute parameters of the inverse transform
crdinvrt.c: * Purpose:	Compute the offsets used for integer transforms
crdinvrt.c: * Purpose:	lower upper decompose matrix (in place) for matrix inversion
crdinvrt.c: * Purpose:	LowerUpper backsubstitute one column to solve matrix inversion
crdrot.c: * Purpose:	Add a rotation to be applied through the transform
crdrot.c: * Purpose:	Perform requested transformation of image coordinates
crdrot.c: * Purpose:	Apply a given linear translation to the passed Transform
crdrot.c: * Purpose:	Apply a mirror reflection to the passed Transform
crdrot.c: * Purpose:	Apply given angular rotation to the passed Transform
crdrot.c: * Purpose:	Multiply two sets of transformation matrices to produce a
crdset.c: * Purpose:	Set up coordinate system parameters and translation matrices
crdset.c: * Purpose:	Set basic params for a coordinate system
crdset.c: * Purpose:	Calculate transforms given where to put A on B
crdset.c: * Purpose:	Set the img-to-file transform
crdset.c: * Purpose:	Set buffer-to-filebuffer transform, should the
crdset.c: * Purpose:	Set buffer-to-img transform (& buf-to-file)
crdset.c: * Purpose:	Set up parameter to map image data from src (A) to dst (B)
crdsynth.c: * Purpose:	Support the computing of transform matrices and shortcuts
crdsynth.c: * Purpose:	Create matrix to perform opposite transformation
crdsynth.c: * Purpose:	Compute the offsets used for integer transforms
crdsynth.c: * Purpose:	Set parameters for fast integer computation
crdsynth.c: * Purpose:	Test zoom to determine whether it could be computed
crdtemp.c: * Purpose:	Calculate display coordinates for pan and zoom
crdtemp.c: * Purpose:	set needed parameters for proposed display
crdtemp.c: * Purpose:	Reset temp disp proposal to the current disp params
crdtemp.c: * Purpose:	Set display parameters and translations as per temp
crdtemp.c: * Purpose:	set up zoom given edges of desired display and
crdtemp.c: * Purpose:	Select the zoom to best fit indicated image subsection to
crdtemp.c: * Purpose:	Set the special window (dest) coords for mapping a display
crdtrans.c: * Purpose:	Transform x,y, coordinates through transformation matrix
crdtrans.c: * Purpose:	Perform coordinate translation on floating point
crdtrans.c: * Purpose:	Perform coordinate translation using integer input values
csranli.c: * Purpose:	Deal with annuli of the software cursor
csranli.c: * Purpose:	Copy the cursor onto an annulus
csranli.c: * Purpose:	Remove all but the innermost annulus
csranli.c: * Purpose:	Change annuli location
csranli.c: * Purpose:	Update cursor location params
csrarea.c: * Purpose:	Calculate areas of cursors
csrarea.c: * Purpose:	Calculate area, in float units file pixels, enclosed by cursor
csrarea.c: * Purpose:	Test the edges of a polygon to see if any cross each other
csrarea.c: * Purpose:	Test this edge against the reference edge
csrcoord.c: * Purpose:	Calculate coordinates for cursor functions
csrcoord.c: *  Purpose:	Set img coords of cursor
csrcoord.c: *  Purpose:	If the display image has been altered, change the cursor
csrcoord.c: *  Purpose:	Set cursor window coordinates from its file coordinates
csrcoord.c: *  Purpose:	Set annuli window coordinates from their file coordinates
csrcoord.c: *  Purpose:	Note current transform
csrcoord.c: *  Purpose:	Check if current transform has changed
csrcoord.c: *  Purpose:	Calculate and report curosr params in file coordinates
csrctrl.c: * Purpose:	Manipulate the software cursor in response to mouse events
csrctrl.c: *  Purpose:	Respond to mouse commands
csrdraw.c: * Purpose:	Display and draw the software cursor
csrdraw.c: *  Purpose:	Draw the software cursor, if it is to be visible
csrdraw.c: *  Purpose:	Undraw the cursor
csrdraw.c: *  Purpose:	Draw a cursor as indicated
csrdraw.c: *  Purpose:	Draw all annuli in specified color and function
csrgrab.c: * Purpose:	Surgically resize or delete annular cursors
csrgrab.c: * Purpose:	Change size of cursor to intersect current mouse cursor
csrgrab.c: * Purpose:	Respond to a mouse request to delete an annulus
csrgrab.c: * Purpose:	Change size of cursor to intersect current mouse cursor
csrgrab.c: * Purpose:	Remove an annular ring from annulus linked list and screen
csrgrab.c: * Purpose:	Set up cursor to for a size annulus interaction
csrgrab.c: * Purpose:	Compare size of cursor with annuli
csrmove.c: * Purpose:	Move, resize, or rotate the software cursor
csrmove.c: *  Purpose:	Change cursor location cursor
csrmove.c: *  Purpose:	Change size of cursor to intersect current mouse cursor
csrmove.c: *  Purpose:	Change angle of cursor to line up with current mouse cursor
csrmove.c: *  Purpose:	Calculate restrictions applied to sizing restrictions can apply
csrpoly1.c: * Purpose:	Manipulate vertex lists for drawing polygon cursor
csrpoly1.c: * Purpose:	Identify or create polygon vertex for manipulation
csrpoly1.c: * Purpose:	Remove a polygon vertex if mouse is close enough to grab it
csrpoly1.c: * Purpose:	Move the tracked vertex of the polygon
csrpoly1.c: * Purpose:	Update all display coordinates and then the file coordinates
csrpoly1.c: * Purpose:	Update polygon coordinates from file coordinates for
csrpoly1.c: * Purpose:	Test for being on a polygon point, return its index
csrpoly2.c: * Purpose:	Maintain the vertex lists for drawing a polygon cursor
csrpoly2.c: * Purpose:	Reset polygon to the last manipulated point
csrpoly2.c: * Purpose:	Install polygon drawing stuff for the active cursor
csrpoly2.c: * Purpose:	Install stuff to making a polygon copy the active cursor
csrpoly3.c: * Purpose:	Manipulate vertex lists for drawing polygon cursor
csrpoly3.c: * Purpose:	Test for the closest polygon segment
csrsave.c: * Purpose:	Make new copies of the cursor or replace the cursor by copying
csrsave.c: *  Purpose:	Free alloc'd cursor space
csrsave.c: *  Purpose:	Copy the cursor onto a region of type include or exclude
csrsave.c: *  Purpose:	Reconstruct annulus structure for copy
csrsave.c: *  Purpose:	Copy region onto cursor
csrsave.c: *  Purpose:	Compare a region with a cursor
csrshape.c: * Purpose:	Make basic software cursors
csrshape.c: *  Purpose:	Remake the current cursor polygon list
csrshape.c: *  Purpose:	Given tip and tail, make line including arrow head
csrshape.c: *  Purpose:	Set the corner coordinates for the rotating box cursor
csrshape.c: *  Purpose:	Create a new circle cursor with given center and radius
csrshape.c: *  Purpose:	Create an ellipticle cursor with given center and radii
csrshape.c: *  Purpose:	Change number of points used to draw circles and ellipses
csrslct.c: * Purpose:	Initialize and change states of the software cursor
csrslct.c: *  Purpose:	Respond to command input from user interface
csrslct.c: *  Purpose:	Initialize the cursor parameters
csrtext.c: * Purpose:	Initialize and change states of the software cursor
csrtext.c: *  Purpose:	initialize editor parameters for text cursor editing
csrtext.c: *  Purpose:	set up cursor struct for text cursor interactions
csrtext.c: *  Purpose:	empty text cursor buffer and ungrab keyboard input
csrtext.c: *  Purpose:	save string in editor on region save event
csrtext.c: *  Purpose:	Put cursor string into editor buffer
csrtext.c: *  Purpose:	Respond to key entry while in textcursor mode
csrtext.c: *  Purpose:	draw a cursor, using only cursorRec info
csrtext.c: *  Purpose:	Move the text drawing coords when text cursor is moved
csrtext.c: *  Purpose:	Clear area around edit string, mindful of mask in use
csrtext.c: *  Purpose:	Write detail part of region file line for a text cursor
ctrlcntn.c: * Purpose:	Handle all IO with remote independent processes
ctrlcntn.c: * Purpose:	set up connections after display connection has been opened
ctrlcntn.c: * Purpose:	Open a connection to a remote process and update event handlers
ctrlcntn.c: * Purpose:	Close the remote process connection and update event handlers
ctrlcntn.c: * Purpose:	Suck all bytes out of a pipe open for reading
ctrlcntn.c: * Purpose:	call the function for this connection event
ctrlcntn.c: * Purpose:	read specified number of bytes from connection into buf
ctrlcntn.c: * Purpose:	write specified number of bytes to connection from buf
ctrlcntn.c: * Purpose:	Initialize event handler parameters
ctrldisk.c: * Purpose:	Open, close, read, and write disk files and streams.
ctrldisk.c: * Purpose:	Change an open file's flags, check for errors
ctrldisk.c: * Purpose:	Read to functional end of file (useful with dynamic IO)
ctrldisk.c: * Purpose:	Skip into a disk file before reading, check for errors
ctrldisk.c: * Purpose:	Read bytes from a disk file, check for errors
ctrldisk.c: * Purpose:	Write data to the open disk file or stream
ctrldisk.c: * Purpose:	Close a disk file
ctrldisk.c: * Purpose:	Change an open file's flags, check for errors
ctrldisk.c: * Purpose:	Skip into a disk file before reading, check for errors
ctrldisk.c: * Purpose:	Read bytes from a disk file, check for errors
ctrldisk.c: * Purpose:	Write data to the open disk file or stream
ctrldisk.c: * Purpose:	Close a disk file
ctrlfile.c: * Purpose:	Prompt for file name and open file for specified purpose
ctrlfile.c: * Purpose:	Open a file for writing, as specified by user
ctrlfile.c: * Purpose:	Open a file for reading, as specified by user
ctrlfile.c: * Purpose:	does a file exist for opening (1=yes, 0=no, -1=problem)
ctrlfile.c: * Purpose:	Swap bytes in place, (swab is not guaranteed to work in place)
ctrlgc.c: * Purpose:	Create a GC and set the GC params when needed
ctrlgc.c: * Purpose:	Create the gc and set initial values
ctrlgc.c: * Purpose:	free resources loaded by server before exiting
ctrlgc.c: * Purpose:	Adjust gc params as specified for simple drawing
ctrlgc.c: * Purpose:	Adjust gc params as specified for drawing with a background
ctrlgc.c: * Purpose:	Adjust gc params as specified for basic text
ctrlgc.c: * Purpose:	Adjust gc params as specified for text with a background
ctrlgc.c: * Purpose:	Load the fonts used by this program
ctrlgc.c: * Purpose:	Load a font or announce failure
ctrlmbox.c: * Purpose:	Handle a VMS mailbox for IO
ctrlmbox.c: * Purpose:	Open a VMS mailbox I/O
ctrlmbox.c: * Purpose:	Close a mailbox connection
ctrlmbox.c: * Purpose:	Suck all bytes out of a pipe open for reading
ctrlmbox.c: * Purpose:	Read VMS mailbox
ctrlmbox.c: * Purpose:	Write to VMS mailbox
ctrlpipe.c: * Purpose:	Open a pipe device for IO
ctrlpipe.c: * Purpose:	Open a channel on a named device for pipe I/O
ctrlpipe.c: * Purpose:	Close pipe connection
ctrlpipe.c: * Purpose:	Suck all bytes out of a pipe open for reading
ctrlsckt.c: * Purpose:	Open a pipe device for IO
ctrlsckt.c: * Purpose:	Get a socket on which to listen for connections
ctrlsckt.c: * Purpose:	accept a connection requested of the socket listener
ctrlsckt.c: * Purpose:	flush all pending input on this socket connection
ctrlsckt.c: * Purpose:	close this socket's file descriptor
dispblnk.c: * Purpose:	Switch between stored displays
dispblnk.c: * Purpose:	Save the current display in a blink buffer
dispblnk.c: * Purpose:	When dispbox changes size, dump all current buffers
dispblnk.c: * Purpose:	Reset basic blink parameters when color arrangements change
dispblnk.c: * Purpose:	Indicate that display no longer holds a blinking image
dispblnk.c: * Purpose:	Control blinking of stored displays
dispbtmp.c: * Purpose:	Routines to map 16 bit data to a single plane bitmap
dispbtmp.c: * Purpose:	Initialize color struct pointers for halftoning
dispbtmp.c: * Purpose:	Respond to halftone selection command
dispbtmp.c: * Purpose:	Redo halftone images of both dispbox and panbox
dispbtmp.c: * Purpose:	Make halftone bitmap for pan window (panbox)
dispbtmp.c: * Purpose:	Make halftone bitmap for display window (dispbox)
dispdfse.c: * Purpose:	Map 16 bit data to a single plane bitmap using error diffusion
dispdfse.c: * Purpose:	Perform subsampling and error diffusion to produce a bitmap
dispdfse.c: * Purpose:	Perform replication and error diffusion to produce a bitmap
dispdthr.c: * Purpose:	Map 16 bit data to a single plane bitmap using dithering
dispdthr.c: * Purpose:	Perform subsampling and dithering to produce a bitmap image
dispdthr.c: * Purpose:	Perform replication and dithering to produce a bitmap image
display.c: * Purpose:	Draw images in their windows, including the main display
display.c: * Purpose:	Redraw the window's display image with no frills
display.c: * Purpose:	Redraw the dispbox window display including cursor graphics
display.c: * Purpose:	Redraw the main display buffer from the short image buffer
display.c: * Purpose:	Take action to indicate unfilled display margins
disppsct.c: * Purpose:	Dump contents of the display window to a postscript printer.
disppsct.c: * Purpose:	Generate the label for the output printer page.
disppxmp.c: * Purpose:	Map short buffer to picturebox display buffer
disppxmp.c: * Purpose:	Map data to a display buffer, zoomed down by sub-sampling
disppxmp.c: * Purpose:	Put zoom replicated image data in the display buffer
editctrl.c: * Purpose:	Top level of text editing session for string input
editctrl.c: * Purpose:	Get everything ready for running editor sessions
editctrl.c: * Purpose:	Run popup editor session for text input
editctrl.c: * Purpose:	Unmap the popwin: called by routines which control map and
editctrl.c: * Purpose:	Set the popup parameters and create the popup window
editctrl.c: * Purpose:	map the popwindow, noting its current size and setting params
editdraw.c: * Purpose:	Draw the edited line in the popup window
editdraw.c: *  Purpose:	Set draw func to func and mask
editdraw.c: *  Purpose:	Unset draw func to func and mask
editdraw.c: *  Purpose:	Draw a string for the first time (new window or new string)
editdraw.c: *  Purpose:	Redraw the string as it was after a popup window expose event
editdraw.c: *  Purpose:	Display a section of string and the text cursor
editdraw.c: *  Purpose:	Clear area around edit string, mindful of mask in use
editemcs.c: * Purpose:	Provide EMACS like response for popup line editor
editemcs.c: * Purpose:	Respond to keys in emacs fashion
editinit.c: * Purpose:	Initialize font and drawing info for popup editor structure
editinit.c: * Purpose:	Store a passed string in the current string buffer
editinit.c: * Purpose:	Store a passed string in the editor storage stack
editinit.c: * Purpose:	Retrieve a line from the storage stack
editinit.c: * Purpose:	Put current line in the store stack
editinit.c: * Purpose:	Set edit buffer string to no characters
editline.c: * Purpose:	Manipulate the popup editor character string
editline.c: * Purpose:	Insert new characters into the edit line
editline.c: * Purpose:	Delete characters before the active position
editline.c: * Purpose:	Delete characters from the active position forward
editrdrw.c: * Purpose:	Move cursor and redraw the line after editing
editrdrw.c: * Purpose:	Update the displayed string after character deletion
editrdrw.c: * Purpose:	Update the displayed string after character insertion
grphbar.c: * Purpose:	Fill a buffer with a color chart of the allocated colors
grphbar.c: * Purpose:	Fill byte buffer with bars of increasing value covering
grphbtmp.c: * Purpose:	Create the halftone colorbar
grphbtmp.c: * Purpose:	Make halftone bitmap for pan window (panbox)
grphbtmp.c: * Purpose:	Perform subsampling and dithering to produce a bitmap image
grphbtmp.c: * Purpose:	Perform subsampling and error diffusion to produce a bitmap
grphctrl.c: * Purpose:	Manipulate the color graph
grphctrl.c: * Purpose:	Varify size and get everything set when mapping the graphbox
grphctrl.c: * Purpose:	Put up the graphbox when it is mapped or reexposed
grphctrl.c: * Purpose:	Mouse controlled interaction to alter color table.
grphdraw.c: * Purpose:	Draw color graph lines
grphdraw.c: * Purpose:	Put the color bar on the screen
grphdraw.c: * Purpose:	Draw the cgraph graph lines and hash marks
grphdraw.c: * Purpose:	Draw active hash mark as filled box
grphdraw.c: * Purpose:	Installed newly active line to be last drawn
grphdraw.c: * Purpose:	Replace end of the draw queue when end color is no longer
grphgrab.c: * Purpose:	Get or drop a color graph vertex as per a mouse button event
grphgrab.c: * Purpose:	When a mouse button is pressed, assign a vertex to that button
grphgrab.c: * Purpose:	Delete a vertex if one is under the mouse pointer for drop
grphgrab.c: * Purpose:	Handle grab vertex event for single color 
grphgrab.c: * Purpose:	Check to see if position is close to an existing hash mark.
grphgrab.c: * Purpose:	Given hash position, install a new vertex, and make active
grphgrab.c: * Purpose:	Install new vertex in a color subtableRec.
grphgrab.c: * Purpose:	Add a new hash mark
grphgrab.c: * Purpose:	Delete a color table vertex if one is under the mouse position
grphinit.c: * Purpose:	Initialize or reset color bar and graph
grphinit.c: * Purpose:	Handle program init-time color bar and graph initialization
grphinit.c: * Purpose:	Initialize color bar and related params
grphinit.c: * Purpose:	Adjust color bar size params and/or color data if needed
grphinit.c: * Purpose:	Initialize color bar and related params
grphinit.c: * Purpose:	Adjust color bar size params and/or color data if needed
grphinit.c: * Purpose:	Create and draw the color bar
grphinit.c: * Purpose:	Set the color bar for display of current color set
grphinit.c: * Purpose:	Adjust color graph size params and/or graph if needed
grphlbl.c: * Purpose:	Initialize or reset color bar and graph
grphlbl.c: * Purpose:	Label the maximum color level by that end of the color bar
grphlbl.c: * Purpose:	Draw entire graph label
grphlbl.c: * Purpose:	Label color gamma levels
grphlbl.c: * Purpose:	Set basic text parameters for color bar and graph labels
grphline.c: * Purpose:	Assemble lines and hash marks for the color graph
grphline.c: * Purpose:	Set the fixed color_linegraph coordinates (aligning segments
grphline.c: * Purpose:	Set the variable colorline coordinates representing intensity
grphline.c: * Purpose:	Set the fixed colorline coordinates (aligning segment with
grphline.c: * Purpose:	Set the variable colorline coordinates representing intensity
grphline.c: * Purpose:	Initialize record parameters used to place the hash marks
grphline.c: * Purpose:	Set rectangle positions to mark table vertexes for one color
grphmove.c: * Purpose:	Change values (and position) of designated vertices in
grphmove.c: * Purpose:	Move one ccolor graph vertex
grpholap.c: * Purpose:	Draw color graph lines where they overlap
grpholap.c: * Purpose:	Make line representing more than one color black (or white)
grpholap.c: * Purpose:	Make hashmarks which represent more than one color black
grphpos.c: * Purpose:	Select the best place in the list for a new hash mark, based
grphtext.c: * Purpose:	Initialize or reset color bar and graph
grphtext.c: * Purpose:	Set labeling pieces according to the graph window size
grphtext.c: * Purpose:	Create window with window gravity and optional colored border
hget.c:     * Purpose:	Extract values for variables from FITS header string
histdist.c: * Purpose:	Distribute the levels among histogram sub-groups
histdist.c: * Purpose:	Find subrange with zero allotted levels and specified excess.
histdist.c: * Purpose:	Find group with zero allotted levels and specified range.
histdist.c: * Purpose:	Find group with non-zero allotted levels and specified
histeql.c: * Purpose:	Fill the scalemap by histogram equalization
histeql.c: * Purpose:	Create a scaling map which equalizes image cells per
histeql.c: * Purpose:	Repeat scanning for large count levels as saturation level
histeql.c: * Purpose:	Make singularity links non_uniquely marked (range > 0) and
histlist.c: * Purpose:	Distributing levels for a subrange section of the histogram
histlist.c: * Purpose:	Make a list to describe map using basic allocation method
histlist.c: * Purpose:	Alter a level of the map and remake section above altered level
histmap.c: * Purpose:	Make scalemap, applying standard histgoram equalization
histmap.c: * Purpose:	Make a section of scale map using histgroup link as guide 
histmap.c: * Purpose:	Make section of map as defined by list
histmap.c: * Purpose:	Allocate levels for a histogram subrange.  Special process
histmap.c: * Purpose:	Make a list to describe map allocation using special
histscan.c: * Purpose:	Scan the image histogram picking out large cell count values
histscan.c: * Purpose:	Create a new link in histogram link list, after one given
histscan.c: * Purpose:	Set parameters in subrange link list record
histzero.c: * Purpose:	Combine groups with zero alloted levels with adjoining groups
histzero.c: * Purpose:	Combine two links of histogram group list
hput.c:     # Purpose:	Implant values for parameters into FITS header string
imgcheck.c: * Purpose:	Check parameters for consistency and check image file size
imgcheck.c: * Purpose:	Do some consistency checks on image type and size
imgcheck.c: * Purpose:	Check array size vs file size etc
imgcheck.c: * Purpose:	return size of file adjusted for header and storage type
imgflip.c: * Purpose:	Rotate buffer 180 degrees on any orthogonal axis
imgflip.c: *  Purpose:	Flip buf to make Y coordinates run in opposite direction
imgflip.c: *  Purpose:	Mirror buf to make x coordinates run in opposite direction
imgflip.c: * Purpose:	Turn buf upside down (180 degree rotation on image plane)
imgflip.c: * Purpose:	Move short values to another buffer with optional reorientation
imglogo.c: * Purpose:	Put logo in image buffer
imglogo.c: * Purpose:	redirect lookup table to map parts of logo to static colors
imglogo.c: * Purpose:	decode run-length encoded saoimage logo into short buffer
imglogo.c: * Purpose:	place logo image in image buffer
imgnew.c: * Purpose:	Middle level routines to do all for a new image or buffer
imgnew.c: *  Purpose:	Create all image coordinate parameters from the beginning
imgnew.c: *  Purpose:	Set buf related coords and load image data into main buffer
imgnew.c: *  Purpose:	Read image data into the panbox short buffer
imgnew.c: *  Purpose:	Print the image file name in the desktop
imgparam.c: * Purpose:	Resolve missing image and display parameters
imgparam.c: * Purpose:	Resolve readable subsection selection and fill in
imgparam.c: * Purpose:	Adjust chosen or default display parameters
imgread.c: * Purpose:	Read image headers and image files
imgread.c: * Purpose:	Set the image dimensions
imgread.c: * Purpose:	Open if necessary, then read the appropriate image file
imgrot.c: * Purpose:	Routines to rotate the img buffer 90 degrees
imgrot.c: * Purpose:	Rotate a square buffer 90 degrees clockwise
imgrot.c: * Purpose:	Rotate a square buffer 90 degrees counter-clockwise
imgtrans.c: * Purpose:	Routines to orthogonally translate buffers.
imgtrans.c: * Purpose:	Rotate a buffer as indicated by the code
imgtrans.c: * Purpose:	Rearrange lines in a buffer for square symmetry
imgtrans.c: * Purpose:	Make rectangular data in square buffer occupy rectangle at top
iraf2fits.c: * Purpose:	Convert IRAF header string to FITS header string
irafcrd.c: * Purpose:	Parse wcs filename string for IRAF subsection coordinates
irafcrd.c: * Purpose:	Parse wcs filename string for the user's "rect" subsection.
irafcrd.c: * Purpose:	Parse for subsection and blocking from the image name
irafcrd.c: * Purpose:	parse subsection syntax for x and y offsets of subsection
irafcrd.c: * Purpose:	Find the next instance of a string in another string 
irafdisp.c: * Purpose:	Respond to input from IRAF meant for Imtool
irafdisp.c: * Purpose:	Reinitialize parameters after any buffer size change and
irafdisp.c: * Purpose:	Map and display a sub-section of the full buffer.
irafdisp.c: * Purpose:	Force the scalemap to match the range of imtool image data
irafdisp.c: * Purpose:	Map colors used as graphics options in imtool
irafenv.c: * Purpose:	Do things needed to coorinate paths and coordinates with IRAF
irafenv.c: * Purpose:	Construct the pathname of a user datafile by IRAF convention.
irafenv.c: * Purpose:	Load the screen WCS, if not yet validated, from the user
irafenv.c: * Purpose:	Read the IMTOOL startup file to get frame buffer sizes.
iraffdbk.c: * Purpose:	Set the mouse pointer icon for each window and mode
iraffdbk.c: * Purpose:	Respond to an imtool IMCURSOR/IIS_WRITE packet from the pipe
iraffdbk.c: * Purpose:	Return the cursor value on the output datastream to the
iraffdbk.c: * Purpose:	Set up mode to send cursor position when a key is struck
iraffdbk.c: * Purpose:	Send cursor position to IRAF in response to trigger event
irafimtl.c: * Purpose:	Respond to input from IRAF meant for Imtool
irafimtl.c: * Purpose:	Read imtool messages from iraf (return 1 if pipe trouble)
irafimtl.c: * Purpose:	Reset buffer sizes, coordinate systems and parameters as
irafimtl.c: * Purpose:	Figure out the integer frame number for its mask
irafio.c: * Purpose:	Read an image in from the IRAF pipe
irafio.c: * Purpose:	open the connection for IRAF
irafio.c: * Purpose:	close the connection for IRAF
irafio.c: * Purpose:	assign a new name to the imtool connection
irafio.c: * Purpose:	Write image data back to iraf device channel
irafio.c: * Purpose:	Load image data from iraf input device channel
irafio.c: * Purpose:	Unpack byte data for use as shorts
irafpipe.c: * Purpose:	Read an image in from the IRAF pipe
irafpipe.c: * Purpose:	event handler for packet input from iraf
irafpipe.c: * Purpose:	Check packet sum against checksum (and verify byteswap)
mainbffr.c: * Purpose:	Allocate or reallocate large buffers
mainbffr.c: * Purpose:	Allocate major buffers used for imaging
mainbffr.c: * Purpose:	Allocate buffers used for each window's display
mainbffr.c: * Purpose:	Allocate or reallocate panbox display buffers
mainbffr.c: * Purpose:	Allocate or reallocate dispbox display buffer
mainbffr.c: * Purpose:	Allocate or reallocate main image buffer to fit img or as
mainevnt.c: * Purpose:	Main Event Loop and Dispatcher
mainevnt.c: * Purpose:	Main event loop and dispatcher
maininit.c: * Purpose:	Start of the saoimage package
maininit.c: * Purpose:	Get things started, then call event_loop
maininit.c: * Purpose:	Free server resources before exiting
maininit.c: * Purpose:	Initialize parameters in the records
maininit.c: * Purpose:	Initialize all of the subroutine packages and windows
maininit.c: * Purpose:	Special error handler to force crash on error
maininit.c: * Purpose:	Open connection with chosen or default display server
mainkey.c: * Purpose:	Dispatch responses mapped to various keyboard keys
mainkey.c: *  Purpose:	Direct all key input to the text cursor editor
mainkey.c: *  Purpose:	Set and clear trigger for cursor readback through IRAF pipe
mainkey.c: *  Purpose:	Respond to a key stroke
mainslct.c: * Purpose:	Respond to selections from user interfaces
mainslct.c: *  Purpose:	Dispatcher for selections from the buttonbox or other
mainslct.c: *  Purpose:	Response to selections from the environment button sub-menu
mainutil.c: * Purpose:	Basic utility calls
mainutil.c: * Purpose:	Calloc with printf'less error message and exit for failure
mainutil.c: * Purpose:	Exit with a message
mainutil.c: * Purpose:	compare two values for a significant difference
mainutil.c: * Purpose:	Subroutine to use with XCheckIfEvent to get the latest
mainutil.c: * Purpose:	Subroutine to use with XCheckIfEvent to get the latest
mainutil.c: * Purpose:	Subroutine to use with XCheckIfEvent to get the latest
menuctrl.c: * Purpose:	Manipulate the button panel under software control
menuctrl.c: * Purpose:	Make the button panel respond (as if the given button had been
menuctrl.c: * Purpose:	Set submenu toggle button to agree with current status
menuctrl.c: * Purpose:	Enable and disable anuulus button depending on current cursor
menuctrl.c: * Purpose:	Enable and disable ortho button depending on current cursor
menuctrl.c: * Purpose:	Set buttons to states corresponding to initial defaults
menuinit.c: * Purpose:	Create and resize menu button panels
menuinit.c: * Purpose:	boxcontrol from a remote file
menuinit.c: * Purpose:	Create the main button menu and fit it to its windows
menuinit.c: * Purpose:	Put the menu up on the screen
menuinit.c: * Purpose:	Adjust all buttons in the buttonmenu
mgfyctrl.c: * Purpose:	Initialize params and organize drawing the magnifier window
mgfyctrl.c: * Purpose:	Magnify location of a dispbox event
mgfyctrl.c: * Purpose:	Magnify location of a panbox event
mgfyctrl.c: * Purpose:	Draw image piece in zoombox window, using last coords or
mgfyctrl.c: * Purpose:	Show pointer coordinates and image value in display window
mgfyctrl.c: * Purpose:	Erase area of coords, esp. when imtool_aux is no longer used
mgfyctrl.c: * Purpose:	Show pointer coordinates and image value in display window
mgfyctrl.c: * Purpose:	Draw proportional text to cover area and place decimal point
mgfyctrl.c: * Purpose:	Fill scope with blank data
mgfydraw.c: * Purpose:	Quickly draw the zoomed piece of image in the zoom box
mgfydraw.c: * Purpose:	Draw image in zoombox, quickly (use magset parameters)
mgfyinit.c: * Purpose:	Initialize parameters for drawing the zoomed piece of image
mgfyinit.c: * Purpose:	Init that which gets set only once, and then the rest as well
mgfyinit.c: * Purpose:	Set up initial parameters for magnifier box
mgfyinit.c: * Purpose:	Change the dither matrix used by scope
mgfymark.c: * Purpose:	Quickly put the sighting mark in the magnified image
mgfytabl.c: * Purpose:	print a table of image values on the screen
mgfytabl.c: * Purpose:	Print out the values of memory image given the event
mgfytabl.c: * Purpose:	Determine the buffer coordinates of the pixel identified
mgfytabl.c: * Purpose:	Print a line of column indexes and underline it.
mgfytabl.c: * Purpose:	Print a table of pixel values
mgfytabl.c: * Purpose:	Put pixval table parameters in the x and y arrays
mgfyval.c: * Purpose:	Get file pixel value and make a formatted string to show it
mgfyval.c: *  Purpose:	Return pixel value and code representing best format
mgfyval.c: *  Purpose:	Create an integer string, include clipping mark if appropriate
mgfyval.c: *  Purpose:	Print overflow message in place of value
mgfyval.c: *  Purpose:	Print the real value in best format for character space given
pancopy.c: * Purpose:	Copy data between short integer image buffers in different
pancopy.c: * Purpose:	Copy data from main buffer to pan buffer, zooming UP by
pancopy.c: * Purpose:	Copy data between buffers, zooming down by sub-sampling
pancopy.c: * Purpose:	Copy data between buffers, zoom down by summing or averaging
pancopy.c: * Purpose:	Copy data between buffers, zoom down by taking the max
pancrsr.c: * Purpose:	Handle the pan window cursor
pancrsr.c: * Purpose:	Draw the pan window cursor
pancrsr.c: * Purpose:	Create and draw panbox cursor given image coordinates
pancrsr.c: * Purpose:	Set points in a panbox cursor
panctrl.c: * Purpose:	Respond to inputs which control pan and zoom
panctrl.c: * Purpose:	Respond to mouse commands in pan mode
panctrl.c: * Purpose:	Respond to a menu selection in the pan and zoom menu
panimage.c: * Purpose:	Make and put the pan window display
panimage.c: * Purpose:	Redraw the panbox window display
panimage.c: * Purpose:	Fill the panbox display buffer, mapping from its short buffer
panimage.c: * Purpose:	Print the file coordinates of the display's center and zoom
panimage.c: * Purpose:	Map short image data to display buffer
panimage.c: * Purpose:	Map short integer data to byte display buffer, adjusting
panwndw.c: * Purpose:	Size the pan window to fit the image area and set it up
panwndw.c: * Purpose:	Set size of the panbox to fit exact area of image img specs.
panwndw.c: * Purpose:	Set the panbox coordinate system for the actual window.
panwndw.c: * Purpose:	Create or readjust panbox (coord.img must be set).
platepos.c:  * Purpose:	Compute WCS from Digital Sky Survey plate fit
prntcent.c: * Purpose:	Compute a weighted center around a pixel
prntcurs.c: * Purpose:	Initialize params and organize drawing the magnifier window
readarr.c: * Purpose:	Read in raster line array images
readarr.c: * Purpose:	Read array data from a file
readarr.c: * Purpose:	Read in the array data
readfith.c: * Purpose:	Parse FITS header for specific parameter fields
readfith.c: * Purpose:	Find important FITS parameters in FITS header
readfith.c: * Purpose:	Return the int value in the data field for a given FITS
readfith.c: * Purpose:	Return the float value in the data field for a given FITS
readfith.c: * Purpose:	Terminate the data field at an comment indicator.  The FITS
readfith.c: * Purpose:	Change misguided exponents using D to use E.  This problem
readfits.c: * Purpose:	Read a FITS file header and prepare file for basic array read
readfits.c: * Purpose:	Open fits file, get parameters and get ready to read data.
readfits.c: * Purpose:	Load the FITS header from the disk file into memory.
readfits.c: * Purpose:	Return the data field for a given FITS header keyword
readint.c: * Purpose:	Scale fixed point image data to fit in a short (int*2) buffer
readint.c: * Purpose:	Read an 8-bit array into a 16-bit buffer
readint.c: * Purpose:	Scale 16-bit signed short data into the (short) img array
readint.c: * Purpose:	Scale 16 bit unsigned short data into the (short) img array
readint.c: * Purpose:	Scale 32 bit integer data into the (short) img array
readint.c: * Purpose:	Equivalent of UNIX swab, but guaranteed to work in place
readiraf.c: * Purpose:	Read "old style" IRAF OIF (.imh) files directly
readiraf.c: * Purpose:	Open and read the iraf .imh file and set up the pixfile
readiraf.c: * Purpose:	Open the pixfile
readiraf.c: * Purpose:	verify that file is valid IRAF imhdr by checking first 5 chars
readiraf.c: * Purpose:	Convert ASCII string from SPP char per short to C char per byte
readiraf.c: * Purpose:	Put filename and header path together
readreal.c: * Purpose:	Scale real image data to fit in a short (int*2) buffer
readreal.c: * Purpose:	scale 32 bit real data into the (short) img array
readreal.c: * Purpose:	Scale 64 bit real data into the (short) img array
rgnanli.c: * Purpose:	Create annuli and parse lists of radii
rgnanli.c: * Purpose:	If annuli edge matches previous edge, free redundancy
rgnanli.c: * Purpose:	reposition region to be an annular edge
rgnanli.c: * Purpose:	Get a list of radii from line
rgnanli.c: * Purpose:	Given an n=cnt, install cnt radii in list between last
rgnanli.c: * Purpose:	Determine is line has tokens of form n= or n =
rgnctrl.c: * Purpose:	Respond to region commands from various sources
rgnctrl.c: *  Purpose:	Respond to a mouse activated request for a point region
rgnctrl.c: *  Purpose:	Keyboard control of regions
rgnctrl.c: *  Purpose:	Act on commands from the region button panel
rgnctrl.c: * Purpose:	Cylce cursor through saved regions
rgnctrl.c: *  Purpose:	Reset all save cursor areas
rgndraw.c: * Purpose:	Draw regions and their labels
rgndraw.c: * Purpose:	Draw all saved cursor regions
rgndraw.c: * Purpose:	Draw one saved cursor region and its labels
rgndraw.c: * Purpose:	Label cycle zoombox display
rgndraw.c: * Purpose:	Set up the gc with only as much detail as needed
rgndraw.c: * Purpose:	Draw one saved cursor region outline or point index
rgndraw.c: * Purpose:	Draw one region's label line and text for center and edge
rgndraw.c: * Purpose:	Add include symbol to string
rgndrop.c: * Purpose:	Select and remove a region no longer wanted
rgndrop.c: * Purpose:	Remove and discard region from region list
rgndrop.c: * Purpose:	Identify which region if any is indicated by the pointer
rgndrop.c: * Purpose:	Determine if mouse is within a region
rgndrop.c: * Purpose:	Determine if mouse is within a polygon
rgnmake.c: * Purpose:	Create cursor regions given sets of parameters
rgnmake.c: *  Purpose:	Make and install a region given basic file coord parameters
rgnmake.c: *  Purpose:	Print parsing error message
rgnmake.c: *  Purpose:	Make circular annuli given base region and string of radii
rgnmake.c: *  Purpose:	Parse coordinate pairs off the line
rgnmake.c: *  Purpose:	Parse line and make a polygon region
rgnread.c: * Purpose:	Open and read ASCII region specification files and cursor lists
rgnread.c: * Purpose:	Read cursors into the save cursor records from a file
rgnread.c: *  Purpose:	Determine if line is commented or blank
rgnread.c: *  Purpose:	Read region info in imtool's format
rgnread.c: *  Purpose:	Read region info in PROS format
rgnread.c: *  Purpose:	parse a point's parameters
rgnread.c: *  Purpose:	Look for special label type cursor declaration
rgntoken.c: * Purpose:	Parse tokens from a region descriptor file
rgntoken.c: *  Purpose:	Check nesting of parentheses.  Also, turn all token
rgntoken.c: * Purpose:	Find each region descriptor and its identifying token
rgntoken.c: * Purpose:	Advance the line position beyond the first cnt tokens
rgntoken.c: * Purpose:	Check the name for a unique match with a known region type
rgnwpros.c: * Purpose:	Write regions to a file readable by the IRAF PROS system
rgnwpros.c: * Purpose:	Write ROSAT PROS style region description to file
rgnwpros.c: *  Purpose:	Put simple PROS description of given cursor in line buffer
rgnwpros.c: *  Purpose:	Add appropriate number of cursor shape parameters to
rgnwpros.c: * Purpose:	Add center coordinates to line buffer
rgnwpros.c: * Purpose:	Add list of point coordinates to line buffer (for polygon)
rgnwpros.c: * Purpose:	Add given coordinates in parentheses to line buffer
rgnwpros.c: * Purpose:	Put a PROS style description of circular annuli on the
rgnwpros.c: * Purpose:	Write PROS type description to produce annuli of given shapes
rgnwpros.c: * Purpose:	Add outer shape anded with not of inner shape to make
rgnwrite.c: * Purpose:	Write descriptions of saved regions to a file
rgnwrite.c: * Purpose:	Write region info to a file
rgnwrite.c: * Purpose:	Write region info in imtool's format (iraf "list")
rgnwrite.c: * Purpose:	Write date and filename (if known) to region file
rgnwrite.c: * Purpose:	Print the time in the passed string
rtio.c: * Purpose:	Read commands from a Berkeley Socket
rtio.c: * Purpose:	open the connection for Sockets
rtio.c: * Purpose:	open the connection for FiFo
rtio.c: * Purpose:	read and decode a socket protical packet
sclctrl.c: * Purpose:	Construct the image-to-display map
sclctrl.c: * Purpose:	Respond to input from the scale menu (mostly rescaling)
sclctrl.c: * Purpose:	Scalemap calculation for a new image
sclctrl.c: * Purpose:	Do all coordinate stuff surrounding histogram calculation
sclctrl.c: * Purpose:	Fill in a data histogram for specified buffer subsection
sclctrl.c: * Purpose:	Find the min and max non-zero entries in the histogram
sclctrl.c: * Purpose:	Find the min and max non-zero entries in the histogram
sclmap.c: * Purpose:	Map image values to display screen values using various
sclmap.c: * Purpose:	Make scale map according to type selected
sclmap.c: * Purpose:	Distribute color levels in the map evenly
sclmap.c: * Purpose:	Create the image map with a repeating linear scale
sclmap.c: * Purpose:	Distribute color levels in the map by a root or power function.
sclmap.c: * Purpose:	Distribute color levels in the map by a logorithmic or
sclmap.c: * Purpose:	Find a range from the peak of the pixel value distribution
wcs.c: * Purpose:	Convert FITS WCS to pixels and vice versa
wcscon.c: * Purpose:	Convert between various sky coordinate systems
wndwadj.c: * Purpose:	Adjust displays when the main desktop window is adjusted.
wndwadj.c: * Purpose:	respond to a resizing of the color graph window
wndwconf.c: * Purpose:	Determine size of desktop and mode of presentation to
wndwconf.c: * Purpose:	Select the SAOimage window area.
wndwconf.c: * Purpose:	Set the x, y, width, and height, of all windows
wndwconf.c: * Purpose:	Set the graphbox to appear undereath colorbar
wndwconf.c: * Purpose:	Parse a user given geometry string
wndwconf.c: * Purpose:	Set up the desktop window's size_hints as per any parsed
wndwcre.c: * Purpose:	Create a window with proper X11 protocol
wndwcre.c: * Purpose:	Send window request to X server or window manager
wndwcre.c: * Purpose:	Function callable by XIfEvent from within xlib to check if
wndwcre.c: * Purpose:	Get window dimensions after window is first mapped
wndwinit.c: * Purpose:	Create (and raise) the various windows used by ximage.
wndwinit.c: * Purpose:	Send request for desktop area to screen's window manager
wndwinit.c: * Purpose:	Create the actual windows used by SAOimage.
wndwinit.c: * Purpose:	Create the graphbox window (when needed, i.e. well after init)
wndwinit.c: * Purpose:	Redraw the specified window.
wndwinit.c: * Purpose:	Raise the window should they have been obscured
wndwinit.c: * Purpose:	Set the runtime environment parameters
wndwmaus.c: * Purpose:	Set the mouse pointer icon for each window and mode
wndwmaus.c: * Purpose:	Set up the various mouse pointer icons for all windows
wndwmaus.c: * Purpose:	Make Xlib calls to actually produce a mouse cursor
wndwmaus.c: * Purpose:	set the reference position for placing the cursor in next
wndwmaus.c: * Purpose:	set special displaybox cursor to indicate cursor readback
wndwmaus.c: * Purpose:	Install dispbox mouse cursor appropriate for the  mode
worldpos.c: * Purpose:	Perform forward and reverse WCS computations for 8 projections
