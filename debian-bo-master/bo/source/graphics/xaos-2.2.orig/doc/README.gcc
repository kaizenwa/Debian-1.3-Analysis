This code seems to be real gcc killer. Almost every gcc version does have troubles
with compiling XaoS. So this small documents explains some tricks how to avoid problems.
It also contains optimal switches.

In case some updates to this document will be required latest version will be placed
to XaoS homepage.

BTW:other optimizing compilers and borland usually crash immediately..so XaoS seems
    to be nice test for compilers

2.7.2	(386-linux)
	this gcc compiles w/o problems(-m486 -O6 -ffast-math -fomit-frame-pointer -funroll-loops -fforce-mem -fforce-addr)
2.7.2p	(386-linux)
	this gcc had some difficulties with compiling curses driver,zoom code and mktable.
	All this problems were fixed by cleaning sources so now compiles will. Only -frisc
	crashes.(compiles but XaoS does not start)

	Note that this patches does not helps a much acording to my tests.
	-mpentium -O6 -ffast-math -fomit-frame-pointer -funroll-loops -fforce-mem -fforce-addr)
2.7.2.1	(djgpp)
	this gcc had troubles with inlining. I hope that all problematic inlines are
	disabled now. So it seems to work well(without signal 11). You may uncoment
	inlines in zoom.c to invoke this crash again
	(-m486 -O6 -ffast-math -fomit-frame-pointer -funroll-loops -fforce-mem -fforce-addr)
Other version
	I have no any possibility to test other gcc versions. So in case you have problems
	try following procedure:
	o disable optimizations at all. In case this does not help let me know
	o try normal optimizations but with -fno-strength-reduce and -fno-unroll-loops. 
	  In case this help try if just one of this switches should be disabled and let me 
	  know I will add this to document.
	o try -fno-inline -fno-strength-reduce and -fno-unrool-loops. In case this helps
	  please try to discover witch inline makes crash(you may use -Q option)
	  and let me know
	o try -Q to discover where compiler crashes and let me know.
