<html>
<body text="#000000" bgcolor="#C0C0C0" background="backgrnd.gif">
<a name="ref 1477 pri 0"><a name="ref 1478 pri 0"><center><h3><a name="section 7.6.8.8.2">
Section 7.6.8.8.2<br>Repeat Warp</h3></center>
The <a name="ref 830 pri 0"><strong>repeat</strong> warp causes a section of the pattern to be repeated over and over. It takes a slice out of the pattern and makes multiple copies of it side-by-side. The warp has many uses but was originally designed to make it easy to model wood veneer textures. Veneer is made by taking very thin slices from a log and placing them side-by-side on some other backing material. You see side-by-side nearly identical ring patterns but each will be a slice perhaps 1/32th of an inch deeper.<p>
The syntax for a repeat warp is<p>
<listing>
  warp { repeat VECTOR  offset VECTOR  flip VECTOR }
</listing>
<p>
The repeat vector specifies the direction in which the pattern repeats and the width of the repeated area. This vector must lie entirely along an axis. In other words, two of its three components must be 0. For example<p>
<listing>
  pigment {
    wood
    warp {repeat 2*x}
  }
</listing>
<p>
which means that from x=0 to x=2 you get whatever the pattern usually is. But from x=2 to x=4 you get the same thing exactly shifted two units over in the x-direction. To evaluate it you simply take the x-coordinate modulo 2. Unfortunately you get exact duplicates which isn't very realistic. The optional <a name="ref 948 pri 0"><strong>offset</strong> vector tells how much to translate the pattern each time it repeats. For example<p>
<listing>
  pigment {
    wood
    warp {repeat x*2  offset z*0.05}
  }
</listing>
<p>
means that we slice the first copy from x=0 to x=2 at z=0 but at x=2 to x=4 we offset to z=0.05. In the 4 to 6 interval we slice at z=0.10. At the n-th copy we slice at 0.05 n z. Thus each copy is slightly different. There are no restrictions on the offset vector.<p>
Finally the <a name="ref 1033 pri 0"><strong>flip</strong> vector causes the pattern to be flipped or mirrored every other copy of the pattern. The first copy of the pattern in the positive direction from the axis is not flipped. The next farther is, the next is not, etc. The flip vector is a three component x, y, z vector but each component is treated as a boolean value that tells if you should or should not flip along a given axis. For example<p>
<listing>
  pigment {
    wood
    warp {repeat 2*x  flip &lt;1,1,0&gt;}
  }
</listing>
<p>
means that every other copy of the pattern will be mirrored about the x- and y- axis but not the z-axis. A non-zero value means flip and zero means do not flip about that axis. The magnitude of the values in the flip vector doesn't matter.<hr>
<a name="ref 1479 pri 0"><a name="ref 1480 pri 0"><center><h3><a name="section 7.6.8.8.3">
Section 7.6.8.8.3<br>Turbulence Warp</h3></center>
The POV-Ray language contains an ambiguity and limitation on the way you specify turbulence and transformations such as translate, rotate, scale and matrix transforms. Usually the turbulence is done first. Then all translate, rotate, scale and matrix operations are always done after turbulence regardless of the order in which you specify them. For example this<p>
<listing>
 pigment {
   wood
   scale .5
   turbulence .2
 }
</listing>
<p>
works exactly the same as<p>
<listing>
 pigment {
   wood
   turbulence .2
   scale .5
 }
</listing>
<p>
The turbulence is always first. A better example of this limitation is with uneven turbulence and rotations.<p>
<listing>
  pigment {
    wood
    turbulence 0.5*y
    rotate z*60
  }

  // as compared to

  pigment {
   wood
   rotate z*60
   turbulence 0.5*y
  }
</listing>
<p>
The results will be the same either way even though you'd think it should look different.<p>
We cannot change this basic behavior in POV-Ray now because lots of scenes would potentially render differently if suddenly the order transformation vs turbulence suddenly mattered when in the past, it didn't.<p>
However, by specifying our turbulence inside warp statement you tell POV-Ray that the order in which turbulence, transformations and other warps are applied is significant. Here's an example of a turbulence warp.<p>
<listing>
  warp { turbulence &lt;0,1,1&gt; octaves 3 lambda 1.5 omega 0.3 }
</listing>
<p>
The significance is that this<p>
<listing>
 pigment {
   wood
   translate &lt;1,2,3&gt; rotate x*45 scale 2
   warp { turbulence &lt;0,1,1&gt; octaves 3 lambda 1.5 omega 0.3 }
 }
</listing>
<p>
produces <b>different results</b> than this...<p>
<listing>
 pigment {
   wood
   warp { turbulence &lt;0,1,1&gt; octaves 3 lambda 1.5 omega 0.3 }
   translate &lt;1,2,3&gt; rotate x*45 scale 2
 }
</listing>
<p>
You may specify turbulence without using a warp statement. However you cannot control the order in which they are evaluated unless you put them in a warp.<p>
The evaluation rules are as follows:<p>
<center><table border><tr><td valign=top>1)</td><td valign=top>First any turbulence not inside a warp statement is applied regardless of the order in which it appears relative to warps or transformations.</td></tr>
<tr><td valign=top>2)</td><td valign=top>Next each warp statement, translate, rotate, scale or matrix one-by-one, is applied in the order the user specifies. If you want turbulence done in a specific order, you simply specify it inside a warp in the proper place.</td></tr>

</td></tr></table></center>
<hr>
<a name="ref 1481 pri 0"><a name="ref 1315 pri 0"><center><h3><a name="section 7.6.8.9">
Section 7.6.8.9<br>Bitmap Modifiers</h3></center>
A bitmap modifier is a modifier used inside an <a name="ref 852 pri 8"><strong>image_map</strong>, <a name="ref 900 pri 18"><strong>bump_map</strong> or <a name="ref 901 pri 24"><strong>material_map</strong> to specify how the 2-D bitmap is to be applied to the 3-D surface. Several bitmap modifiers apply to specific kinds of maps and they are covered in the appropriate sections. The bitmap modifiers discussed in the following sections are applicable to all three types of bitmaps.<hr>
<a name="ref 1482 pri 0"><a name="ref 1483 pri 0"><center><h3><a name="section 7.6.8.9.1">
Section 7.6.8.9.1<br>The once Option</h3></center>
Normally there are an infinite number of repeating image maps, bump maps or material maps created over every unit square of the x-y-plane like tiles. By adding the <a name="ref 956 pri 0"><strong>once</strong> keyword after a file name you can eliminate all other copies of the map except the one at (0,0) to (1,1). In image maps, areas outside this unit square are treated as fully transparent. In bump maps, areas outside this unit square are left flat with no normal modification. In material maps, areas outside this unit square are textured with the first texture of the texture list.<p>
For example:<p>
<listing>
  image_map {
    gif &quot;mypic.gif&quot;
    once
  }
</listing>
<hr>
<a name="ref 1484 pri 0"><a name="ref 1485 pri 0"><center><h3><a name="section 7.6.8.9.2">
Section 7.6.8.9.2<br>The "map_type" Option</h3></center>
The default projection of the bump onto the x-y-plane is called a <strong>planar map type</strong>. This option may be changed by adding the <a name="ref 896 pri 0"><strong>map_type</strong> keyword followed by a number specifying the way to wrap the bump around the object.<p>
A <strong>map_type 0</strong> gives the default planar mapping already described.<p>
A <strong>map_type 1</strong> gives a spherical mapping. It assumes that the object is a sphere of any size sitting at the origin. The y-axis is the north/south pole of the spherical mapping. The top and bottom edges of the bitmap just touch the pole regardless of any scaling. The left edge of the bitmap begins at the positive x-axis and wraps the pattern around the sphere from <strong>west</strong> to <strong>east</strong> in a -y-rotation. The pattern covers the sphere exactly once. The <a name="ref 956 pri 3"><strong>once</strong> keyword has no meaning for this type.<p>
With <strong>map_type 2</strong> you get a cylindrical mapping. It assumes that a cylinder of any diameter lies along the y-axis. The bump pattern wraps around the cylinder just like the spherical map but remains one unit tall from y=0 to y=1. This band of the pattern is repeated at all heights unless the <a name="ref 956 pri 7"><strong>once</strong> keyword is applied.<p>
Finally <strong>map_type 5</strong> is a torus or donut shaped mapping. It assumes that a torus of major radius 1 sits at the origin in the x-z-plane. The pattern is wrapped around similar to spherical or cylindrical maps. However the top and bottom edges of the map wrap over and under the torus where they meet each other on the inner rim.<p>
Types 3 and 4 are still under development.<p>
For example:<p>
<listing>
  sphere{&lt;0,0,0&gt;,1
    pigment{
      image_map {
        gif &quot;world.gif&quot;
        map_type 1
      }
    }
  }
</listing>
<hr>
<a name="ref 1486 pri 0"><a name="ref 1487 pri 0"><center><h3><a name="section 7.6.8.9.3">
Section 7.6.8.9.3<br>The interpolate Option</h3></center>
Adding the <a name="ref 861 pri 0"><strong>interpolate</strong> keyword can smooth the jagged look of a bitmap. When POV-Ray asks an image map color or a bump amount for a bump map, it often asks for a point that is not directly on top of one pixel but sort of between several differently colored pixels. Interpolations returns an <strong>in-between</strong> value so that the steps between the pixels in the map will look smoother.<p>
Although <a name="ref 861 pri 1"><strong>interpolate</strong> is legal in material maps the color index is interpolated before the texture is chosen. It does not interpolate the final color as you might hope it would. In general, interpolation of material maps serves no useful purpose but this may be fixed in future versions.<p>
There are currently two types of interpolation:<p>
<pre>
  Bilinear            --- interpolate 2
  Normalized Distance --- interpolate 4
</pre>
<p>
For example:<p>
<listing>
  image_map {
    gif &quot;mypic.gif&quot;
    interpolate 2
  }
</listing>
<p>
Default is no interpolation. Normalized distance is the slightly faster of the two, bilinear does a better job of picking the between color. Normally bilinear is used.<p>
If your map looks jaggy, try using interpolation instead of going to a higher resolution image. The results can be very good.<hr>
<a name="ref 1488 pri 0"><a name="ref 814 pri 0"><center><h3><a name="section 7.7">
Section 7.7<br>Atmospheric Effects</h3></center>
Atmospheric effects are a loosely-knit group of features that affect the background and/or the atmosphere enclosing the scene. POV-Ray includes the ability to render a number of atmospheric effects, such as fog, haze, mist, rainbows and skies.<hr>
<a name="ref 1489 pri 0"><a name="ref 268 pri 0"><center><h3><a name="section 7.7.1">
Section 7.7.1<br>Atmosphere</h3></center>
<b>Important notice</b>: The atmosphere feature in POV-Ray 3.0 are somewhat experimental. There is a high probability that the design and implementation of these features will be changed in future versions. We cannot guarantee that scenes using these features in 3.0 will render identically in future releases or that full backwards compatibility of language syntax can be maintained.<p>
Computer generated images normally assume a vacuum space that does not allow the rendering of natural phenomena like smoke, light beams, etc. A very simple approach to add fog to a scene is explained in section <a href="pov3002d.htm#ref 504 pri 2">&quot;Fog&quot;</a>. This kind of fog does not interact with any light sources though. It will not show light beams or other effects and is therefore not very realistic.<p>
The atmosphere effect overcomes some of the fog's limitations by calculating the interaction between light and the particles in the atmosphere using volume sampling. Thus shaft of light beams will become visible and objects will cast shadows <strong>onto</strong> smoke or fog.<p>
The syntax of the atmosphere is:<p>
<listing>
  atmosphere {
    type TYPE
    distance DISTANCE
    [ scattering SCATTERING ]
    [ eccentricity ECCENTRICITY ]
    [ samples SAMPLES ]
    [ jitter JITTER ]
    [ aa_threshold AA_THRESHOLD ]
    [ aa_level AA_LEVEL ]
    [ colour &lt;COLOUR&gt; ]
  }
</listing>
<p>
<a name="ref 531 pri 4">The <a name="ref 531 pri 9"><strong>type</strong> keyword determines the type of scattering model to be used. There are five different phase functions representing the different models: isotropic, Rayleigh, Mie (haze and murky atmosphere) and Henyey-Greenstein.<p>
<strong>Isotropic scattering</strong> is the simplest form of scattering because it is independent of direction. The amount of light scattered by particles in the atmosphere does not depend on the angle between the viewing direction and the incoming light.<p>
<strong>Rayleigh scattering</strong> models the scattering for extremely small particles such as molecules of the air. The amount of scattered light depends on the incident light angle. It is largest when the incident light is parallel or anti-parallel to the viewing direction and smallest when the incident light is perpendicular to the viewing direction. You should note that the Rayleigh model used in POV-Ray does not take the dependency of scattering on the wavelength into account.<p>
<center><img src="pov3005b.gif" border=0 width=320 height=240><br><cite>The Rayleigh scattering function.</cite></center><br> <p>
<strong>Mie scattering</strong> is used for relatively small particles such as minuscule water droplets of fog, cloud particles, and particles responsible for the polluted sky. In this model the scattering is extremely directional in the forward direction i. e. the amount of scattered light is largest when the incident light is anti-parallel to the viewing direction (the light goes directly to the viewer). It is smallest when the incident light is parallel to the viewing direction. The haze and murky atmosphere models differ in their scattering characteristics. The murky model is much more directional than the haze model.<p>
<center><img src="pov3005c.gif" border=0 width=320 height=240><br><cite>The Mie &quot;haze&quot; scattering function.</cite></center><br> <p>
<center><img src="pov3005d.gif" border=0 width=320 height=240><br><cite>The Mie &quot;murky&quot; scattering function.</cite></center><br> <p>
<a name="ref 994 pri 11">The <strong>Henyey-Greenstein scattering</strong> is based on an analytical function and can be used to model a large variety of different scattering types. The function models an ellipse with a given eccentricity e. This eccentricity is specified by the optional keyword <a name="ref 994 pri 14"><strong>eccentricity</strong> which is only used for scattering type five. An eccentricity value of zero defines isotropic scattering while positive values lead to scattering in the direction of the light and negative values lead to scattering in the opposite direction of the light. Larger values of e (or smaller values in the negative case) increase the directional property of the scattering.<p>
<center><img src="pov3005e.gif" border=0 width=320 height=240><br><cite>The Heyney-Greenstein scattering function for different eccentricity values.</cite></center><br> <p>
The easiest way to use the different scattering types will be to declare some constants and use those in your atmosphere definition:<p>
<listing>
  #declare ISOTROPIC_SCATTERING         = 1
  #declare MIE_HAZY_SCATTERING          = 2
  #declare MIE_MURKY_SCATTERING         = 3
  #declare RAYLEIGH_SCATTERING          = 4
  #declare HENYEY_GREENSTEIN_SCATTERING = 5
</listing>
<p>
<a name="ref 269 pri 18">The <a name="ref 269 pri 23"><strong>distance</strong> keyword is used to determine the density of the particles in the atmosphere. This density is constant for the whole atmosphere. The distance parameter works in the same way as the fog distance.<p>
<a name="ref 532 pri 24">With the <a name="ref 532 pri 26"><strong>scattering</strong> keyword you can change the amount of light that is scattered by the atmosphere, thus increasing or decreasing the brightness of the atmosphere. Smaller scattering values decrease the brightness while larger values increase it.<p>
<a name="ref 926 pri 28">The <a name="ref 926 pri 31"><strong>colour</strong> or <a name="ref 113 pri 40"><strong>color</strong> keyword can be used to create a colored atmosphere, i. e. it can be used to get particles that filter the light passing through. The default color is black.<p>
The light passing through the atmosphere (either coming from light sources or the background) is filtered by the atmosphere's color if the specified color has a non-zero filter value. In other words, the amount by which the light is filtered by the atmosphere's color is given by the filter value (pretty much in the same way as it is done for the fog). Using a color of <strong>rgbf &lt;1,0,0,0.25&gt;</strong> will result in a slightly reddish atmosphere because 25% of the light passing through the atmosphere is filtered by (multiplied with) the color of the atmosphere, i. e. rgb &lt;1,0,0&gt; (and that's red).<p>
The transmittance channel of the atmosphere's color is used to specify a minimum translucency. If a value larger than zero is used you'll always see that amount of the background through the atmosphere, regardless of how dense the atmosphere is. This works in the same way as it does for fogs.<p>
Since the atmosphere is calculated by sampling along the viewing ray and looking for contributions from light sources, it is prone to aliasing (just like any sampling technique). There are four parameters to minimize the artifacts that may be visible: <a name="ref 392 pri 45"><strong>samples</strong>, <a name="ref 251 pri 54"><strong>jitter</strong>, <a name="ref 440 pri 59"><strong>aa_level</strong> and <a name="ref 439 pri 64"><strong>aa_threshold</strong>.<p>
<a name="ref 392 pri 70">The <a name="ref 392 pri 77"><strong>samples</strong> keyword determines how many samples are calculated in one interval along the viewing ray. The length of the interval is either the distance as given by the distance keyword or the length of the <strong>lit</strong> part of the viewing ray, whichever is smaller. This lit part is a section of the ray that is <strong>most likely</strong> lit by a light source. In the case of a spotlight it is the part of the ray that lies in the cone of light. In other cases it becomes more difficult. The only thing you should keep in mind is that the actual sampling interval length is variable but there will never be fewer than the specified samples in the specified distance.<p>
<a name="ref 251 pri 87">One technique to reduce the visibility of sampling artifacts is to jitter the sample points, i. e. to add random noise to their location. This can be done with the <a name="ref 251 pri 98"><strong>jitter</strong> keyword.<p>
Another technique is super-sampling (an anti-aliasing method). This helps to avoid missing features by adding additional samples in places were high intensity changes occur (e. g. the edge of a shadow). The anti-aliasing is turned on by the <a name="ref 440 pri 104"><strong>aa_level</strong> keyword. If this is larger than zero super-sampling will be used. The additional samples will be recursively placed between two samples with a high intensity change. The level to which subdivision takes places is specified by the <a name="ref 440 pri 111"><strong>aa_level</strong> keyword. Level one means one subdivision (one additional sample), level two means two subdivisions (up to three additional samples), etc.<p>
The threshold for the intensity change is given by the <a name="ref 439 pri 117"><strong>aa_threshold</strong> keyword. If the intensity change is greater than this threshold anti-aliasing will be used for those two samples.<p>
With spotlights you'll be able to create the best results because their cone of light will become visible. Pointlights can be used to create effects like street lights in fog. Lights can be made to not interact with the atmosphere by adding <strong>atmosphere off</strong> to the light source. They can be used to increase the overall light level off the scene to make it look more realistic.<p>
You should note that the atmosphere feature will not work if the camera is inside a non-hollow object (see section <a href="pov3001f.htm#ref 374 pri 0">&quot;Empty and Solid Objects&quot;</a> for a detailed explanation).<hr>

<center>
<a href="pov3002d.htm">Next Section</a><br>
<a href="povray.htm#Table of Contents">Table Of Contents</a><br>
</center>
</body>
</html>
