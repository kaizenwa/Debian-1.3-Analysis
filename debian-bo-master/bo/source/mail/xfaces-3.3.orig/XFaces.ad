!
! $Id: XFaces.ad,v 1.23 1994/03/08 03:23:33 liebman Exp $
!
!    Application level resources for xfaces.
!

!
! Pop mailbox support.  You need to have a .popauth file in your home dir.
! it should contain one line as:
!		<username> <password>
!
! Its not very secure but the pop servers that I have access to don't support
! any other authentation.
!
! XFaces.popHost:	hostname.for.pop.mailbox

! Search spec:
!	<search type> <format list> <search path>
!
! Search type:
!	beforeImage
!	afterImage
!	beforeSound
!	afterSound
!	beforeCommand
!	afterCommand
!	resource
!	x-face
!	facedb
!
! format list:
!	<format>:<format>:<format>
!
! Formats:
!	xpm-shape
!	xpm
!	xbm-shape
!	xbm
!
! If search path is empty then use imagePath/soundPath resource as path.
! If format list is empty then the imageFormats resource is used.
! The format list is ignored currently for sound (must still be supplied
! if you want to specify paths).
!
! Here are the defaults.
!
!XFaces.imageTypes:	xpm-shape:xpm:xbm-shape:xbm
!
!XFaces.imageSearch:	\
!		beforeImage\n\
!		resource\n\
!		facedb\n\
!		x-face\n\
!		afterImage
!
!XFaces.soundSearch:	\
!		beforeSound\n\
!		resource\n\
!		facedb\n\
!		afterSound
!
!XFaces.commandSearch:	\
!		beforeCommand\n\
!		resource\n\
!		afterCommand
!

!
! This is where we look for sounds or images if the file name does not
! begin with a '/' or a './' or a '../'. It they are ':' seperated path
! lists.
!

XFaces.soundPath:	/usr/sounds:/usr/demo/SOUND/sounds
XFaces.imagePath:	/usr/images

!
!  This is where we look for sounds/images in the "faces" format.
!  The address liebman@zod.clark.net will look for the following
!  files:
!
!	[facedbPath]/net/clark/zod/liebman
!	[facedbPath]/net/clark/zod/liebman/face
!	[facedbPath]/net/clark/liebman
!	[facedbPath]/net/clark/liebman/face
!	[facedbPath]/net/liebman
!	[facedbPath]/net/liebman/face
!	[facedbPath]/MISC/liebman
!	[facedbPath]/MISC/liebman/face
!	[facedbPath]/net/clark/zod/unknown
!	[facedbPath]/net/clark/zod/unknown/face
!	[facedbPath]/net/clark/unknown
!	[facedbPath]/net/clark/unknown/face
!	[facedbPath]/net/unknown
!	[facedbPath]/net/unknown/face
!	[facedbPath]/MISC/unknown
!	[facedbPath]/MISC/unknown/face
!
! Note that various extensions are attempted for each file depending on what
! image types are set in the imageTypes resource.
!

XFaces.facedbPath:	/usr/faces

!
!  Tell how many different annotations there are. We can support any number.
!

XFaces.annotationCount:		2
XFaces.unknownAnnotationCount:	2

!
! Annotation defaults.
!

XFaces.Annotation.font:		-*-helvetica-*-r-*--10-*

!
! Describe the annotations. A negative 'x' means pixels from the right edge
! of the face and a negitive 'y' is pixels up from the bottom.
!

XFaces.annotation1.x:		2
XFaces.annotation1.y:		-2
XFaces.unknownAnnotation1.x:	2
XFaces.unknownAnnotation1.y:	-2
!XFaces.annotation1.foreground:	blue
!XFaces.annotation1.background:	white
!XFaces.annotation1.font:	-*-helvetica-*-r-*--10-*

XFaces.annotation2.x:		-2
XFaces.annotation2.y:		-2
XFaces.unknownAnnotation2.x:	-2
XFaces.unknownAnnotation2.y:	-2
!XFaces.annotation2.foreground:	red
!XFaces.annotation2.background:	white
!XFaces.annotation2.font:	-*-helvetica-*-r-*--10-*

!
! Here we specify what goes in each of the annotations for mail messages.
! Valid values are:
!	user		- The user part of the From address.
!	host		- The host part of the From address.
!	user@host	- The user and host parts of the From address.
!	count		- The number of messages represented by this face.
!	*header		- any value beginning with a '*' is expected to
!			  be a header name and the contents of that header
!			  will be displayed. For instance "*subject:" will
!			  display the subject line.

XFaces.mail.annotation1:	user
XFaces.mail.annotation2:	count
XFaces.mail.unknownAnnotation1:	user
XFaces.mail.unknownAnnotation2:	count

!
!
!  Try this in your .Xdefaults as an alternative annotation scheme.
! This will display the subject line across the bottom of faces and the
! count in the upper left corner.  If the face is an "unknown" face then
! the username will appear above the subject.
!
!XFaces.annotationCount:		2
!XFaces.annotation1.x:			1
!XFaces.annotation1.y:			-1
!XFaces.annotation1.maxWidth:		62
!XFaces.annotation2.x:			1
!XFaces.annotation2.y:			1
!XFaces.mail.annotation1:		*subject:
!XFaces.mail.annotation2:		count
!XFaces.unknownAnnotationCount:		3
!XFaces.unknownAnnotation1.x:		1
!XFaces.unknownAnnotation1.y:		-1
!XFaces.unknownAnnotation1.maxWidth:	62
!XFaces.unknownAnnotation2.x:		1
!XFaces.unknownAnnotation2.y:		1
!XFaces.unknownAnnotation3.x:		1
!XFaces.unknownAnnotation3.y:		-12
!XFaces.unknownAnnotation3.maxWidth:	62
!XFaces.mail.unknownAnnotation1:	*subject:
!XFaces.mail.unknownAnnotation2:	count
!XFaces.mail.unknownAnnotation3:	user

!
!  Conversion for GIF images.
!

XFaces.xpm.filterCount:		1
XFaces.xpmFilter.name:		gif
XFaces.xpmFilter.filter:	giftopnm %s | ppmtoxpm
XFaces.xpmFilter.extension:	.gif

!
! This is the image/sound that will be displayed/played
! when there us no mail.
!

XFaces.noMailImage:			nomail
XFaces.noMailSound:			NoMail

!
! this is the volume sounds will be played with.
!

XFaces.volume:				50

!
! I like to use the RFC822 From: header for the From address.
!

XFaces.fromField:	From:

!
! This will tell xfaces not to compress images. There will be one image for
! each mail/list item.  The default is True.
!
! XFaces.compressImages:	False
!

!
! Use the specified command rather than the builtin mail check.  The
! command is expected to return as the first line:
! "<user> <host>"
! and is ignored. The second line is:
! "Rows=nnn Cols=nnn" 
! and specifies the size in images for the display.
! All following lines look like:
! "<user><tab><host><tab><label1><tab><label2><tab><label3><tab><label4>"
! only the first two fields are required.
!
! See scripts.tar.Z on cs.indiana.edu in the /pub/faces/scripts directory 
! for a collection of scripts (from Steve Kinzler kinzler@cs.indiana.edu) 
! that can be used here. (If you want to use the (realy cool) weather forcast
! script you will want to grab weather.tar.Z also as it contains the images
! for the forcasts.

!XFaces.listCommand:	wx.faces

!
! The folowing are what I use for the fx.faces script. Note you can use
! command line options to do this too:
! 
! xfaces -name weather
!

weather.listCommand:	wx.faces wbc
weather.facedbPath:	/usr/faces/weather
weather.compressImages:	False
weather.keepOrder:	True
weather.shapeExtra:	False
weather.update:		900

!
!    Top level shell resources.
!

XFaces.allowShellResize:		True

!
!    Frame resources.
!

XFaces.frame.tileWidth:		64
XFaces.frame.tileHeight:	64

XFaces.frame.horizSpacing:	4
XFaces.frame.vertSpacing:	4
XFaces.frame.internalWidth:	2
XFaces.frame.internalHeight:	2
XFaces.frame.borderWidth:	0

!XFaces.frame.setWidth:		4
!XFaces.frame.setHeight:	2
!XFaces.frame.minWidth:		2
XFaces.frame.maxWidth:		4
!XFaces.frame.minHeight:	2
!XFaces.frame.maxHeight:	4

!
!    General resources for face icons.
!
! All of my faces are 64x64 (you can use other sizes!).  Note that if you
! have images that are of more than one size you should set the above
! tileWidth and tileHeight to the *largest* size or your images may be chopped.
! The Tiled widget only attempts to deal with identicly sized children. Images
! smaller than the "tile" size are centered by the Label widget but those
! larger will be chopped off.
!

XFaces.frame.Label.width:		64
XFaces.frame.Label.height:		64
XFaces.frame.Label.internalWidth:	0
XFaces.frame.Label.internalHeight:	0
XFaces.frame.Label.borderWidth:		2

!
!  Button1 will cause all sounds for the given face to be played.
!  Button2 will check for new mail.
!  Button3 will re-run commands.
!

XFaces.frame.Label.translations:	<Btn1Down>:PlaySounds()\n\
					<Btn2Down>:CheckMail()\n\
					<Btn3Down>:RunCommands()
XFaces.frame.translations:		<Btn2Down>:CheckMail()


!
!  This will cause any message that has already been read but left in the
! system mailbox to be ignored. This works with SunOS4.  It should work 
! other places as well.
!

XFaces.ignoreMessageBindings:	\
	Status:	[OU]

!
! I use the before image bindings to catch mailing lists.
!
!  By not placeing the extension on the image name allows things to fall
! back to non-shaped and monochrome (if available) when needed.
!

XFaces.beforeImageBindings:	\
	To:	info-andrew:		andrew		Andrew\n\
	Cc:	info-andrew:		andrew		Andrew\n\
	To:	xannounce@x.org:	x		XAnnounce\n\
	Cc:	xannounce@x.org:	x		XAnnounce\n\
	Cc:	framer:			window		Framers\n\
	From:	framer:			window		Framers\n\
	To:	framer:			window		Framers\n\
	To:	owner-sunflash:		sunflash	SunFlash\n\
	Cc:	owner-sunflash:		sunflash	SunFlash\n\
	From:	owner-sunflash:		sunflash	SunFlash

!
! Could setup special sounds for mailing lists.
!

!XFaces.beforeSoundBindings:	\
!	Cc:	foo:		train

!
! Could use this to show a special face for users that we have no face for.
!

!XFaces.afterImageBindings:	\
!	*	.*:		unknown

!
! Could setup default sounds if no sound is specified.
!

!XFaces.afterSoundBindings:	\
!	*	.*:			train

!
! This set of bindings is run after the all of the image search has 
! completed.  If it finds a match then the value will be used as the 
! widget name for the widget.  If no image was found then the value will
! also be displayed as a string for the image.
!

!XFaces.labelBindings:	\
!	*	.*:	Huh?

!
!  For bounced mail.
!

XFaces.image.mailer-daemon:	mailer-daemon
XFaces.sound.mailer-daemon:	bong

!
!  For mail from uucp.
!

XFaces.image.uucp:		uucp
XFaces.sound.uucp:		computer

!
!  Mail from root.
!

XFaces.image.root:		root
XFaces.sound.root:		busy

