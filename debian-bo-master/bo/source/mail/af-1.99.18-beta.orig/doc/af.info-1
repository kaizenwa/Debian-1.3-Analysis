This is Info file af.info, produced by Makeinfo version 1.67 from the
input file af.texi.

START-INFO-DIR-ENTRY
* Af: (af).                     An advanced mail reader and composer.
END-INFO-DIR-ENTRY

   This file documents Af, an advanced mail reader and composer with a
user interface similar to that of GNU Emacs.

   Copyright (C) 1996 Malc Arnold, Kay Dekker.  Derived in parts from
the GNU Emacs Manual, Eleventh Edition, Copyright (C) 1985, 1986, 1987,
1993, 1994, 1995 Free Software Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the sections entitled "Distribution" and "GNU General Public
License" are included exactly as in the original, and provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the section entitled "Distribution" may be
included in a translation approved by the author instead of in the
original English, and the section entitled "GNU General Public License"
may be included in a translation approved by the Free Software
Foundation instead of in the original English.


File: af.info,  Node: Top,  Next: Distribution,  Prev: (dir),  Up: (dir)

The Af Mail Reader
******************

   Af is an extensible, customisable, self-documenting real-time mail
reader and composer.  This Info file describes how to read and send mail
with af, and how to customise it.  It corresponds to Af version 1.99
Beta.

* Menu:

* Distribution::        How to get the latest copy of af.
* Copying::		Restrictions on af's distribution and warranty.
* Introduction::        An introduction to af.
* Acknowledgements::	People who have contributed to af.
* Bugs::		How and when to report a bug.
* Future::              What may be coming in the future.

Important Concepts
* E-Mail::		An introduction to electronic mail.
* Screen::		How to interpret what you see on the screen.
* User Input::          The types of input that af handles.
* Keys::		Introduction to keys and key sequences.
* Commands::		Keys run commands which are bound to them.
* Major Modes::         Af has several modes of operation.
* Minor Modes::         Features which can be turned on and off.
* Entering Af::		Starting af from the shell.
* Exiting::		Stopping or killing af.

Fundamental af Commands
* Basics::		The most basic mail-handling commands.
* Typeout::		How to use af's typeout mode.
* Minibuffer::		How to enter arguments that are prompted for.
* Sending Mail::        How to send mail from within af.
* M-x::			Invoking commands by their names.
* Help::		How to ask af for help on itself.

Other Ways to Deal With Messages
* Handling Messages::   What you can do with a message.
* Mark and Region::     How to use the mark and the region.
* Tags::                How to set and use tags in af.
* Killing and Yanking:: Deleting and recovering things.
* Searching::           How to search for text in a buffer.
* Sorting::		Sorting messages within af.
* Narrowing::   	Restricting which messages are displayed.

Commands for Mail Folder Management
* Folders::             How to process files and folders.
* Buffers::             How to create and manage buffers.
* Windows::             Displaying more than one buffer.

How to Customise Af
* Customisation::       The ways in which af can be customised.
* Startup Files::	Save your customisations in a `.afrc' file.
* Emulation::   	Emulating some other mailers with af.
* Variables::		Af can be customised with configuration variables.
* Keyboard Macros::     Create new commands by combining existing ones.
* Key Bindings::	Change what keys do keys by binding them.
* Afl::                 An introduction to af's extension language.

Glossary and Indexes
* Glossary::    	An af and electronic mail glossary.
* Key Index::   	An item for each af key sequence.
* Command Index::	An item for each af command.
* Variable Index::	An item for each af variable.
* Concept Index::	An item for each concept.


File: af.info,  Node: Distribution,  Next: Copying,  Prev: Top,  Up: Top

Distribution
************

   Af is "free software"; this means that everyone is free to use it
and free to redistribute it on certain conditions.  Af is not in the
public domain; it is copyrighted and there are restrictions on its
distribution, but these restrictions are designed to permit everything
that a good cooperating citizen would want to do.  What is not allowed
is to try to prevent others from further sharing any version of af that
they might get from you.  The precise conditions are found in the GNU
General Public License that comes with af and also appears following
this section.

   The simplest way to get a copy of af is from someone else who has it.
You need not ask for permission to do so, or tell anyone you have done
so; just copy it.  If you have access to the Internet, you can get the
latest version, or a patch to upgrade to the latest version, from the Af
Home Page on the World Wide Web `http://www.thing.demon.co.uk/af', or
by anonymous FTP from `ftp://ftp.csv.warwick.ac.uk/pub/mail/af'.


File: af.info,  Node: Copying,  Next: Introduction,  Prev: Distribution,  Up: Top

GNU GENERAL PUBLIC LICENSE
**************************

                         Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.
     675 Mass Ave, Cambridge, MA 02139, USA
     
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

Preamble
========

   The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software-- to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software Foundation's
software and to any other program whose authors commit to using it.
(Some other Free Software Foundation software is covered by the GNU
Library General Public License instead.)  You can apply it to your
programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

  0. This License applies to any program or other work which contains a
     notice placed by the copyright holder saying it may be distributed
     under the terms of this General Public License.  The "Program",
     below, refers to any such program or work, and a "work based on
     the Program" means either the Program or any derivative work under
     copyright law: that is to say, a work containing the Program or a
     portion of it, either verbatim or with modifications and/or
     translated into another language.  (Hereinafter, translation is
     included without limitation in the term "modification".)  Each
     licensee is addressed as "you".

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running the Program is not restricted, and the output from the
     Program is covered only if its contents constitute a work based on
     the Program (independent of having been made by running the
     Program).  Whether that is true depends on what the Program does.

  1. You may copy and distribute verbatim copies of the Program's
     source code as you receive it, in any medium, provided that you
     conspicuously and appropriately publish on each copy an appropriate
     copyright notice and disclaimer of warranty; keep intact all the
     notices that refer to this License and to the absence of any
     warranty; and give any other recipients of the Program a copy of
     this License along with the Program.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  2. You may modify your copy or copies of the Program or any portion
     of it, thus forming a work based on the Program, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. You must cause the modified files to carry prominent notices
          stating that you changed the files and the date of any change.

       b. You must cause any work that you distribute or publish, that
          in whole or in part contains or is derived from the Program
          or any part thereof, to be licensed as a whole at no charge
          to all third parties under the terms of this License.

       c. If the modified program normally reads commands interactively
          when run, you must cause it, when started running for such
          interactive use in the most ordinary way, to print or display
          an announcement including an appropriate copyright notice and
          a notice that there is no warranty (or else, saying that you
          provide a warranty) and that users may redistribute the
          program under these conditions, and telling the user how to
          view a copy of this License.  (Exception: if the Program
          itself is interactive but does not normally print such an
          announcement, your work based on the Program is not required
          to print an announcement.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Program, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Program, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Program.

     In addition, mere aggregation of another work not based on the
     Program with the Program (or with a work based on the Program) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  3. You may copy and distribute the Program (or a work based on it,
     under Section 2) in object code or executable form under the terms
     of Sections 1 and 2 above provided that you also do one of the
     following:

       a. Accompany it with the complete corresponding machine-readable
          source code, which must be distributed under the terms of
          Sections 1 and 2 above on a medium customarily used for
          software interchange; or,

       b. Accompany it with a written offer, valid for at least three
          years, to give any third party, for a charge no more than your
          cost of physically performing source distribution, a complete
          machine-readable copy of the corresponding source code, to be
          distributed under the terms of Sections 1 and 2 above on a
          medium customarily used for software interchange; or,

       c. Accompany it with the information you received as to the offer
          to distribute corresponding source code.  (This alternative is
          allowed only for noncommercial distribution and only if you
          received the program in object code or executable form with
          such an offer, in accord with Subsection b above.)

     The source code for a work means the preferred form of the work for
     making modifications to it.  For an executable work, complete
     source code means all the source code for all modules it contains,
     plus any associated interface definition files, plus the scripts
     used to control compilation and installation of the executable.
     However, as a special exception, the source code distributed need
     not include anything that is normally distributed (in either
     source or binary form) with the major components (compiler,
     kernel, and so on) of the operating system on which the executable
     runs, unless that component itself accompanies the executable.

     If distribution of executable or object code is made by offering
     access to copy from a designated place, then offering equivalent
     access to copy the source code from the same place counts as
     distribution of the source code, even though third parties are not
     compelled to copy the source along with the object code.

  4. You may not copy, modify, sublicense, or distribute the Program
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense or distribute the Program is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

  5. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Program or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Program (or any work
     based on the Program), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Program or works based on it.

  6. Each time you redistribute the Program (or any work based on the
     Program), the recipient automatically receives a license from the
     original licensor to copy, distribute or modify the Program
     subject to these terms and conditions.  You may not impose any
     further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties to this License.

  7. If, as a consequence of a court judgement or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Program at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Program by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Program.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system, which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

  8. If the distribution and/or use of the Program is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Program under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

  9. The Free Software Foundation may publish revised and/or new
     versions of the General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Program
     does not specify a version number of this License, you may choose
     any version ever published by the Free Software Foundation.

 10. If you wish to incorporate parts of the Program into other free
     programs whose distribution conditions are different, write to the
     author to ask for permission.  For software which is copyrighted
     by the Free Software Foundation, write to the Free Software
     Foundation; we sometimes make exceptions for this.  Our decision
     will be guided by the two goals of preserving the free status of
     all derivatives of our free software and of promoting the sharing
     and reuse of software generally.

                                NO WARRANTY

 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
     PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
     OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs
=============================================

   If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least the
"copyright" line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND AN IDEA OF WHAT IT DOES.
     Copyright (C) 19YY  NAME OF AUTHOR
     
     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License
     as published by the Free Software Foundation; either version 2
     of the License, or (at your option) any later version.
     
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

   Also add information on how to contact you by electronic and paper
mail.

   If the program is interactive, make it output a short notice like
this when it starts in an interactive mode:

     Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
     type `show w'.  This is free software, and you are welcome
     to redistribute it under certain conditions; type `show c'
     for details.

   The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items--whatever suits your
program.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright
     interest in the program `Gnomovision'
     (which makes passes at compilers) written
     by James Hacker.
     
     SIGNATURE OF TY COON, 1 April 1989
     Ty Coon, President of Vice

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


File: af.info,  Node: Introduction,  Next: Acknowledgements,  Prev: Copying,  Up: Top

Introduction
************

   You are reading about af, an advanced, self-documenting,
customisable, real-time display-oriented mail reader and composer.  If
you think that sounds rather like the Emacs editor, you're correct; af
is designed to follow the Emacs paradigm as closely as possible.

   We say that af is "display-oriented" because normally the messages
being read are visible on the screen and are updated automatically as
you type your commands.  *Note Display: Screen.

   We call it a "real-time" mail reader because the display is updated
very frequently, usually after each character or pair of characters you
type.  This minimises the amount of information you must keep in your
head as you process your mail.  *Note Basics::.

   We call af advanced because it provides facilities that go beyond
simple reading of messages: viewing multiple mail folders at once,
searching and sorting mailboxes, and dealing with groups of messages in
one operation.

   Similarly, we have tried to take care that af complies with any
relevant standards: it conforms closely to RFC822, the Internet
Standard for Mail Messages, and will work with such standard Mail
Transfer Agents as UUCP, sendmail, and MMDF; and supports the POP3
protocol for reading mail from a remote server.  Af also has limited
support for MIME mail, which we hope to improve in the future (1).

   "Self-documenting" means that help about af is available from within
af itself.  You can find out what any command does, or find all the
commands that are relevant to a topic.  *Note Help::.

   "Customisable" means that you can change the definitions of af
commands in little ways.  For example, if you prefer to include the text
of the original message into the text of a reply to that message, then
you can tell af to do so.  Another sort of customisation is
rearrangement of the command set.  For example, if you prefer the four
basic cursor motion commands (up, down, left and right) on keys in a
diamond pattern on the keyboard, you can rebind the keys that way.
*Note Customisation::.

   ---------- Footnotes ----------

   (1)  Don't worry if you don't understand this; you don't need to
know about these things to use af


File: af.info,  Node: Acknowledgements,  Next: Bugs,  Prev: Introduction,  Up: Top

Acknowledgements
****************

   Several people have contributed to af's development.  Here's my
chance to thank them for their efforts, and for an attempt at a moment
of glory.

     Malc Arnold (malc@thing.demon.co.uk) conceived af, did the initial
     design work, wrote almost all of the code, and argued passionately
     in defence of the interface.

     Kay Dekker (kay@vide.coventry.ac.uk) did a vast amount of design
     work, discussing and arguing about features we should support and
     how the interface should work.  More af features than I can
     readily recall were originally Kay's idea.  He also wrote the
     manual pages and the first draft of the user manual, and showed
     great patience when struggling with some of the less stable
     versions of af.

     Ian "Vato" Dickinson (idickins@fore.com) actually suggested turning
     af into a full-featured mailer, and had a wealth of suggestions for
     features, some of which I've actually implemented.  He also wrote
     the first draught of the POP3 and SMTP support code.

     Andrew "Vic" Fry (vic@pootug.demon.co.uk) has contributed insights
     about the af interface, as well as enough encouragement and coffee
     to keep me going.  He has also ported and tested several versions
     of af.

     Justin Murdock (justin@vide.coventry.ac.uk) and Dave Berry
     (daveb@harlequin.co.uk) reported many bugs and made many
     suggestions as to how features could work better.

     Emma Kemm (emma@thing.demon.co.uk) and Iain Bowen
     (alaric@harlech.demon.co.uk) proofread the manuals and supplied
     more much-needed moral support.

     Richard Stallman (rms@gnu.mit.edu) wrote the eleventh edition of
     the GNU Emacs manual, from which many parts of this manual have
     been derived.  Thanks to the Free Software Foundation for
     permission to distribute this manual as a "derived work".

     Note that this does not imply any endorsement of af by the Free
     Software Foundation.


File: af.info,  Node: Bugs,  Next: Future,  Prev: Acknowledgements,  Up: Top

Bugs
****

   Sometimes you will run into a bug in af.  Although I can't promise
that I can or will fix the bug, and I may not even agree that it is a
bug, I want to hear about problems you encounter.  Often I will agree
that they are bugs and want to fix them.

   If af should ever crash (ie fall over with an operating system error
message), or exit back to the shell without warning, then it is
certainly a bug.  Commands doing the "wrong thing" are also bugs, but
you should check the manual and help entry for the command carefully to
be sure that the command isn't doing what it is supposed to.

   If you think that you've found a bug, it is important to report it,
and to provide enough information with the report to be useful.  The
most useful kind of bug report (except the fix for it) is an exact
description of what commands you type, from entering af until the bug
manifests.  It may also help if you could include a small folder which
triggers the bug, since many af bugs can be related to the data in the
current folders.  It is also important to tell me which version of af
you are using, and what machine it is running on.  You can find out
which version of af you are using by typing `M-x af-version <RET>'.

   At present, I am also interested in any feedback on af.  If you have
comments, praise, criticisms or complaints, then we'd like to hear it.

   The best way to send bug reports or comments is to mail them
electronically to the af maintainer at `af-bug@csv.warwick.ac.uk'.  I
don't promise to fix the problem; but if I agree that its a bug then
I'll most likely want to fix it.  And remember that the clearer your
bug report is, the more likely it is that the bug will get fixed
quickly, or indeed at all.


File: af.info,  Node: Future,  Next: E-Mail,  Prev: Bugs,  Up: Top

Future Developments
*******************

   While af is now nearing release, and no additional features are
planned for the near future, this by no means implies that I consider
that af is complete.  There are several major enhancements that af
could benefit from, some of which are loosely planned to be done at
some time in the future.

   * Commands to allow you to use PGP conveniently with af.  PGP stands
     for Pretty Good Privacy; it is a public-key encryption package
     written by Phil Zimmerman.

   * Much more powerful and better-integrated support for reading MIME
     mail.  Especially the ability to decode and display MIME mail from
     within af, without using an external program.

   * Facilities for composing MIME mail: Automatic detection and
     encoding of 8-bit or binary messages; facilities for composing
     multipart messages and so on.

   * Support for internationalising af, so that messages are displayed
     in the user's native language.  I would need volunteers to
     actually do the translations.

   * Major enhancements to the Afl language, allowing people to write
     their own extensions to af.

   * An X interface with pull-down menus, scroll bars and mouse support.

   * An additional major mode for reading news, similar to the mail mode
     but carefully tailored for convenient news-reading.

   * Ports to other operating systems, such as MS-DOS or windows.

   If you have any strong preferences about the direction af should
take in the future, or suggestions of other enhancements you think I
might like to consider, then please mail them to me at
`af-bug@csv.warwick.ac.uk'.


File: af.info,  Node: E-Mail,  Next: Screen,  Prev: Future,  Up: Top

An Introduction to Electronic Mail
**********************************

   "Electronic mail" (often known as "e-mail", or simply "mail"), is
the exchange of messages between people using computer networks.  In
this manual, when we say mail, we mean electronic mail.  A "mail
message" is a message which has been or will be sent via electronic
mail.  Again, when we say message in this manual, we are referring to a
mail message.

   When a mail message is sent, it is transmitted from one computer to
another until it reaches the correct one.  A message can be addressed to
more than one person, in which case a separate copy of the message is
sent to each person.  Once a message has reached the machine to which
it was addressed, then it is usually stored in the incoming mailbox of
the person it is addressed to.

   An "incoming mailbox", or "mailbox" is simply a file containing mail
messages, with a special sequence of characters separating each message
from the others.  Each user of a system will normally have their own
mailbox.  Users can also store messages in files of their own, which
are called "folders".  In this manual, the term folder will refer to
any file which contains mail messages.

   To read your mail, you will usually use a "mail reader", a program
which can understand the format of a folder and present the contents to
you in a convenient form.  Af is an example of a mail reader.
Similarly, you would normally send mail by using a "mail composer", a
program which knows how to construct and send a mail message, and gives
the user a (hopefully) convenient environment in which to compose and
send their message.  Most mail readers, including af, are also mail
composers.

   To allow a mail message to be sent to the correct person, it needs an
"envelope".  To supply this, a mail message is divided up into two
parts, the "headers" and the "body".  The headers supply the
information required to send the message to the right people, while the
body is the actual message you wanted to send.

* Menu:

* Mail Headers::        What the headers look like and mean.
* Addresses::           How to interpret a mail address.
* Message Body::        The contents of the message body.
* Signatures::          How to automatically sign a message.


File: af.info,  Node: Mail Headers,  Next: Addresses,  Up: E-Mail

Mail Headers
============

   The headers of a mail message are held at the beginning of the
message, and are separated from the message body by a blank line.
Here's an example of message headers:

     From malc@thing.demon.co.uk Tue Jan 23 16:20:39 1996
     Date: Tue, 23 Jan 1996 16:20:36 GMT
     Message-Id: <4780.199201201539@thing.demon.co.uk>
     From: Malc Arnold <malc@thing.demon.co.uk>
     Organization: Team Limpid
     Sender: The Management <root@thing.demon.co.uk>
     To: Kay Dekker <kay@thing.demon.co.uk>,
         Andrew Fry <vic@pootug.demon.co.uk>
     Subject: Af manual in progress
     Content-Type: text/plain; charset=us-ascii
     Content-Transfer-Encoding: 7bit

   Note that apart from the first line, each header consists of a header
name, followed by a colon and then the header text.  The first line is
not really a header at all; it is the marker that most Unix systems
insert to mark the start of each new message.  You can also see that
unlike the envelope for a postal letter, the envelope information
contained in the header can also be of interest to the recipient.  There
are actually several other headers contained in most mail messages, but
by default af will filter them out when it displays a message for you to
read (*note Reading Messages::.).

   Another interesting feature is the `To:' header, which has been
extended over two lines by starting the second line with a tab.  You can
also continue headers in the same way by starting the following line
with a space.  Probably it's best to try to keep headers to a single
line though; if a long header line needs to be "folded" like this, then
af will normally do so for you.

   Here is a brief summary of some of the headers you are likely to see
in a mail message.

`From:'
     The e-mail address of the person who the mail is from.  Replies to
     the message will be sent to this address (*note Sending Mail::.).
     It is possible for a message to be from more than one person.

`Organization:'
     The sender's organisational affiliation.

`Subject:'
     A brief description of what the message is about.

`To:'
     The e-mail address of the message's recipients.

`Cc:'
     A "carbon copy" of the message is sent to the addresses listed.
     People listed in the `Cc:' header shouldn't regard the mail as
     being sent to them.


File: af.info,  Node: Addresses,  Next: Message Body,  Prev: Mail Headers,  Up: E-Mail

Mail Addresses
==============

   Mail addresses usually take the form `user@full.domain.name'.  They
may also be written as `Full Name <user@full.domain.name>', or
`user@full.domain.name (Full Name)'.  In all of these cases, the
address of the user is the same; the addition of the full name is
simply a convenience to allow mail readers to display the sender's real
name rather then their e-mail address.

   Usually, the part of the address to the left of the "@" character
(`user') identifies the user to which the mail is to be sent, while the
part to the right (`full.domain.name') identifies the specific computer
or organisation where that user can be found.  Note that while mail
addresses must be unique, a user name may be duplicated many times by
different organisations; each with a different full domain name.

   Lists of addresses (such as in a `To:' header) should be separated
either by spaces or commas.

   We shall not go into the intimate details of mail address syntax
here; af will check any addresses you give it, and either correct minor
problems or report any serious errors in an address.


File: af.info,  Node: Message Body,  Next: Signatures,  Prev: Addresses,  Up: E-Mail

The Message Body
================

   Normally, the body of a mail message is just text, which is not
handled in any special way.  Recently, electronic mail has been
extended to allow for a message body which is something other than
text.  These extensions are called "MIME" (Multipurpose Internet Mail
Enhancements), and mail which makes use of them is called "MIME mail".

   The version of af you are using may use an external program to
display mail in MIME format.  Otherwise, MIME mail will be displayed
just like any other message, which will probably not be helpful if the
message is an encoded image or other binary data.  We hope to add more
powerful and better-integrated support for MIME into later versions of
af.

   One of the commonest uses of MIME (in Europe at least) is to send
mail which contains characters which aren't in the `us-ascii' character
set, such as accented characters.  Af can be set up so that it doesn't
use an external pager to display such messages, by setting the variable
`viewable-charsets' (*note Variables::.).


File: af.info,  Node: Signatures,  Prev: Message Body,  Up: E-Mail

Signatures
==========

   It is common for people to want to include a small amount of text at
the end of each message, to give information such as their telephone
number, paper-mail ("snail-mail") address, other e-mail addresses.  and
so on.

   To aid people in doing this, af supports a feature known as
"signature files".  These files contain text which will automagically
be included at the end of each mail message you send.  By default, af's
uses the file `.signature' in your home directory as your signature
file.

   Some people also like to include lengthy quotations, large ASCII
graphics or other amusements in signature files.  This annoys many
people on the net, since it costs money to transfer large signatures,
and conveys no useful information.  Because of this, the version of af
which you use may be configured to truncate signature files that are
larger than a certain size; typically 4 lines of 79 columns each.  You
have been warned.


File: af.info,  Node: Screen,  Next: User Input,  Prev: E-Mail,  Up: Top

The Organization of the Screen
******************************

   Normally, the af display occupies the whole screen.  When you start
af, the entire screen except for the last line is devoted to the folder
you are reading.  This area is called the "window".  The last line is a
special "echo area" or "minibuffer window" where prompts appear and
where you can enter responses.  You can subdivide the window into
different windows, each of which can be used to display a different
folder (*note Windows::.).  In this manual, the word "window" always
refers to the subdivisions of the screen within af.

   The window that the arrow cursor is in is the "selected window", in
which most operations take place.  Most af commands implicitly apply to
the messages in the selected window.  The other windows display messages
for reference only, unless/until you select them.

   Most windows display the details of folders, showing a "header line"
for each message in the folder.  Each header line shows a brief summary
of the message's details, and is treated as a pointer to the message it
describes.

   Each window's last line is a "mode line" which describes what is
going on in that window.  It contains text that starts like `==== Af:
SOMETHING'.  Its purpose is to indicate what buffer is being displayed
above it in the window above it, how many messages are in the buffer,
whether the buffer contains unsaved changes, and so on.

* Menu:

* Point::	        The place in the buffer where commands operate.
* Echo Area::           Short messages appear at the bottom of the screen.
* Header Lines::        How to interpret the lines in a mail buffer.
* Mode Line::	        Interpreting the mode line.


File: af.info,  Node: Point,  Next: Echo Area,  Up: Screen

Point
=====

   Within a buffer displaying a folder, an arrow pointer shows the
location at which commands will take effect.  This location is called
"point".  Many af commands move point through the buffer, so that you
can execute commands at different places in it.

   While the arrow appears to point AT a message, you should think of
point as BETWEEN two messages; it lies BEFORE the message that it is
pointing at.  Sometimes people speak of "the cursor" when they mean
"point", or speak of commands that move point as "cursor motion"
commands.

   If you are reading several folders in af, each in its own buffer,
each buffer has its own point location.  A buffer that is not currently
displayed remembers where point is in case you display it again later.

   When there are multiple windows on the screen, each window has its
own point location.  The arrow shows the location of point in the
selected window.  This also is how you can tell which window is
selected.  If the same buffer appears in more than one window, each
window has its own position for point in that buffer.

   It is possible to move point past the last message in a buffer.
This is deliberate, to allow several other commands to work properly in
an "Emacs-like" way.  While it may seem strange at first if you are used
to other mail readers, it soon becomes familiar; and it allows you to
use many af features much more easily.  Most commands that deal with
messages will report an error if you have moved point past the last
message in the buffer, just as they would if there were no messages at
all.


File: af.info,  Node: Echo Area,  Next: Header Lines,  Prev: Point,  Up: Screen

The Echo Area
=============

   The line at the bottom of the screen (below the mode line) is the
"echo area".  It is used to display small amounts of text for several
purposes.

   "Echoing" means displaying the characters that you type.  Outside
af, the operating system normally echoes all your input.  Inside af
things work a little differently.

   Single-character commands do not echo in af, and multi-character
commands echo only if you pause while typing them.  As soon as you pause
for more than a second in the middle of a command, af echoes all the
characters of the command so far.  This is to "prompt" you for the rest
of the command.  Once echoing has started, the rest of the command
echoes immediately as you type it.  This behaviour is designed to give
confident users fast response, while giving hesitant users maximum
feedback.  You can change this behaviour by setting the variable
`echo-keystrokes' (*note Variables::.).

   If a command cannot be executed, it may print an "error message" in
the echo area.  Error messages are accompanied by a beep.

   Some commands print informative messages in the echo area.  These
messages look much like error messages, but they are not announced with
a beep.  Sometimes the message tells you what the command has done, when
this is not obvious from looking at the screen.  Sometimes the sole
purpose of a command is to print a message giving you specific
information--for example, `C-x =' prints a message describing the
position of point in the buffer.  Commands that take a long time often
display messages ending in `...' while they are working, and add `done'
at the end when they are finished.

   The echo area is also used to display the "minibuffer", a window
that is used for reading arguments to commands, such as the name of a
file to be read.  When the minibuffer is in use, the echo area begins
with a prompt string that usually ends with a colon; also, the cursor
appears in that line because it is the selected window.  You can always
get out of the minibuffer by typing `C-g' (*note Minibuffer::.).


File: af.info,  Node: Header Lines,  Next: Mode Line,  Prev: Echo Area,  Up: Screen

The Header Lines
================

   Most of the lines in a window which displays a folder will be
"header lines", which present a one-line summary of a mail message.  By
default a header line will look something like this:

     PTR TAGS  ORIGINATOR                  SUBJECT

   PTR is the pointer which indicates the position of point in the
window; the ptr will be represented as `=>' only on the line that point
lies before, and as blank on all other lines.  The line on which the
pointer is present is sometimes referred to as the "current line", and
the message it represents as the "current message", or the "message at
point".

   TAGS are the "tags" of the message.  Normally, this will only show
"system tags" which af sets to show information about a message's
status (*note Tags::.).

   ORIGINATOR is the sender of the message.  If the sender's real name
is available in the message headers then it will be shown here,
otherwise their e-mail address will be displayed.

   SUBJECT is the subject of the message.

   It is possible to change the layout of the header lines by setting
the variable `header-line-format' (*note Variables::.).  Also, the arrow
pointer can be changed by setting the variable `header-line-arrow'.


File: af.info,  Node: Mode Line,  Prev: Header Lines,  Up: Screen

The Mode Line
=============

   Each window's last line is a "mode line" which describes what is
going on in that window.  When there is only one window, the mode line
appears right above the echo area.  The mode line starts and ends with
dashes, and it contains text like `Af: SOMETHING'.

   Normally, the mode line looks like this:

     =CH= Af: BUF == COUNT == (MODES) == POS =

This gives information about the buffer being displayed in the window:
the buffer's name, what modes are in use, whether the buffer has been
changed, and how far down the buffer you are currently looking.

   CH contains two stars `**' if the buffer has been changed (the
buffer is "modified"), two plus signs `++' if the buffer contains
messages whose status has changed, or `==' if the buffer has not been
changed.  For a read-only buffer, it is `%*' if the buffer is modified,
and `%%' otherwise.

   BUF is the name of the window's "buffer".  In most cases this is the
same as the name of a folder you are processing.  (*note Buffers::.)

   COUNT is the number of messages in the window's buffer.

   The buffer displayed in the selected window (the window that the
arrow cursor is in) is also af's selected buffer, the one that most
commands operate on.  When we speak of what some command does to "the
buffer", we are talking about the currently selected buffer.

   POS tells you whether there are more messages above the top of the
window, or below the bottom.  If your buffer is small and it is all
visible in the window, POS is `All'.  Otherwise, it is `Top' if you are
looking at the beginning of the buffer, `Bot' if you are looking at the
end of the buffer, or `NN%', where NN is the percentage of the buffer
above the top of the window.

   MODES lists the "major mode" and any "minor modes" which are in
effect in the buffer.  At any time, each buffer is in one and only one
of the possible major modes.  The major modes available include Mail
mode (for reading folders), Typeout mode (for displaying information)
and Minibuffer mode (for asking the user for input).  Each major mode
may be supplemented by one or more minor modes, which change the mode's
behaviour in some small way. (*note Major Modes::.).

   It is possible to change the layout of the mode line by setting the
variable `mode-line-format' (*note Variables::.).

