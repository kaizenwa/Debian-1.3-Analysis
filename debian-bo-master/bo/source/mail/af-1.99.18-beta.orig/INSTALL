			Notes on installing af v1.99
			----------------------------

The basic procedure for installing af is:

1.	sh configure and answer the questions
2.	make
3.	make install


1. sh configure
---------------

To configure af for your system, run "sh configure".  If you want to
install af somewhere other than where it's already installed (or not
under /usr/local if it isn't installed yet), then running configure as
"sh configure --prefix=<directory>" will save you some typing.

You'll get asked quite a few questions when you configure af.  This is
partly to avoid you having to modify four makefiles by hand after
configuring it, and partly because there are lots of options which
can't be accurately determined by the configure script.  Some of them
can be tricky for people to figure out, so here are a few pointers.

Af used to offer you the ability to override the default domain name
extracted from the operating system.  It no longer does this, since
the much more general "domain" variable has now been added.  If your
site is using site-hiding, or for some other reason you don't want
to use your machine's fully qualified domain name as your mail domain,
you can override the default by adding a line like:

	(setq domain "foo.bar.co.uk")

To the global startup file.  If the mail domain lives in a file (say,
/etc/mailname), then you can extract the domain name like this:

	(setq domain (system "head -1 /etc/mailname"))

Whichever way you set the domain name, be careful.  You can't set the
"domain" variable to an invalid value, but if you get the value wrong
then local mail won't deliver properly, and people won't be able to
reply to mail sent with af.
	

	"Does your password file have gecos fields in SVr4 form, with
	 the name between the first ')' and the first '-'?"

System V release 4 uses a new format for the gecos field (which is
where users' personal information is stored).  If you are using a
System V release 4 system then the answer to this is probably "yes",
otherwise it will usually be "no".


	"Use subprograms to read and write files? [y]"
	"Which ... id should the installed files have?"

Many systems need mail programs to run setgid mail so that they can
create lock files in the mail spool directory.  A few (very old)
systems need them to run setuid root for the same reason.  This option
allows you to make af use a small external program to actually read
and write mailboxes, so that the subprogram runs setgid rather than
af.  Some modern systems don't need setuid or setgid at all; check the
permissions on the mail spool directory to see if yours is one of
these.

The reasons you might want to do this are:

1.	You are running on an old Unix system, where a program can't
	freely switch between two uids or gids.
2.	You are running on a system where mail programs need to run
	setuid root.  As the text of the question says, DO NOT run
	af itself setuid root; it is not designed to run this way.
3.	You are running on a multiprocessor machine (where using the
	subprograms is often faster then reading files directly).
4.	You need the best possibly security (small programs are less
	prone to bugs than large ones).

	"Should the programs have 'suid', 'sgid' or 'both' set?"

Obviously, the program in question is either af itself, or the mailbox
reading and writing programs if you've elected to make af use
subprograms to read and write mail.


	"What is the full path to the MTA program? [...]"

The configuration will check for which programs are available to use
for submitting outgoing mail for delivery.  The default is probably
correct, unless you have MMDF's submit program (or another program
called submit which isn't part of MMDF), or qmail's qmail-inject on
a machine that is using sendmail to deliver mail.  If you don't have
an MTA at all, you can answer SMTP (in upper case), to configure af
to connect to a SMTP server to deliver mail.


	"Does your system honour the Content-Length header? [n]"

If you're using System V release 4 (including solaris), then the answer
to this is probably "yes", and you have my sympathy.  If not, then you
can ignore this brain damage.


2. make
-------

You can make af from the top-level, or run a make in each subdirectory.
This is often convenient if you run into compilation problems.

If you want to test af before you install it, and you selected the
"Use sub-programs to read and write files" option when you configured,
then you'll need to install at least readmbox and writembox in the lib
directory first, or any attempts to read or write a folder will give a
"no such file or directory" error.

If af waits for a keypress during startup, it's usually because you
haven't yet installed the af help file (which it uses to print the
introductory message).  Once you run "make install" from the top level
or in the "doc" directory then the problem should go away.

3. make install
---------------

Will install everything into the target directories, with all the
right permissions.  Note that if you're running af suid or sgid, then
you'll probably need to run "make install" as root to make sure that
you can set up the file ownerships and permissions correctly.

Make install doesn't create the target directories themselves, so
make sure the binary, library, info, and manual directories exist
before running make install.  It does create the lib/af and etc/af
directories though.

If you're using the info browser to view the af manual interactively,
you'll need to make sure that an entry for af is included in the menu
in your info directory's "dir" or "localdir" file.  The line you'll
need to add should look something like:

* Af: (af).                An advanced mail reader and composer.

Once you've done that, then off you go....  Good luck.
