.\" $Id: deliver.8,v 1.10 1993/10/28 17:26:36 chip Exp $
.\"
.\" Man page for deliver.
.\"
.TH DELIVER 8 "Deliver 2.1.12"
.SH NAME
deliver \- deliver mail
.SH SYNOPSIS
.B deliver
[ options ] address ...
.SH DESCRIPTION
The
.I Deliver
program collects a mail message from the standard input and delivers it.
.I Deliver
is capable of handling the delivery of all mail.  However,
.I Deliver
is typically hung off the end of an existing mail system, where it
handles the delivery of some or all local mail, a job usually done by
.I /bin/mail
(System V and BSD)
or
.I /usr/lib/mail/mail.local
(Xenix).
.PP
The way
.IR Deliver
handles each message is controlled by shell scripts which, given the
message to be delivered and a list of addresses, produce as their
output new lists of addresses.  Such scripts, when called by Deliver,
are called ``delivery files.''
.I Deliver
allows a site administrator to write delivery files with global
effects.  In addition, each user may write a delivery file to control
delivery of mail addressed to himself.
.SH OPTIONS
.TP
.B \-b
Interpret arguments as mailbox filenames instead of addresses.  The
user who executes
.I Deliver
must have write permissions on all mailbox files.  He may also need
write permissions on their parent directories, depending on the
existence of the mailbox files and the local locking protocol.
.TP
.B \-n
Deliver to the given address(es), but do not run any delivery files.
This option is most useful when
.I Deliver
is executed recursively, because it cannot cause infinite recursion.
.TP
.B \-A
Collect the message, run delivery files and print the resolved
address(es).  Do not deliver the message.  Note that when this option
is specified,
.I Deliver
still collects a message from the standard input, because delivery
files may vary their output based on message content.  To test simple
delivery files, redirect standard input from /dev/null.
.TP
.B \-d
Turn on verbosity, collect the message and run delivery files.  Do not
deliver the message.
.TP
.B \-v
Turn on verbosity while performing all tasks, including delivery.
.TP
.B \-t
Do not remove temporary files before exiting.
.TP
.BI \-l " localsender"
Specify
.I localsender
as the name of the local sender, that is, the name of the user who
invoked
.IR Deliver .
This option is only believed if it is a valid user name with a user
id equal to the real user id of the
.I Deliver
process.  If it is invalid, or if it is not specified, then
.I Deliver
tries the values of the LOGNAME and USER environment variables, and
then the login name corresponding to the tty on which
.I Deliver
is running.  If none of these names matches the real user id,
.I Deliver
looks up the user name that corresponds to its real user id.
.TP
.BI \-r " sender"
Put
.I sender
on the generated From_ line.  Default is to use the address on the From_
line in the input, or else the local sender.
.TP
.BI \-h " hostname"
Set the host name.  The default is determined in a site-specific way,
typically by asking the kernel.
.TP
.BI \-s " system delivery file"
Specify an alternate system delivery file.  The default is
.I /usr/local/lib/deliver.sys.
.TP
.BI \-p " post-user delivery file"
Specify an alternate post-user delivery file.  The default is
.I /usr/local/lib/deliver.post.
.TP
.BI \-e " error delivery file"
Specify an alternate error delivery file.  The default is
.I /usr/local/lib/deliver.err.
.TP
.BI \-u " user delivery file"
Specify an alternate user delivery file.  The default is
.I .deliver
(in each user's home directory).
.PP
For security reasons, specifying one or more of the options ``-h
hostname'', ``-s sysdelfile'', ``-p postdelfile'', ``-e errdelfile''
or ``-u userdelfile'' disables setuid privileges.  That is,
.I Deliver
revokes its setuid privileges before doing anything significant, just
as if
.I Deliver
had been installed without the setuid bit turned on.
.PP
All command line options are put into environment variables, examined by
.I Deliver
on startup; thus all flags are propagated when
.I Deliver
is invoked recursively.  Note that setting these environment variables
is exactly equivalent to specifying the equivalent command line
options; in particular, they can cause
.I Deliver
to disable setuid privileges as described in the previous paragraph.
.SH ENVIRONMENT
For mail systems based on
.I Smail
2.x, the LMAIL (local mailer) macro can be changed to call
.I Deliver.
For mail systems based on
.I Smail
3.x or
.I sendmail,
a similar arrangement may be made; otherwise, individual users can
invoke
.I Deliver
by mentioning it in their
.I .forward
files (e.g. ``|/usr/bin/deliver myname'').
.PP
For Xenix systems,
.I Deliver
may be used as a direct replacement for
.IR /usr/lib/mail/mail.local.
.PP
For stock Unix systems, it may be possible to make
.I /bin/rmail
a link to
.IR Deliver ;
however, this configuration has not been tested and is not
recommended.  After all, any postmaster motivated enough to install
.I Deliver,
and who wants something better than the standard
.I /bin/rmail,
should install
.I Smail
2.x or 3.x.
.SH "DEFAULT OPERATION"
When
.I Deliver
starts execution, it interprets its arguments in one of three ways.
.PP
(1) If the
.B \-b
(mailbox) option is specified, then
.I Deliver
interprets its arguments as mailbox pathnames.
.PP
(3) If the
.B \-n
option is specified, then
.I Deliver
interprets its arguments as addresses.
.PP
(3) If neither the
.B \-b
nor the
.B \-n
option is specified,
.I Deliver
uses the system, user and post-user delivery files (described below)
to determine the address(es) to receive the message.
.PP
After attempting delivery,
.I Deliver
looks in its list of destinations for failures of any kind.  If any
failed destinations are found, and if the
.B \-n
option is not specified,
.I Deliver
executes the error delivery file with the entire list of failed
addresses as its arguments.  If the error delivery file generates any
destinations,
.I Deliver
attempts delivery to them.  However, if such delivery fails,
.I Deliver
will not re-execute the error delivery file.
.SH "DELIVERY FILES"
Delivery files are shell scripts executed by
.I Deliver
to determine the address(es) to receive a message.  Note that delivery
files have control over delivery to users and remote addresses, but
.I not
over delivery to explicitly named mailboxes.  (See also the
.B \-b
option.)
.PP
The default shell used to execute delivery files is
configuration-dependent.  Typically it is the Bourne shell (/bin/sh).
However, you can arrange for
.I Deliver
to execute any given delivery file with any given shell by starting
the delivery file with a ``#!'' line in the style of Berkeley UNIX.
For example, if the first line of a delivery file is ``#!/bin/perl'',
then
.I Deliver
will execute that delivery file with /bin/perl instead of /bin/sh.
.PP
The four kinds of delivery files are described below.
.TP
.I "system delivery file"
The system delivery file, if it exists, is created by the postmaster.
By default, it is named ``/usr/local/lib/deliver.sys''.  It controls
the delivery of all messages on the system where it is installed.  It
is executed with arguments of the name(s) specified on the
.I Deliver
command line.  (Note, however, that arguments containing shell
metacharacters are rejected before the system delivery file is run.)
.TP
.I "user delivery file"
Each user may create a
.I user delivery file
in his home directory.  By default, it is named ``.deliver''.  A user
delivery file is always executed with exactly one argument: the name
of the user in whose home directory the file is found.
.TP
.I "post-user delivery file"
The post-user delivery file, if it exists, is created by the
postmaster.  By default, it is named ``/usr/local/lib/deliver.post''.
It is executed after the system and user delivery files, but before
any attempt at message delivery.  Its arguments are those addresses
which are about to receive the message, whether those addresses
originated with
.I Deliver
command line arguments or with a system or user delivery file.  This
delivery file is particularly useful for implementing system-wide
aliases, since it can modify or delete addresses generated by user
delivery files, something the system delivery file cannot do.
.TP
.I "error delivery file"
The error delivery file, if it exists, is created by the postmaster.
By default, it is named ``/usr/local/lib/deliver.err''.  After
.I Deliver
has attempted delivery to all requested destinations, and if delivery
to one or more of those destinations failed,
.I Deliver
executes the error delivery file with arguments of all failed
addresses.  Note that failed addresses may contain whitespace, shell
metacharacters or other strangeness -- be careful!
.PP
When
.I Deliver
runs a delivery file, it monitors the delivery file's standard output
for delivery directives, one directive per line.  Directives can take
five forms:
.TP
.B "user"
.br
Append the message to the given user's default mailbox.  The location
of a user's default mailbox is configuration-dependent.
.TP
.B "user:mailbox"
.br
Append the message to the specified mailbox in the given user's
context.  If the mailbox name is not an absolute pathname, it is
interpreted relative to the given user's home directory.  Only the
superuser may request delivery to a mailbox in another user's context.
.TP
.B "user|command"
.br
Execute the specified command in the given user's context, and feed
the message to its standard input.  Only the superuser may request
command execution in another user's context.
.TP
.B "user?error message"
.br
Do not attempt delivery to the given user.  Diagnostic messages,
including the bounce notice (if any), will include the specified
message.  Only the superuser may report an error for another user.
.TP
.B "host1!host2!user"
.br
Send the message with UUCP via the given bang path.
.PP
Note that the ``user:mailbox'', ``user|command'' and ``user?error
message'' forms may omit the ``user'' part, in which case the current
user context is assumed.
.SH "ENVIRONMENT VARIABLES"
When
.I Deliver
executes a delivery file, it sets several environment variables, listed
below.
Note that these environment variables are both set and used by
.I Deliver;
therefore, all command line options automatically propagate when
.I Deliver
is run recursively (within a delivery file).  The environment variable
names set and used by
.I Deliver
are:
.TP
.B DELPID
The process id of the running
.I Deliver
process.  Used by a child
.I Deliver
to determine its parent's process id.
.TP
.B DELLEVEL
The
.I Deliver
recursion level.  Each time
.I Deliver
is called recursively, this value is incremented.  When the maximum
recursion level (default: eight) is exceeded,
.I Deliver
assumes infinite recursion and aborts.
.TP
.B DELFLAGS
The command line flags that do not take arguments, if any, that were
specified on the
.I Deliver
command line.
.TP
.B HOSTNAME
The local host name, either the real hostname or a name specified with the
.B \-h
option to
.I Deliver.
.TP
.B SYSDELFILE
The system delivery filename.
.TP
.B POSTDELFILE
The post-user delivery filename.
.TP
.B ERRDELFILE
The error delivery filename.
.TP
.B USERDELFILE
The user delivery filename, relative to the home directory of each user.
.TP
.B LOCALSENDER
The local sender, that is, the user who invoked
.IR Deliver .
This value is not believed by recursive
.I Deliver
processes, since the user who invokes the child may not be the same
as the user who invoked the parent.
.TP
.B SENDER
The original sender of the message.  This value can be the address
specified with the
.B \-r
option to
.I Deliver,
or the address given in the From_ line of the message, or the local
sender.
.TP
.B HEADER
The name of the temporary file containing the message header.
.TP
.B BODY
The name of the temporary file containing the message body.
.PP
Recursive execution of
.I Deliver
is useful, especially when used with the the
.B \-b
(mailbox) and
.B \-n
(no delivery files) flags.  For example, a user may wish to transform a
message body before it is stored in a mailbox.  This may be done with a user
delivery file and recursive execution of
.I Deliver.
For example, the following user delivery file translates all incoming
message bodies to lower case, and stores them in the user's default mailbox:
.PP
.nf
    ( cat $HEADER; tr '[A-Z]' '[a-z]' <$BODY ) | deliver -n "$1"
.fi
.SH "UNDELIVERED MAIL"
When
.I Deliver
executes a delivery file, it expects the delivery file to output a
complete list of all addresses and/or mailboxes that should receive
the message.  Therefore, if a delivery file produces no output at all,
.I Deliver
assumes that there is a problem.  In that case, to avoid total loss of
the message,
.I Deliver
saves it in the ``undelivered mail'' mailbox, named ``Undel.mail'' in
the home directory of the delivery file's owner.  For the purpose of
undelivered mail, system, post-user and error delivery files are
considered to be owned by root.  Therefore, the postmaster should
occasionally check ``/Undel.mail'' for mail that went undelivered due
to errors in the systemwide delivery files.
.PP
Sometimes a delivery file writer really does want
.I Deliver
to drop a message.  For example, if a delivery file stores a message by
running ``deliver -b'', then there's no need for the parent
.I Deliver
to save the message again.  A delivery file can tell
.I Deliver
not to save the message by outputting the string ``DROP''.  A delivery
file's outputting ``DROP'' removes the undelivered mail safety net for
that delivery file.  Think of ``DROP'' as shorthand for: ``Trust me.
I know what I'm doing.''  If the delivery file outputs any addresses
before and/or after ``DROP'', then the ``DROP'' has no effect.
.PP
The example delivery file given above never generates any output.
Therefore, it should always output ``DROP'':
.PP
.nf
    ( cat $HEADER; tr '[A-Z]' '[a-z]' <$BODY ) | deliver -n "$1"
    echo DROP
.fi
.PP
Note that the error delivery file is an exception to the ``DROP''
rule.  After all, the error delivery file never receives valid
addresses as arguments, so no output is expected (though it is
allowed).
.SH "SECURITY"
If
.I Deliver
is setuid root -- which it should be for normal operation -- then the
system, post-user and error delivery files are executed as root.  Be
.I "very careful"
about its permissions and its contents!  Carelessness here can easily
create a security problem.
.PP
All user delivery files are executed in the context of the user in
whose home directory they reside.  A user's ``context'' includes the
uid, gid, and home directory as specified in /etc/passwd.
.PP
For security reasons, if a user's home directory is writable to the world,
.I Deliver
will ignore any delivery file that might be found there.
.PP
For security reasons, no user can request writing a specific mailbox
under another user's context.  Otherwise, any user could modify other
users' private files.
.PP
For security reasons,
.I Deliver
will not write to a system mailbox if it has more than one hard link.
.SH LOGGING
.I Deliver
records its activity in two files: the ``delivery log'', named
.IR /usr/adm/deliver.log,
and the ``error log'', named
.IR /usr/adm/deliver.errlog.
.PP
The deliver log is a record of activity of each
.I Deliver
process.  Each delivery log entry include the users or mailboxes named
on the command line, the users and/or mailboxes where delivery
succeeded, and those where it failed.
.PP
The error log is a record of any problems encounted during delivery.
Each error log entry includes all diagnostic output, a copy of the
message header, and miscellaneous other information.
.PP
If you want a delivery log, you must create the delivery log file yourself.
If the delivery log file does not exist,
.I Deliver
will not create it.
.PP
If
.I Deliver
is performing a ``dry run'' -- that is, if the
.B \-d
(debug) or
.B \-A
(print address) flag is specified -- it will not write to either log file.
.PP
If the
.B \-v
(verbose) flag is specified,
.I Deliver
will not write to the error log.
.SH LOCKING
Several preprocessor labels may be defined during compilation to control
the method(s) used by
.I Deliver
to lock mailboxes.  These labels are:
.TP
.B ML_DOTLOCK
.br
Lock on exclusive creation of the mailbox name with ``.lock''
appended.  (Version 7 and early BSD mailers use this method.)
.TP
.B ML_DOTMLK
.br
Lock on exclusive creation of
.I /tmp/basename.mlk,
where
.I basename
is the last component of the mailbox pathname.  (Xenix mailers use this
method.)
.TP
.B ML_LOCKF
.br
Exclusively lock mailbox with lockf().
.TP
.B ML_FCNTL
.br
Exclusively lock mailbox with fcntl().
.TP
.B ML_LOCKING
.br
Exclusively lock mailbox with locking().
.PP
Neither, one or both of ML_DOTLOCK and ML_DOTMLK may be specified.
None or one of ML_LOCKF, ML_FCNTL or ML_LOCKING may be specified.
.SH FILES
/usr/local/lib/deliver.sys      system delivery file
.br
/usr/local/lib/deliver.post     post-user delivery file
.br
/usr/local/lib/deliver.err      error delivery file
.br
~user/.deliver                  user delivery file(s)
.br
/usr/adm/deliver.log            delivery log
.br
/usr/adm/deliver.errlog         error log
.br
/etc/systemid                   system name (Xenix only)
.SH SUPPORT
Enhancements, enhancement requests, trouble reports, etc., should be mailed
to <chip@fin.uucp>, or <dg-rtp!fin!chip>, or <chip%fin.uucp@dg-rtp.dg.com>.
.SH "SEE ALSO"
.IR mail (1),
.IR uux (1),
.IR smail (8),
.IR sendmail (8)
