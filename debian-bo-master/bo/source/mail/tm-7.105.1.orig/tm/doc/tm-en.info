This is Info file tm-en.info, produced by Makeinfo-1.63 from the input
file tm-en.texi.


File: tm-en.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)

tm 7.100 Manual (English Version)
*********************************

   This file documents tm, a MIME package for GNU Emacs.

* Menu:

* Introduction::                What is tm?
* Setting::
* Bug report::                  How to report bug and about mailing list of tm
* Acknowledgments::
* Concept Index::
* Variable Index::


File: tm-en.info,  Node: Introduction,  Next: Setting,  Prev: Top,  Up: Top

What is tm?
***********

   The tm package is a set of modules to enjoy MIME on GNU Emacs.  Using
tm, you can

   *  playback or view the MIME messages using tm-view

   *  compose MIME message using tm-edit

   *  use the enhanced MIME features with mh-e, GNUS, Gnus, RMAIL and VM

and more.

   Please read following about each topics:

   * tm-MUA for Gnus (*Note (gnus-mime-en)::)

   * tm-MUA for GNUS (*Note (tm-gnus-en)::)

   * tm-MUA for mh-e (*Note (tm-mh-e-en)::)

   * tm-MUA for VM (*Note (tm-vm-en)::)

   * mime/viewer-mode (*Note (tm-view-en)::)

   * mime/editor-mode (*Note (tm-edit-en)::)

* Menu:

* Glossary::


File: tm-en.info,  Node: Glossary,  Prev: Introduction,  Up: Introduction

Glossary
========

* Menu:

* 7bit::
* 8bit::
* 94-character set::
* 96-character set::
* 94x94-character set::
* ASCII::
* Base64::
* binary::
* cn-gb::                       cn-gb, gb2312
* cn-big5::                     cn-big5, big5
* CNS 11643::                   CNS 11643-1992
* coded character set::         Coded character set, Character code
* code extension::              Code extension
* Content-Disposition::         Content-Disposition field
* Content-Type field::
* Emacs::
* encoded-word::
* encapsulation::
* entity::                      Entity
* euc-kr::
* FTP::                         FTP
* GB 2312::                     GB 2312-1980
* GB 8565.2::                   GB 8565.2-1988
* graphic character set::       Graphic Character Set
* hz-gb2312::
* ISO 2022::
* iso-2022-cn::
* iso-2022-cn-ext::
* iso-2022-jp::
* iso-2022-jp-2::
* iso-2022-kr::
* ISO 646::
* ISO 8859-1::
* iso-8859-1::
* ISO 8859-2::
* iso-8859-2::
* ISO 8859-3::
* ISO 8859-4::
* ISO 8859-5::
* iso-8859-5::
* ISO 8859-6::
* ISO 8859-7::
* iso-8859-7::
* ISO 8859-8::
* ISO 8859-9::
* ISO-IR-165::                  ISO-IR-165, CCITT Extended GB
* JIS X0201::
* JIS C6226::                   JIS C6226-1978
* JIS X0208::
* JIS X0212::                   JIS X0212-1990
* koi8-r::
* KS C5601::                    KS C5601-1987
* media type::
* message::
* message/rfc822::
* method::
* MIME::
* MIME charset::
* MTA::
* MUA::
* MULE::
* multipart::                   Multipart
* multipart/alternative::
* multipart/digest::
* multipart/encrypted::
* multipart/mixed::
* multipart/parallel::
* multipart/signed::
* PGP::
* PGP-kazu::
* PGP/MIME::
* Quoted-Printable::
* RFC 821::
* RFC 822::
* RFC 934::
* RFC 1036::
* RFC 1153::
* RFC 1557::
* RFC 1922::
* RFC 2045::
* RFC 2046::
* RFC 2048::
* RFC 2049::
* plain text::
* Security multipart::
* text/enriched::
* text/plain::
* tm-kernel::                   tm-kernel, tm
* tm-MUA::
* us-ascii::


File: tm-en.info,  Node: 7bit,  Next: 8bit,  Prev: Glossary,  Up: Glossary

7bit
----

   *7bit* means any integer between 0 .. 127.

   Any data represented by 7bit integers is called *7bit data*.

   Textual string consisted of Control characters between 0 .. 31 and
127, and space represented by 32, and graphic characters between 33 ..
236 are called *7bit (textual) string*.

   Traditional Internet MTA (*Note MTA::) can translate 7bit data, so
it is no need to translate by Quoted-Printable (*Note
Quoted-Printable::) or Base64 (*Note Base64::) for 7bit data.

   However if there are too long lines, it can not translate by 7bit MTA
even if it is 7bit data.  RFC 821 (*Note RFC 821::) and RFC 2045 (*Note
RFC 2045::) require lines in 7bit data must be less than 998 bytes.  So
if a "7bit data" has a line more than 999 bytes, it is regarded as
binary (*Note binary::).  For example, Postscript file should be
encoded by Quoted-Printable.


File: tm-en.info,  Node: 8bit,  Next: 94-character set,  Prev: 7bit,  Up: Glossary

8bit
----

   *8bit* means any integer between 0 .. 255.

   Any data represented by 8bit integers is called *8bit data*.

   Textual string consisted of Control characters between 0 .. 31, 127,
and 128 .. 159, and space represented by 32, and graphic characters
between 33 .. 236 and 160 .. 255 are called *8bit (textual) string*.

   For example, iso-8859-1 (*Note iso-8859-1::) or euc-kr (*Note
euc-kr::) are coded-character-set represented by 8bit textual string.

   Traditional Internet MTA (*Note MTA::) can translate only 7bit
(*Note 7bit::) data, so if a 8bit data will be translated such MTA, it
must be encoded by Quoted-Printable (*Note Quoted-Printable::) or Base64
(*Note Base64::).

   However 8bit MTA are increasing today.

   However if there are too long lines, it can not translate by 8bit MTA
even if it is 8bit data.  RFC 2045 (*Note RFC 2045::) require lines in
8bit data must be less than 998 bytes.  So if a "8bit data" has a line
more than 999 bytes, it is regarded as binary (*Note binary::), so it
must be encoded by Base64 or Quoted-Printable.


File: tm-en.info,  Node: 94-character set,  Next: 96-character set,  Prev: 8bit,  Up: Glossary

94-character set
----------------

   *94-character set* is a kind of 1 byte graphic character set (*Note
graphic character set::), each characters are in positions 02/01 (33)
to 07/14 (126) or 10/01 (161) to 15/14 (254).  (ex. ASCII (*Note
ASCII::), JIS X0201-Latin)


File: tm-en.info,  Node: 96-character set,  Next: 94x94-character set,  Prev: 94-character set,  Up: Glossary

96-character set
----------------

   *96-character set* is a kind of 1 byte graphic character set (*Note
graphic character set::), each characters are in positions 02/00 (32)
to 07/15 (126) or 10/00 (160) to 15/15 (255). (ex. ISO 8859)


File: tm-en.info,  Node: 94x94-character set,  Next: ASCII,  Prev: 96-character set,  Up: Glossary

94x94-character set
-------------------

   *94x94-character set* is a kind of 2 byte graphic character set
(*Note graphic character set::), each bytes are in positions 02/01 (33)
to 07/14 (126) or 10/01 (161) to 15/14 (254).  (ex. JIS X0208 (*Note
JIS X0208::), GB 2312 (*Note GB 2312::))


File: tm-en.info,  Node: ASCII,  Next: Base64,  Prev: 94x94-character set,  Up: Glossary

ASCII
-----

   *ASCII* is a 94-character set (*Note 94-character set::) contains
primary latin characters (A-Z, a-z), numbers and some characters.  It is
a standard of the United States of America.  It is a variant of ISO 646
(*Note ISO 646::).

[ASCII]
     "Coded Character Set - 7-Bit American Standard Code for Information
     Interchange", ANSI X3.4:1986.


File: tm-en.info,  Node: Base64,  Next: binary,  Prev: ASCII,  Up: Glossary

Base64
------

   *Base64* is a transfer encoding method of MIME (*Note MIME::)
defined in RFC 2045 (*Note RFC 2045::).

   The encoding process represents 24-bit groups of input bits as output
strings of 4 encoded characters.  Encoded characters represent integer 0
.. 63 or *pad*.  Base64 data must be 4 * n bytes, so pad is used to
adjust size.

   These 65 characters are subset of all versions of ISO 646, including
US-ASCII, and all versions of EBCDIC.  So it is safe even if it is
translated by non-Internet gateways.


File: tm-en.info,  Node: binary,  Next: cn-gb,  Prev: Base64,  Up: Glossary

binary
------

   Any byte stream is called *binary*.

   It does not require structureof lines.  It differs from from 8bit
(*Note 8bit::).

   In addition, if line structured data contain too long line (more than
998 bytes), it is regarded as binary.


File: tm-en.info,  Node: cn-gb,  Next: cn-big5,  Prev: binary,  Up: Glossary

cn-gb, gb2312
-------------

   A MIME charset (*Note MIME charset::) for simplified Chinese mainly
used in the Chinese mainland.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine GB 2312 (*Note GB 2312::).

   It is defined in RFC 1922 (*Note RFC 1922::).


File: tm-en.info,  Node: cn-big5,  Next: CNS 11643,  Prev: cn-gb,  Up: Glossary

cn-big5, big5
-------------

   A MIME charset (*Note MIME charset::) for traditional Chinese mainly
used in Taiwan and Hon Kong.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) not based on ISO 2022 (*Note ISO 2022::).  It is a
de-fact standard.

   It is defined in RFC 1922 (*Note RFC 1922::).

   cf.

[BIG5]
     Institute for Information Industry, "Chinese Coded Character Set in
     Computer", March 1984.

   It corresponds to CNS 11643 (*Note CNS 11643::).


File: tm-en.info,  Node: CNS 11643,  Next: coded character set,  Prev: cn-big5,  Up: Glossary

CNS 11643-1992
--------------

   Graphic character sets (*Note graphic character set::) for Chinese
mainly written by traditional Chinese mainly used in Taiwan and Hong
Kong.  It is a standard of Taiwan.  Currently there are seven
94x94-character set (*Note 94x94-character set::).

   Final byte of ISO 2022 (*Note ISO 2022::) are following:

`plane 1'
     04/07 (`G')

`plane 2'
     04/08 (`H')

`plane 3'
     04/09 (`I')

`plane 4'
     04/10 (`J')

`plane 5'
     04/11 (`K')

`plane 6'
     04/12 (`L')

`plane 7'
     04/13 (`M')

[CNS 11643-1992]
     "Standard Interchange Code for Generally-Used Chinese Characters",
     CNS 11643:1992.


File: tm-en.info,  Node: coded character set,  Next: code extension,  Prev: CNS 11643,  Up: Glossary

Coded character set, Character code
-----------------------------------

   A set of unambiguous rules that establishes a character set and the
one-to-one relationship between the characters of the set and their bit
combinations.


File: tm-en.info,  Node: code extension,  Next: Content-Disposition,  Prev: coded character set,  Up: Glossary

Code extension
--------------

   The techniques for the encoding of characters that are not included
in the character set of a given code. (ex. ISO 2022 (*Note ISO 2022::))


File: tm-en.info,  Node: Content-Disposition,  Next: Content-Type field,  Prev: code extension,  Up: Glossary

Content-Disposition field
-------------------------

   A field to specify presentation of entity or file name.  It is an
extension for MIME (*Note MIME::).

[RFC 1806]
     E R. Troost and S. Dorner, "Communicating Presentation Information
     in Internet Messages: The Content-Disposition Header", June 1995,
     Experimental.


File: tm-en.info,  Node: Content-Type field,  Next: Emacs,  Prev: Content-Disposition,  Up: Glossary

Content-Type field
------------------

   Header field to represent information about body, such as media type
(*Note media type::), MIME charset (*Note MIME charset::).  It is
defined in RFC 2045 (*Note RFC 2045::).

*[Memo]*
     Historically, Content-Type field was proposed in RFC 1049.  In it,
     Content-Type did not distinguish type and subtype.  However MIME
     parser may be able to accept RFC 1049 based Content-Type as
     unknown type.

   Content-Type field is defined as following:

     "Content-Type" ":" *type* "/" *subtype* *( ";" *parameter* )

   For example:

          Content-Type: image/jpeg

          Content-Type: text/plain; charset=iso-2022-jp

*[Memo]*
     A part does not have content-type field is regarded as

               Content-Type: text/plain; charset=us-ascii

     (cf. *Note us-ascii::)

     And a part has unknown type/subtype is regarded as

               Content-Type: application/octet-stream



File: tm-en.info,  Node: Emacs,  Next: encoded-word,  Prev: Content-Type field,  Up: Glossary

Emacs
-----

   In this document, `Emacs' means GNU Emacs released by FSF, and
`emacs' means any variants of GNU Emacs.


File: tm-en.info,  Node: encoded-word,  Next: encapsulation,  Prev: Emacs,  Up: Glossary

encoded-word
------------

   Representation non ASCII (*Note ASCII::) characters in header.  It is
defined in *RFC 2047*.

[RFC 2047]
     K. Moore, "MIME (Multipurpose Internet Mail Extensions) Part Three:
     Message Header Extensions for Non-ASCII Text", November 1996,
     Standards Track (obsolete RFC 1521,1522,1590).


File: tm-en.info,  Node: encapsulation,  Next: entity,  Prev: encoded-word,  Up: Glossary

encapsulation
-------------

   Method to insert whole Internet message (*Note RFC 822::) into
another Internet message.

   For example, it is used to forward a message.

   (cf. *Note message/rfc822::)


File: tm-en.info,  Node: entity,  Next: euc-kr,  Prev: encapsulation,  Up: Glossary

Entity
------

   Header fields and contents of a message or one of the parts in the
body of a multipart (*Note multipart::) entity.

*[Memo]*
     In this document, `entity' might be called "part".


File: tm-en.info,  Node: euc-kr,  Next: FTP,  Prev: entity,  Up: Glossary

euc-kr
------

   A MIME charset (*Note MIME charset::) for Korean.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine KS C5601 (*Note KS C5601::).

   It is defined in RFC 1557 (*Note RFC 1557::).

   cf.

[euc-kr]
     Korea Industrial Standards Association, "Hangul Unix Environment",
     KS C 5861:1992.


File: tm-en.info,  Node: FTP,  Next: GB 2312,  Prev: euc-kr,  Up: Glossary

FTP
---

[FTP: RFC 959]
     Postel, J. and J. Reynolds, "File Transfer Protocol", October 1985,
     STD 9.


File: tm-en.info,  Node: GB 2312,  Next: GB 8565.2,  Prev: FTP,  Up: Glossary

GB 2312-1980
------------

   A 94x94-character set (*Note 94x94-character set::) for Chinese
mainly written by simplified Chinese mainly used in the Chinese
mainland.  It is a standard of China.

   Final byte of ISO 2022 (*Note ISO 2022::) is 04/01 (`A').

[GB 2312]
     "Code of Chinese Graphic Character Set for Information Interchange
     - Primary Set", GB 2312:1980.


File: tm-en.info,  Node: GB 8565.2,  Next: graphic character set,  Prev: GB 2312,  Up: Glossary

GB 8565.2-1988
--------------

   A 94x94-character set (*Note 94x94-character set::) for Chinese as
supplement to GB 2312 (*Note GB 2312::).  It is a standard of China.

[GB 8565.2]
     "Information Processing - Coded Character Sets for Text
     Communication - Part 2: Graphic Characters used with Primary Set",
     GB 8565.2:1988.


File: tm-en.info,  Node: graphic character set,  Next: hz-gb2312,  Prev: GB 8565.2,  Up: Glossary

Graphic Character Set
---------------------

   Coded character set (*Note coded character set::) for graphic
characters.


File: tm-en.info,  Node: hz-gb2312,  Next: ISO 2022,  Prev: graphic character set,  Up: Glossary

hz-gb2312
---------

   A MIME charset (*Note MIME charset::) for simplified Chinese mainly
used in the Chinese mainland.

   It extends ASCII (*Note ASCII::) to combine GB 2312 (*Note GB
2312::), its technique is like iso-2022-jp (*Note iso-2022-jp::), but
it is designed to be ASCII printable to use special form for ESC
sequence to designate GB 2312 to G0.

   It is defined in RFC 1842 and 1843.

[RFC 1842]
     Y. Wei, Y. Zhang, J. Li, J. Ding and Y. Jiang, "ASCII Printable
     Characters-Based Chinese Character Encoding for Internet Messages",
     August 1995, Informational.

[RFC 1843]
     F. Lee, "HZ - A Data Format for Exchanging Files of Arbitrarily
     Mixed Chinese and ASCII characters", August 1995, Informational.


File: tm-en.info,  Node: ISO 2022,  Next: iso-2022-cn,  Prev: hz-gb2312,  Up: Glossary

ISO 2022
--------

   It is a standard for character code structure and code extension
(*Note code extension::) technique.

[ISO 2022]
     International Organization for Standardization (ISO), "Information
     Processing: ISO 7-bit and 8-bit coded character sets: Code
     extension techniques", ISO/IEC 2022:1994.


File: tm-en.info,  Node: iso-2022-cn,  Next: iso-2022-cn-ext,  Prev: ISO 2022,  Up: Glossary

iso-2022-cn
-----------

   A MIME charset (*Note MIME charset::) for Chinese.

   It is a 7bit (*Note 7bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine GB 2312 (*Note GB 2312::) and/or CNS 11643
plain 1, plain 2 (*Note CNS 11643::).

   It is defined in RFC 1922 (*Note RFC 1922::).


File: tm-en.info,  Node: iso-2022-cn-ext,  Next: iso-2022-jp,  Prev: iso-2022-cn,  Up: Glossary

iso-2022-cn-ext
---------------

   A MIME charset (*Note MIME charset::) for Chinese.

   It is a 7bit (*Note 7bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine GB 2312 (*Note GB 2312::), CNS 11643 plain 1
.. 7 (*Note CNS 11643::), ISO-IR-165 (*Note ISO-IR-165::) and other
Chinese graphic character sets.

   It is defined in RFC 1922 (*Note RFC 1922::).

*[Memo]*
     MULE 2.3 and current XEmacs/mule can not use it correctly.

     Emacs/mule can use it.


File: tm-en.info,  Node: iso-2022-jp,  Next: iso-2022-jp-2,  Prev: iso-2022-cn-ext,  Up: Glossary

iso-2022-jp
-----------

   A MIME charset (*Note MIME charset::) for Japanese.

   It is a 7bit (*Note 7bit::) coded character set (*Note coded
character set::) based on old ISO 2022 (*Note ISO 2022::).  It switches
ASCII (*Note ASCII::), JIS X0201-Latin, JIS X0208-1978 (*Note JIS
C6226::) and JIS X0208-1983 (*Note JIS X0208::).

   It is defined in RFC 1468.

*[Memo]*
     JIS X0208-1997? will define it in annex as non-ISO 2022 (*Note ISO
     2022::) encoding.

[iso-2022-jp: RFC 1468]
     Murai J., M. Crispin, and E. van der Poel, "Japanese Character
     Encoding for Internet Messages", June 1993.


File: tm-en.info,  Node: iso-2022-jp-2,  Next: iso-2022-kr,  Prev: iso-2022-jp,  Up: Glossary

iso-2022-jp-2
-------------

   A MIME charset (*Note MIME charset::), which is a multilingual
extension of iso-2022-jp (*Note iso-2022-jp::).

   It is defined in RFC 1554.

[iso-2022-jp-2: RFC 1554]
     Ohta M. and Handa K., "ISO-2022-JP-2: Multilingual Extension of
     ISO-2022-JP", December 1993, Informational.


File: tm-en.info,  Node: iso-2022-kr,  Next: ISO 646,  Prev: iso-2022-jp-2,  Up: Glossary

iso-2022-kr
-----------

   A MIME charset (*Note MIME charset::) for Korean language (Hangul
script).

   It is based on ISO 2022 (*Note ISO 2022::) code extension (*Note
code extension::) technique to extend ASCII (*Note ASCII::) to use KS
C5601 (*Note KS C5601::) as 7bit (*Note 7bit::) text.

   It is defined in RFC 1557 (*Note RFC 1557::).


File: tm-en.info,  Node: ISO 646,  Next: ISO 8859-1,  Prev: iso-2022-kr,  Up: Glossary

ISO 646
-------

[ISO 646]
     International Organization for Standardization (ISO), "Information
     technology: ISO 7-bit coded character set for information
     interchange", ISO/IEC 646:1991.


File: tm-en.info,  Node: ISO 8859-1,  Next: iso-8859-1,  Prev: ISO 646,  Up: Glossary

ISO 8859-1
----------

[ISO 8859-1]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     1: Latin Alphabet No.1", ISO 8859-1:1987.


File: tm-en.info,  Node: iso-8859-1,  Next: ISO 8859-2,  Prev: ISO 8859-1,  Up: Glossary

iso-8859-1
----------

   *iso-8859-1* is a MIME charset (*Note MIME charset::) for
west-European languages written by Latin script.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine ISO 8859-1 (*Note ISO 8859-1::).

   It is defined in RFC 2046 (*Note RFC 2046::).


File: tm-en.info,  Node: ISO 8859-2,  Next: iso-8859-2,  Prev: iso-8859-1,  Up: Glossary

ISO 8859-2
----------

[ISO 8859-2]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     2: Latin alphabet No.2", ISO 8859-2:1987.


File: tm-en.info,  Node: iso-8859-2,  Next: ISO 8859-3,  Prev: ISO 8859-2,  Up: Glossary

iso-8859-2
----------

   *iso-8859-2* is a MIME charset (*Note MIME charset::) for
east-European languages written by Latin script.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine ISO 8859-2 (*Note ISO 8859-2::).

   It is defined in RFC 2046 (*Note RFC 2046::).


File: tm-en.info,  Node: ISO 8859-3,  Next: ISO 8859-4,  Prev: iso-8859-2,  Up: Glossary

ISO 8859-3
----------

[ISO 8859-3]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     3: Latin alphabet No.3", ISO 8859-3:1988.


File: tm-en.info,  Node: ISO 8859-4,  Next: ISO 8859-5,  Prev: ISO 8859-3,  Up: Glossary

ISO 8859-4
----------

[ISO 8859-4]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     4: Latin alphabet No.4", ISO 8859-4:1988.


File: tm-en.info,  Node: ISO 8859-5,  Next: iso-8859-5,  Prev: ISO 8859-4,  Up: Glossary

ISO 8859-5
----------

[ISO 8859-5]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     5: Latin/Cyrillic alphabet", ISO 8859-5:1988.


File: tm-en.info,  Node: iso-8859-5,  Next: ISO 8859-6,  Prev: ISO 8859-5,  Up: Glossary

iso-8859-5
----------

   *iso-8859-5* is a MIME charset (*Note MIME charset::) for Cyrillic
script.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine ISO 8859-5 (*Note ISO 8859-5::).

   It is defined in RFC 2046 (*Note RFC 2046::).


File: tm-en.info,  Node: ISO 8859-6,  Next: ISO 8859-7,  Prev: iso-8859-5,  Up: Glossary

ISO 8859-6
----------

[ISO 8859-6]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     6: Latin/Arabic alphabet", ISO 8859-6:1987.


File: tm-en.info,  Node: ISO 8859-7,  Next: iso-8859-7,  Prev: ISO 8859-6,  Up: Glossary

ISO 8859-7
----------

[ISO 8859-7]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     7: Latin/Greek alphabet", ISO 8859-7:1987.


File: tm-en.info,  Node: iso-8859-7,  Next: ISO 8859-8,  Prev: ISO 8859-7,  Up: Glossary

iso-8859-7
----------

   *iso-8859-7* is a MIME charset (*Note MIME charset::) for Greek
script.

   It is a 8bit (*Note 8bit::) coded character set (*Note coded
character set::) based on ISO 2022 (*Note ISO 2022::).  It extends ASCII
(*Note ASCII::) to combine ISO 8859-7 (*Note ISO 8859-7::).

   It is defined in RFC 1947.

[iso-8859-7: RFC 1947]
     D. Spinellis, "Greek Character Encoding for Electronic Mail
     Messages", May 1996, Informational.


File: tm-en.info,  Node: ISO 8859-8,  Next: ISO 8859-9,  Prev: iso-8859-7,  Up: Glossary

ISO 8859-8
----------

[ISO 8859-8]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     8: Latin/Hebrew alphabet", ISO 8859-8:1988.


File: tm-en.info,  Node: ISO 8859-9,  Next: ISO-IR-165,  Prev: ISO 8859-8,  Up: Glossary

ISO 8859-9
----------

[ISO 8859-9]
     International Organization for Standardization (ISO), "Information
     Processing - 8-bit Single-Byte Coded Graphic Character Sets - Part
     9: Latin alphabet No.5", ISO 8859-9:1990.


File: tm-en.info,  Node: ISO-IR-165,  Next: JIS X0201,  Prev: ISO 8859-9,  Up: Glossary

ISO-IR-165, CCITT Extended GB
-----------------------------

   A 94x94-character set (*Note 94x94-character set::) for Chinese
mainly written by simplified Chinese mainly used in the Chinese mainland
registered by CCITT.

   It consists of GB 2312 (*Note GB 2312::), GB 8565.2 (*Note GB
8565.2::) and additional 150 characters.

   Final byte of ISO 2022 (*Note ISO 2022::) is 04/05 (`E').


File: tm-en.info,  Node: JIS X0201,  Next: JIS C6226,  Prev: ISO-IR-165,  Up: Glossary

JIS X0201
---------

   It defines two 94-character set (*Note 94-character set::), for Latin
script (a variant of ISO 646 (*Note ISO 646::)) and Katakana script, and
7bit and 8bit coded character set (*Note coded character set::)s.

   It was renamed from *JIS C6220-1976*.

[JIS X0201-1976]
     Japanese Standards Association, "Code for Information Interchange",
     JIS X 0201-1976:.

   In addition, revised version will be published in 1997.

[JIS X0201-1997?]
     Japanese Standards Association, "7-bit and 8-bit coded character
     sets for information interchange", JIS X 0201:1997?  draft.


File: tm-en.info,  Node: JIS C6226,  Next: JIS X0208,  Prev: JIS X0201,  Up: Glossary

JIS C6226-1978
--------------

   A 94x94-character set (*Note 94x94-character set::) for Japanese.
It was renamed to JIS X0208-1978.

   (cf. *Note JIS X0208::)


File: tm-en.info,  Node: JIS X0208,  Next: JIS X0212,  Prev: JIS C6226,  Up: Glossary

JIS X0208
---------

   A 94x94-character set (*Note 94x94-character set::) for Japanese.
Japanese standard.  It was published in 1978, and revised in 1983 and
1990.  In the Internet message, 1983 edition is major.

   JIS X0208 contains some symbols, numbers, primary Latin script,
Hiragana script, Katakana script, Greek script, Cyrillic script, box
drawing parts, Kanji (Ideographic characters used in Japanese).  Notice
that some symbols and box drawing parts were added in 1983 and some
Kanjis were changed or swapped code points.  So 1978 edition and 1983
edition are regarded as different graphic character set.

   1990 edition added some characters, so designation of 1990 edition
requires `identify revised registration' sequence, ESC 02/06 4/0 as
prefix of designation sequence.

[JIS X0208-1978]
     Japanese Standards Association, "Code of the Japanese graphic
     character set for information interchange", JIS C6226:1978.

[JIS X0208-1983,1990]
     Japanese Standards Association, "Code of the Japanese graphic
     character set for information interchange", JIS X0208:1983,1990.

   In addition, revised version will be published in 1997. (It does not
change graphic character set)

[JIS X0208-1997?]
     Japanese Standards Association, "7-bit and 8-bit double byte coded
     Kanji sets for information interchange", JIS X 0208:1997? draft.


File: tm-en.info,  Node: JIS X0212,  Next: koi8-r,  Prev: JIS X0208,  Up: Glossary

JIS X0212-1990
--------------

   A 94x94-character set (*Note 94x94-character set::) for Japanese as
supplement to JIS X0208 (*Note JIS X0208::).  It is a standard of Japan.

   Final byte of ISO 2022 (*Note ISO 2022::) is 04/04 (`D').


File: tm-en.info,  Node: koi8-r,  Next: KS C5601,  Prev: JIS X0212,  Up: Glossary

koi8-r
------

   A MIME charset (*Note MIME charset::) for Cyrillic script for
Russian or other languages.

   It is a 1 byte 8bit (*Note 8bit::) coded character set (*Note coded
character set::), not based on ISO 2022 (*Note ISO 2022::).  It is a
de-fact standard.

   It is defined in RFC 1489.

[RFC 1489]
     A. Chernov, "Registration of a Cyrillic Character Set", July 1993.


File: tm-en.info,  Node: KS C5601,  Next: media type,  Prev: koi8-r,  Up: Glossary

KS C5601-1987
-------------

   A 94x94-character set (*Note 94x94-character set::) for Korean
language (Hangul script).  Korean Standard.  Final byte of ISO 2022
(*Note ISO 2022::) is 04/03 (`C').

[KS C5601]
     Korea Industrial Standards Association, "Code for Information
     Interchange (Hangul and Hanja)", KS C 5601:1987.


File: tm-en.info,  Node: media type,  Next: message,  Prev: KS C5601,  Up: Glossary

media type
----------

   *media type* specifies the nature of the data in the body of MIME
(*Note MIME::) entity (*Note entity::).  It consists of *type* and
*subtype*.  It is defined in RFC 2046 (*Note RFC 2046::).

   Currently there are following types:

   * *text*

   * *image*

   * *audio*

   * *video*

   * *application*

   * *multipart* (*Note multipart::)

   * *message*

   And there are various subtypes, for example,
application/octet-stream, audio/basic, image/jpeg, multipart/mixed
(*Note multipart/mixed::), text/plain (*Note text/plain::),
video/mpeg...

   You can refer registered media types at MEDIA TYPES
(ftp://ftp.isi.edu/in-notes/iana/assignments/media-types).

   In addition, you can use private type or subtype using *x-token*,
which as the prefix `x-'.  However you can not use them in public.

   (cf. *Note Content-Type field::)


File: tm-en.info,  Node: message,  Next: message/rfc822,  Prev: media type,  Up: Glossary

message
-------

   In this document, it means mail defined in RFC 822 (*Note RFC 822::)
and news message defined in RFC 1036 (*Note RFC 1036::).


File: tm-en.info,  Node: message/rfc822,  Next: method,  Prev: message,  Up: Glossary

message/rfc822
--------------

   *message/rfc822* indicates that the body contains an encapsulated
message, with the syntax of an RFC 822 (*Note RFC 822::) message.  It is
the replacement of traditional RFC 934 (*Note RFC 934::) encapsulation.
It is defined in RFC 2046 (*Note RFC 2046::).


File: tm-en.info,  Node: method,  Next: MIME,  Prev: message/rfc822,  Up: Glossary

method
------

   Application program of tm-view to process for specified media type
(*Note media type::) when user plays an entity.

   There are two kinds of methods, *internal method* and *external
method*.  Internal method is written by Emacs Lisp.  External method is
written by C or script languages and called by asynchronous process
call.

   (cf. *Note (tm-view-en)method::)


File: tm-en.info,  Node: MIME,  Next: MIME charset,  Prev: method,  Up: Glossary

MIME
----

   MIME stands for *Multipurpose Internet Mail Extensions*, it is an
extension for RFC 822 (*Note RFC 822::).

   According to RFC 2045:

   STD 11, RFC 822, defines a message representation protocol specifying
considerable detail about US-ASCII message headers, and leaves the
message content, or message body, as flat US-ASCII text.  This set of
documents, collectively called the Multipurpose Internet Mail
Extensions, or MIME, redefines the format of messages to allow for

  1. textual message bodies in character sets other than US-ASCII,

  2. an extensible set of different formats for non-textual message
     bodies,

  3. multi-part message bodies, and

  4. textual header information in character sets other than US-ASCII.

   It is defined in RFC 2045 (*Note RFC 2045::), RFC 2046 (*Note RFC
2046::), RFC 2047 (*Note encoded-word::), RFC 2048 (*Note RFC 2048::)
and RFC 2049 (*Note RFC 2049::).


File: tm-en.info,  Node: MIME charset,  Next: MTA,  Prev: MIME,  Up: Glossary

MIME charset
------------

   Coded character set (*Note coded character set::) used in
Content-Type field (*Note Content-Type field::) or charset parameter of
encoded-word (*Note encoded-word::).

   It is defined in RFC 2045 (*Note RFC 2045::).

   iso-2022-jp (*Note iso-2022-jp::) or euc-kr (*Note euc-kr::) are
kinds of it.  (In this document, MIME charsets are written by small
letters to distinguish graphic character set (*Note graphic character
set::).  For example, ISO 8859-1 is a graphic character set, and
iso-8859-1 is a MIME charset)


File: tm-en.info,  Node: MTA,  Next: MUA,  Prev: MIME charset,  Up: Glossary

MTA
---

   *Message Transfer Agent*.  It means mail transfer programs (ex.
sendmail) and news servers.

   (cf. *Note MUA::)


File: tm-en.info,  Node: MUA,  Next: MULE,  Prev: MTA,  Up: Glossary

MUA
---

   *Message User Agent*.  It means mail readers and news readers.

   (cf. *Note MTA::)


File: tm-en.info,  Node: MULE,  Next: multipart,  Prev: MUA,  Up: Glossary

MULE
----

   Multilingual extension of GNU Emacs (*Note Emacs::) by HANDA
Ken'ichi et al.

[MULE]
     Nishikimi M., Handa K. and Tomura S., "Mule: MULtilingual
     Enhancement to GNU Emacs", Proc. of INET'93, August, 1993.

   Now, FSF and HANDA Ken'ichi et al. are working to merge MULE feature
into Emacs, there is alpha version of mule merged emacs
(ftp://etlport.etl.go.jp/pub/mule/mule-19.33-delta.taz).

   In addition, there is XEmacs with mule feature.

   So now, there are 3 kinds of mule variants.

   In this document, *mule* means any mule variants, *MULE* means
original MULE (..2.3), *Emacs/mule* means mule merged Emacs,
*XEmacs/mule* means XEmacs with mule feature.


File: tm-en.info,  Node: multipart,  Next: multipart/alternative,  Prev: MULE,  Up: Glossary

Multipart
---------

   *multipart* means media type (*Note media type::) to insert multiple
entities (*Note entity::) in a single body.  Or it also indicates a
message consists of multiple entities.

   There are following subtypes registered in RFC 2046 (*Note RFC
2046::):

   * multipart/mixed (*Note multipart/mixed::)

   * multipart/alternative (*Note multipart/alternative::)

   * multipart/digest (*Note multipart/digest::)

   * multipart/parallel (*Note multipart/parallel::)

and registered in RFC 1847 (*Note Security multipart::):

   * multipart/signed (*Note multipart/signed::)

   * multipart/encrypted (*Note multipart/encrypted::)


File: tm-en.info,  Node: multipart/alternative,  Next: multipart/digest,  Prev: multipart,  Up: Glossary

multipart/alternative
---------------------

   *multipart/digest* is one of multipart (*Note multipart::) media
types.  This type is syntactically identical to multipart/mixed (*Note
multipart/mixed::), but the semantics are different.  In particular,
each of the body parts is an "alternative" version of the same
information.

   (cf. *Note RFC 2046::)


File: tm-en.info,  Node: multipart/digest,  Next: multipart/encrypted,  Prev: multipart/alternative,  Up: Glossary

multipart/digest
----------------

   *multipart/digest* is one of multipart (*Note multipart::) media
types.  This type is syntactically identical to multipart/mixed (*Note
multipart/mixed::), but the semantics are different.  In particular, in
a digest, the default Content-Type value for a body part is changed
from text/plain (*Note text/plain::) to message/rfc822 (*Note
message/rfc822::).

   This is the replacement of traditional RFC 1153 (*Note RFC 1153::)
based encapsulation (*Note encapsulation::).

   (cf. *Note RFC 2046::)


File: tm-en.info,  Node: multipart/encrypted,  Next: multipart/mixed,  Prev: multipart/digest,  Up: Glossary

multipart/encrypted
-------------------

   It is a Security multipart (*Note Security multipart::) defined in
RFC 1847, used to represent encrypted message.

   (cf. *Note PGP/MIME::)


File: tm-en.info,  Node: multipart/mixed,  Next: multipart/parallel,  Prev: multipart/encrypted,  Up: Glossary

multipart/mixed
---------------

   Primary and default subtype of multipart (*Note multipart::), it is
used when the body parts are independent and need to be bundled in a
particular order.

   (cf. *Note RFC 2046::)


File: tm-en.info,  Node: multipart/parallel,  Next: multipart/signed,  Prev: multipart/mixed,  Up: Glossary

multipart/parallel
------------------

   *multipart/parallel* is a subtype of multipart (*Note multipart::).
This type is syntactically identical to multipart/mixed (*Note
multipart/mixed::), but the semantics are different.  In particular, in
a parallel entity, the order of body parts is not significant.

   (cf. *Note RFC 2046::)


File: tm-en.info,  Node: multipart/signed,  Next: PGP,  Prev: multipart/parallel,  Up: Glossary

multipart/signed
----------------

   It is a Security multipart (*Note Security multipart::) defined in
RFC 1847, used to represent signed message.

   (cf. *Note PGP/MIME::)


File: tm-en.info,  Node: PGP,  Next: PGP-kazu,  Prev: multipart/signed,  Up: Glossary

PGP
---

   A public key encryption program by Phil Zimmermann.  It provides
encryption and signature for message (*Note message::).  PGP stands for
*Pretty Good Privacy*.

   Traditional PGP uses RFC 934 (*Note RFC 934::) encapsulation (*Note
encapsulation::).  It is conflict with MIME (*Note MIME::).  So
PGP/MIME (*Note PGP/MIME::) is defined.  On the other hand, PGP-kazu
(*Note PGP-kazu::) was proposed to use PGP encapsulation in MIME.  But
it is obsoleted.

[PGP: RFC 1991]
     D. Atkins, W. Stallings and P. Zimmermann, "PGP Message Exchange
     Formats", August 1996, Informational.


File: tm-en.info,  Node: PGP-kazu,  Next: PGP/MIME,  Prev: PGP,  Up: Glossary

PGP-kazu
--------

   In this document, *PGP-kazu* means a method to use traditional PGP
encapsulation in MIME (*Note MIME::), proposed by YAMAMOTO Kazuhiko.

   PGP-kazu defines a media type (*Note media type::),
*application/pgp*.

   In application/pgp entity, PGP encapsulation (*Note encapsulation::)
is used.  PGP encapsulation conflicts with MIME, so it requires
PGP-processing to read as MIME message.

   It was obsoleted, so you should use PGP/MIME (*Note PGP/MIME::).
However if you want to use traditional PGP message, it might be
available.


File: tm-en.info,  Node: PGP/MIME,  Next: Quoted-Printable,  Prev: PGP-kazu,  Up: Glossary

PGP/MIME
--------

   PGP (*Note PGP::) and MIME (*Note MIME::) integration proposed by
Michael Elkins.

   It is based on RFC 1847 (*Note Security multipart::), so it is
harmonious with MIME, but it is not compatible with traditional PGP
encapsulation.  However MIME MUA can read PGP/MIME signed message even
if it does not support PGP/MIME.

   PGP/MIME (*Note PGP/MIME::) will be standard of PGP message.

[PGP/MIME: RFC 2015]
     M. Elkins, "MIME Security with Pretty Good Privacy (PGP)", October
     1996, Standards Track.


File: tm-en.info,  Node: Quoted-Printable,  Next: RFC 821,  Prev: PGP/MIME,  Up: Glossary

Quoted-Printable
----------------

   *Quoted-Printable* is a transfer encoding method of MIME (*Note
MIME::) defined in RFC 2045 (*Note RFC 2045::).

   If the data being encoded are mostly US-ASCII text, the encoded form
of the data remains largely recognizable by humans.

   (cf. *Note Base64::)


File: tm-en.info,  Node: RFC 821,  Next: RFC 822,  Prev: Quoted-Printable,  Up: Glossary

RFC 821
-------

[SMTP: RFC 821]
     J. Postel, "Simple Mail Transfer Protocol", August 1982, STD 10.


File: tm-en.info,  Node: RFC 822,  Next: RFC 934,  Prev: RFC 821,  Up: Glossary

RFC 822
-------

   A RFC defines format of Internet mail message, mainly *message
header*.

*[Memo]*
     news message is based on RFC 822, so *Internet message* may be
     more suitable than *Internet mail* .

[RFC 822]
     D. Crocker, "Standard for the Format of ARPA Internet Text
     Messages", August 1982, STD 11.


File: tm-en.info,  Node: RFC 934,  Next: RFC 1036,  Prev: RFC 822,  Up: Glossary

RFC 934
-------

   A RFC defines an *encapsulation* (*Note encapsulation::) method for
Internet mail (*Note RFC 822::).

   It conflicts with MIME (*Note MIME::), so you should use
message/rfc822 (*Note message/rfc822::).

[RFC 934]
     Marshall T. Rose and Einar A. Stefferud, "Proposed Standard for
     Message Encapsulation", January 1985.


File: tm-en.info,  Node: RFC 1036,  Next: RFC 1153,  Prev: RFC 934,  Up: Glossary

RFC 1036
--------

   A RFC defines format of USENET message.  It is a subset of RFC 822
(*Note RFC 822::).  It is not Internet standard, but a lot of netnews
excepting Usenet uses it.

[USENET: RFC 1036]
     M. Horton and R. Adams, "Standard for Interchange of USENET
     Messages", December 1987, (obsolete RFC 850).


File: tm-en.info,  Node: RFC 1153,  Next: RFC 1557,  Prev: RFC 1036,  Up: Glossary

RFC 1153
--------

[RFC 1153]
     F. Wancho, "Digest Message Format", April 1990.


File: tm-en.info,  Node: RFC 1557,  Next: RFC 1922,  Prev: RFC 1153,  Up: Glossary

RFC 1557
--------

   A RFC defines MIME charset (*Note MIME charset::)s for Korean, euc-kr
(*Note euc-kr::) and iso-2022-kr (*Note iso-2022-kr::).

[RFC 1557]
     U. Choi, K. Chon and H. Park, "Korean Character Encoding for
     Internet Messages", December 1993, Informational.


File: tm-en.info,  Node: RFC 1922,  Next: RFC 2045,  Prev: RFC 1557,  Up: Glossary

RFC 1922
--------

   A RFC defines MIME charset (*Note MIME charset::)s for Chinese,
iso-2022-cn (*Note iso-2022-cn::), iso-2022-cn-ext (*Note
iso-2022-cn-ext::), cn-gb (*Note cn-gb::), cn-big5 (*Note cn-big5::),
etc.

   In addition, it defines additional parameters of Content-Type field
(*Note Content-Type field::) field, *charset-edition* and
*charset-extension*.

[RFC 1922]
     Zhu, HF., Hu, DY., Wang, ZG., Kao, TC., Chang, WCH. and Crispin,
     M., "Chinese Character Encoding for Internet Messages", March 1996,
     Informational.


File: tm-en.info,  Node: RFC 2045,  Next: RFC 2046,  Prev: RFC 1922,  Up: Glossary

RFC 2045
--------

[RFC 2045]
     N. Freed and N. Borenstein, "Multipurpose Internet Mail Extensions
     (MIME) Part One: Format of Internet Message Bodies", November 1996,
     Standards Track (obsolete RFC 1521, 1522, 1590).


File: tm-en.info,  Node: RFC 2046,  Next: RFC 2048,  Prev: RFC 2045,  Up: Glossary

RFC 2046
--------

[RFC 2046]
     N. Freed and N. Borenstein, "Multipurpose Internet Mail Extensions
     (MIME) Part Two: Media Types", November 1996, Standards Track
     (obsolete RFC 1521, 1522, 1590).


File: tm-en.info,  Node: RFC 2048,  Next: RFC 2049,  Prev: RFC 2046,  Up: Glossary

RFC 2048
--------

[RFC 2048]
     N. Freed, J. Klensin and J. Postel, "Multipurpose Internet Mail
     Extensions (MIME) Part Four: Registration Procedures", November
     1996, Standards Track (obsolete RFC 1521, 1522, 1590).


File: tm-en.info,  Node: RFC 2049,  Next: plain text,  Prev: RFC 2048,  Up: Glossary

RFC 2049
--------

[RFC 2049]
     N. Freed and N. Borenstein, "Multipurpose Internet Mail Extensions
     (MIME) Part Five: Conformance Criteria and Examples", November
     1996, Standards Track (obsolete RFC 1521, 1522, 1590).


File: tm-en.info,  Node: plain text,  Next: Security multipart,  Prev: RFC 2049,  Up: Glossary

plain text
----------

   A textual data represented by only coded character set (*Note coded
character set::).  It does not have information about font or
typesetting.  (cf. *Note text/plain::)


File: tm-en.info,  Node: Security multipart,  Next: text/enriched,  Prev: plain text,  Up: Glossary

Security multipart
------------------

   A format to represent signed/encrypted message in MIME (*Note
MIME::).

   It defines two multipart media types, *multipart/signed* (*Note
multipart/signed::) and *multipart/encrypted* (*Note
multipart/encrypted::).

   MOSS and PGP/MIME (*Note PGP/MIME::) are based on it.

[Security multipart: RFC 1847]
     James Galvin, Gale Murphy, Steve Crocker and Ned Freed, "Security
     Multiparts for MIME: Multipart/Signed and Multipart/Encrypted",
     October 1995, Standards Track.


File: tm-en.info,  Node: text/enriched,  Next: text/plain,  Prev: Security multipart,  Up: Glossary

text/enriched
-------------

[text/enriched: RFC 1896]
     P. Resnick and A. Walker, "The text/enriched MIME Content-type",
     February 1996, (obsolete RFC 1563).


File: tm-en.info,  Node: text/plain,  Next: tm-kernel,  Prev: text/enriched,  Up: Glossary

text/plain
----------

   *text/plain* is a media type (*Note media type::) for plain text
(*Note plain text::), defined in RFC 2046 (*Note RFC 2046::).

   The default media type of "text/plain; charset=us-ascii" for Internet
mail describes existing Internet practice.  That is, it is the type of
body defined by RFC 822 (*Note RFC 822::).

   (cf. *Note MIME charset::) (cf. *Note us-ascii::)


File: tm-en.info,  Node: tm-kernel,  Next: tm-MUA,  Prev: text/plain,  Up: Glossary

tm-kernel, tm
-------------

   A libraries to provide user interface about MIME (*Note MIME::) for
emacs.  tm stands for `tools for MIME'.

*[Unimportant notice(^-^;]*
        *  tm may not stand for "tiny-mime"(^-^;

        *  tm may not stand for initial of an author (^-^;

        *  "Tools for MIME" may be strained (^-^;


File: tm-en.info,  Node: tm-MUA,  Next: us-ascii,  Prev: tm-kernel,  Up: Glossary

tm-MUA
------

   MUA (*Note MUA::) or MUA extender using tm (*Note tm-kernel::).

   *tm oomori package* has following extenders:

   * *tm-mh-e* (*Note (tm-mh-e-en)::)  for mh-e (*Note (mh-e)::)

   * *tm-gnus* (*Note (tm-gnus_en)::) for GNUS

   * *gnus-mime* (*Note (gnus-mime-en)::) for Gnus

   * *tm-vm* (*Note (tm-vm-en)::) for VM

   * *tm-rmail* for RMAIL


File: tm-en.info,  Node: us-ascii,  Prev: tm-MUA,  Up: Glossary

us-ascii
--------

   A MIME charset (*Note MIME charset::) for primary Latin script mainly
written by English or other languages.

   It is a 7bit coded character set (*Note coded character set::) based
on ISO 2022 (*Note ISO 2022::), it contains only ASCII (*Note ASCII::)
and code extension (*Note code extension::) is not allowed.

   It is standard coded character set of Internet mail.  If MIME
charset is not specified, *us-ascii* is used as default.

   In addition, *ASCII* of RFC 822 (*Note RFC 822::) should be
interpreted as us-ascii.


File: tm-en.info,  Node: Setting,  Next: Bug report,  Prev: Introduction,  Up: Top

Setting
*******

   In the tm package, two files, `mime-setup.el' and `tm-setup.el', are
provided to ease the setup.

   The `mime-setup.el' is used for the whole MIME related setup
including MIME encoding using `tm-edit.el', while `tm-setup.el' is used
to set up tm-MUA only.

* Menu:

* mime-setup::                  Normal setting
* tm-setup::                    Setting not to use tm-edit
* setting for VM::              Setting for VM
* manual setting::              Setting up without loading provided setup files


File: tm-en.info,  Node: mime-setup,  Next: tm-setup,  Prev: Setting,  Up: Setting

Normal setting
==============

   If you want normal setting, please use *mime-setup*.  For example,
please insert following into `~/.emacs':

     (load "mime-setup")

   As `mime-setup.el' loads `tm-setup.el', you don't need to load
`tm-setup.el' when you use `mime-setup.el' (Description of old version
of Gnus FAQ is wrong!)

* Menu:

* signature::
* Notice about GNUS::           Notices for GNUS


File: tm-en.info,  Node: signature,  Next: Notice about GNUS,  Prev: mime-setup,  Up: mime-setup

signature
---------

   You can set up the *automatic signature selection tool* using
`mime-setup'. If you want to automatically select the signature file
depending on how the message headers show, add lines like shown below
to your .emacs (Refer to the reference manual of `signature.el' for
more details).

     (setq signature-file-alist
           '((("Newsgroups" . "jokes")       . "~/.signature-jokes")
             (("Newsgroups" . ("zxr" "nzr")) . "~/.signature-sun")
             (("To" . ("ishimaru" "z-suzuki")) . "~/.signature-sun")
             (("To" . "tea")                 . "~/.signature-jokes")
             (("To" . ("sim" "oku" "takuo")) . "~/.signature-formal")
             ))

 - Variable: mime-setup-use-signature
     If it is not `nil', `mime-setup.el' sets up for `signature.el'.
     Its default value is `t'.

 - Variable: mime-setup-signature-key-alist
     It defines key to bind signature inserting command for each
     major-mode.  Its default value is following:

          	((mail-mode . "\C-c\C-w"))

     If you want to change, please rewrite it.  For example:

          (set-alist 'mime-setup-signature-key-alist
          	   'news-reply-mode "\C-c\C-w")


 - Variable: mime-setup-default-signature-key
     If key to bind signature inserting command for a major-mode is not
     found from `mime-setup-signature-key-alist', its value is used as
     key.  Its default value is `"\C-c\C-s"'.


File: tm-en.info,  Node: Notice about GNUS,  Prev: signature,  Up: mime-setup

Notices for GNUS
----------------

   When `mime-setup.el' sets up for `signature.el', it sets variable
`gnus-signature-file' to `nil'.  Therefore GNUS does not insert
signature automatically when it is sending a message.  Reason of this
setting is following:

   GNUS inserts signature after `tm-edit.el' composed as MIME message.
Therefore signature inserted by GNUS is not processed as a valid MIME
part.  In particular, for multipart message, signature places in outside
of MIME part.  So MIME MUA might not display it.

   Other notice is key bind.  In historical reason, key bind to insert
signature is `C-c C-s' (like mh-e (*Note (mh-e)::)) instead of `C-c
C-w'. If you change to GNUS's default, please set following:

     (set-alist 'mime-setup-signature-key-alist 'news-reply-mode "\C-c\C-w")


File: tm-en.info,  Node: tm-setup,  Next: setting for VM,  Prev: mime-setup,  Up: Setting

Setting not to use tm-edit
==========================

   *tm-setup* only sets up tm-MUA (*Note tm-MUA::)s.  In other words,
it is a setting to avoid to use tm-edit.  If you don't want to compose
MIME message or want to use other MIME composer, please use it instead
of `mime-setup.el'.

   For example, please insert following into `~/.emacs':

     (load "tm-setup")

*[Memo]*
     If you use `mime-setup.el', you you don't need to load
     `tm-setup.el'.


File: tm-en.info,  Node: setting for VM,  Next: manual setting,  Prev: tm-setup,  Up: Setting

Setting for VM
==============

   If you use *vm*, please insert following in `~/.vm':

     (require 'tm-vm)

*[Notice]*
     If you use *BBDB*, please insert `(require 'tm-vm)' *after*
     `(bbdb-insinuate-vm)'.


File: tm-en.info,  Node: manual setting,  Prev: setting for VM,  Up: Setting

Setting up without loading provided setup files
===============================================

   You may find the valuable hints in `mime-setup.el' or `tm-setup.el'
if you want to set up MIME environment without loading the tm-provided
setup files.

*[Memo]*
     Current tm provides some convenient features to expect tm-edit, and
     they can not use if `mime-setup.el' is not used.  If you want to
     set up original setting to use tm-edit, please declare following
     setting:

          (provide 'mime-setup)



File: tm-en.info,  Node: Bug report,  Next: Acknowledgments,  Prev: Setting,  Up: Top

How to report bug and about mailing list of tm
**********************************************

   If you write bug-reports and/or suggestions for improvement, please
send them to the tm Mailing List:

   *  Japanese <bug-tm-ja@chamonix.jaist.ac.jp>

   *  English <bug-tm-en@chamonix.jaist.ac.jp>

   Notice that, we does not welcome bug reports about too old version.
Bugs in old version might be fixed.  So please try latest version at
first.

   You should write *good bug report*.  If you write only "tm does not
work", we can not find such situations.  At least, you should write
name, type, variants and version of OS, emacs, tm and MUA, and setting.
In addition, if error occurs, to send backtrace is very important. (cf.
*Note (emacs)Bugs::)

   Bug may not appear only your environment, but also in a lot of
environment (otherwise it might not bug).  Therefor if you send mail to
author directly, we must write a lot of mails.  So please send mail to
address for tm bugs instead of author.

   Via the tm ML, you can report tm bugs, obtain the latest release of
tm, and discuss future enhancements to tm.  To join the tm ML, send
e-mail to:

   *  Japanese <tm-ja-admin@chamonix.jaist.ac.jp>

   *  English  <tm-en-admin@chamonix.jaist.ac.jp>

Since the user registration is done manually, please write the mail
body in human-recognizable language (^_^).


File: tm-en.info,  Node: Acknowledgments,  Next: Concept Index,  Prev: Bug report,  Up: Top

Acknowledgments
***************

   I thank MASUTANI Yasuhiro.  He requested me a lot of important
features and gave me a lot of suggestions when tm-view was born.
tm-view is based on his influence.

   I thank ENAMI Tsugutomo for work of `mime.el', which is an origin of
`tm-ew-d.el' and `mel-b.el', and permission to rewrite for tm.

   I thank OKABE Yasuo for work of internal method for LaTeX and
automatic assembling method for message/partial.  I thank UENO Hiroshi
for work of internal method for tar archive.

   I thank UMEDA Masanobu for his work of `mime.el', which is the
origin of tm-edit, and permission to rewrite his work as tm-edit.

   I thank KOBAYASHI Shuhei for his work as a tm maintainer.  In
addition, he often points out or suggests about conformity with RFCs.

   I thank Oscar Figueiredo for his work as the maintainer of tm-vm.  He
improves tm-vm and wrote a good manual of tm-vm.

   Last of all, I thank members of two tm mailing lists, Japanese and
English version.


File: tm-en.info,  Node: Concept Index,  Next: Variable Index,  Prev: Acknowledgments,  Up: Top

Concept Index
*************

* Menu:

* 7bit:                                 7bit.
* 7bit (textual) string:                7bit.
* 7bit data:                            7bit.
* 8bit:                                 8bit.
* 8bit (textual) string:                8bit.
* 8bit data:                            8bit.
* 94-character set:                     94-character set.
* 94x94-character set:                  94x94-character set.
* 96-character set:                     96-character set.
* ANSI X3.4:1986:                       ASCII.
* application:                          media type.
* application/pgp:                      PGP-kazu.
* ASCII <1>:                            ASCII.
* ASCII <1>:                            us-ascii.
* ASCII:                                ASCII.
* audio:                                media type.
* automatic signature selection tool:   signature.
* Base64:                               Base64.
* BBDB:                                 setting for VM.
* BIG5:                                 cn-big5.
* binary:                               binary.
* charset-edition:                      RFC 1922.
* charset-extension:                    RFC 1922.
* CNS        11643:1992:                CNS 11643.
* CNS 11643-1992:                       CNS 11643.
* Emacs/mule:                           MULE.
* encapsulation:                        RFC 934.
* euc-kr:                               euc-kr.
* Experimental:                         Content-Disposition.
* external method:                      method.
* FTP:                                  FTP.
* GB 2312:                              GB 2312.
* GB 2312:1980:                         GB 2312.
* GB 8565.2:                            GB 8565.2.
* GB 8565.2:1988:                       GB 8565.2.
* gnus-mime:                            tm-MUA.
* good bug report:                      Bug report.
* image:                                media type.
* Informational <1>:                    hz-gb2312.
* Informational <1>:                    RFC 1557.
* Informational <1>:                    RFC 1922.
* Informational <1>:                    hz-gb2312.
* Informational <1>:                    iso-2022-jp-2.
* Informational <1>:                    iso-8859-7.
* Informational:                        PGP.
* internal method:                      method.
* Internet mail:                        RFC 822.
* Internet message:                     RFC 822.
* ISO 2022:                             ISO 2022.
* ISO 646:                              ISO 646.
* ISO 8859-1:                           ISO 8859-1.
* ISO 8859-1:1987:                      ISO 8859-1.
* ISO 8859-2:                           ISO 8859-2.
* ISO 8859-2:1987:                      ISO 8859-2.
* ISO 8859-3:                           ISO 8859-3.
* ISO 8859-3:1988:                      ISO 8859-3.
* ISO 8859-4:                           ISO 8859-4.
* ISO 8859-4:1988:                      ISO 8859-4.
* ISO 8859-5:                           ISO 8859-5.
* ISO 8859-5:1988:                      ISO 8859-5.
* ISO 8859-6:                           ISO 8859-6.
* ISO 8859-6:1987:                      ISO 8859-6.
* ISO 8859-7:                           ISO 8859-7.
* ISO 8859-7:1987:                      ISO 8859-7.
* ISO 8859-8:                           ISO 8859-8.
* ISO 8859-8:1988:                      ISO 8859-8.
* ISO 8859-9:                           ISO 8859-9.
* ISO 8859-9:1990:                      ISO 8859-9.
* iso-2022-jp:                          iso-2022-jp.
* iso-2022-jp-2:                        iso-2022-jp-2.
* iso-8859-1:                           iso-8859-1.
* iso-8859-2:                           iso-8859-2.
* iso-8859-5:                           iso-8859-5.
* iso-8859-7:                           iso-8859-7.
* ISO/IEC 2022:1994:                    ISO 2022.
* ISO/IEC 646:1991:                     ISO 646.
* JIS        X 0201-1976::              JIS X0201.
* JIS        X0208:1983,1990:           JIS X0208.
* JIS C6220-1976:                       JIS X0201.
* JIS C6226:1978:                       JIS X0208.
* JIS X        0208:1997? draft:        JIS X0208.
* JIS X 0201:1997?  draft:              JIS X0201.
* JIS X0201-1976:                       JIS X0201.
* JIS X0201-1997?:                      JIS X0201.
* JIS X0208-1978:                       JIS X0208.
* JIS X0208-1983,1990:                  JIS X0208.
* JIS X0208-1997?:                      JIS X0208.
* KS C 5601:1987:                       KS C5601.
* KS C 5861:1992:                       euc-kr.
* KS C5601:                             KS C5601.
* media type:                           media type.
* message:                              media type.
* message header:                       RFC 822.
* Message Transfer Agent:               MTA.
* Message User Agent:                   MUA.
* message/rfc822:                       message/rfc822.
* mime-setup:                           mime-setup.
* MULE:                                 MULE.
* multipart <1>:                        media type.
* multipart:                            multipart.
* multipart/digest <1>:                 multipart/alternative.
* multipart/digest:                     multipart/digest.
* multipart/encrypted:                  Security multipart.
* multipart/parallel:                   multipart/parallel.
* multipart/signed:                     Security multipart.
* Multipurpose Internet Mail Extensions: MIME.
* pad:                                  Base64.
* parameter:                            Content-Type field.
* PGP:                                  PGP.
* PGP-kazu:                             PGP-kazu.
* PGP/MIME:                             PGP/MIME.
* Pretty Good Privacy:                  PGP.
* Quoted-Printable:                     Quoted-Printable.
* RFC 1036:                             RFC 1036.
* RFC 1153:                             RFC 1153.
* RFC 1468:                             iso-2022-jp.
* RFC 1489:                             koi8-r.
* RFC 1554:                             iso-2022-jp-2.
* RFC 1557:                             RFC 1557.
* RFC 1806:                             Content-Disposition.
* RFC 1842:                             hz-gb2312.
* RFC 1843:                             hz-gb2312.
* RFC 1847:                             Security multipart.
* RFC 1896:                             text/enriched.
* RFC 1922:                             RFC 1922.
* RFC 1947:                             iso-8859-7.
* RFC 1991:                             PGP.
* RFC 2015:                             PGP/MIME.
* RFC 2045:                             RFC 2045.
* RFC 2046:                             RFC 2046.
* RFC 2047:                             encoded-word.
* RFC 2048:                             RFC 2048.
* RFC 2049:                             RFC 2049.
* RFC 821:                              RFC 821.
* RFC 822:                              RFC 822.
* RFC 934:                              RFC 934.
* RFC 959:                              FTP.
* Security multipart:                   Security multipart.
* SMTP:                                 RFC 821.
* Standards Track <1>:                  PGP/MIME.
* Standards Track <1>:                  RFC 2046.
* Standards Track <1>:                  RFC 2049.
* Standards Track <1>:                  Security multipart.
* Standards Track <1>:                  encoded-word.
* Standards Track <1>:                  RFC 2045.
* Standards Track:                      RFC 2048.
* STD 10:                               RFC 821.
* STD 11:                               RFC 822.
* STD 9:                                FTP.
* subtype <1>:                          Content-Type field.
* subtype:                              media type.
* text:                                 media type.
* text/enriched:                        text/enriched.
* text/plain:                           text/plain.
* tm oomori package:                    tm-MUA.
* tm-gnus:                              tm-MUA.
* tm-mh-e:                              tm-MUA.
* tm-rmail:                             tm-MUA.
* tm-setup:                             tm-setup.
* tm-vm:                                tm-MUA.
* type <1>:                             media type.
* type:                                 Content-Type field.
* us-ascii:                             us-ascii.
* USENET:                               RFC 1036.
* video:                                media type.
* vm:                                   setting for VM.
* x-token:                              media type.
* XEmacs/mule:                          MULE.


File: tm-en.info,  Node: Variable Index,  Prev: Concept Index,  Up: Top

Variable Index
**************

* Menu:

* mime-setup-default-signature-key:     signature.
* mime-setup-signature-key-alist:       signature.
* mime-setup-use-signature:             signature.



Tag Table:
Node: Top89
Node: Introduction497
Node: Glossary1208
Node: 7bit3224
Node: 8bit4173
Node: 94-character set5333
Node: 96-character set5700
Node: 94x94-character set6051
Node: ASCII6444
Node: Base646900
Node: binary7505
Node: cn-gb7837
Node: cn-big58290
Node: CNS 116438875
Node: coded character set9624
Node: code extension9959
Node: Content-Disposition10248
Node: Content-Type field10693
Node: Emacs11747
Node: encoded-word11965
Node: encapsulation12385
Node: entity12683
Node: euc-kr12970
Node: FTP13471
Node: GB 231213659
Node: GB 8565.214117
Node: graphic character set14554
Node: hz-gb231214778
Node: ISO 202215617
Node: iso-2022-cn16026
Node: iso-2022-cn-ext16498
Node: iso-2022-jp17148
Node: iso-2022-jp-217860
Node: iso-2022-kr18277
Node: ISO 64618717
Node: ISO 8859-119007
Node: iso-8859-119324
Node: ISO 8859-219798
Node: iso-8859-220118
Node: ISO 8859-320592
Node: ISO 8859-420912
Node: ISO 8859-521232
Node: iso-8859-521556
Node: ISO 8859-621998
Node: ISO 8859-722320
Node: iso-8859-722641
Node: ISO 8859-823191
Node: ISO 8859-923513
Node: ISO-IR-16523833
Node: JIS X020124316
Node: JIS C622625010
Node: JIS X020825262
Node: JIS X021226716
Node: koi8-r27040
Node: KS C560127508
Node: media type27926
Node: message28880
Node: message/rfc82229120
Node: method29501
Node: MIME29972
Node: MIME charset30977
Node: MTA31608
Node: MUA31815
Node: MULE31985
Node: multipart32750
Node: multipart/alternative33499
Node: multipart/digest33964
Node: multipart/encrypted34621
Node: multipart/mixed34919
Node: multipart/parallel35252
Node: multipart/signed35699
Node: PGP35975
Node: PGP-kazu36660
Node: PGP/MIME37296
Node: Quoted-Printable37921
Node: RFC 82138315
Node: RFC 82238511
Node: RFC 93438919
Node: RFC 103639350
Node: RFC 115339757
Node: RFC 155739927
Node: RFC 192240295
Node: RFC 204540927
Node: RFC 204641243
Node: RFC 204841537
Node: RFC 204941852
Node: plain text42171
Node: Security multipart42465
Node: text/enriched43093
Node: text/plain43363
Node: tm-kernel43853
Node: tm-MUA44270
Node: us-ascii44722
Node: Setting45337
Node: mime-setup45944
Node: signature46433
Node: Notice about GNUS47969
Node: tm-setup48854
Node: setting for VM49407
Node: manual setting49720
Node: Bug report50324
Node: Acknowledgments51778
Node: Concept Index52871
Node: Variable Index61595

End Tag Table
