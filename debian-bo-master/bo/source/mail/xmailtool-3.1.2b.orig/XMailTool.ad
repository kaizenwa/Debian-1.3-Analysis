! $Id: XMailTool.ad,v 1.60 1995/03/07 23:29:14 bobo Exp $

!  The App-defaults file for XMailTool.

*.patchLevel:			XMailTool v3.1.2
*input:			True
*allowResize:			True
*cmd_box.allowResize:		False
*Font:					6x13
*autoFill:			False
*scrollVertical:		never
*scrollHorizontal:		never
*Text.resize:			width
*Text*resizable:		True
*file_name.resize:		width
*file_name*resizable:		True
*file_name.width:		300
*directory_name.resize:	width
*directory_name*resizable:	True
*directory_name.width:		300
*helpText.scrollVertical:	always
*helpText.height:		100
*msg_box.scrollVertical:	always
*msg_box.scrollHorizontal:	never
*msg_box.height:		220
*msg_box.wrap:			word
*msg_box.resize:		never
*header_box.cursor:		hand2
*header_box.scrollVertical:	always
*header_box.scrollHorizontal:	never
*header_box.height:		80
*mail_output.scrollVertical:	always
*mail_output.scrollHorizontal:	never
*mail_output.height:		50
*reply.scrollVertical:		always
*reply.scrollHorizontal:	never
*reply.autoFill:		True
*outbound_msg*reply.height:	100
*folder_list.verticalList:	True
*saved_list.verticalList:	True

*cmd_box.Command.resizable:	False
*cmd_box.Command.resize:	False
*cmd_box.Command.width:	60
*cmd_box.Command.horizDistance:	2

! Top Row
*cmd_box.next.leftBitmap:	xlogo11
*cmd_box.delete.fromHoriz:	next
*cmd_box.undelete.fromHoriz:	delete
*cmd_box.save.fromHoriz:	undelete
*cmd_box.save.leftBitmap:	xlogo11
*cmd_box.preserve.fromHoriz:	save
*cmd_box.print.fromHoriz:	preserve
*cmd_box.print.leftBitmap:	xlogo11

! Second Row
*cmd_box.new mail.fromVert:	next
*cmd_box.new mail.leftBitmap:	xlogo11
*cmd_box.done.fromHoriz:	new mail
*cmd_box.done.fromVert:		next
*cmd_box.reply.fromHoriz:	done
*cmd_box.reply.fromVert:	next
*cmd_box.reply.leftBitmap:	xlogo11
*cmd_box.compose.fromHoriz:	reply
*cmd_box.compose.fromVert:	next
*cmd_box.compose.leftBitmap:	xlogo11
*cmd_box.gripe.fromHoriz:	compose
*cmd_box.gripe.fromVert:	next
*cmd_box.mailrc.fromHoriz:	gripe
*cmd_box.mailrc.fromVert:	next

! Third Row
*cmd_box.Folder.fromVert:	new mail
*cmd_box.file.leftBitmap:	xlogo11
*cmd_box.file.fromHoriz:	Folder
*cmd_box.file.fromVert:		new mail
*cmd_box.mime.fromHoriz:	file
*cmd_box.mime.fromVert:		new mail
*cmd_box.quit.fromHoriz:	mime
*cmd_box.quit.fromVert:		new mail
*cmd_box.quit.leftBitmap:	xlogo11
*cmd_box.load.fromHoriz:	quit
*cmd_box.load.fromVert:		new mail
*cmd_box.help.fromHoriz:	load
*cmd_box.help.fromVert:		new mail

*iconLabel.fromVert:	iconBitmap
*iconLabel.borderWidth:	0
*iconLabel.internalWidth:	1
*iconLabel.left:	ChainLeft
*iconLabel.top:		ChainTop
*iconLabel.right:	ChainRight
*iconLabel.bottom:	ChainBottom
*iconLabel.horizDistance:	4
*iconBitmap.left:	ChainLeft
*iconBitmap.top:		ChainTop
*iconBitmap.right:	ChainRight
*iconBitmap.bottom:	ChainBottom
*iconBitmap.borderWidth:	0
*iconBitmap.internalWidth:	1
*iconBox.borderWidth:	0
*iconBox.defaultDistance:	0
*icon*cursor:		gumby
*icon.allowShellResize:		True

! File Box
*file_box.file_label.leftBitmap:	xlogo11
*file_box.file_label.label:	File Name:
*file_box.file_label.cursor:	exchange
*file_box.file_name.fromHoriz:	file_label
*file_box.file_label.left:	ChainLeft
*file_box.file_label.bottom:	ChainBottom
*file_box.file_label.top:	ChainTop
*file_box.file_name.right:	ChainRight
*file_box.file_name.bottom:	ChainBottom
*file_box.file_name.top:	ChainTop


*translations: #override \
	<Message>WM_PROTOCOLS:  xmt-WMProtocols()\n

*file_box.file_label.accelerators: #override \
 !Shift<KeyPress>c: set() notify() unset() \n

*file_box.file_label.translations: #override \
 None<Enter>: help-msg("Circulate saved File Name values  (Shift-C)") \n\
 !Shift<Enter>: xmt-label("File Menu") help-msg("Popup the File List menu") \n\
  <Leave>: unhighlight() xmt-label("File Name:") \n\
 None<KeyPress>Shift_R: xmt-label("File Menu") help-msg("Popup the File List menu") \n\
 None<KeyPress>Shift_L: xmt-label("File Menu") help-msg("Popup the File List menu") \n\
 !Shift<KeyRelease>Shift_R: xmt-label("File Name:") help-msg("Circulate saved File Name values  (Shift-C)") \n\
 !Shift<KeyRelease>Shift_L: xmt-label("File Name:") help-msg("Circulate saved File Name values  (Shift-C)") \n\
 !Shift<Btn1Up>: xmt-notify("menu") unset() \n\
       <Btn1Up>: xmt-notify("circulate") unset() \n


! Directory Box

*dir_box.dir_label.left:	ChainLeft
*dir_box.dir_label.bottom:	ChainBottom
*dir_box.dir_label.top:	ChainTop
*dir_box.dir_label.label:	Directory:
*dir_box.directory_name.fromHoriz:	dir_label
*dir_box.directory_name.right:	ChainRight
*dir_box.directory_name.bottom:	ChainBottom
*dir_box.directory_name.top:	ChainTop

*saved_list.translations:	#override \
 None<Enter>: help-msg("Load messages from this file") \n\
 !Shift<Enter>: help-msg("Save current message to this file") \n\
 !Ctrl<Enter>: help-msg("Change the text in File Name: window") \n\
 !Mod1<Enter>: help-msg("Load messages from this file") \n\
 !Shift Ctrl<Enter>: help-msg("Save message... Change text...") \n\
 !Shift Mod1<Enter>: help-msg("Save message... Load messages...") \n\
 !Shift Ctrl Mod1<Enter>: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<Enter>: help-msg("Change text... Load messages...") \n\
 None<KeyPress>Shift_R: help-msg("Save current message to this file") \n\
 None<KeyPress>Shift_L: help-msg("Save current message to this file") \n\
 None<KeyPress>Control_R: help-msg("Change the text in File Name: window") \n\
 None<KeyPress>Control_L: help-msg("Change the text in File Name: window") \n\
 None<KeyPress>Meta_R: help-msg("Load messages from this file") \n\
 None<KeyPress>Meta_L: help-msg("Load messages from this file") \n\
 None<KeyPress>Alt_R: help-msg("Load messages from this file") \n\
 None<KeyPress>Alt_L: help-msg("Load messages from this file") \n\
 !Shift<KeyPress>Control_R: help-msg("Save message... Change text...") \n\
 !Shift<KeyPress>Control_L: help-msg("Save message... Change text...") \n\
 !Shift<KeyPress>Meta_R: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Meta_L: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Alt_R: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Alt_L: help-msg("Save message... Load messages...") \n\
 !Ctrl<KeyPress>Shift_R: help-msg("Save message... Change text...") \n\
 !Ctrl<KeyPress>Shift_L: help-msg("Save message... Change text...") \n\
 !Ctrl<KeyPress>Meta_R: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Meta_L: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Alt_R: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Alt_L: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Control_R: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Control_L: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Shift_R: help-msg("Save message... Load messages...") \n\
 !Mod1<KeyPress>Shift_L: help-msg("Save message... Load messages...") \n\
 !Shift Mod1<KeyPress>Control_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Mod1<KeyPress>Control_L: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<KeyPress>Shift_R: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<KeyPress>Shift_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Meta_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Meta_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Alt_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Alt_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift<KeyRelease>Shift_R: help-msg("Load messages from this file") \n\
 !Shift<KeyRelease>Shift_L: help-msg("Load messages from this file") \n\
 !Ctrl<KeyRelease>Control_R: help-msg("Load messages from this file") \n\
 !Ctrl<KeyRelease>Control_L: help-msg("Load messages from this file") \n\
 !Mod1<KeyRelease>Meta_R: help-msg("Load messages from this file") \n\
 !Mod1<KeyRelease>Meta_L: help-msg("Load messages from this file") \n\
 !Mod1<KeyRelease>Alt_R: help-msg("Load messages from this file") \n\
 !Mod1<KeyRelease>Alt_L: help-msg("Load messages from this file") \n\
 !Shift Ctrl<KeyRelease>Shift_R: help-msg("Change the text in File Name: window") \n\
 !Shift Ctrl<KeyRelease>Shift_L: help-msg("Change the text in File Name: window") \n\
 !Shift Ctrl<KeyRelease>Control_R: help-msg("Save current message to this file") \n\
 !Shift Ctrl<KeyRelease>Control_L: help-msg("Save current message to this file") \n\
 !Shift Mod1<KeyRelease>Shift_R: help-msg("Load messages from this file") \n\
 !Shift Mod1<KeyRelease>Shift_L: help-msg("Load messages from this file") \n\
 !Shift Mod1<KeyRelease>Meta_R: help-msg("Save current message to this file") \n\
 !Shift Mod1<KeyRelease>Meta_L: help-msg("Save current message to this file") \n\
 !Shift Mod1<KeyRelease>Alt_R: help-msg("Save current message to this file") \n\
 !Shift Mod1<KeyRelease>Alt_L: help-msg("Save current message to this file") \n\
 !Ctrl Mod1<KeyRelease>Control_R: help-msg("Load messages from this file") \n\
 !Ctrl Mod1<KeyRelease>Control_L: help-msg("Load messages from this file") \n\
 !Ctrl Mod1<KeyRelease>Meta_R: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Meta_L: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Alt_R: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Alt_L: help-msg("Change the text in File Name: window") \n\
 Shift Ctrl Mod1<KeyRelease>Shift_R: help-msg("Change text... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Shift_L: help-msg("Change text... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Control_R: help-msg("Save message... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Control_L: help-msg("Save message... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Meta_R: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Meta_L: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Alt_R: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Alt_L: help-msg("Save message... Change text...") \n\
 None<Btn1Up>:	xmt-notify("load") \n\
 !Shift<Btn1Up>: xmt-notify("save") \n\
 !Ctrl<Btn1Up>: xmt-notify("change") \n\
 !Mod1<Btn1Up>: xmt-notify("load") \n\
 !Shift Ctrl<Btn1Up>: xmt-notify("save change") \n\
 !Shift Mod1<Btn1Up>: xmt-notify("save load") \n\
 !Ctrl Mod1<Btn1Up>: xmt-notify("change load") \n\
 Shift Ctrl Mod1<Btn1Up>: xmt-notify("save change load") \n


*folder_list.translations:	#override \
 None<Enter>: help-msg("Load messages from this folder") \n\
 !Shift<Enter>: help-msg("Save current message to this folder") \n\
 !Ctrl<Enter>: help-msg("Change the text in File Name: window") \n\
 !Mod1<Enter>: help-msg("Load messages from this folder") \n\
 !Shift Ctrl<Enter>: help-msg("Save message... Change text...") \n\
 !Shift Mod1<Enter>: help-msg("Save message... Load messages...") \n\
 !Shift Ctrl Mod1<Enter>: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<Enter>: help-msg("Change text... Load messages...") \n\
 None<KeyPress>Shift_R: help-msg("Save current message to this folder") \n\
 None<KeyPress>Shift_L: help-msg("Save current message to this folder") \n\
 None<KeyPress>Control_R: help-msg("Change the text in File Name: window") \n\
 None<KeyPress>Control_L: help-msg("Change the text in File Name: window") \n\
 None<KeyPress>Meta_R: help-msg("Load messages from this folder") \n\
 None<KeyPress>Meta_L: help-msg("Load messages from this folder") \n\
 None<KeyPress>Alt_R: help-msg("Load messages from this folder") \n\
 None<KeyPress>Alt_L: help-msg("Load messages from this folder") \n\
 !Shift<KeyPress>Control_R: help-msg("Save message... Change text...") \n\
 !Shift<KeyPress>Control_L: help-msg("Save message... Change text...") \n\
 !Shift<KeyPress>Meta_R: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Meta_L: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Alt_R: help-msg("Save message... Load messages...") \n\
 !Shift<KeyPress>Alt_L: help-msg("Save message... Load messages...") \n\
 !Ctrl<KeyPress>Shift_R: help-msg("Save message... Change text...") \n\
 !Ctrl<KeyPress>Shift_L: help-msg("Save message... Change text...") \n\
 !Ctrl<KeyPress>Meta_R: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Meta_L: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Alt_R: help-msg("Change text... Load messages...") \n\
 !Ctrl<KeyPress>Alt_L: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Control_R: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Control_L: help-msg("Change text... Load messages...") \n\
 !Mod1<KeyPress>Shift_R: help-msg("Save message... Load messages...") \n\
 !Mod1<KeyPress>Shift_L: help-msg("Save message... Load messages...") \n\
 !Shift Mod1<KeyPress>Control_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Mod1<KeyPress>Control_L: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<KeyPress>Shift_R: help-msg("Save message... Change text... Load messages...") \n\
 !Ctrl Mod1<KeyPress>Shift_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Meta_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Meta_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Alt_R: help-msg("Save message... Change text... Load messages...") \n\
 !Shift Ctrl<KeyPress>Alt_L: help-msg("Save message... Change text... Load messages...") \n\
 !Shift<KeyRelease>Shift_R: help-msg("Load messages from this folder") \n\
 !Shift<KeyRelease>Shift_L: help-msg("Load messages from this folder") \n\
 !Ctrl<KeyRelease>Control_R: help-msg("Load messages from this folder") \n\
 !Ctrl<KeyRelease>Control_L: help-msg("Load messages from this folder") \n\
 !Mod1<KeyRelease>Meta_R: help-msg("Load messages from this folder") \n\
 !Mod1<KeyRelease>Meta_L: help-msg("Load messages from this folder") \n\
 !Mod1<KeyRelease>Alt_R: help-msg("Load messages from this folder") \n\
 !Mod1<KeyRelease>Alt_L: help-msg("Load messages from this folder") \n\
 !Shift Ctrl<KeyRelease>Shift_R: help-msg("Change the text in File Name: window") \n\
 !Shift Ctrl<KeyRelease>Shift_L: help-msg("Change the text in File Name: window") \n\
 !Shift Ctrl<KeyRelease>Control_R: help-msg("Save current message to this folder") \n\
 !Shift Ctrl<KeyRelease>Control_L: help-msg("Save current message to this folder") \n\
 !Shift Mod1<KeyRelease>Shift_R: help-msg("Load messages from this folder") \n\
 !Shift Mod1<KeyRelease>Shift_L: help-msg("Load messages from this folder") \n\
 !Shift Mod1<KeyRelease>Meta_R: help-msg("Save current message to this folder") \n\
 !Shift Mod1<KeyRelease>Meta_L: help-msg("Save current message to this folder") \n\
 !Shift Mod1<KeyRelease>Alt_R: help-msg("Save current message to this folder") \n\
 !Shift Mod1<KeyRelease>Alt_L: help-msg("Save current message to this folder") \n\
 !Ctrl Mod1<KeyRelease>Control_R: help-msg("Load messages from this folder") \n\
 !Ctrl Mod1<KeyRelease>Control_L: help-msg("Load messages from this folder") \n\
 !Ctrl Mod1<KeyRelease>Meta_R: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Meta_L: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Alt_R: help-msg("Change the text in File Name: window") \n\
 !Ctrl Mod1<KeyRelease>Alt_L: help-msg("Change the text in File Name: window") \n\
 Shift Ctrl Mod1<KeyRelease>Shift_R: help-msg("Change text... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Shift_L: help-msg("Change text... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Control_R: help-msg("Save message... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Control_L: help-msg("Save message... Load messages...") \n\
 Shift Ctrl Mod1<KeyRelease>Meta_R: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Meta_L: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Alt_R: help-msg("Save message... Change text...") \n\
 Shift Ctrl Mod1<KeyRelease>Alt_L: help-msg("Save message... Change text...") \n\
 None<Btn1Up>:	xmt-notify("load") \n\
 !Shift<Btn1Up>: xmt-notify("save") \n\
 !Ctrl<Btn1Up>: xmt-notify("change") \n\
 !Mod1<Btn1Up>: xmt-notify("load") \n\
 !Shift Ctrl<Btn1Up>: xmt-notify("save change") \n\
 !Shift Mod1<Btn1Up>: xmt-notify("save load") \n\
 !Ctrl Mod1<Btn1Up>: xmt-notify("change load") \n\
 Shift Ctrl Mod1<Btn1Up>: xmt-notify("save change load") \n

*folder_name.translations:	#override \
 <Enter>: help-msg("Name of the Current mail file.") \n
*help_msg.translations:	#override \
 <Enter>: help-msg("'Auto Help' messages.") \n

*cmd_box.quit.accelerators:	#override \
 None<KeyPress>q: set() xmt-notify(quit) unset() \n\
 None<KeyPress>x: xmt-label(abort) set() xmt-notify(abort) unset() \n


*cmd_box.quit.translations:	#override \
 None<Enter>: highlight() help-msg("Save changes and Quit mail.  (q)") \n\
 !Shift<Enter>: xmt-label("abort") help-msg("Quit mail without saving changes.  (x)") \n\
 <Leave>: unhighlight() xmt-label("quit") \n\
 None<KeyPress>Shift_R: xmt-label(abort) help-msg("Quit mail without saving changes.  (x)") \n\
 None<KeyPress>Shift_L: xmt-label(abort) help-msg("Quit mail without saving changes.  (x)") \n\
 !Shift<KeyRelease>Shift_R: xmt-label(quit) help-msg("Save changes and Quit mail.  (q)") \n\
 !Shift<KeyRelease>Shift_L: xmt-label(quit) help-msg("Save changes and Quit mail.  (q)") \n\
 Shift<Btn1Up>: xmt-notify("abort") unset() \n\
 None<Btn1Up>: xmt-notify("quit") unset() \n

*cmd_box.compose.accelerators:	#override \
 None<KeyPress>m: set() notify() unset() \n\
 None<KeyPress>f: xmt-label("forward") set() xmt-notify(notinclude) unset() xmt-label("compose") \n

*cmd_box.compose.translations:	#override \
 None<Enter>: highlight() help-msg("Start writing a new message.  (m)") \n\
 !Shift<Enter>: xmt-label("forward") help-msg("Forward current message to someone.  (f)") \n\
 <Leave>: unhighlight() xmt-label("compose") \n\
 None<KeyPress>Shift_R: xmt-label(forward) help-msg("Forward current message to someone.  (f)") \n\
 None<KeyPress>Shift_L: xmt-label(forward) help-msg("Forward current message to someone.  (f)") \n\
 !Shift<KeyRelease>Shift_R: xmt-label(compose) help-msg("Start writing a new message.  (m)") \n\
 !Shift<KeyRelease>Shift_L: xmt-label(compose) help-msg("Start writing a new message.  (m)") \n\
 !Shift<Btn1Up>: xmt-notify("notinclude") unset() \n\
       <Btn1Up>: xmt-notify() unset() \n

*cmd_box.load.accelerators:	#override \
 None<KeyPress>a: set() notify() unset() \n

*cmd_box.load.translations:	#override \
 <Enter>: highlight() help-msg("Save changes of current message.  (a)") \n

*cmd_box.help.accelerators: #override \
 :<KeyPress>?: set() notify() unset() \n

*cmd_box.help.translations:	#override \
 <Enter>: highlight() help-msg("Pop-up a help file.  (?)") \n

*cmd_box.delete.accelerators:	#override \
 None<KeyPress>d: set() notify() unset() \n

*cmd_box.delete.translations:	#override \
 <Enter>: highlight() help-msg("Delete current message.  (d)") \n

*cmd_box.next.accelerators:    #override \
 None<KeyPress>p: xmt-label("prev") set() xmt-notify("prev") unset() xmt-label("next")\n\
 None<KeyPress>n: set() xmt-notify("next") unset() \n

*cmd_box.next.translations:	#override \
 None<Enter>: highlight() help-msg("Display the next message. (n)") \n\
 !Shift<Enter>: highlight() help-msg("Display the previous message.  (p)") xmt-label(prev) \n\
 <Leave>: unhighlight() xmt-label("next") \n\
 <KeyPress>Shift_R: xmt-label("prev") help-msg("Display the previous message.  (p)") \n\
 <KeyPress>Shift_L: xmt-label("prev") help-msg("Display the previous message.  (p)") \n\
 <KeyRelease>Shift_R: xmt-label("next") help-msg("Display the next message.  (n)") \n\
 <KeyRelease>Shift_L: xmt-label("next") help-msg("Display the next message.  (n)") \n\
 Shift<Btn1Up>: xmt-notify("prev") unset() \n

*cmd_box.undelete.accelerators: #override \
 None<KeyPress>u: set() notify() unset() \n

*cmd_box.undelete.translations: #override \
 <Enter>: highlight() help-msg("Undelete previously deleted message.  (u)") \n

*cmd_box.save.accelerators:	#override \
 None<KeyPress>s: set() xmt-notify("save") unset() \n\
 !Shift<KeyPress>s: xmt-label("Save") set() xmt-notify(Save) unset() xmt-label("save")\n

*cmd_box.save.translations:	#override \
 None<Enter>: highlight() help-msg("Save current message to a file. (s)") \n\
 !Shift<Enter>: xmt-label(Save) highlight() help-msg("Save current message to a file based on the sender's name. (S)") \n\
 !Ctrl<Enter>: xmt-label(copy) highlight() help-msg("Copy current message to a file.") \n\
 !Shift Ctrl<Enter>: xmt-label(Copy) highlight() help-msg("Copy current message to a file based on the sender's name.") \n\
 <Leave>: unhighlight() xmt-label("save") \n\
 None<KeyPress>Shift_R: xmt-label("Save") help-msg("Save current message based on the sender's name.  (Shift-s)") \n\
 None<KeyPress>Shift_L: xmt-label("Save") help-msg("Save current message based on the sender's name.  (Shift-s)") \n\
 None<KeyPress>Control_R: xmt-label(copy) highlight() help-msg("Copy current message to a file.") \n\
 None<KeyPress>Control_L: xmt-label(copy) highlight() help-msg("Copy current message to a file.") \n\
 !Shift <KeyPress>Control_R: xmt-label(Copy) highlight() help-msg("Copy current message to a file based on the sender's name.") \n\
 !Shift <KeyPress>Control_L: xmt-label(Copy) highlight() help-msg("Copy current message to a file based on the sender's name.") \n\
 !Ctrl<KeyPress>Shift_R: xmt-label(Copy) highlight() help-msg("Copy current message to a file based on the sender's name.") \n\
 !Ctrl<KeyPress>Shift_L: xmt-label(Copy) highlight() help-msg("Copy current message to a file based on the sender's name.") \n\
 !Shift<KeyRelease>Shift_R: xmt-label("save") help-msg("Save current message to a file.  (s)")\n\
 !Shift<KeyRelease>Shift_L: xmt-label("save") help-msg("Save current message to a file.  (s)")\n\
 !Ctrl<KeyRelease>Control_R: xmt-label("save") help-msg("Save current message to a file.  (s)")\n\
 !Ctrl<KeyRelease>Control_L: xmt-label("save") help-msg("Save current message to a file.  (s)")\n\
 Ctrl Shift<KeyRelease>Control_R: xmt-label(Save) highlight() help-msg("Save current message based on the sender's name.  (Shift-s)") \n\
 Ctrl Shift<KeyRelease>Control_L: xmt-label(Save) highlight() help-msg("Save current message based on the sender's name.  (Shift-s)") \n\
 Ctrl Shift<KeyRelease>Shift_R: xmt-label(copy) highlight() help-msg("Copy current message to a file.") \n\
 Ctrl Shift<KeyRelease>Shift_L: xmt-label(copy) highlight() help-msg("Copy current message to a file.") \n\
 !Shift<Btn1Up>: xmt-notify("Save") unset() \n\
 !Ctrl<Btn1Up>: xmt-notify("copy") unset() \n\
 Shift Ctrl<Btn1Up>: xmt-notify("Copy") unset() \n

*cmd_box.preserve.accelerators: #override \
  !Shift<KeyPress>p: set() notify() unset() \n

*cmd_box.preserve.translations: #override \
 <Enter>: highlight() help-msg("Keep the current message in the system mail file even if it's been saved.  (Shift-p)") \n

*cmd_box.reply.accelerators:   #override \
 None<KeyPress>r: set() notify() unset() \n\
 !Shift<KeyPress>r: xmt-label(reply-all) set() xmt-notify(all) unset() xmt-label(reply)\n\
 !Shift<KeyPress>i: xmt-label(reply-inc) set() xmt-notify(notinclude) unset() xmt-label(reply)\n\
 !Ctrl<KeyPress>i: xmt-label(reply-all-inc) set() xmt-notify(all notinclude) unset() xmt-label(reply)\n

*cmd_box.reply.translations:   #override \
 None<Enter>: highlight() help-msg("Reply to the current message.  (r)") \n\
 !Shift<Enter>: highlight() xmt-label("reply-all") help-msg("Reply to all recipients.  (Shift-r)") \n\
 !Ctrl<Enter>: highlight() xmt-label("reply-inc") help-msg("Reply to and include current message.  (Shift-i)") \n\
 !Shift Ctrl<Enter>: highlight() xmt-label("reply-all-inc") help-msg("Reply to all recipients and include current message.  (Ctrl-i)") \n\
 <Leave>: unhighlight() xmt-label("reply") \n\
 None<KeyPress>Shift_L: xmt-label("reply-all") help-msg("Reply to all recipients.  (Shift-r)") \n\
 None<KeyPress>Shift_R: xmt-label("reply-all") help-msg("Reply to all recipients.  (Shift-r)") \n\
 None<KeyPress>Control_L: xmt-label("reply-inc") help-msg("Reply to and include current message.  (Shift-i)") \n\
 None<KeyPress>Control_R: xmt-label("reply-inc") help-msg("Reply to and include current message.  (Shift-i)") \n\
 Shift<KeyPress>Control_L: xmt-label("reply-all-inc") help-msg("Reply to all recipients and include current message.  (Ctrl-i)") \n\
 Shift<KeyPress>Control_R: xmt-label("reply-all-inc") help-msg("Reply to all recipients and include current message.  (Ctrl-i)") \n\
 Ctrl<KeyPress>Shift_L: xmt-label("reply-all-inc") help-msg("Reply to all recipients and include current message.  (Ctrl-i)") \n\
 Ctrl<KeyPress>Shift_R: xmt-label("reply-all-inc") help-msg("Reply to all recipients and include current message.  (Ctrl-i)") \n\
 !Ctrl<KeyRelease>Control_L: xmt-label("reply") help-msg("Reply to the current message.  (r)") \n\
 !Ctrl<KeyRelease>Control_R: xmt-label("reply") help-msg("Reply to the current message.  (r)") \n\
 !Shift<KeyRelease>Shift_L: xmt-label("reply") help-msg("Reply to the current message.  (r)") \n\
 !Shift<KeyRelease>Shift_R: xmt-label("reply") help-msg("Reply to the current message.  (r)") \n\
 Ctrl Shift<KeyRelease>Control_L: xmt-label("reply-all") help-msg("Reply to all recipients.  (Shift-r)") \n\
 Ctrl Shift<KeyRelease>Control_R: xmt-label("reply-all") help-msg("Reply to all recipients.  (Shift-r)") \n\
 Ctrl Shift<KeyRelease>Shift_L:  xmt-label("reply-inc") help-msg("Reply to and include current message.  (Shift-i)") \n\
 Ctrl Shift<KeyRelease>Shift_R:  xmt-label("reply-inc") help-msg("Reply to and include current message.  (Shift-i)") \n\
 !Shift<Btn1Up>: xmt-notify("all") unset() \n\
 !Ctrl<Btn1Up>: xmt-notify("notinclude") unset() \n\
 Shift Ctrl<Btn1Up>: xmt-notify("all notinclude") unset() \n

*cmd_box.print.accelerators:   #override \
  None<KeyPress>l: set() notify() unset() \n\
  None<KeyPress>e: xmt-label(enscript) set() xmt-notify("enscript -2r -L66 -B -f Courier7") unset() \n\
  !Ctrl<KeyPress>q: xmt-label(Queue) set() xmt-notify("pr >> /tmp/XMT`whoami`") unset() \n\
  !Ctrl<KeyPress>l:  xmt-label(print-Q) set() xmt-notify("lpr /tmp/XMT`whoami`; rm /tmp/XMT`whoami`") unset() \n

*cmd_box.print.translations:   #override \
 None<Enter>: highlight() help-msg("Print the current message using lpr(1).  (l)") \n\
 !Shift<Enter>: highlight() xmt-label("enscript") help-msg("Print the current message using enscript(1).  (e)") \n\
 !Ctrl<Enter>: highlight() xmt-label("Queue") help-msg("Spool the current message to the print queue.  (Ctrl-q)") \n\
 !Shift Ctrl<Enter>: highlight() xmt-label("print-Q") help-msg("Print the print queue using lpr(1).  (Ctrl-l)") \n\
 <Leave>: unhighlight() xmt-label("print") \n\
 None<KeyPress>Shift_L: xmt-label("enscript") help-msg("Print the current message using enscript(1).  (e)") \n\
 None<KeyPress>Shift_R: xmt-label("enscript") help-msg("Print the current message using enscript(1).  (e)") \n\
 None<KeyPress>Control_L: xmt-label("Queue") help-msg("Spool the current message to the print queue.  (Ctrl-q)") \n\
 None<KeyPress>Control_R: xmt-label("Queue") help-msg("Spool the current message to the print queue.  (Ctrl-q)") \n\
 Shift<KeyPress>Control_L: xmt-label("print-Q") help-msg("Print the print queue using lpr(1).  (Ctrl-l)") \n\
 Shift<KeyPress>Control_R: xmt-label("print-Q") help-msg("Print the print queue using lpr(1).  (Ctrl-l)") \n\
 Ctrl<KeyPress>Shift_L: xmt-label("print-Q") help-msg("Print the print queue using lpr(1).  (Ctrl-l)") \n\
 Ctrl<KeyPress>Shift_R: xmt-label("print-Q") help-msg("Print the print queue using lpr(1).  (Ctrl-l)") \n\
 !Ctrl<KeyRelease>Control_L: xmt-label("print") help-msg("Print the current message using lpr(1).  (l)") \n\
 !Ctrl<KeyRelease>Control_R: xmt-label("print") help-msg("Print the current message using lpr(1).  (l)") \n\
 !Shift<KeyRelease>Shift_L: xmt-label("print") help-msg("Print the current message using lpr(1).  (l)") \n\
 !Shift<KeyRelease>Shift_R: xmt-label("print") help-msg("Print the current message using lpr(1).  (l)") \n\
 Ctrl Shift<KeyRelease>Control_L: xmt-label("enscript") help-msg("Print the current message using enscript(1).  (e)") \n\
 Ctrl Shift<KeyRelease>Control_R: xmt-label("enscript") help-msg("Print the current message using enscript(1).  (e)") \n\
 Ctrl Shift<KeyRelease>Shift_L:  xmt-label("Queue") help-msg("Spool the current message to the print queue.  (Ctrl-q)") \n\
 Ctrl Shift<KeyRelease>Shift_R:  xmt-label("Queue") help-msg("Spool the current message to the print queue.  (Ctrl-q)") \n\
 !Shift<Btn1Up>: xmt-notify("enscript -2r -L66 -B -f Courier7") unset() \n\
 !Ctrl<Btn1Up>: xmt-notify("pr >> /tmp/XMT`whoami`") unset() \n\
 Shift Ctrl<Btn1Up>: xmt-notify("lpr /tmp/XMT`whoami`; rm /tmp/XMT`whoami`") unset() \n

*cmd_box.new mail.accelerators: #override \
  !Shift<KeyPress>n: set() xmt-notify("nmail") unset() \n\
  !Shift<KeyPress>u: xmt-label("Update") set() xmt-notify("Update") unset() xmt-label("new mail")\n

*cmd_box.new mail.translations:        #override \
 None<Enter>: highlight() help-msg("Save changes.  Read from the System Mail file.  (Shift-n)") \n\
 !Shift<Enter>: highlight() help-msg("Update message list from current mail box file. (Shift-u)") xmt-label("Update") \n\
 <Leave>: unhighlight() xmt-label("new mail") \n\
 <KeyPress>Shift_R: xmt-label("Update") help-msg("Update message list from current mail box file. (Shift-u)") \n\
 <KeyPress>Shift_L: xmt-label("Update") help-msg("Update message list from current mail box file. (Shift-u)") \n\
 <KeyRelease>Shift_R: xmt-label("new mail") help-msg("Save changes.  Read from the System Mail file.  (Shift-n)") \n\
 <KeyRelease>Shift_L: xmt-label("new mail") help-msg("Save changes.  Read from the System Mail file.  (Shift-n)") \n\
 Shift<Btn1Up>: xmt-notify("Update") unset() \n

*cmd_box.done.accelerators:	#override \
 None<KeyPress>i: set() notify() unset() \n

*cmd_box.done.translations:	#override \
 <Enter>: highlight() help-msg("Save changes.  Iconify tool window.  (i)") \n

*cmd_box.mailrc.accelerators:	#override \
 !Shift<KeyPress>m: set() notify() unset() \n

*cmd_box.mailrc.translations:	#override \
 <Enter>: highlight() help-msg("Read changes to ~/.mailrc file.  (Shift-m)") \n

*cmd_box.Folder.accelerators:	#override \
 !Shift<KeyPress>f: set() notify() unset() \n

*cmd_box.Folder.translations:	#override \
 <Enter>: highlight() help-msg("Bring up a list of folders to choose from.  (Shift-f)") \n

*cmd_box.gripe.accelerators:	#override \
 None<KeyPress>g: set() notify() unset() \n

*cmd_box.gripe.translations:	#override \
 <Enter>: highlight() help-msg("Send a complaint or comment to the Author of XMailTool.  (g)") \n

*send.translations:		#override \
 <Enter>: highlight() help-msg("Send this message out.") \n

*cancel.translations:		#override \
 <Enter>: highlight() help-msg("Forget it... I changed my mind...") \n

*cmd_box.file.accelerators:	#override \
 None<KeyPress>c: set() notify() unset() \n\
 !Ctrl<KeyPress>f: set() notify() unset() \n

*cmd_box.file.translations:	#override \
 None<Enter>: highlight() help-msg("Read mail from file specified by File:___.  (Ctrl-f)") \n\
 !Shift<Enter>: highlight() help-msg("Change directory to Directory:___.  (c)") xmt-label("cd") \n\
 <Leave>: unhighlight() xmt-label("file") \n\
 <KeyPress>Shift_R: xmt-label("cd") help-msg("Change directory to Directory:___.  (c)") \n\
 <KeyPress>Shift_L: xmt-label("cd") help-msg("Change directory to Directory:___.  (c)") \n\
 <KeyRelease>Shift_R: xmt-label("file") help-msg("Read mail from file specified by File:___.  (Ctrl-f)") \n\
 <KeyRelease>Shift_L: xmt-label("file") help-msg("Read mail from file specified by File:___.  (Ctrl-f)") \n\
 Shift<Btn1Up>: xmt-notify("cd") unset() \n

*cmd_box.mime.accelerators:	#override \
 !Meta<KeyPress>m: set() notify() unset() \n

*cmd_box.mime.translations:	#override \
 <Enter>: highlight() help-msg("Send message to 'metamail'.  (Meta-m)") \n

*header_box*translations:	#override \
 <Enter>:	help-msg("Current message headers.") \n\
<Key>F9:	scroll-one-line-up() \n\
<Key>F8:	previous-page() \n\
<Key>F7:	next-page() \n\
<Key>F6:	scroll-one-line-down() \n\
<Key>F11:       next-page() \n\
<Key>F12:       previous-page()

*mail_output*translations:	#override \
 <Enter>:	help-msg("Verbose information/Output from Mail(1).") \n

*msg_box*translations:		#override \
 <Enter>:	help-msg("Text of Current message.") \n\
<Key>F9:	scroll-one-line-up() \n\
<Key>F8:	previous-page() \n\
<Key>F7:	next-page() \n\
<Key>F6:	scroll-one-line-down() \n\
<Key>F11:       next-page() \n\
<Key>F12:       previous-page()

*Show.accelerators:  #override \
 !Meta<KeyPress>s: set() notify() \n

*Show.translations:		#override \n\
 <Enter>: highlight(Always) help-msg("Show the text of the message pointed to.  (Meta-s)") \n\
				<Leave>: unhighlight() \n\
				<Btn1Down>,<Btn1Up>: set() notify() \n

*Delete.accelerators:  #override \
 !Meta<KeyPress>d: set() notify() \n

*Delete.translations:		#override \n\
 <Enter>: highlight(Always) help-msg("Delete the message pointed to.  (Meta-d)") \n\
				<Leave>: unhighlight() \n\
				<Btn1Down>,<Btn1Up>: set() notify() \n

*Save.accelerators:  #override \
 !Meta<KeyPress>m: set() notify() \n

*Save.translations:		#override \n\
 <Enter>: highlight(Always) help-msg("Save to a file the message that is pointed to.  (Meta-m)") \n\
				<Leave>: unhighlight() \n\
				<Btn1Down>,<Btn1Up>: set() notify() \n

*Preserve.accelerators:  #override \
 !Meta<KeyPress>p: set() notify() \n


*Preserve.translations:	#override \n\
 <Enter>: highlight(Always) help-msg("Keep in the system mail file the message that is pointed to.  (Meta-p)") \n\
				<Leave>: unhighlight() \n\
				<Btn1Down>,<Btn1Up>: set() notify() \n

*BodyOnly.translations:	#override \n\
 <Enter>: highlight(Always) help-msg("Toggle showing the body of a message only.") \n

*Deleted.translations:	#override \n\
 <Enter>: highlight(Always) help-msg("Toggle showing messages header marked for deletion.") \n

*directory_name.translations:	#override <Key>Return: xmt-cd() \n\
 Ctrl<Key>M:	xmt-cd() \n\
 Ctrl<Key>J:	xmt-cd() \n\
 <Enter>: help-msg("Name used in 'cd' command button.") \n
*file_name.translations:	#override <Key>Return: xmt-file() \n\
 Ctrl<Key>M:	xmt-file() \n\
 Ctrl<Key>J:	xmt-file() \n\
 <Enter>: help-msg("Name used in 'file' and 'save' command buttons.") \n

*header_box*search*search.translations: #override \
 <Btn1Up>:	clear-old() notify() unset() show-select() \n

*outbound_msg*send.accelerators:  #override \
 !Meta<KeyPress>s: set() notify() unset()\n

*outbound_msg*cancel.accelerators:  #override \
 !Meta<KeyPress>c: set() notify() unset()\n

*outbound_msg*reply.translations: #override \
Ctrl<Key>A:	beginning-of-line() \n\
Ctrl<Key>B:	backward-character() \n\
Ctrl<Key>D:	delete-next-character() \n\
Ctrl<Key>E:	end-of-line() \n\
Ctrl<Key>F:	forward-character() \n\
Ctrl<Key>G:     multiply(Reset) \n\
Ctrl<Key>H:	delete-previous-character() \n\
Ctrl<Key>J:	newline-and-indent() \n\
Ctrl<Key>K:	kill-to-end-of-line() \n\
Ctrl<Key>L:	redraw-display() \n\
Ctrl<Key>M:	newline() \n\
Ctrl<Key>N:	next-line() \n\
Ctrl<Key>O:	newline-and-backup() \n\
Ctrl<Key>P:	previous-line() \n\
Ctrl<Key>R:	search(backward) \n\
Ctrl<Key>S:	search(forward) \n\
Ctrl<Key>T:     transpose-characters() \n\
Ctrl<Key>U:	multiply(4) \n\
Ctrl<Key>V:	next-page() \n\
Ctrl<Key>W:	kill-selection() \n\
Ctrl<Key>Y:	insert-selection(CUT_BUFFER1) \n\
Ctrl<Key>Z:	scroll-one-line-up() \n\
Mod1<Key>I:	insert-file() \n\
Mod1<Key>B:	backward-word() \n\
Mod1<Key>F:	forward-word() \n\
Mod1<Key>J:     end-of-line() delete-next-character() insert-string(" ") \n\
Mod1<Key>K:	kill-to-end-of-paragraph() \n\
Mod1<Key>Q:     form-paragraph() \n\
Mod1<Key>V:	previous-page() \n\
Mod1<Key>Y:	insert-selection(PRIMARY, CUT_BUFFER0) \n\
Mod1<Key>Z:	scroll-one-line-down() \n\
 <Enter>: help-msg("Outbound message.") \n\
 :<KeyRelease>~,None<Key>a: xmt-tilde(a) \n\
 :<KeyRelease>~,!Shift<Key>a: xmt-tilde(A) \n\
 :<KeyRelease>~,None<Key>b: xmt-tilde(b) \n\
 :<KeyRelease>~,None<Key>c: xmt-tilde(c) \n\
 :<KeyRelease>~,None<Key>d: xmt-tilde(d) \n\
 :<KeyRelease>~,None<Key>e: xmt-tilde(e) \n\
 :<KeyRelease>~,None<Key>f: xmt-tilde(f) \n\
 :<KeyRelease>~,None<Key>g: xmt-tilde(g) \n\
 :<KeyRelease>~,None<Key>h: xmt-tilde(h) \n\
 :<KeyRelease>~,None<Key>i: xmt-tilde(i) \n\
 :<KeyRelease>~,None<Key>j: xmt-tilde(j) \n\
 :<KeyRelease>~,None<Key>k: xmt-tilde(k) \n\
 :<KeyRelease>~,None<Key>l: xmt-tilde(l) \n\
 :<KeyRelease>~,None<Key>m: xmt-tilde(m) \n\
 :<KeyRelease>~,None<Key>n: xmt-tilde(n) \n\
 :<KeyRelease>~,None<Key>o: xmt-tilde(o) \n\
 :<KeyRelease>~,None<Key>p: xmt-tilde(p) \n\
 :<KeyRelease>~,None<Key>q: xmt-tilde(q) \n\
 :<KeyRelease>~,None<Key>r: xmt-tilde(r) insert-file() \n\
 :<KeyRelease>~,None<Key>s: xmt-tilde(s) \n\
 :<KeyRelease>~,None<Key>t: xmt-tilde(t) \n\
 :<KeyRelease>~,None<Key>u: xmt-tilde(u) \n\
 :<KeyRelease>~,None<Key>v: xmt-tilde(v) \n\
 :<KeyRelease>~,None<Key>w: xmt-tilde(w) \n\
 :<KeyRelease>~,None<Key>x: xmt-tilde(x) \n\
 :<KeyRelease>~,None<Key>y: xmt-tilde(y) \n\
 :<KeyRelease>~,None<Key>z: xmt-tilde(z) \n\
 None<Key>a: insert-char() \n\
 !Shift<Key>a: insert-char() \n\
 None<Key>b: insert-char() \n\
 None<Key>c: insert-char() \n\
 None<Key>d: insert-char() \n\
 None<Key>e: insert-char() \n\
 None<Key>f: insert-char() \n\
 None<Key>g: insert-char() \n\
 None<Key>h: insert-char() \n\
 None<Key>i: insert-char() \n\
 None<Key>j: insert-char() \n\
 None<Key>k: insert-char() \n\
 None<Key>l: insert-char() \n\
 None<Key>m: insert-char() \n\
 None<Key>n: insert-char() \n\
 None<Key>o: insert-char() \n\
 None<Key>p: insert-char() \n\
 None<Key>q: insert-char() \n\
 None<Key>r: insert-char() \n\
 None<Key>s: insert-char() \n\
 None<Key>t: insert-char() \n\
 None<Key>u: insert-char() \n\
 None<Key>v: insert-char() \n\
 None<Key>w: insert-char() \n\
 None<Key>x: insert-char() \n\
 None<Key>y: insert-char() \n\
 None<Key>z: insert-char() \n\
 :<Key>~: xmt-tilde() \n\
:Mod1<Key>d:	delete-next-word() \n\
:Mod1<Key>D:	kill-word() \n\
:Mod1<Key>h:	delete-previous-word() \n\
:Mod1<Key>H:	backward-kill-word() \n\
:Mod1<Key>\\<:	beginning-of-file() \n\
:Mod1<Key>\\>:	end-of-file() \n\
:Mod1<Key>]:	forward-paragraph() \n\
:Mod1<Key>[:	backward-paragraph() \n\
~Shift Meta<Key>Delete:		delete-previous-word() \n\
 Shift Meta<Key>Delete:		backward-kill-word() \n\
~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
 Shift Meta<Key>BackSpace:	backward-kill-word() \n\
<Key>Right:	forward-character() \n\
<Key>Left:	backward-character() \n\
<Key>Down:	next-line() \n\
<Key>Up:	previous-line() \n\
<Key>Delete:	delete-previous-character() \n\
<Key>BackSpace:	delete-previous-character() \n\
<Key>Linefeed:	newline-and-indent() \n\
<Key>Return:	newline() \n\
<Key>F9:	scroll-one-line-up() \n\
<Key>F8:	previous-page() \n\
<Key>F7:	next-page() \n\
<Key>F6:	scroll-one-line-down() \n\
<Key>F11:       next-page() \n\
<Key>F12:       previous-page() \n\
<Key>:		insert-char() \n\
<FocusIn>:	focus-in() \n\
<FocusOut>:	focus-out() \n\
<Btn1Down>:	select-start() \n\
<Btn1Motion>:	extend-adjust() \n\
<Btn1Up>:	extend-end(PRIMARY, CUT_BUFFER0) \n\
<Btn2Down>:	insert-selection(PRIMARY, CUT_BUFFER0) \n\
<Btn3Down>:	extend-start() \n\
<Btn3Motion>:	extend-adjust() \n\
<Btn3Up>:	extend-end(PRIMARY, CUT_BUFFER0)


*xface.borderWidth:    0
*xface.internalWidth:  2
*xface.internalHeight: 2
*xface.translations: #override \
<Enter>: help-msg("X-Face header line.") \n


