# Makefile for fetchmail

# If you're running QNX, we can't assume a working autoconf.
# So just uncomment all the lines marked QNX.

VERS=3.8
PL=0

# Ultrix 2.2 make doesn't expand the value of VPATH.
srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
# CC = cc		# QNX

CFLAGS = @CFLAGS@
# CFLAGS =  -g2 -5	# QNX
LDFLAGS = @LDFLAGS@
# LDLAGS =  -g2 -5	# QNX
LEX = @LEX@
LEXFLAGS=
YACC = @YACC@
# YACC = yacc
YACCFLAGS = -dt

# How to invoke ranlib.  This is only used by the `glob' subdirectory.
RANLIB = @RANLIB@

# NeXT 1.0a uses an old version of GCC, which required -D__inline=inline.
# See also `config.h'.
DEFS = @DEFS@
# DEFS = -DQNX -DHAVE_CONFIG_H -DHAVE_UNISTD_H -DHAVE_STDARG_H -DSTDC_HEADERS	# QNX
defines =  -DRELEASE_ID=\"$(VERS)\" -DPATCHLEVEL=\"$(PL)\" $(DEFS)

# If your system needs extra libraries loaded in, define them here.
LOADLIBS = @LIBS@ @LEXLIB@
# LOADLIBS = -lsocket3r -lunix3r	# QNX

# Any extra object files your system needs.
extras = @LIBOBJS@

# Extra sources/objects for library functions not provided on the host system.
EXTRASRC = @EXTRASRC@
# EXTRASRC = $(srcdir)/strcasecmp.c $(srcdir)/getopt.c $(srcdir)/getopt1.c $(srcdir)/alloca.c	# QNX
EXTRAOBJ = @EXTRAOBJ@
# EXTRAOBJ = strcasecmp.o getopt.o getopt1.o alloca.o

# Common prefix for machine-independent installed files.
prefix = @prefix@
# Common prefix for machine-dependent installed files.
exec_prefix = @exec_prefix@

# Name under which to install fetchmail
instname = fetchmail
# Directory in which to install.
bindir = @bindir@
# Directory to install the Info files in.
infodir = @infodir@
# Number to put on the man page filename.
manext = 1
# Directory to install the man page in.
mandir = @mandir@/man$(manext)

# Program to install `make'.
INSTALL_PROGRAM = @INSTALL_PROGRAM@ -s
# Program to install the man page.
INSTALL_DATA = @INSTALL_DATA@
# Generic install program.
INSTALL = @INSTALL@

# Program to format Texinfo source into Info files.
MAKEINFO = makeinfo
# Program to format Texinfo source into DVI files.
TEXI2DVI = texi2dvi

# Programs to make tags files.
ETAGS = etags -tw
CTAGS = ctags -tw

protobjs = socket.o getpass.o pop2.o pop3.o imap.o etrn.o fetchmail.o  \
       options.o rcfile_y.o rcfile_l.o daemon.o smtp.o driver.o rfc822.o  \
       xmalloc.o uid.o mxget.o md5c.o md5ify.o interface.o netrc.o error.o

objs = $(protobjs) $(extras) $(EXTRAOBJ)

srcs = $(srcdir)/socket.c $(srcdir)/getpass.c $(srcdir)/pop2.c 		\
       $(srcdir)/pop3.c $(srcdir)/imap.c $(srcdir)/etrn.c 		\
       $(srcdir)/fetchmail.c $(srcdir)/options.c $(srcdir)/daemon.c 	\
       $(srcdir)/driver.c $(srcdir)/rfc822.c $(srcdir)/smtp.c		\
       $(srcdir)/xmalloc.c $(srcdir)/uid.c $(srcdir)/mxget.c 		\
       $(srcdir)/md5c.c $(srcdir)/md5ify.c $(srcdir)/interface.c 	\
       $(srcdir)/netrc.c $(srcdir)/error.c

.SUFFIXES:
.SUFFIXES: .o .c .h .y .l .ps .dvi .info .texi

all: fetchmail

# Some makes apparently use .PHONY as the default goal if it is before `all'.
.PHONY: all check

fetchmail: $(objs)
	$(CC) $(LDFLAGS) $(objs) $(LOADLIBS) -o fetchmail

# Tester for address parsing
rfc822: rfc822.c
	gcc -DTESTMAIN -g rfc822.c -o rfc822

# -I. is needed to find config.h in the build directory.
.c.o:
	$(CC) $(defines) -c -I. -I$(srcdir) $(CFLAGS) $< $(OUTPUT_OPTION)

# lex rule
.l.o:

.l.c:
	$(LEX) $(LEXFLAGS) $<
	mv lex.yy.c $@

# yacc rule
.y.o:

.y.c:
	$(YACC) $(YACCFLAGS) $<
	mv y.tab.c $@
	mv -f y.tab.h $*.h

# For some losing Unix makes.
SHELL = /bin/sh
MAKE = make

FORCE:

tagsrcs = $(srcs) $(srcdir)/rcfile_l.c $(srcdir)/rcfile_y.c
TAGS: $(tagsrcs)
	$(ETAGS) $(tagsrcs)
tags: $(tagsrcs)
	$(CTAGS) $(tagsrcs)

.PHONY: install installdirs
install: installdirs $(bindir)/$(instname) $(mandir)/$(instname).$(manext)

installdirs:
	$(SHELL) ${srcdir}/mkinstalldirs $(bindir) $(mandir)

$(bindir)/$(instname): fetchmail
	$(INSTALL_PROGRAM) fetchmail $@

$(mandir)/$(instname).$(manext): fetchmail.man
	$(INSTALL_DATA) $(srcdir)/fetchmail.man $@

.PHONY: clean realclean distclean mostlyclean
clean: 
	-rm -f fetchmail *.o core fetchmail.dvi \
	       rcfile_l.c rcfile_y.h rcfile_y.c \
	       fetchmail.tar fetchmail.tar.gz \
	       rfc822

distclean: clean 
	-rm -f Makefile config.h TAGS tags
	-rm -f config.cache config.status config.log stamp-config
	-rm -f fetchmail.log fetchmail.toc fetchmail.*aux

realclean: distclean # fetchmail.info*

mostlyclean: clean

Makefile: config.status $(srcdir)/Makefile.in
	$(SHELL) config.status
	@echo "You can ignore any makedepend error messages"
	-makedepend -I. -fMakefile *.c

config.h: stamp-config 

stamp-config: config.status $(srcdir)/config.h.in
	$(SHELL) config.status
	touch stamp-config

configure: configure.in
	autoconf $(ACFLAGS)

config.h.in: acconfig.h configure.in
	autoheader $(ACFLAGS)

# This tells versions [3.59,3.63) of GNU make not to export all variables.
.NOEXPORT:

# Special dependencies, not easily handled without explicit rules
$(srcdir)/rcfile_l.c $(srcdir)/rcfile_l.h: $(srcdir)/rcfile_l.l
$(srcdir)/rcfile_y.c $(srcdir)/rcfile_y.h: $(srcdir)/rcfile_y.y

parser = $(srcdir)/rcfile_l.l $(srcdir)/rcfile_y.y
headers = $(srcdir)/fetchmail.h $(srcdir)/socket.h $(srcdir)/smtp.h \
	$(srcdir)/mx.h $(srcdir)/md5.h $(srcdir)/md5global.h \
	$(srcdir)/netrc.h $(srcdir)/tunable.h
extra = $(srcdir)/alloca.c $(srcdir)/getopt.[ch] $(srcdir)/getopt1.c \
	$(srcdir)/strcasecmp.c
docs = $(srcdir)/COPYING $(srcdir)/README $(srcdir)/INSTALL $(srcdir)/NEWS \
	$(srcdir)/NOTES $(srcdir)/fetchmail.lsm \
	$(srcdir)/*.man	$(srcdir)/sample.rcfile $(srcdir)/FAQ
config = $(srcdir)/Makefile.in $(srcdir)/configure.in $(srcdir)/configure \
	$(srcdir)/config.guess $(srcdir)/config.h.in $(srcdir)/config.sub \
	$(srcdir)/acconfig.h
scripts = $(srcdir)/install.sh $(srcdir)/mkinstalldirs $(srcdir)/specgen.sh
all = $(docs) $(config) $(srcs) $(parser) $(headers) $(extra) $(scripts) \
	$(srcdir)/MANIFEST

MANIFEST: $(srcdir)
	@echo $(all) | tr "[ \t]" '\n' | sort | sed "s/\\./fetchmail-$(VERS)/" >MANIFEST

dist: fetchmail-$(VERS).tar.gz
	ls -l fetchmail-$(VERS).tar.gz

fetchmail-$(VERS).tar: $(all)
	(cd ..; tar -cf fetchmail-$(VERS).tar `cat fetchmail-$(VERS)/MANIFEST`)
	mv ../fetchmail-$(VERS).tar fetchmail-$(VERS).tar
fetchmail-$(VERS).tar.gz: fetchmail-$(VERS).tar
	gzip -f fetchmail-$(VERS).tar

RPMROOT=/usr/src/redhat
RPM = rpm
RPMFLAGS = -ba
rpm: fetchmail-$(VERS).tar.gz
	cp fetchmail-$(VERS).tar.gz $(RPMROOT)/SOURCES;
	$(srcdir)/specgen.sh $(VERS) $(PL) >$(RPMROOT)/SPECS/fetchmail.spec
	cd $(RPMROOT)/SPECS; $(RPM) $(RPMFLAGS) fetchmail.spec	

# The automatically generated dependencies below may omit config.h
# because it is included with ``#include <config.h>'' rather than
# ``#include "config.h"''.  So we add the explicit dependency to make sure.
$(objs): config.h

rcfile_l.o: rcfile_y.h

# Automatically generated dependencies will be put at the end of the makefile.
# DO NOT DELETE THIS LINE -- make depend depends on it.
