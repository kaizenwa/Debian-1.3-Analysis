#ident "@(#) routers,v 1.2 1990/10/24 05:21:02 tron Exp"

# inet_addrs - match domain literals containing literal IP addresses
#
# For example, [128.103.1.1] will match harvard.harvard.edu on the internet.
# The library routine gethostbyaddr(3N) will be called to see if a reverse
# mapping to the cononical hostname is available.
inet_addrs:
	driver = gethostbyaddr,		# router to match IP domain literals
	transport = smtp;		# deliver using SMTP over TCP/IP

	fail_if_error,			# fail malformed domain literal addrs
	check_for_local			# see if this is really the local host

# paths - force some routes using the YP network path database
paths:	driver = pathalias,		# general-use paths router
	transport = smtp;		# for matches, deliver over SMTP

	file = mail.paths,		# database containing path info
	proto = yp,			# look in yp database

# inet_hosts - match hostnames with gethostbyname(3N)
inet_hosts:
	driver = gethostbyname,		# match hosts with the library function
	transport = smtp;
	domain = bar.foo.com

# smart_host - a partically specified smarthost director
#
# If the config file attribute smart_path is defined as a path from the
# local host to a remote host, then hostnames not matched otherwise will
# be sent off to the stated remote host.  The config file attribute
# smart_transport can be used to specify a different transport.
#
# If the smart_path attribute is not defined, this router is ignored.
smart_host:
	driver = smarthost,		# special-case driver
	transport = smtp		# by default deliver over SMTP
