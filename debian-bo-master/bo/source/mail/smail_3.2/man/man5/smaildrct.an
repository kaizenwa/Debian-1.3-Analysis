.rn '' }`
'''#ident	"@(#)smail/man/man5:RELEASE-3_2:smaildrct.an,v 1.4 1996/05/29 18:47:53 woods Exp"
''' 
''' 
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
.ds L' '
.ds R' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds L' `
.ds R' '
.if t .ds PI \(*p
.if n .ds PI PI
'br\}
.TH DIRECTORS X_MAN5_EXT_X "\*(RP"
.UC
.if n .hy 0 
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd S B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds / 
.	ds q 
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH NAME
X_LIB_DIR_X/directors \- smail configuration of local address handling
.SH "\fBTHE DIRECTORS FILE\fR"
The \fIdirector\fR file describes the operations, and their order, for
handling local addresses. For example, some possibilities are to
expand a local address into a list of local and remote addresses
through an alias file, forward file or mailing list, or to cause mail
to be delivered to a local user.
.PP
The following list describes the possible generic attributes for
director file entries:
.Ip "\fIcaution\fR" 4
type: \fIboolean\fR
.Sp
If set then be cautious of addresses produced by this director. If the
nobody attribute is not set, then reject file, shell command or
\fI:include:filename\fR\-style mailing list addresses.
.Ip "\fIdefault_group\fR" 4
type: \fIstring\fR
.Sp
If the driver does not associate a group to an address returned by it,
then associate the group id for this group name. This will override
the gid set by a \fBdefault_user\fR attribute.
.Ip "\fIdefault_home\fR" 4
type: \fIstring\fR
.Sp
If the driver does not associate a home directory with an address
returned by it, then use this home directory.
.Sp
The value will be expanded to form the actual directory pathname. At
the present time, the \fB$user\fR variable is not available for this
expansion. If the string expansion fails, it is ignored.
.Ip "\fIdefault_user\fR" 4
type: \fIstring\fR
.Sp
If the driver does not associate a user or group to an address
returned by it, then associate the user id and group id of this user.
.Ip "\fIdomains\fR" 4
type: \fIstring\fR
.Sp
This attribute specifies a colon-separated list of domains. If it is
present, the actual local domain given in an address (or the visible
name if no domain is given) is tested against this list, and if it
does not match any entry, the director is skipped. This makes it
possible to set up differential handling of local domains. For
example, if both \fIfoo.ac.uk\fR and \fIlists.foo.ac.uk\fR are defined as
local domains, the following configuration ensures that messages sent
to \fIfoo.ac.uk\fR are handled by their own director.
.Sp
.Vb 7
\&    # handle messages addressed to lists on the local host 
\&    lists:
\&        driver = forwardfile,
\&        caution,
\&        nobody,
\&        domains="lists.foo.ac.uk",
\&        owner = $user-request@lists.foo.ac.uk; file = lists/${lc:user}
.Ve
.Vb 5
\&    # match users on the local host 
\&    user:
\&        domains="foo.ac.uk",
\&        driver = user;
\&        transport = local
.Ve
.Ip "\fIdriver\fR" 4
type: \fIstring\fR
.Sp
The driver attribute names a specific set of lowlevel functions which
will do the work of directing local mail. This attribute is required.
.Ip "\fInobody\fR" 4
type: \fIboolean\fR
.Sp
If set, then access files, or run shell commands as the user specified
by the \fBnobody\fR attribute, for addresses flagged with \fIcaution\fR by
either the \fBcaution\fR generic attribute or by the driver.
.Sp
Association of nobody with an address overrides the default_user,
default_group, set_user and set_group attributes. This attribute is
set by default.
.Ip "\fIowner\fR" 4
type: \fIstring\fR
.Sp
Names the address to be sent mail if an error occurs in processing the
addresses produced by this director. This string is expanded with the
variable \fB$user\fR set to the local-form address passed to the
director.  Commonly the value will be ``owner-$user'\*(R'. If this string
expansion fails, it is ignored.
.Ip "\fIsender_okay\fR" 4
type: \fIboolean\fR
.Sp
If set, then it is always okay for this attribute to produce an
address equal to the sender. This effectively turns on the \fIme too\fR
flag for this director. This should generally be set for forwarding
directors and should not be set for aliasing and mailing list
directors.
.Ip "\fIset_group\fR" 4
type: \fIstring\fR
.Sp
Associate the gid for this group with the addresses returned by the
driver. This overrides any gid set by the \fBset_user\fR attribute.
.Ip "\fIset_home\fR" 4
type: \fIstring\fR
.Sp
Associate this home directory with all addresses returned by the
driver. This will be expanded in the same manner as \fBdefault_home\fR.
.Ip "\fIset_user\fR" 4
type: \fIstring\fR
.Sp
Associate the uid and gid for this user with addresses returned by the
driver. This overrides any values set by the driver.
.PP
There are two addresses which are required by the mailer software to
exist: the address \fIPostmaster\fR and the address \fIMailer-Daemon\fR. To
avoid the necessity of an alias for these two users, smail contains
two implicit directors embedded into the directing code. These
implicit directors are used as a last resort. The first such director
maps the address \fIMailer-Daemon\fR onto the address \fIPostmaster\fR and
the second maps \fIPostmaster\fR onto the address \fIroot\fR.
.SH "\fBTHE DIRECTOR DRIVERS\fR"
This section details the usage and driver-specific attributes for all
of the director drivers distributed with smail. See the section \fBTHE
DIRECTOR FILE\fR for more information on directors.
.Sh "\fBThe Aliasfile Driver\fR"
The base standard for the format of the aliases and forward files
should be the format used by the \s-1BSD\s0 \fIsendmail\fR program. This format
is simple yet powerful enough for most needs.
.PP
A sendmail-compatible aliases file consists of relations between alias
names and the lists of entities to that the aliases expand. Each entry
is of the form:
.PP
.Vb 1
\&    alias-name:   address, ...
.Ve
The following is a sample alias file for a machine nsavax:
.PP
.Vb 45
\&    # Sample aliasing file for nsavax 
\&    #
\&    # redirect root's mail 
\&    root: brown, casey
\&    #
\&    # mail sent to MAILER-DAEMON should go to postmaster
\&    MAILER-DAEMON: postmaster 
\&    #
\&    # brown maintains netnews and mail 
\&    postmaster: brown
\&    netnews: brown 
\&    #
\&    # copy fawn on all north's mail
\&    north: north, fawn
\&    #
\&    # post important information to network 
\&    msgs: local-msgs@ciacray, local-msgs@nscprofs, local-msgs@nsavax
\&    local-msgs: "|/usr/ucb/msgs -s"     # deliver to msgs program
\&    #
\&    # administrivia
\&    rnews: "|/usr/lib/news/uurec"       # read news messages from mail
\&    #
\&    # mailing lists for accessing users on the local network 
\&    nsavax-users:    :include:/usr/lib/mail/nsavax-users 
\&    ciacray-users:   :include:/usr/lib/mail/ciacray-users 
\&    nscprofs-users:  :include:/usr/lib/mail/nscprofs-users
\&    #
\&    # mail to everybody on the local network 
\&    everybody: nsavax-users, # well, almost everybody
\&               ciacray-users,
\&               nscprofs-users
\&    #
\&    # save mail to mailing list requests and send to moderator 
\&    funding-request: /usr/log/funding-req, reagan@nscprofs 
\&    covert-bugs-request: /usr/log/covert-bugs-req, james.bond@ciacray
\&    #
\&    # broadcast to mailing lists, and save a copy 
\&    funding:    # excludes congress    
\&                :include:/usr/list/funding, 
\&                # save all messages here 
\&                /usr/log/funding
\&    #
\&    covert-bugs: # includes kgb 
\&                 :include:/usr/list/covert-bugs, 
\&                 /usr/log/covert-bugs # save all messages here
.Ve
The aliasfile driver searches for matches between a local address on
input and an \fIalias-name\fR from the alias file. If a match is found,
it returns the associated list.
.PP
It has the following driver attributes:
.Ip "\fIfile\fR" 4
type: \fIstring\fR
.Sp
Define the name of the file containing the database.  Except when this
is not appropriate for the \fIproto\fR being used, if this does not begin
with ``/'\*(R', it will be referenced relative to the \fIsmail_lib_dir\fR
directory.
.Ip "\fIinterval\fR" 4
type: \fInumber\fR
.Sp
A sleep interval between open retries, in seconds. On systems which
have 1 second granularities on wakeup times and where, as a result,
sleep times can be nearly 0 seconds, this number should be at least 2.
.Ip "\fImodemask\fR" 4
type: \fInumber\fR
.Sp
A mask, ala \fIumask\fR\|(2), defining the maximum permissiveness allowed for
the permissions on the alias file. For example, a modemask of 022
disallows write access to all but the file owner. This value should be
chosen to strike a reasonable compromise between security and user
convenience. It should also take into account the use of the \fBowners\fR
and \fBowngroups\fR attributes described below. A paragraph below
describes the consequences for a file not meeting this criteria.
.Ip "\fIoptional\fR" 4
type: \fIboolean\fR
.Sp
If set, then if the open fails, assume an empty alias file. This is
useful for optional databases. For example, in a networking
environment, workstations may be configured with the option of having
a private alias file, without the necessity of creating such a file on
each host.
.Ip "\fIowners\fR" 4
type: \fIstring\fR
.Sp
A list of permissible owners for the alias file. A paragraph below
describes the consequences for a file not meeting this criteria.
.Ip "\fIowngroups\fR" 4
type: \fIstring\fR
.Sp
A list of permissible owning groups for the alias file. A paragraph
below describes the consequences for a file not meeting this criteria.
.Ip "\fIproto\fR" 4
type: \fIstring\fR
.Sp
Names the protocol used in opening and searching the
database. Possibilities are discussed below.
.Ip "\fIreopen\fR" 4
type: \fIboolean\fR
.Sp
If this attribute is on, the alias file will be closed and reopened
after each call to the driver. This is useful for systems that have a
shortage of file descriptors yet wish to access a large number of
databases.
.Ip "\fIretries\fR" 4
type: \fInumber\fR
.Sp
the maximum count of open retries. This should be greater than zero if
the system does not have an atomic \fIrename\fR\|(2) system call, as the alias
file may not always exist while being modified.
.Ip "\fItryagain\fR" 4
type: \fIboolean\fR
.Sp
If set, then if the open fails, the resolution of local addresses will
be attempted at a later time. This is useful in a networking
environment where failure to open a database (such as a remote \s-1YP\s0
database) may be a result of a server machine being down or
temporarily inaccessible.
.Sp
If any of the attributes \fBmodemask\fR, \fBowners\fR or \fBowngroups\fR reject
the file as a possible security problem, all addresses returned are
flagged with the \fIcaution\fR bit set. See the generic director
attribute \fBnobody\fR for more information.
.Sp
The current list of possible values for the \fIproto\fR attribute is:
.Ip "bsearch " 8
Use a binary search to look through a sorted file arranged as lines
which begin with a key and are followed by the value associated with
the key, separated by a colon or whitespace. The file should be sorted
by the key, not by the line. The \fImksort\fR(X_MAN8_EXT_X) utility sorts
lines correctly. Care should be taken when using the regular \fIsort\fR\|(1)
to ensure that the sort uses proper delimiters.
.Ip "dbm" 8
Use the \s-1BSD\s0 \fIdbm\fR\|(3x) or \fIndbm\fR\|(3x) routines to search for the key. The
keys and data in the dbm database must end in a nul byte. If only the
\fIdbm\fR\|(3x) library is available then only one dbm database can be used by
\fIsmail ,\fR while the \fIndbm\fR\|(3x) routines will allow any number of
databases. However, it is always okay for multiple routers and
directors to use the same dbm database, if this is useful.
.Ip "aliasyp" 8
This is a variant of the \fIyp\fR protocol that is compatible with the
standard Sun \fImail.aliases\fR \s-1YP\s0 service. This database has a different
format from other databases which must be taken into account when
sending requests. Typically this is not useful for a path database.
.Ip "lsearch" 8
Use a linear search using the same read routine used to read config
files. `#\*(R'\-style comments are allowed and the beginning of each file
entry should be the key, followed by whitespace or a colon
character. The rest of the entry should be the value associated with
the key.
.Ip "yp" 8
Use the Sun \s-1YP\s0 service to access a paths database stored on a remote
machine. In this case the value for the \fBfile\fR attribute is of the
form:
.Sp
.Vb 1
\&    domain_name:database_name
.Ve
where the \fIdomain_name:\fR is optional and defaults to the default \s-1YP\s0
domain for the local host.
.Ip "nialias " 8
Use the NeXT NetInfo database, for getting user aliasing information.
.Ip "nisplus " 8
Lookup the key in a remote Sun \s-1NIS\s0+ (Sun \s-1NIS\s0 version 3) database. \s-1NIS\s0+
is not compatible with \s-1NIS\s0 (otherwise known as \s-1YP\s0). The file parameter
must be a \s-1NIS\s0+ indexed name, which is described in the \fInis\fR\|(1) manual
page. The search string is replaced with \*(L"%s\*(R" where it can
be filled in by smail's \s-1NIS\s0+ lookup routine.
.Sp
.Vb 5
\&    # search for alias expansions stored in a NIS+ database 
\&    nisaliases:
\&            driver = aliasfile;
\&            file = "[alias=%s],mail_aliases.org_dir", 
\&            proto = nisplus
.Ve
The lookup routine within smail allows you to choose which field to
get from the \s-1NIS\s0+ database by prepending the file with a string like
\*(L"@2,\*(R". That example would use field number 2 from the table The
default action, as in the \fInisaliases\fR example above, is to use field
1. (Field 0 is usually the index value).
.Sp
Though you wouldn't necessarily want to do this, the following example
allows you to send mail to all the members of groups in your \s-1NIS\s0+
group list as if each were a separate mail list.
.Sp
.Vb 5
\&    # use NIS+ groups as mail lists
\&    nisgroups:
\&            driver = aliasfile;
\&            file = "@3,[name=%s],group.org_dir", 
\&            proto = nisplus
.Ve
.Sp
A simple entry in the director file is:
.Sp
# don't perform any authentication on the alias file 
aliases: driver=aliasfile;
	file=/usr/lib/aliases, proto=dbm
.Sh "\fBThe Forwardfile Driver\fR"
Sendmail-compatible forward files have the same structure as mailing
lists. This format is:
.Sp
.Vb 1
\&    address, address, ...
.Ve
Where newlines can be included wherever whitespace is allowed, and
where a `#\*(R' character begins a comment that ends at the end of the
line. Comments are treated as whitespace.
.Sp
An example forward file for the user james.bond on nsavax is:
.Sp
.Vb 3
\&    # send to my own machine, but keep a copy here 
\&    # just in case it doesn't make it there. 
\&    bond%british-ss@ciacray, james.bond
.Ve
A useful forward file is:
.Sp
.Vb 4
\&    # I am on vacation, save away my mail, but tell people 
\&    # I won't be back for a while
\&    hustead,
\&    "|mailx -s `Yep, gone fishing!' \e"$SENDER\e" < $HOME/.fish"
.Ve
Which will save to Ted Hustead's mailbox file and will also execute
the following shell command:
.Sp
.Vb 1
\&    mailx -s `Yep, gone fishing!' "$SENDER" < $HOME/.fish
.Ve
where the shell variables \f(CW$HOME\fR and \f(CW$SENDER\fR are available from the
environment as the user's home directory and the sender address,
respectively.  Note that if the \fBignore_write_errors\fR attribute is
not turned on in the pipe transport, this example will cause mail to
be returned to the sender stating that a write error occurred on the
pipe to mailx. To prevent this, the line could also be changed to:
.Sp
.Vb 2
\&    "|cat>/dev/null;\e
\&    mailx -s `Yep, gone fishing' \e"$SENDER\e"<$HOME/.fish"
.Ve
where the ``cat>/dev/null'\*(R' will read \fBstdin\fR, preventing a write
error on the pipe.
.Sp
The current list of driver attributes for the forwardfile driver is:
.Ip "\fIcaution\fR" 4
type: \fIstring\fR
.Sp
This string defines a list of users and directories which should cause
addresses to be flagged with \fIcaution\fR.
.Sp
Each entry in the list is expanded individually. If this string
expansion fails, it is ignored.
.Sp
A number, or a number range (in the form \fIlow_number\fR\-\fIhigh_number\fR)
can be used to indicate numerical uid's that should be treated with
caution. Typically, this string is ``0'\*(R', thus preventing file and
shell command from being performed as the superuser, ``0-99'\*(R',
preventing access with a system id.
.Ip "\fIcheckowner\fR" 4
type: \fIboolean\fR
.Sp
If set, then one of the permissible owners will be the user associated
with the forward file.
.Ip "\fIfile\fR" 4
type: \fIstring\fR
.Sp
The name of a file containing the forward information for a user. This
string will be expanded with the local name passed to the director
available as \fB$user\fR and any associated home directory available as
\fB$\s-1HOME\s0\fR. If this string expansion fails, it is ignored.
.Ip "\fIforwardto\fR" 4
type: \fIboolean\fR
.Sp
If set, then the file must begin with ``Forward to `\*(R' to be considered
a forward file. Also, only the first line is scanned for
addresses. This ``feature'\*(R' mimics the capability found in some
systems for hiding forwarding information in user mailboxes.
.Ip "\fIlock\fR" 4
type: \fIboolean\fR
.Sp
Makes the director lock the file before reading it (assuming that your
Unix supports locking of files for reading). Since no known editors
take any notice of file locking, enabling this has no effect other
than occaisionally causing problems on \s-1NFS\s0 file systems.
.Ip "\fImodemask\fR" 4
type: \fInumber\fR
.Sp
A mode mask defining the maximum permissiveness allowed for the
permissions on a forward file. Analogous to the modemask attribute for
the aliasfile driver.
.Ip "\fIprefix\fR" 4
type: \fIstring\fR
.Sp
This attribute requires that an address begin with the specified
string to be matched by the director. In addition, any reference to
the \fB$user\fR variable in the file attribute will have this prefix
removed.
.Ip "\fIsuffix\fR" 4
type: \fIstring\fR
.Sp
This attribute requires that an address end with the specified string
to be matched by the director. In addition, any reference to the
\fB$user\fR variable in the file attribute will have this suffix
removed. Both a \fBprefix\fR and a \fBsuffix\fR attribute can be specified
for a director. In this case both the prefix and the suffix string are
required for a match.
.Ip "\fIowners\fR" 4
type: \fIstring\fR
.Sp
Specifies a list of user who may own the forward file.
.Ip "\fIowngroups\fR" 4
type: \fIstring\fR
.Sp
Specifies a list of groups who may own the forward file.
.Ip "\fIunsecure\fR" 4
type: \fIstring\fR
.Sp
This string defines a list of users and directories which should cause
addresses to be flagged with \fIunsecure\fR. This will prevent delivery
to pipes or files. Each list entry is expanded. If this string
expansion fails, it is ignored. A number, or a number range (in the
form \fIlow_number\fR\-\fIhigh_number\fR) can be used to indicate numerical
uid's that should be treated with caution.
.Sp
If none of the attributes \fBowners\fR, \fBowngroups\fR or \fBcheckowner\fR is
given, no checks are made on ownership restrictions. The default
modemask is 0, effectively disabling checks for file mode
restrictions.
.Sp
\fB\s-1NOTE\s0:\fR Unless the file attribute references \fB$\s-1HOME\s0\fR or begins with
``~/'\*(R' the forward file driver can be used to provide forward files
for users or names that are not listed in the passwd file. In this
case, \fB$user\fR merely expands to the address passed to the forwardfile
driver. This feature can be used for setting up forwarding for
obsolete accounts or mailing list directories.
.Sp
The \fBprefix\fR and \fBsuffix\fR attributes can be used to define mailing
list directories associated with ownership or request addresses. To
get a directory of mailing list or alias owners, a \fBprefix\fR of
``owner-'\*(R' could be used. To create a directory of request addresses,
a \fBsuffix\fR of ``\-request'\*(R' could be used.
.Sp
An example of useful forwardfile director entries are:
.Sp
.Vb 22
\&    # put forwarding addresses for obsolete accounts under 
\&    # the /u/obsolete directory. These will contain only 
\&    # forwarding addresses. This is maintained by users in 
\&    # the group "admin" or "staff".
\&    #
\&    obsolete:
\&            driver=forwardfile;
\&            file=/u/obsolete/$user,
\&            owngroups=admin:staff
\&    #
\&    # handle per-user forward files in each user's home 
\&    # directory. This is roughly compatible with BSD 
\&    # sendmail, though performs some access checks, and 
\&    # is very cautious of directories which are remotely 
\&    # accessible. Root's .forward entries will operate 
\&    # from the nobody uid.
\&    #
\&    dotforward:
\&            driver=forwardfile, nobody;
\&            file=~/.forward, unsecure=~uucp:~ftp, 
\&            caution=root, checkowner, 
\&            owners=root, modemask=022
.Ve
.Vb 7
\&    # allow the "Forward to " feature to be used from user 
\&    # mailbox files as used in System V. 
\&    #
\&    forwardto:
\&            driver=forwardfile, nobody;
\&            file=/usr/spool/mail/$user, caution=root, 
\&            checkowner, modemask=002
.Ve
.Vb 6
\&    # define a mailing list directory, with any shell commands 
\&    # executed under the nobody user id. Any file in this 
\&    # directory defines the name and contents of a mailing list. 
\&    mailing_lists:
\&            driver=forwardfile, caution;
\&            file=/usr/lib/smail/lists/${lc:user}
.Ve
.Vb 6
\&    # define a directory of owner mailing lists. Addresses 
\&    # specified in this directory specify the owner address of a 
\&    # mailing list or alias.
\&    owner_lists:
\&            driver=forwardfile, caution;
\&            file=/usr/lib/smail/lists/owners/${lc:user}, prefix="owner-"
.Ve
.Sh "\fBThe Mailing-list Drivers\fR"
Mailing-list drivers come in two forms, one form for mailing-lists
derived by aliasing drivers, and another form for mailing-lists
derived by forwarding drivers. The reason for having two forms is that
security options take different forms depending on where mailing-lists
come from. Also, by having them separately recognized it is possible
to allow pipes and files in mailing-lists from alias files but not
from forward files. Note that if a new driver is written that does not
comply to the standards for alias drivers and forwarding drivers, and
that can produce mailing lists, a new mailing-list driver may need to
be written as well.
.Sp
The format of a mailing list file is the same as that of a forward
file, a simple list of addresses, with optional comments.
.Sp
The driver attributes are common to both of the mailinglist drivers:
.Ip "\fIcopyowners\fR" 4
type: \fIboolean\fR
.Sp
If set, attributes related to ownership restrictions are taken from
the director which produced the mailing list address.
.Ip "\fIcopysecure\fR" 4
type: \fIboolean\fR
.Sp
The modemask is copied from the director which produced the mailing
list address.
.Ip "\fIinterval\fR" 4
type: \fInumber\fR
.Sp
The sleep interval, in seconds, between retries. For systems that have
a 1 second timing granularity, this number must be at least 2 to
guarrantee a non-zero sleep interval.
.Ip "\fImatch_director\fR" 4
type: \fIstring\fR
.Sp
Names the specific director that this entry matches expansions
of. This can be used to assign different attributes from alternate
uses of the \fIaliasfile\fR and \fIforwardfile\fR directors.
.Ip "\fImodemask\fR" 4
type: \fInumber\fR
.Sp
The maximum permissiveness of file modes.
.Ip "\fIowners\fR" 4
type: \fIstring\fR
.Sp
A list of allowed owners.
.Ip "\fIowngroups\fR" 4
type: \fIstring\fR
.Sp
A list of allowed owning groups.
.Ip "\fIretries\fR" 4
type: \fInumber\fR
.Sp
The maximum count of open retries.
.Sh "\fBThe User Driver\fR"
The user director directs mail to a mailbox for known user on the
local host. It will succeed if the local address matches a user on the
system and will put an entry on the list of fully-resolved addresses.
.Sp
The driver attributes are:
.Ip "\fIprefix\fR" 4
type: \fIstring\fR
.Sp
The prefix, if non-\s-1NULL\s0, must be found in the front of the username
for this driver to be used. This prefix is removed from the username
prior to determining if it is a valid user on the local host. This can
be used to set up an alternate name for each user on the system which
is not matched by aliasing or forwarding director. Commonly, \fBprefix\fR
will be set to ``real-'\*(R' for one of the directors, so that mail can be
guaranteed to be delivered to a user's mailbox file on a specific host
by mailing to an address such as ``real-tron@namei.uucp.'\*(R' If a match
is found, the actual username is given to the transport.
.Ip "\fItransport\fR" 4
type: \fIstring\fR
.Sp
The name of the transport to associate with the address.
.Ip "\fIignore-case\fR" 4
type: \fIboolean\fR
.Sp
If set, the \fIuser\fR director ignores the case of the username when
matching.  Note that names from the password file are lowercased when
they are inserted into the internal cache file, so unless you wish to
bounce mail when the address contains upper-case characters, this
attribute should always be set, and it is set by default.
.Sp
A typical user director entry in the director file is:
.Sp
.Vb 1
\&    user: driver=user; transport=local
.Ve
This will associate any mail destined for a user on the local host
with the \fBlocal\fR transport.
.\"
.Sh "\fBThe AltUser Driver\fR"
The altuser director directs mail to a mailbox for known user on the
local host as per the user director, but using an alternate passwd
format file.  This file may be accessed by any of the standard search
methods, and so the interface looks just like that of aliasfile.  This
director succeeds if the local address matches a user in the alternate
passwd file and will put an entry on the list of fully-resolved
addresses.
.Sp
The driver attributes are:
.Ip "\fIpwfile\fR" 4
type: \fIstring\fR
.Sp
The name of a file which contains the key/value association database.
.Ip "\fIproto\fR" 4
type: \fIstring\fR
.Sp
Names the protocol used in opening and searching the
database.  Possible values are \fIbsearch\fR, \fIlsearch\fR, or
\fIdbm\fR, with the same meanings as for these attributes in the
aliasfile driver.
.Ip "\fImodemask\fR" 4
type: \fInumber\fR
.Sp
A mask, ala \fIumask\fR\|(2), defining the maximum permissiveness
allowed for the permissions on the pwfile.  For example, a modemask of
022 disallows write access to all but the file owner.  This value should
be chosen to strike a reasonable compromise between security and user
convenience.  If some of these bits are set, the \fIsecure\fR flag is
not set for the related addresses.  It should also take into account the
use of the \fBowners\fR and \fBowngroups\fR attributes described below.
.Ip "\fIowners\fR" 4
type: \fIstring\fR
.Sp
A list of permissible owners for the pwfile.  If the pwfile is owned by
another user, the \fIcaution\fR bit is set for the returned addresses.
.Ip "\fIowngroups\fR" 4
type: \fIstring\fR
.Sp
A list of permissible owning groups for the pwfile.  If the pwfile is
owned by some other group, the \fIcaution\fR bit is set for the returned
addresses.
.Ip "\fIretries\fR" 4
type: \fInumber\fR
.Sp
The maximum count of \fIopen\fR\|(2) retries.  This should be greater
than zero if the system does not have an atomic \fIrename\fR\|(2) system
call, as the pwfile may not always exist while being modified.
.Ip "\fIinterval\fR" 4
type: \fInumber\fR
.Sp
The sleep interval, in seconds, between retries of the pwfile open.  For
systems that have a 1 second timing granularity, this number must be at
least 2 to guarrantee a non-zero sleep interval.
.Sp
The private driver attribute flags are:
.Ip "\fIreopen\fR" 4
type: \fIboolean\fR
.Sp
If this attribute is on, the alias file will be closed and reopened
after each call to the driver. This is useful for systems that have a
shortage of file descriptors yet wish to access a large number of
databases.
.Ip "\fItryagain\fR" 4
type: \fIboolean\fR
.Sp
If set, then if the open fails, the resolution of local addresses will
be attempted at a later time.  This is useful in a networking
environment where failure to open a database may be a result of a server
machine being down or temporarily inaccessible.
.\"
.Sh "\fBThe Smartuser Driver\fR"
It may be that you wish all local addresses that you don't recognize
to be sent elsewhere. For example, there could be a host in your
domain that knows where most of the domain's users reside. The
\fIsmartuser\fR driver is a convenient way of handling this case, by
redirecting mail for unknown users to another host. Note that this
must be the last director entry, if it is used, because it is
generally non-discriminatory.
.Sp
The possible driver attributes for the smart user driver are:
.Ip "\fInew_user\fR" 4
type: \fIstring\fR
.Sp
This defines the new address to direct mail to. This string will be
string expanded with \fB$user\fR set to the local address name, and with
\fB$\s-1HOME\s0\fR being any the associated home directory, if there is one. It
is a configuration error for this string expansion to fail.
.Ip "\fIwell_formed_only\fR" 4
type: \fIboolean\fR
.Sp
If set, the \fIsmartuser\fR driver only matches an address if it contains
characters exclusively from the set of letters, digits, whitespace, as
well as `\-\*(R', `_\*(R', `+\*(R', and `.\*(R'.
.Sp
If the \fBwell_formed_only\fR attribute is on, any use of \fB$user\fR in the
\fBnew_user\fR value will have any groups of one or more whitespace and
dot are characters collapsed into exactly one dot. If it is off, the
\fB$user\fR value may be enclosed in double-quotes, with backslash
escapes where appropriate. This prevents the the value of \fB$user\fR
from changing the form of the address.
.Ip "\fItransport\fR" 4
type: \fIstring\fR
.Sp
If set this defines a transport that the unknown users mail is passed
to. This would be useful for either passing to a program that really
can deliver the mail, or alternatively specifying a tranport (probably
a piped program), which can generate a more detailed error message and
help information than the default smail diagnostics.  The
\fBwell_formed_only\fR and \fBnew_user\fR attributes work as detailed above
\- if no new user is specified by either \fBnew_user\fR or the system
\fBsmartuser\fR configurations, then the user is passed on unchaged.
.Sp
A sample entry is:
.Sp
.Vb 4
\&    smartuser:
\&            driver=smartuser;
\&            new_user=$user@gateway.domain,
\&            well_formed_only
.Ve
With this entry, the input addresses:
.Sp
.Vb 1
\&    john
.Ve
and
.Sp
.Vb 1
\&    John Q. Public
.Ve
will become:
.Sp
.Vb 1
\&    john@gateway.domain
.Ve
and
.Sp
.Vb 1
\&    John.Q.Public@gateway.domain
.Ve
respectively. If \fBwell_formed_only\fR had not been set, the second address would have been:
.Sp
.Vb 1
\&    "John Q. Public"@gateway.domain
.Ve
whereas the input address:
.Sp
.Vb 1
\&    \eunusual"address"in\edeed
.Ve
would become:
.Sp
.Vb 1
\&    "\e\eunusual\e"address\e"in\e\edeed"@gateway.domain
.Ve
Addresses which are produced by the smartuser driver are flagged as
such and will not themselves be matched by the smartuser driver. Thus,
infinite loops will not occur if ``gateway.domain,'\*(R' from the example,
happens to be the local host.
.Sp
It is possible to set the new_user value in the \fIconfig\fR file. This
is done by setting the config file attribute smart_user. For example,
the config file could contain the following line:
.Sp
.Vb 1
\&    smart_user = $user@gateway.domain
.Ve
Then, if the entry in the director file was:
.Sp
.Vb 1
\&    smart_user: driver=smart_user; well_formed_only
.Ve
the configuration would be equivalent to the second \fIsmart_user\fR
example above. This makes it possible to share copies of the director
file among several machines, with the smart user configuration
specific to one machine being set in its private configuration
file. This config file attribute is used only if the \fInew_user\fR
attribute is not given in the \fIsmart_user\fR entry.
.rn }` ''
