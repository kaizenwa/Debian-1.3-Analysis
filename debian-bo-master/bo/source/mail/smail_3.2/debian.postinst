#!/usr/bin/perl --

$|=1;

if (chdir("/var/spool/smail/log")) {
    print("Moving Smail logfiles from /var/spool/smail/log to /var/log/smail ... ");
    system("sh -c 'mv * /var/log/smail/.; cd .. && rmdir log'");
    print($? ? " ... hmm, didn't work quite right.\n" : "done\n");
}

$etc='/etc';
if (open(C,"$etc/smail/config")) {
    chop($date=`date`);
    @conf= <C>; $changeconf=0;
    if (!grep(/^-?rfc1413_query_timeout/,@conf)) {
        grep(m/^smtp_accept_queue/ &&
             ($_.="rfc1413_query_timeout=15\n"), @conf);
        $changeconf=1;
        print "Adding rfc1413_query_timeout=15, to enable ident queries.\n";
        push(@conf,"\nrfc1413_query_timeout=15\n");
    }
    chop($syshostname=`hostname --fqdn`);
    if ($syshostname =~ m/\./) {
        $hn_line=-1; $vn=''; $endcomments=-1;
        for ($i=0; $i<=$#conf; $i++) {
            $_= $conf[$i]; s/\s*\n$//;
            $endcomments= $i if $endcomments == -1 && !m/^#/;
            if (m/^# Modified by Smail postinst script to fix primary name/) {
                $noprimary= 1;
                last;
            }
            next unless $i==$#conf || $conf[$i+1] !~ m/^\s+\S/;
            if (m/^hostnames=/) {
                @hn_list= split(/:/,$'); $hn_line= $i;
            } elsif (m/^visible_name=/) {
                $vn= $';
            }
        }
        if ($hn_line >= 0 && length($vn) && !$noprimary &&
            $hn_list[0] ne $syshostname && $hn_list[$#hn_list] eq $syshostname) {
            print "Reordering hostnames so that primary_name (used in SMTP banner)\n".
                  " is be the system's canonical name, as required by RFC1123.\n";
            unshift(@hn_list,$syshostname);
            pop(@hn_list);
            $conf[$hn_line]= "hostnames=".join(':',@hn_list)."\n";
            $endcomments= $#conf+1 if $endcomments == -1;
            @conf= (@conf[0..$endcomments-1],
    "# Modified by Smail postinst script to fix primary name;  NB: if you wanted\n",
    "# it like that, don't delete this above comment or it may get changed again !\n",
                    @conf[$endcomments..$#conf]);
            $changeconf=1;
        }
    }
    for ($i=0; $i<=$#conf; $i++) {
        $_= $conf[$i];
        if (m/^received_field/) {
            $receivedfound=1;
        } elsif (m/^$/) {
            $receivedfound=2 if $receivedfound;
        } elsif ($receivedfound==1) {
            if (s/^(\s+id )\<(\$message_id)\@\$visible_name\>/$1$2/) {
                $conf[$i]= $_;
                $changeconf=1;
                print "Updating \`id' clause in Received fields.\n";
            }
        }
    }
    if (!$receivedfound) {
        push(@conf,'
received_field="Received: \
    ${if def:sender_host\
       {from $sender_host ${if def:sender_host_addr ([$sender_host_addr]) }}\
       {${if def:sender_host_addr:from [$sender_host_addr] }}}\
    by $primary_name\n\t\
    ${if def:sender_proto: with $sender_proto }\
    ${if def:ident_sender:(ident $ident_sender using $ident_method) }\
    id $message_id\n\t\
    (Debian $version_string); $spool_date"
');
        $changeconf=1;
        print "Adding received_field definition, to contain ident info.\n";
    }
    if ($changeconf) {
        open(N,">$etc/smail/config.postinstnew") ||
            die "smail postinst cannot create $etc/smail/config.postinstnew: $!";
        print(N @conf) ||
            die "smail postinst cannot write $etc/smail/config.postinstnew: $!";
        close(N) ||
            die "smail postinst cannot close $etc/smail/config.postinstnew: $!";
        rename("$etc/smail/config.postinstnew","$etc/smail/config") ||
            die "smail postinst cannot install new $etc/smail/config: $!";
    }   
    if (open(I,"$etc/inetd.conf")) {
        open(N,">$etc/inetd.conf.postinstnew") ||
            die "smail postinst cannot create $etc/inetd.conf.postinstnew: $!\n";
        $fixed=0;
        while (<I>) {
            if (m/^\# *smtp\s+/ && s/\(will be restored by smail postinst\)$//) {
                s/^\# *// unless $fixed;
                $fixed= 1;
            } elsif (m/^\# *smtp\s+/) {
		$foundcommented= 0;
            } elsif (m/^smtp\s+/) {
                $founduncommented= 1;
            }
            print(N) ||
                die "smail postinst cannot write $etc/inetd.conf.postinstnew: $!\n";
        }
        close(N) || die "smail postinst cannot close $etc/inetd.conf.postinstnew: $!\n";
        close(I);
        rename("$etc/inetd.conf.postinstnew","$etc/inetd.conf") ||
            die "smail postinst cannot install new inetd.conf: $!\n";
        if (open(P,"/var/run/inetd.pid")) {
            $pid=<P>;
            if (open(C,sprintf("/proc/%d/stat",$pid))) {
                $_=<C>;
                if (m/^\d+ \(inetd\)/) { kill(1,$pid); }
                close(C);
            }
            close(P);
        }
                    
    }
    if (open(A,"$etc/aliases")) {
        unless (grep(m/mailer-daemon/i,<A>)) {
            print "Adding `mailer-daemon' (directed to postmaster) to /etc/aliases.\n";
            open(B,">>$etc/aliases") ||
                die "smail postinst cannot open for append $etc/aliases: $!\n";
            print(B "\nmailer-daemon: postmaster\n") ||
                die "smail postinst cannot append to $etc/aliases: $!\n";
            close(B) || die "smail postinst cannot close $etc/aliases: $!\n";
        }
        close(A);
    }
    system ("/bin/sh -c 'cp $etc/smail/transports $etc/smail/transports.OLD'");

    open(FN,"$etc/smail/transports.OLD");
    open(FNOUT,">$etc/smail/transports");
        while (<FN>){
        s/, check_path//;
        print FNOUT;
        }
    close(FN);
    close(FNOUT);
    
    system("sh -c 'zcat /usr/doc/smail/examples/crontab.gz > /etc/smail/crontab'");
    exec('crontab','-u','mail',"$etc/smail/crontab");
    die "Error running \`crontab' command: $!\n";
} else {
    exec("/usr/sbin/smailconfig",@ARGV);
    die "smail postinst cannot run smailconfig: $!\n";
}

sub modify {
    local ($file,@lines);
    $file= shift(@_);
    $lastcomment= -2;
    $changes= "# Modifications made automatically by Smail's postinst:\n";
    while (@_) {
        $key= shift(@_); $initial{$key}= shift(@_);
        $mod{$key}= shift(@_); $final{$key}= shift(@_);
    }
    @lines= (); $blanklines=0;
    if (!open(F,"$etc/smail/$file")) {
        warn "Warning - could not open $etc/smail/$file".
             " for potential modification: $!\n";
        return;
    }
    $orig= ''; $final= '';
    while(<F>) {
        $orig.= $_;
        if (m/^#/) { push(@lines,$_); next; }
        $lastcomment= $#lines if $lastcomment==-2;
        if (!m/\S/) { $blanklines++; next; }
        if (m/^(\S+)\s*:/) {
            $newent= $1; &endentry; $ent= $newent;
            $final= $final{$ent};
            &eval("$initial{$ent}; 1;",'initial');
            &eval("sub do_one_line { $mod{$ent}; }; 1;",'mod');
        } elsif (m/^\S/) {
            warn "Warning - funny-looking entry in $etc/smail/$file".
                 " at line $., ignored\n";
            &endentry;
            eval { sub do_one_line { } }; $final='';
            push(@lines,$_);
            next;
        }
        &doblanks;
        &do_one_line;
        push(@lines,$_);
    }
    &endentry;
    close(F);
    return if join('',@lines) eq $orig;
    $changes.= "# at $date.\n";
    if ($lastcomment >= 0) {
        $lines[$lastcomment] .= $changes;
    } else {
        unshift(@lines,$changes);
    }
    open(F,">$etc/smail/$file.postinst-new") || die "opening new $etc/smail/$file: $!\n";
    print(F @lines) || die "writing new $etc/smail/$file: $!\n";
    close(F) || die "closing new $etc/smail/$file: $!\n";
    unlink("$etc/smail/$file.postinst-old");
    link("$etc/smail/$file","$etc/smail/$file.postinst-old")
        || die "backing up old $etc/smail/$file: $!\n";
    rename("$etc/smail/$file.postinst-new","$etc/smail/$file")
        || die "installing new $etc/smail/$file: $!\n";
}

sub change {
    print STDOUT "Modifying $etc/smail/$file: $_[0].\n";
    $changes .= "#  $_[0];\n";
}

sub doblanks { push(@lines, "\n" x $blanklines); $blanklines=0; }

sub endentry {
    &eval("$final; 1;",'final');
    &doblanks;
}

sub eval {
    local ($ev,$wh) = @_;
    eval($ev) ||
        die "Smail postinst - INTERNAL ERROR !\n".
            "Please report this as a bug, quoting this message:\n".
            " $wh/$ent: $@\nScript=\n$ev\n";
}

sub addcomma {
    $lines[$#lines] =~ s/$/,/ unless $lines[$#lines] =~ m/,$/;
}
