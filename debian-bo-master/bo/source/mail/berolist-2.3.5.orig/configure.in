dnl This is the input file for GNU autoconf. It generates the "configure"
dnl script.

dnl script start...
AC_INIT(list.c)
AC_PREFIX_DEFAULT(/usr)
AC_CANONICAL_SYSTEM
AC_ARG_ENABLE(debug,[  --enable-debug          compile with debug information],
              [debug=yes],[debug=no])
AC_ARG_ENABLE(debugonly,[  --enable-debugonly      generate a version for debugging only],
              [debugonly=yes],[debugonly=no])
if test "$debug" = "no"; then
  CFLAGS=""
else
  CFLAGS="-g"
  AC_DEFINE(DEBUG)
fi
if test "$debugonly" = "yes"; then
  if test "$debug" = "no"; then
    CFLAGS="-g"
    AC_DEFINE(DEBUG)
  fi
  AC_DEFINE(DEBUGONLY)
fi
AC_PROG_CC

dnl Check for compiler optimizations...
OLD_CFLAGS=$CFLAGS
AC_MSG_CHECKING("whether your compiler accepts -O2")
CFLAGS="$CFLAGS -O2"
AC_TRY_COMPILE(,,result=yes,result=no)
AC_MSG_RESULT($result)
if test "$result" = "no"; then
  CFLAGS=$OLD_CFLAGS
  AC_MSG_CHECKING("whether your compiler accepts at least -O")
  CFLAGS="$CFLAGS -O"
  AC_TRY_COMPILE(,,result=yes,result=no)
  AC_MSG_RESULT($result)
  if text "$result" = "no"; then
    CFLAGS=$OLD_CFLAGS
  fi
fi

dnl Check for CPU specific optimizations
OLD_CFLAGS=$CFLAGS
case "$host_cpu" in
  i[[6789]]86)
    AC_MSG_CHECKING("whether your compiler accepts -mpentiumpro")
    CFLAGS="$CFLAGS -mpentiumpro"
    AC_TRY_COMPILE(,,result=yes,result=no)
    AC_MSG_RESULT($result)
    if test "$result" = "no"; then
      AC_MSG_CHECKING("whether your compiler accepts -mpentium")
      CFLAGS="$CFLAGS -mpentium"
      AC_TRY_COMPILE(,,result=yes,result=no)
      AC_MSG_RESULT($result)
      if test "$result" = "no"; then
        AC_MSG_CHECKING("whether your compiler accepts other pentium optimizations")
        CFLAGS="$OLD_CFLAGS -m486 -malign-jumps=2 -malign-loops=2 -malign-functions=2"
        AC_TRY_COMPILE(,,result=yes,result=no)
        AC_MSG_RESULT($result)
        if test "$result" = "no"; then
          AC_MSG_CHECKING("whether your compiler accepts \(at least\) -m486")
          CFLAGS="$OLD_CFLAGS -m486"
          AC_TRY_COMPILE(,,result=yes,result=no)
          AC_MSG_RESULT($result)
          if test "$result" = "no"; then
            AC_MSG_CHECKING("AAARRRGGGHHH... Consider getting gcc... Checking for -m386")
            CFLAGS="$OLD_CFLAGS -m386"
            AC_TRY_COMPILE(,,result=yes,result=no)
            AC_MSG_RESULT($result)
            if test "$result" = "no"; then
              CFLAGS="$OLD_CFLAGS -m386"
            else
              AC_MSG_WARN("You should really get a better compiler...")
            fi
          fi
        fi
      fi
    fi
    ;;
  i586)
    AC_MSG_CHECKING("whether your compiler accepts -mpentium")
    CFLAGS="$CFLAGS -mpentium"
    AC_TRY_COMPILE(,,result=yes,result=no)
    AC_MSG_RESULT($result)
    if test "$result" = "no"; then
      AC_MSG_CHECKING("whether your compiler accepts other pentium optimizations")
      CFLAGS="$OLD_CFLAGS -m486 -malign-jumps=2 -malign-loops=2 -malign-functions=2"
      AC_TRY_COMPILE(,,result=yes,result=no)
      AC_MSG_RESULT($result)
      if test "$result" = "no"; then
        AC_MSG_CHECKING("whether your compiler accepts \(at least\) -m486")
        CFLAGS="$OLD_CFLAGS -m486"
        AC_TRY_COMPILE(,,result=yes,result=no)
        AC_MSG_RESULT($result)
        if test "$result" = "no"; then
          AC_MSG_CHECKING("AAARRRGGGHHH... Consider getting gcc... Checking for -m386")
          CFLAGS="$OLD_CFLAGS -m386"
          AC_TRY_COMPILE(,,result=yes,result=no)
          AC_MSG_RESULT($result)
          if test "$result" = "no"; then
            CFLAGS="$OLD_CFLAGS -m386"
          else
            AC_MSG_WARN("You should really get a better compiler...")
          fi
        fi
      fi
    fi
    ;;
  i[[56789]]86)
    AC_MSG_CHECKING("whether your compiler accepts -mpentium")
    CFLAGS="$CFLAGS -mpentium"
    AC_TRY_COMPILE(,,result=yes,result=no)
    AC_MSG_RESULT($result)
    if test "$result" = "no"; then
      AC_MSG_CHECKING("whether your compiler accepts other pentium optimizations")
      CFLAGS="$OLD_CFLAGS -m486 -malign-jumps=2 -malign-loops=2 -malign-functions=2"
      AC_TRY_COMPILE(,,result=yes,result=no)
      AC_MSG_RESULT($result)
      if test "$result" = "no"; then
        AC_MSG_CHECKING("whether your compiler accepts \(at least\) -m486")
        CFLAGS="$OLD_CFLAGS -m486"
        AC_TRY_COMPILE(,,result=yes,result=no)
        AC_MSG_RESULT($result)
        if test "$result" = "no"; then
          AC_MSG_CHECKING("AAARRRGGGHHH... Consider getting gcc... Checking for -m386")
          CFLAGS="$OLD_CFLAGS -m386"
          AC_TRY_COMPILE(,,result=yes,result=no)
          AC_MSG_RESULT($result)
          if test "$result" = "no"; then
            CFLAGS="$OLD_CFLAGS -m386"
          else
            AC_MSG_WARN("You should really get a better compiler...")
          fi
        fi
      fi
    fi
    ;;
  i486)
    AC_MSG_CHECKING("whether your compiler accepts -m486")
    CFLAGS="$CFLAGS -m486"
    AC_TRY_COMPILE(,,result=yes,result=no)
    AC_MSG_RESULT($result)
    if test "$result" = "no"; then
      AC_MSG_CHECKING("whether your compiler accepts at least -m386")
      CFLAGS="$OLD_CFLAGS -m386"
      AC_TRY_COMPILE(,,result=yes,result=no)
      AC_MSG_RESULT($result)
      if test "$result" = "no"; then
        CFLAGS=$OLD_CFLAGS
        AC_MSG_WARN("You should really get a better compiler...")
      fi
    fi
    ;;
  i386)
    AC_MSG_CHECKING("whether your compiler accepts -m386")
    CFLAGS="$CFLAGS -m386"
    AC_TRY_COMPILE(,,result=yes,result=no)
    AC_MSG_RESULT($result)
    if test "$result" = "no"; then
      CFLAGS=$OLD_CFLAGS
    fi
    ;;
esac

dnl Check options...
OLD_CFLAGS=$CFLAGS
AC_MSG_CHECKING("whether your compiler accepts -fomit-frame-pointer")
CFLAGS="$CFLAGS -fomit-frame-pointer"
AC_TRY_COMPILE(,,result=yes,result=no)
AC_MSG_RESULT($result)
if test "$result" = "no"; then
  CFLAGS=$OLD_CFLAGS
fi

dnl see if we need replacements for strlen() and strcasecmp()
AC_MSG_CHECKING("whether strlen accepts NULL argument")
AC_TRY_RUN([#include <stdio.h>
#include <string.h>
#include <signal.h>
void sigproc() { exit(1); }
int main() { size_t i; signal(SIGSEGV,sigproc); i=strlen(NULL);
if(i!=0) exit(1); return 0; }],result=yes,result=no)
AC_MSG_RESULT($result)
if test "$result" = "no"; then
  AC_DEFINE(WEIRD_STRLEN)
fi
AC_MSG_CHECKING("whether strcasecmp accepts NULL argument")
AC_TRY_RUN([#include <stdio.h>
#include <string.h>
#include <signal.h>
#include <stdlib.h>
void sigproc() { exit(1); }
int main() { char *s; signal(SIGSEGV,sigproc); s=(char *) malloc(9);
strcpy(s,"BeroList\0"); strcasecmp(s,NULL); free(s); return 0;
}],result=yes,result=no)
AC_MSG_RESULT($result)
if test "$result" = "no"; then
  AC_DEFINE(WEIRD_STRCASECMP)
fi

dnl See if we need to link with nsl...
link_nsl=false

dnl See if we've got gethostbyname for hostname detection
AC_CHECK_LIB(c,gethostbyname,result=yes,result=no)
if test "$result" = "yes"; then
  AC_DEFINE(HAVE_GETHOSTBYNAME)
else
  AC_CHECK_LIB(nsl,gethostbyname,result=yes,result=no)
  if test "$result" = "yes"; then
    AC_DEFINE(HAVE_GETHOSTBYNAME)
    link_nsl=true
  fi
fi

dnl If nsl isn't needed for gethostbyname(), see if it's needed for inet_addr
if test "$link_nsl" = "false"; then
  AC_CHECK_LIB(nsl,inet_addr,result=yes,result=no)
  if test "$result" = "yes"; then
    link_nsl=true
  fi
fi

if test "$link_nsl" = "true"; then
  LIBS="$LIBS -lnsl"
fi

dnl See if we have to link with the socket library

AC_CHECK_LIB(socket,socket,result=yes,result=no)
if test "$result" = "yes"; then
  LIBS="$LIBS -lsocket"
else
  AC_CHECK_LIB(socket,connect,result=yes,result=no)
  if test "$result" = "yes"; then
    LIBS="$LIBS -lsocket"
  fi
fi

dnl See if we've got the gdbm library for message archival
AC_CHECK_LIB(gdbm,gdbm_open,result=yes,result=no)
if test "$result" = "yes"; then
  AC_DEFINE(HAVE_GDBM)
  LIBS="$LIBS -lgdbm"
  DO_CGI="cgi"
  AC_SUBST(DO_CGI)
else
  AC_MSG_WARN("You do not have GDBM. Message archive not available.")
fi

dnl That's it... generate Makefile.
AC_OUTPUT(Makefile)
