		       POSIX locale descriptions
				  and
		    POSIX character set descriptions

Ulrich Drepper			Time-stamp: <1996/10/12 01:54:14 drepper>
drepper@cygnus.com


This add-on package contains the data needed to build the locale data
files to use the internationalization features of the GNU libc.

POSIX.2 describes the `localedef' utility which is part of the GNU libc.
You need this program to "compile" the locale description in a form
suitable for fast access by the GNU libc functions.  Any compilation is
based on a given character set.

To use these data files you should add the name of this add-on
(localedata) to the list of add-on you specify while compiling the GNU
libc:

	configure --enable-add-ons=...,localedata ...

where ... are the options you normally choose. Once you run `make
install' for the GNU libc the data files are automatically installed in
the right place, ready for use by the `localedef' program.


To compile the locale data files you simply have to decide which locale
(based on the location and the language) and which character set you
use.  E.g., french speaking Canadians would use the locale `en_CA' and
the character set `ISO_8859-1,1987'.  Calling `localedef' to get the
desired data should happe like this:

	localedef -i en_CA -f ISO_8859-1,1987 en_CA

This will place the 6 output files in the appropriate directory where
the GNU libc functions can find them.  Please note that you need the
rights to write to this directory ($(prefix)/share/locale, where
$(prefix) is the value you specified while configuring GNU libc).

How to use these data files is described in the GNU libc manual,
especially in the section describing the `setlocale' function.


The here contained files[*] can originally be found at

	ftp://dkuug.dk/i18n/WG15-collection

Keld Jörn Simonsen from the Danish Unix User Group maintains this
archive on behalf of the POSIX working groups.  When you find some wrong
data or want to add something please contact

	Keld Jörn Simonsen <keld@dkuug.dk>
and
	Ulrich Drepper <drepper@cygnus.com>

Please make sure your corrections are relativ to the originally
distributed files.  Consult the CHECKSUMS file which contains the MD5
sums for all data files.


[*] Actually the files are not exactly the same.  The file names which
contained `:' characters were changed.  They now use a `,' character
instead.  Using the colon is bad for several reasons but especially
since we couldn't use `make' to handle the files here.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Local Variables:
 mode:text
 eval:(load-library "time-stamp")
 eval:(make-local-variable 'write-file-hooks)
 eval:(add-hook 'write-file-hooks 'time-stamp)
 eval:(setq time-stamp-format '(time-stamp-yyyy/mm/dd time-stamp-hh:mm:ss user-login-name))
End:
