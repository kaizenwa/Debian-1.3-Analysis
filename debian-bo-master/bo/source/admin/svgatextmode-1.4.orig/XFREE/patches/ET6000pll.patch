--- common_hw/S3gendac.c.original	Mon Jul 15 21:26:32 1996
+++ common_hw/S3gendac.c	Mon Jul 15 22:05:05 1996
@@ -15,6 +15,7 @@
 #define PLL_S3GENDAC      1
 #define PLL_S3TRIO        2
 #define PLL_ET4000GENDAC  8
+#define PLL_ET6000        9
 
 
 extern int vgaIOBase;
@@ -37,6 +38,12 @@
 #endif
 );
 
+static void setET6000pll(
+#if NeedFunctionPrototypes
+int reg, unsigned char data1, unsigned char data2
+#endif
+);
+
 
 static int commonSetClock( 
 #if NeedFunctionPrototypes
@@ -63,6 +70,14 @@
 }
 
 int
+ET6000SetClock(freq, clk)
+long freq;
+int clk;
+{
+   return commonSetClock(freq, clk, 0, PLL_ET6000, 100000, 270000);
+}
+
+int
 ET4000gendacSetpixmuxClock(freq, clk)
 long freq;
 int clk;
@@ -173,6 +188,9 @@
      case PLL_ET4000GENDAC:
          setET4000gendacpll(clk, m, n);
          break;
+     case PLL_ET6000:
+         setET6000pll(clk, m, n);
+         break;
      default: 
          ErrorF("Internal error: unknown pll_type in S3gendac.c");
          return -1;
@@ -239,6 +257,49 @@
    /* Now clean up our mess */
    outb(GENDAC_INDEX, tmp1);  
    outb(vgaCRReg, tmp);
+}
+
+
+static void
+#if NeedFunctionPrototypes
+setET6000pll(int reg, unsigned char data1, unsigned char data2)
+#else
+setET6000pll(reg, data1, data2)
+int reg;
+unsigned char data1;
+unsigned char data2;
+#endif
+{
+   /* Tseng Labs engineers were wise enough to use the same
+      PLL scheme used in other standard GenDACs -- good! */
+
+   unsigned long PCIIOBase  = 0xDEADBEEF;
+   unsigned char tmp;
+   int vgaCRIndex = vgaIOBase + 4;
+   int vgaCRReg = vgaIOBase + 5;
+   
+   /* get PCI IO base address first */
+   outb(vgaCRIndex, 0x21);
+   PCIIOBase = (inb(vgaCRReg)<<8);
+   outb(vgaCRIndex, 0x22);
+   PCIIOBase += (inb(vgaCRReg)<<16);
+   outb(vgaCRIndex, 0x23);
+   PCIIOBase += (inb(vgaCRReg)<<24);
+#if 0
+   ErrorF("ET6000: PCIIOBase = 0x%lX\n", PCIIOBase);
+#endif
+
+   /* set the PLL parameters fro specified clock */
+#if 0
+   ErrorF("ET6000: M/N parameters: 0x%X 0x%X ; clk index: %d\n", data1, data2, reg);
+#endif
+   tmp = inb(PCIIOBase+0x67); /* remember where CLKDAC index register was pointing */
+   outb(PCIIOBase+0x67, reg);
+   outb(PCIIOBase+0x69, data1);
+   outb(PCIIOBase+0x69, data2);
+
+   /* restore old index register */
+   outb(PCIIOBase+0x67, tmp);
 }
 
 
--- common_hw/S3gendac.h.original	Mon Jul 15 21:29:48 1996
+++ common_hw/S3gendac.h	Mon Jul 15 21:35:18 1996
@@ -18,6 +18,12 @@
 #endif
 );     
 
+int ET6000SetClock( 
+#if NeedFunctionPrototypes
+   long freq, int clock
+#endif
+);     
+
 int ET4000gendacSetpixmuxClock( 
 #if NeedFunctionPrototypes
    long freq, int clock
--- common_hw/xf86_HWlib.h.original	Mon Jul 15 21:29:36 1996
+++ common_hw/xf86_HWlib.h	Mon Jul 15 21:35:36 1996
@@ -165,6 +165,13 @@
 #endif
 );     
 
+extern int ET6000SetClock( 
+#if NeedFunctionPrototypes
+        long,
+        int
+#endif
+);     
+
 
 extern int ET4000gendacSetpixmuxClock( 
 #if NeedFunctionPrototypes
