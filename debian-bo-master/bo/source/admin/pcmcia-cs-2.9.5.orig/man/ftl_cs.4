.\" Copyright (c) 1995 David Hinds <dhinds@allegro.stanford.edu>
.\" ftl_cs.4 1.5 1995/09/29 16:48:50
.\"
.TH FTL_CS 4 "1995/09/29 16:48:50" "Stanford University"
.SH NAME
ftl_cs \- Flash Translation Layer driver for PCMCIA memory cards
.SH SYNOPSIS
.B insmod ftl_cs.o
.RB [ pc_debug=n ]
.SH DESCRIPTION
Flash memory devices typically need to be erased before they are
written, and most flash devices can only be erased on large block
boundaries like 64K or 128K.  The Flash Translation Layer driver, 
.BR ftl_cs ,
implements a sort of virtual sector-addressable block device that
hides the details of erase operations.  Using the FTL driver, a flash
memory card can be treated as an ordinary block device.
.PP
The
.B ftl_cs
driver allocates a major device number when it is loaded.  Minor
devices are numbered as in
.BR memory_cs .
For the usual case, the FTL initialization script will create one
block special device file,
.IR /dev/ftl# ,
that covers the first common memory region on an appropriate card.
.PP
An FTL partition must be formatted before use.  The formatting
utility,
.BR ftl_format ,
needs to write to the raw memory device rather than the FTL device
interface.
.SH PARAMETERS
.TP
.B pc_debug=n
Selects the PCMCIA debugging level.  This parameter is only available
if the module is compiled with debugging enabled.  A non-zero value
enables debugging.
.SH AUTHOR
David Hinds \- dhinds@allegro.stanford.edu
.SH "SEE ALSO"
ftl_format(8), cardmgr(8), memory_cs(4), pcmcia(5).
