%!PS-Adobe-3.0
%%Title: (vhll-slides-appendix.doc)
%%Creator: (FrameMaker 4 Power Macintosh: PSPrinter 8.1.1)
%%CreationDate: (10:59 AM Monday, October 31, 1994)
%%For: (MAC_pdes)
%%Pages: 3
%%DocumentFonts: Palatino-Roman Palatino-Bold Courier Courier-Bold
%%DocumentNeededFonts: Palatino-Roman Palatino-Bold Courier Courier-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Landscape
%ADO_PaperArea: -18 -8 594 784
%ADO_ImageableArea: 0 0 576 776
%%EndComments
/md 134 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
}bd
/popstatic
{
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div G 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(MAC_pdes)setjob
/pT[1 0 0 -1 18 784]def/mT 90 $m rotate[1 0 0 -1 594 784]matrix concatmatrix def
/por F def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Palatino-Roman
%%IncludeFont: Palatino-Bold
%%IncludeFont: Courier
%%IncludeFont: Courier-Bold
/f0_1/Palatino-Roman :mre
/f0_11 f0_1 11 scf
/f0_4 f0_1 4 scf
/f1_1/Palatino-Bold :mre
/f1_17 f1_1 17 scf
/f2_1/Courier :mre
/f2_8 f2_1 8 scf
/f3_1/Courier-Bold :mre
/f3_8 f3_1 8 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 4.0.2
% Copyright (c) 1986-94 Frame Technology Corp.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 402 17
userdict/FrameMacDict 200 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fM5/fM6
/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMFl/fMGC/fMGL/fMGM/fMIx
/fMJB/fMJC/fMJG/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC
/fMPH/fMPt/fMRC/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMat/fMa2/fMi/fMk/fms/fmBS/fMdp
/freq/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/FmBD{bind def}bind def/fmBx{[
exch{dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD/fmPU{userdict 3 1 roll fmBi put}bind def/T true def/F false def
userdict/fMSuccessfull F put userdict/fMSi F put userdict/fM7 known not{
userdict/fM7 0 put}if/fmXD{exch def}FmBD/FmG/gsave load def/FmR/grestore load
def/fm_l/grestoreall load def/fm_v/save load def/fm_g/setgray load def/fm_r
/setrgbcolor load def/fm_h/sethsbcolor load def/fm_f/fill load def/fm_e/eofill
load def/fm_t/stroke load def/fm_m/imagemask load def/fm_i/image load def/fm_s
/show load def/fm_a/ashow load def/fm_w/widthshow load def/fm_y/awidthshow load
def/fm_k/kshow load def/fMat matrix def/fMa2 matrix def/fmSM{fMat currentmatrix
pop}FmBD/fmRM{fMat setmatrix}FmBD/FmRF{currentpoint 2 copy translate 4 2 roll{
-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2 copy lt{exch}if
pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark known{/FmPD/pdfmark
load def/FmPT/fm_s load def}{/FmPD/cleartomark load def/FmPT/pop load def}
ifelse/FmDC{transform fMat defaultmatrix itransform cvi exch cvi exch}FmBD/fmgS
32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS fMgt get dup null eq{pop fmgS fMgt
10 dict dup 4 1 roll put}if 3 1 roll put}FmBD/fmGG{fMgt -1 -1{fmgS exch get dup
null ne{2 copy exch known{2 copy exch get/_notdef ne{exch get dup exit}if}if}if
pop}for pop}FmBD/gsave{FrameMacDict begin FmG/fMgt fMgt 1 add def fmgS fMgt get
dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse end}fmPU
/grestore{FrameMacDict begin fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN
end}fmPU/grestoreall{FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPU
/save{FrameMacDict/fm_v get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS
fMgt get dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse
/fMtp fMgt def end}fmPU/fMND F def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{
1 exch sub 3 1 roll 1 exch sub 3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{
pop}{exch pop}ifelse 2 copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1
roll 7 1 roll sub 6 1 roll sub 5 1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get
T}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch
/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get
mtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1
roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{
exec}ifelse}FmBD/fmdl{3 index 16 and 0 ne{FmG currentlinewidth 2. div dup
rmoveto currentpoint newpath moveto 2 index 0 rlineto fm_t FmR}if 3 index 24
and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{1 currentgray sub
setgray}{1 setgray}ifelse 2 index 0 rlineto fm_t FmR FmG 2 index 0 rlineto
strokepath .24 setlinewidth fm_t FmR}{2 index 0 rlineto fm_t 0 0 moveto}ifelse}
FmBD/FmUl{FmG/fM2 fmXD currentpoint/UnderlineThickness{fM2 15 div}fmfp abs dup
setlinewidth/fM1 fmXD 4 index 1 and 0 ne{newpath 2 copy moveto 0
/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto fmdl}if 4 index 2 and 0 ne{
newpath 2 copy moveto 0/XHeight{FmG newpath 0 0 moveto(x)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 2. mul 3. div neg}if}fmfp
2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath 2 copy moveto 0/CapHeight{FmG
newpath 0 0 moveto(H)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR
dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp fM1 sub rmoveto fmdl}if pop pop pop
pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth pop
fM2 sub fM3 length div sub 0 fM3 fm_y}FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3
def/fMK 4 def/fMS 5 def/fMNg 0 currenttransfer exec .5 gt def/fMCM fMN def/fMJK
0 def/fMJY 0 def/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1
def/fMPt null def/fMCK[0 0 0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{
/HalftoneType 2 def currentcolorscreen[/GraySpotFunction/GrayAngle
/GrayFrequency/BlueSpotFunction/BlueAngle/BlueFrequency/GreenSpotFunction
/GreenAngle/GreenFrequency/RedSpotFunction/RedAngle/RedFrequency]{exch def}
forall}{/HalftoneType 1 def currentscreen[/SpotFunction/Angle/Frequency]{exch
def}forall}ifelse statusdict/checkscreen known{statusdict/accuratescreens get
exec}{F}ifelse/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{
fML1{begin statusdict/checkscreen known{currentdict/AccurateScreens known{
AccurateScreens}{F}ifelse statusdict/setaccuratescreens get exec}if
HalftoneType 1 eq{Frequency Angle currentdict/SpotFunction get setscreen}{
HalftoneType 2 eq{fMCl{RedFrequency RedAngle currentdict/RedSpotFunction get
GreenFrequency GreenAngle currentdict/GreenSpotFunction get BlueFrequency
BlueAngle currentdict/BlueSpotFunction get GrayFrequency GrayAngle currentdict
/GraySpotFunction get setcolorscreen}{GrayFrequency GrayAngle currentdict
/GraySpotFunction get setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD
/FmCS{14 dict begin/HalftoneType 2 def/AccurateScreens exch def
/GraySpotFunction exch def/GrayAngle exch def/GrayFrequency exch def
/BlueSpotFunction exch def/BlueAngle exch def/BlueFrequency exch def
/GreenSpotFunction exch def/GreenAngle exch def/GreenFrequency exch def
/RedSpotFunction exch def/RedAngle exch def/RedFrequency exch def currentdict
dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict begin/HalftoneType 1 def
/AccurateScreens exch def/SpotFunction exch def/Angle exch def/Frequency exch
def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH fmCH def/fmcp{/FmPr2 exch
cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length FmPr2 length add array def
FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2 putinterval FmPrn cvx}FmBD
/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0 get exch 0 get fmEp{2 copy
1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3 get exch 3 get fmEp}{pop
pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2 copy 4 get exch 0
get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2 get fmEp}{pop pop F}ifelse}{
pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD/fMJG fmXD/fMJR fmXD/fMJK fmXD
/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{/fMCM fmXD fmCC}FmBD
/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]/fMSC exch def end}fmBi
def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}
FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll eq{exch pop T exit}{pop}
ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM fMN ne{/fMOP fmGG{/fMKO
fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup null ne{exch pop dup
type dup/integertype eq exch/realtype eq or{fm_g}{setcolor}ifelse}{pop{1 fm_g}
if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}{fm_f}ifelse end}
fmPU/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}fmPU/stroke{
FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPU/imagemask{FrameMacDict
begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPU/show{FrameMacDict
begin fMND{stringwidth rmoveto}{fm_s}ifelse end}fmPU/fmNX{load fMND{FmG fMa2
currentmatrix end nulldevice setmatrix exec currentpoint FrameMacDict/FmR get
exec moveto}{end exec}ifelse}fmBi def/ashow{FrameMacDict begin/fm_a fmNX}fmPU
/widthshow{FrameMacDict begin/fm_w fmNX}fmPU/awidthshow{FrameMacDict begin/fm_y
fmNX}fmPU/kshow{FrameMacDict begin/RealKshow fmNX}fmPU/image{FrameMacDict begin
fMCM fMN ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}
ifelse settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}
fmPU/fMGM T def/fMBM F def/setcustomcolor where{pop}{/findcmykcustomcolor{0 0 0
4 -1 roll 8 array astore}fmPU/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3
copy/fmRY fmGG exec 8 4 roll 4 -1 roll 8 array astore end}fmPU
/findgraycustomcolor{0 0 0 exch 1 exch sub exch findcmykcustomcolor}fmPU
/findhsbcustomcolor{FrameMacDict begin 4 1 roll gsave fm_h currentrgbcolor
grestore 4 -1 roll findrgbcustomcolor end}fmPU/setcustomcolor{FrameMacDict
begin dup type dup/integertype eq exch/realtype eq or not{1.0}if exch dup/fMCC
exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval aload pop 4{4 index mul 4 1
roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}if fmLM{exch pop 0 4
getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and
exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1 T}ifelse}{fMCM
fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM fMC eq{0 get F}{
pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub exch}ifelse/fMKO
exch fmSG fmCN}ifelse end}fmPU/setoverprint{FrameMacDict begin/fMOP exch fmSG
null fmCN end}fmPU/currentoverprint{FrameMacDict begin/fMOP fmGG end}fmPU}
ifelse/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]setcolorspace
fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{fMCG fm_g}{fMCl
fMGM and{0 1 3{fMCK exch get 1 fMCG sub mul}for fmSK}{4 1 6{fMCK exch get fMGM{
1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{fMCG}{1}ifelse}ifelse}for fm_r}
ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG F}{fMCK 0 4 getinterval aload
fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq and{
fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{fMCG 1.0 exch sub
mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop fMCG 1.0 exch sub mul
1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop fMCG 1.0 exch sub mul 1.0
exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG 1.0 exch sub mul 1.0 exch sub
F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG
fMGM fML1 or not{[/Pattern[/DeviceGray]]setcolorspace fMPt}{fMGM not fML1 and{
dup 1 lt{pop fMCG}if}if}ifelse}ifelse fmCN}FmBD/setgray{FrameMacDict begin fMCM
fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{
F}{pop 1 T}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPU/setrgbcolor{
FrameMacDict begin/fMBM F def fMCM fMN eq{fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS
eq{fMJB eq exch fMJG eq and exch fMJR eq and{0 F}{1 T}ifelse}{pop pop pop 1 T}
ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCM
fMY eq{pop 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch sub
exch pop F}{fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}
ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/sethsbcolor{
FrameMacDict begin fMCM fMN eq{fm_h}{fm_h currentrgbcolor setrgbcolor}ifelse
end}fmPU/setcmykcolor where{pop/fmSK/setcmykcolor load def}{/fmSK{4 1 roll 3{3
index add 0 fmax 1 fmin 1 exch sub 3 1 roll}repeat fm_r pop}FmBD}ifelse
/currentcmykcolor where{pop}{/currentcmykcolor{FrameMacDict begin
currentrgbcolor/fmRY fmGG exec end}fmPU}ifelse/setcmykcolor{FrameMacDict begin
/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1 roll]fmLC{fMCM fMS eq{fMJK eq exch
fMJY eq and exch fMJM eq and exch fMJC eq and{0 F}{1 T}ifelse}{pop pop pop pop
1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop
1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{
fMCM fMC eq{pop pop pop 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPU/fMFl[0 .1 .3 .5 .7 .9
.97 1<0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><
8142241818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7
dict dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c
1e>[135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff
0000ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}
dup .75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<804020
1008040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<
0f87c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMat defaultmatrix
dtransform dup mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0
eq{pop 1}if 8 mul div def/sangle 1 0 fMat defaultmatrix dtransform exch atan
def sangle fMa2 rotate fMat fMa2 concatmatrix dup 0 get/sflipx exch def 3 get
/sflipy exch def fML1{/fmgF{fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM
fML1{{dup patScreenDict exch known{patScreenDict exch get aload pop freq mul 5
2 roll fMa2 currentmatrix 1 get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF
sflipy 2 fmgF mul}{sflipx 0 fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{
pop}ifelse fMNg{{neg}fmcp}if bind systemdict/setscreen get exec}{/fmBS fmXD
/fM1B 0 def/fM0B 0 def freq 0 fMa2 currentmatrix 1 get 0 ne{90 add/pflipx
sflipx 1 fmgF def/pflipy sflipy 2 fmgF def}{/pflipx sflipx 0 fmgF def/pflipy
sflipy 3 fmgF neg def}ifelse{pflipy mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1
add 2 div 8 mul cvi def/yindex yy 1 add 2 div 8 mul cvi def fmBS yindex xindex
8 idiv add get 1 7 xindex 8 mod sub bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1
add def 1}{/fM0B fM0B 1 add def 0}ifelse}setscreen fM0B fM0B fM1B add div fMNg{
1.0 exch sub}if}ifelse/fMCG exch def/fMGM F def fmCC}}{/fMPC 8 dict def{dup
fMPC exch known{fMPC exch get}{dup fMPD/fmBS 3 -1 roll put fMPD matrix
makepattern dup fMPC 4 -1 roll 3 -1 roll put}ifelse/fMCG 0 def/fMPt exch def
/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{/fMGM T def fML1{fMPH fmSH}if}if
/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup type/stringtype eq{fmPM}{fmgr}
ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}FmBD/FmFB{0 0 0 1 0 0 0 fMCK
astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx matrix def fMOx currentmatrix
pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD/FmIO{fmRM}FmBD/FmEO{FmOs
restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}bind{.11 mul add round cvi
fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def/fm31{/fMi 0 def 0 exch 0
exch{exch fm3R exch get exec}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD fML1{
/fmAn{transform round .5 sub exch round .5 sub exch itransform}FmBD/fmAc{
transform round 1.5 sub exch round 1.5 sub exch itransform}FmBD/fmDn{dtransform
round exch round exch idtransform}FmBD/fmLn{0 dtransform exch cvi 2 idiv 2 mul
.1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn 6 2 roll fmDn 6 2 roll
rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD/fmDn{}FmBD/fmLn{}FmBD
/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}FmBD/N{0 rmoveto}FmBD
/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD/X{0 exch 0 32 5 2
roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR}if exec}FmBD/FmB{
newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}FmBD/FmSo{fmLn
setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn setlinewidth
closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth setlinecap{closepath
}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{fm_e}fmQP FmR}FmBD
/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto neg 0
rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP 0 0 moveto}FmBD
/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5 1 roll}{T 7 3
roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{currentpoint}
stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG newpath fmAn
translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3 roll arc
closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth setlinecap
fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2 index 2 div
sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0 5 3 roll
exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate .3 fmLn
setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0
fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10 rotate}
repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0 setlinecap 0
setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn neg .1{0 0 3
-1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict/FrameEr(\000)
put}ifelse/fMSJ 100 string def/fmXC{userdict/fMSi 2 index put end{
countdictstack userdict begin/showpage{}def/FmDictStackDepth exch def count
/FmStackDepth exch def}if userdict/fMSuccessfull false put currentfile cvx
stopped pop fMSuccessfull not{/$brkpage where{stop}if systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame4Picture)eq{exit}if}loop grestore end}if userdict
/fMSuccessfull false put FrameMacDict/fmIR get exec}fmBi def/FmEP{save userdict
/fM7 3 -1 roll put setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey/fMex/fMei
/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew fMeh scale
fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale fMej fMel add
2 div neg fMei fMek add 2 div neg translate newpath fMel fMek moveto fMel fMei
lineto fMej fMei lineto fMej fMek lineto closepath clip newpath T fmXC}FmBD
/FmPI{newpath 0 0 moveto F fmXC}FmBD/FmPc{save userdict/fM7 3 -1 roll put
newpath 3 index neg 3 index neg translate 1 -1 scale 0.0 0.0 moveto T fmXC}FmBD
/fmIR{fMSi{fM7 type/savetype eq{end/FmDictStackDepth where{pop countdictstack
FmDictStackDepth sub dup 0 gt{{end}repeat}{pop}ifelse count FmStackDepth sub
dup 0 gt{{pop}repeat}{pop}ifelse}if fM7 restore}if}if FrameMacDict begin}FmBD
userdict/EndFrame4Picture{userdict/fMSi 3 -1 roll put userdict/fMSuccessfull
true put stop}fmBi put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not
{limitcheck}if pop image}fmPU}ifelse/fmDE{systemdict/initgraphics get exec
clippath{pathbbox}stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/FmRealcd fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if
/FmRealcd load end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{
FrameMacDict/fMRE get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile
fMSJ{readline}stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi
put}if}ifelse systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(MAC_pdes; page: 1 of 3)setjob
%%EndPageSetup
gS 0 0 776 576 rC
0 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
0 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
37.918 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
328.155 16.384 25.279 25.279 FmqF
end
0 0 :M
f0_4 sf
( )S
1 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 159.035 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 150.034 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 198.558 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 212.321 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 142.939 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
315.75 253.255 25.279 5.149 FmqF
0 FmP
FmG 328.899 256.302 M 1.053 1.053 scale (1)S FmR
FmG 331.006 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 336.815 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
330.028 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 341.263 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
58 55 254 9 rC
1 0 :M
FrameMacDict begin
58.984 55.004 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
58.984 55.004 252.787 8.426 FmqF
0 FmP
95.73 59.218 FmB
175.568 0 FmL
2 0.234 FmSo
58.984 59.218 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
1 0 :M
f1_17 sf
( )S
5 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 49.387 M 0.991 0.991 scale (Prime Numbers)S FmR
end
5 0 :M
f2_8 sf
( )S
9 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 81.219 M 1.053 1.053 scale (# Return list of primes < n)S FmR
FmG 67.41 101.817 M 1.053 1.053 scale (def primes_under\(n\):)S FmR
FmG 67.41 112.116 M 1.053 1.053 scale -0.554(    primes = [2]            # create list of 1 item)W FmR
FmG 67.41 122.414 M 1.053 1.053 scale (    for i in range\(3, n\):   # i = 3, 4, ..., n-1)S FmR
FmG 67.41 132.713 M 1.053 1.053 scale (        for p in primes:    # p = 2, 3, ...)S FmR
FmG 67.41 143.012 M 1.053 1.053 scale -0.131(            if i%p == 0:    # if it has a divisor)W FmR
FmG 67.41 153.311 M 1.053 1.053 scale (                break       # stop inner loop)S FmR
FmG 67.41 163.609 M 1.053 1.053 scale (            if p*p > i:     # if we\325re through)S FmR
FmG 67.41 173.908 M 1.053 1.053 scale -0.797(                primes.append\(i\) # add i to the list)W FmR
FmG 67.41 184.207 M 1.053 1.053 scale (                break       # and stop)S FmR
FmG 67.41 194.506 M 1.053 1.053 scale (    return primes)S FmR
FmG 67.41 215.103 M 1.053 1.053 scale (print primes_under\(100\))S FmR
end
10 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
10 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
411.673 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
701.91 16.384 25.279 25.279 FmqF
end
10 0 :M
f0_4 sf
( )S
11 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 532.789 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 523.788 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 572.312 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 586.076 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 516.693 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
689.504 253.255 25.279 5.149 FmqF
0 FmP
FmG 702.654 256.302 M 1.053 1.053 scale (2)S FmR
FmG 704.76 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 710.57 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
703.782 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 715.017 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
432 55 254 9 rC
11 0 :M
FrameMacDict begin
432.738 55.004 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
432.738 55.004 252.787 8.426 FmqF
0 FmP
469.485 59.218 FmB
175.568 0 FmL
2 0.234 FmSo
432.738 59.218 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
11 0 :M
f1_17 sf
( )S
15 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 432.738 49.387 M 0.991 0.991 scale (Find Symbolic Links)S FmR
end
15 0 :M
f2_8 sf
( )S
19 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 441.164 81.219 M 1.053 1.053 scale (import os # Built-in O/S interface)S FmR
FmG 441.164 101.817 M 1.053 1.053 scale (def findlinks\(dirname\):)S FmR
FmG 441.164 112.116 M 1.053 1.053 scale (    links = [])S FmR
FmG 441.164 122.414 M 1.053 1.053 scale (    names = os.listdir\(dirname\))S FmR
FmG 441.164 132.713 M 1.053 1.053 scale (    names.sort\(\))S FmR
FmG 441.164 143.012 M 1.053 1.053 scale (    for name in names:)S FmR
FmG 441.164 153.311 M 1.053 1.053 scale (        if name in \(\'.\', \'..\'\): continue)S FmR
FmG 441.164 163.609 M 1.053 1.053 scale (        fullname = dirname + \'/\' + name)S FmR
FmG 441.164 173.908 M 1.053 1.053 scale (        if islink\(fullname\):)S FmR
FmG 441.164 184.207 M 1.053 1.053 scale (            links.append\(fullname\))S FmR
FmG 441.164 194.506 M 1.053 1.053 scale (        elif isdir\(fullname\):)S FmR
FmG 441.164 204.804 M 1.053 1.053 scale (            links = links + findlinks\(fullname\))S FmR
FmG 441.164 215.103 M 1.053 1.053 scale (    return links)S FmR
end
20 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
20 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
37.918 318.984 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
328.155 305.876 25.279 25.279 FmqF
end
20 0 :M
f0_4 sf
( )S
21 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 159.035 545.088 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 150.034 550.706 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 198.558 550.706 M 1.053 1.053 scale (Amster)S FmR
FmG 212.321 550.706 M 1.053 1.053 scale (dam)S FmR
FmG 142.939 556.323 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
315.75 542.748 25.279 5.149 FmqF
0 FmP
FmG 328.899 545.794 M 1.053 1.053 scale (3)S FmR
FmG 331.006 545.794 M 1.053 1.053 scale ( of )S FmR
FmG 336.815 545.794 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
330.028 307.749 22.47 22.47 FmqF
0 FmP
0 0 48 48 341.263 318.984 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
58 344 254 9 rC
21 0 :M
FrameMacDict begin
58.984 344.497 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
58.984 344.497 252.787 8.426 FmqF
0 FmP
95.73 348.71 FmB
175.568 0 FmL
2 0.234 FmSo
58.984 348.71 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
21 0 :M
f1_17 sf
( )S
25 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 338.879 M 0.991 0.991 scale (Find Symbolic Links \(cont\325d\))S FmR
end
25 0 :M
f2_8 sf
( )S
29 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 370.712 M 1.053 1.053 scale (from stat import S_ISLNK, S_ISDIR, ST_MODE)S FmR
FmG 67.41 391.309 M 1.053 1.053 scale (def islink\(path\):)S FmR
FmG 67.41 401.608 M 1.053 1.053 scale (    try:)S FmR
FmG 67.41 411.907 M 1.053 1.053 scale (        st = os.lstat\(path\))S FmR
FmG 67.41 422.205 M 1.053 1.053 scale (    except \(os.error, AttributeError\):)S FmR
FmG 67.41 432.504 M 1.053 1.053 scale (        return 0)S FmR
FmG 67.41 442.803 M 1.053 1.053 scale (    return S_ISLNK\(st[ST_MODE]\))S FmR
FmG 67.41 463.4 M 1.053 1.053 scale (def isdir\(path\):)S FmR
FmG 67.41 473.699 M 1.053 1.053 scale (    try:)S FmR
FmG 67.41 483.998 M 1.053 1.053 scale (        st = os.stat\(path\))S FmR
FmG 67.41 494.296 M 1.053 1.053 scale (    except os.error:)S FmR
FmG 67.41 504.595 M 1.053 1.053 scale (        return 0)S FmR
FmG 67.41 514.894 M 1.053 1.053 scale (    return S_ISDIR\(st[ST_MODE]\))S FmR
end
30 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
30 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
411.673 318.984 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
701.91 305.876 25.279 25.279 FmqF
end
30 0 :M
f0_4 sf
( )S
31 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 532.789 545.088 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 523.788 550.706 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 572.312 550.706 M 1.053 1.053 scale (Amster)S FmR
FmG 586.076 550.706 M 1.053 1.053 scale (dam)S FmR
FmG 516.693 556.323 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
689.504 542.748 25.279 5.149 FmqF
0 FmP
FmG 702.654 545.794 M 1.053 1.053 scale (4)S FmR
FmG 704.76 545.794 M 1.053 1.053 scale ( of )S FmR
FmG 710.57 545.794 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
703.782 307.749 22.47 22.47 FmqF
0 FmP
0 0 48 48 715.017 318.984 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
432 344 254 9 rC
31 0 :M
FrameMacDict begin
432.738 344.497 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
432.738 344.497 252.787 8.426 FmqF
0 FmP
469.485 348.71 FmB
175.568 0 FmL
2 0.234 FmSo
432.738 348.71 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
31 0 :M
f1_17 sf
( )S
35 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 432.738 338.879 M 0.991 0.991 scale (A)S FmR
FmG 445.546 338.879 M 0.991 0.991 scale ( Date Class)S FmR
end
35 0 :M
f2_8 sf
( )S
39 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 441.164 370.712 M 1.053 1.053 scale (import time)S FmR
FmG 441.164 384.755 M 1.053 1.053 scale (DAY = 24*3600)S FmR
FmG 441.164 398.799 M 1.053 1.053 scale (class Date:)S FmR
FmG 449.591 412.843 M 1.053 1.053 scale (def __init__\(self, date\):)S FmR
FmG 466.443 423.141 M 1.053 1.053 scale (# Represent a date as seconds since epoch)S FmR
FmG 466.443 433.44 M 1.053 1.053 scale (self.date = date)S FmR
FmG 449.591 447.484 M 1.053 1.053 scale (def __repr__\(self\):)S FmR
FmG 466.443 457.783 M 1.053 1.053 scale (# Print a date as \"Fri Oct 21 1994\")S FmR
FmG 466.443 468.081 M 1.053 1.053 scale (s = time.ctime\(self.date\))S FmR
FmG 466.443 478.38 M 1.053 1.053 scale (return s[:11] + s[-4:])S FmR
FmG 449.591 492.424 M 1.053 1.053 scale (def tomorrow\(self\): return self + 1)S FmR
FmG 449.591 506.468 M 1.053 1.053 scale (def yesterday\(self\): return self - 1)S FmR
end
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(MAC_pdes; page: 2 of 3)setjob
%%EndPageSetup
gS 0 0 776 576 rC
40 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
40 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
37.918 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
328.155 16.384 25.279 25.279 FmqF
end
40 0 :M
f0_4 sf
( )S
41 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 159.035 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 150.034 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 198.558 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 212.321 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 142.939 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
315.75 253.255 25.279 5.149 FmqF
0 FmP
FmG 328.899 256.302 M 1.053 1.053 scale (5)S FmR
FmG 331.006 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 336.815 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
330.028 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 341.263 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
58 55 254 9 rC
41 0 :M
FrameMacDict begin
58.984 55.004 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
58.984 55.004 252.787 8.426 FmqF
0 FmP
95.73 59.218 FmB
175.568 0 FmL
2 0.234 FmSo
58.984 59.218 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
41 0 :M
f1_17 sf
( )S
45 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 49.387 M 0.991 0.991 scale (A)S FmR
FmG 71.792 49.387 M 0.991 0.991 scale ( Date Class \(cont\325d\))S FmR
end
45 0 :M
f2_8 sf
( )S
49 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 75.836 81.219 M 1.053 1.053 scale (def __add__\(self, ndays\):)S FmR
FmG 92.689 91.518 M 1.053 1.053 scale (return Date\(self.date + ndays*DAY\))S FmR
FmG 75.836 105.562 M 1.053 1.053 scale (__radd__ = __add__)S FmR
FmG 75.836 119.606 M 1.053 1.053 scale (def __sub__\(self, other\):)S FmR
FmG 92.689 129.904 M 1.053 1.053 scale (if hasattr\(other, \'date\'\):)S FmR
FmG 109.541 140.203 M 1.053 1.053 scale (# Assume other is a date too)S FmR
FmG 109.541 150.502 M 1.053 1.053 scale (return int\(self.date/DAY\) - \\)S FmR
FmG 109.541 160.801 M 1.053 1.053 scale (       int\(other.date/DAY\))S FmR
FmG 92.689 171.099 M 1.053 1.053 scale (else:)S FmR
FmG 109.541 181.398 M 1.053 1.053 scale (# Assume other is a number of days)S FmR
FmG 109.541 191.697 M 1.053 1.053 scale (return self.__add__\(-other\))S FmR
FmG 67.41 212.294 M 1.053 1.053 scale (today = Date\(time.time\(\)\))S FmR
FmG 67.41 222.593 M 1.053 1.053 scale (print today.tomorrow\(\) - today.yesterday\(\))S FmR
end
50 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
50 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
411.673 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
701.91 16.384 25.279 25.279 FmqF
end
50 0 :M
f0_4 sf
( )S
51 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 532.789 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 523.788 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 572.312 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 586.076 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 516.693 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
689.504 253.255 25.279 5.149 FmqF
0 FmP
FmG 702.654 256.302 M 1.053 1.053 scale (6)S FmR
FmG 704.76 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 710.57 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
703.782 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 715.017 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
432 55 254 9 rC
51 0 :M
FrameMacDict begin
432.738 55.004 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
432.738 55.004 252.787 8.426 FmqF
0 FmP
469.485 59.218 FmB
175.568 0 FmL
2 0.234 FmSo
432.738 59.218 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
51 0 :M
f1_17 sf
( )S
55 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 432.738 49.387 M 0.991 0.991 scale (Interfacing to Tk)S FmR
end
55 0 :M
f2_8 sf
( )S
59 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 441.164 81.219 M 1.053 1.053 scale (from Tkinter import *)S FmR
FmG 441.164 91.518 M 1.053 1.053 scale (import string)S FmR
FmG 441.164 105.562 M 1.053 1.053 scale (class App\(Frame\):)S FmR
FmG 441.164 119.606 M 1.053 1.053 scale (    def __init__\(self, master=None\):)S FmR
FmG 441.164 129.904 M 1.053 1.053 scale (        Frame.__init__\(self, master\))S FmR
FmG 441.164 140.203 M 1.053 1.053 scale (        self.pack\(\))S FmR
FmG 441.164 150.502 M 1.053 1.053 scale (        self.e = Entry\(\))S FmR
FmG 441.164 160.801 M 1.053 1.053 scale (        self.e.pack\(\))S FmR
FmG 441.164 171.099 M 1.053 1.053 scale -0.882(        self.e.bind\(\'<Key-Return>\', self.callback\))W FmR
FmG 441.164 185.143 M 1.053 1.053 scale (    def callback\(self, event\):)S FmR
FmG 441.164 195.442 M 1.053 1.053 scale (        print self.entrythingy.get\(\))S FmR
FmG 441.164 209.486 M 1.053 1.053 scale (root = App\(\))S FmR
FmG 441.164 219.784 M 1.053 1.053 scale (root.master.title\(\"Foo\"\))S FmR
FmG 441.164 230.083 M 1.053 1.053 scale (root.mainloop\(\))S FmR
end
60 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
60 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
37.918 318.984 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
328.155 305.876 25.279 25.279 FmqF
end
60 0 :M
f0_4 sf
( )S
61 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 159.035 545.088 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 150.034 550.706 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 198.558 550.706 M 1.053 1.053 scale (Amster)S FmR
FmG 212.321 550.706 M 1.053 1.053 scale (dam)S FmR
FmG 142.939 556.323 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
315.75 542.748 25.279 5.149 FmqF
0 FmP
FmG 328.899 545.794 M 1.053 1.053 scale (7)S FmR
FmG 331.006 545.794 M 1.053 1.053 scale ( of )S FmR
FmG 336.815 545.794 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
330.028 307.749 22.47 22.47 FmqF
0 FmP
0 0 48 48 341.263 318.984 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
58 344 254 9 rC
61 0 :M
FrameMacDict begin
58.984 344.497 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
58.984 344.497 252.787 8.426 FmqF
0 FmP
95.73 348.71 FmB
175.568 0 FmL
2 0.234 FmSo
58.984 348.71 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
61 0 :M
f1_17 sf
( )S
65 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 338.879 M 0.991 0.991 scale (How Fast Is It?)S FmR
end
65 0 :M
f0_11 sf
( )S
67 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 372.584 M 1.021 1.021 scale (Run this on an idle machine:)S FmR
end
68 0 :M
f2_8 sf
( )S
72 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 391.309 M 1.053 1.053 scale (import time)S FmR
FmG 67.41 405.353 M 1.053 1.053 scale (def test\(n\):)S FmR
FmG 67.41 415.652 M 1.053 1.053 scale (    t1 = time.time\(\))S FmR
end
73 0 :M
f3_8 sf
( )S
77 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 425.95 M 1.053 1.053 scale (    while n > 0:)S FmR
FmG 67.41 436.249 M 1.053 1.053 scale (        n = n-1)S FmR
end
78 0 :M
f2_8 sf
( )S
82 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 446.548 M 1.053 1.053 scale (    t2 = time.time\(\))S FmR
FmG 67.41 456.846 M 1.053 1.053 scale (    return t2-t1)S FmR
FmG 67.41 470.89 M 1.053 1.053 scale (test\(100000\))S FmR
end
82 0 :M
f0_11 sf
( )S
84 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 58.984 484.934 M 1.021 1.021 scale ( \245)S FmR
FmG 72.253 484.934 M 1.021 1.021 scale (~2 seconds on an SGI Indigo or Spar)S FmR
FmG 252.737 484.934 M 1.021 1.021 scale (c 10)S FmR
FmG 58.984 499.914 M 1.021 1.021 scale ( \245)S FmR
FmG 72.253 499.914 M 1.021 1.021 scale (~14 seconds on a Power Mac 8100 or Mac IIfx)S FmR
FmG 58.984 514.894 M 1.021 1.021 scale ( \245)S FmR
FmG 72.253 514.894 M 1.021 1.021 scale (~32 seconds on a Macintosh PowerBook 170)S FmR
end
85 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
85 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
411.673 318.984 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
701.91 305.876 25.279 25.279 FmqF
end
85 0 :M
f0_4 sf
( )S
86 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 532.789 545.088 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 523.788 550.706 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 572.312 550.706 M 1.053 1.053 scale (Amster)S FmR
FmG 586.076 550.706 M 1.053 1.053 scale (dam)S FmR
FmG 516.693 556.323 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
689.504 542.748 25.279 5.149 FmqF
0 FmP
FmG 702.654 545.794 M 1.053 1.053 scale (8)S FmR
FmG 704.76 545.794 M 1.053 1.053 scale ( of )S FmR
FmG 710.57 545.794 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
703.782 307.749 22.47 22.47 FmqF
0 FmP
0 0 48 48 715.017 318.984 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
432 344 254 9 rC
86 0 :M
FrameMacDict begin
432.738 344.497 252.787 8.426 FmKp
0 0 0 1 0 0 0 FmK
7 FmP
432.738 344.497 252.787 8.426 FmqF
0 FmP
469.485 348.71 FmB
175.568 0 FmL
2 0.234 FmSo
432.738 348.71 FmB
36.746 0 FmL
2 1.873 FmSo
end
gR
gS 0 0 776 576 rC
86 0 :M
f1_17 sf
( )S
90 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 432.738 338.879 M 0.991 0.991 scale (Bytecode Spaghetti)S FmR
end
90 0 :M
f2_8 sf
( )S
94 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 441.164 370.712 M 1.053 1.053 scale (import dis)S FmR
FmG 441.164 381.01 M 1.053 1.053 scale (dis.disco\(test.func_code\))S FmR
FmG 441.164 401.608 M 1.053 1.053 scale (     0 SET_LINENO          2)S FmR
FmG 441.164 411.907 M 1.053 1.053 scale (     3 RESERVE_FAST        3 \(\(\'n\', \'t1\', \'t2\'\)\))S FmR
FmG 441.164 422.205 M 1.053 1.053 scale (     6 UNPACK_ARG          1)S FmR
FmG 441.164 432.504 M 1.053 1.053 scale (     9 STORE_FAST          0)S FmR
FmG 441.164 442.803 M 1.053 1.053 scale (  )S FmR
FmG 441.164 453.101 M 1.053 1.053 scale (    12 SET_LINENO          3)S FmR
FmG 441.164 463.4 M 1.053 1.053 scale (    15 LOAD_GLOBAL         1 \(time\))S FmR
FmG 441.164 473.699 M 1.053 1.053 scale (    18 LOAD_ATTR           1 \(time\))S FmR
FmG 441.164 483.998 M 1.053 1.053 scale (    21 BUILD_TUPLE         0)S FmR
FmG 441.164 494.296 M 1.053 1.053 scale (    24 BINARY_CALL    )S FmR
FmG 441.164 504.595 M 1.053 1.053 scale (    25 STORE_FAST          1)S FmR
FmG 441.164 514.894 M 1.053 1.053 scale (  )S FmR
end
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(MAC_pdes; page: 3 of 3)setjob
%%EndPageSetup
gS 0 0 776 576 rC
95 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
0 FmSP
end
95 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
37.918 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
328.155 16.384 25.279 25.279 FmqF
end
95 0 :M
f0_4 sf
( )S
96 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 159.035 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 150.034 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 198.558 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 212.321 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 142.939 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
315.75 253.255 25.279 5.149 FmqF
0 FmP
FmG 328.899 256.302 M 1.053 1.053 scale (9)S FmR
FmG 331.006 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 336.815 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
330.028 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 341.263 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
96 0 :M
f2_8 sf
( )S
100 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 67.41 43.769 M 1.053 1.053 scale (    28 SET_LINENO          4)S FmR
FmG 67.41 54.068 M 1.053 1.053 scale (    31 SETUP_LOOP         34 \(to 68\))S FmR
FmG 67.41 64.367 M 1.053 1.053 scale (  )S FmR
FmG 67.41 74.666 M 1.053 1.053 scale ( >> 34 SET_LINENO          4)S FmR
FmG 67.41 84.964 M 1.053 1.053 scale (    37 LOAD_FAST           0)S FmR
FmG 67.41 95.263 M 1.053 1.053 scale (    40 LOAD_CONST          1 \(0\))S FmR
FmG 67.41 105.562 M 1.053 1.053 scale (    43 COMPARE_OP          4)S FmR
FmG 67.41 115.861 M 1.053 1.053 scale (    46 JUMP_IF_FALSE      17 \(to 66\))S FmR
FmG 67.41 126.159 M 1.053 1.053 scale (    49 POP_TOP        )S FmR
FmG 67.41 136.458 M 1.053 1.053 scale (  )S FmR
FmG 67.41 146.757 M 1.053 1.053 scale (    50 SET_LINENO          5)S FmR
FmG 67.41 157.056 M 1.053 1.053 scale (    53 LOAD_FAST           0)S FmR
FmG 67.41 167.354 M 1.053 1.053 scale (    56 LOAD_CONST          2 \(1\))S FmR
FmG 67.41 177.653 M 1.053 1.053 scale (    59 BINARY_SUBTRACT)S FmR
FmG 67.41 187.952 M 1.053 1.053 scale (    60 STORE_FAST          0)S FmR
FmG 67.41 198.251 M 1.053 1.053 scale (    63 JUMP_ABSOLUTE      34)S FmR
FmG 67.41 208.549 M 1.053 1.053 scale ( >> 66 POP_TOP        )S FmR
FmG 67.41 218.848 M 1.053 1.053 scale (    67 POP_BLOCK      )S FmR
FmG 67.41 229.147 M 1.053 1.053 scale (  )S FmR
0 FmSP
411.673 29.492 FmB
-4.654 0 -8.426 3.772 -8.426 8.426 FmCv
0 66.042 0 132.085 0 198.127 FmCv
0 4.654 3.772 8.426 8.426 8.426 FmCv
98.343 0 196.686 0 295.029 0 FmCv
4.654 0 8.426 -3.773 8.426 -8.426 FmCv
0 -66.042 0 -132.085 0 -198.127 FmCv
0 -4.654 -3.772 -8.426 -8.426 -8.426 FmCv
-98.343 0 -196.686 0 -295.029 0 FmCv
0.468 FmS
7 FmP
701.91 16.384 25.279 25.279 FmqF
end
101 0 :M
f0_4 sf
( )S
102 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 532.789 255.596 M 1.053 1.053 scale (\322...And Nice Red Uniforms\323)S FmR
FmG 523.788 261.213 M 1.053 1.053 scale (Guido van Rossum, CWI, )S FmR
FmG 572.312 261.213 M 1.053 1.053 scale (Amster)S FmR
FmG 586.076 261.213 M 1.053 1.053 scale (dam)S FmR
FmG 516.693 266.831 M 1.053 1.053 scale (\(Usenix VHLL, Santa Fe, NM, 26-28 Oct 1994\))S FmR
7 FmP
689.504 253.255 25.279 5.149 FmqF
0 FmP
FmG 700.547 256.302 M 1.053 1.053 scale (10)S FmR
FmG 704.76 256.302 M 1.053 1.053 scale ( of )S FmR
FmG 710.57 256.302 M 1.053 1.053 scale (10)S FmR
FmFB
7 FmP
703.782 18.257 22.47 22.47 FmqF
0 FmP
0 0 48 48 715.017 29.492 22.47 22.47 0 F T F FmEP
%%BeginDocument: (Macintosh HD:USERS:Guido:VHLL talk:CWIlogo.ps)
%!PS-Adobe-2.0 EPSF-2.0
%%Title: Display the CWI logo (defined in CWIdict.ps)
%%Creator: Jan van der Steen (jansteen@cwi.nl, CST)
%%Creationdate: May 21 1991
%%BoundingBox: 0 0 48 48
%%EndComments
%%BeginPreview: 1 1 8 1
% 80
%%EndPreview
%%BeginProcSet: CWIdict.ps
/CWIdict 30 dict def
CWIdict begin

/color	systemdict /colorimage		 known
	systemdict /currentcolortransfer known or def

/cwiscale	  1.0	def
/cwiR	16#ff 255 div	def		% Purely red (ff0000)
/cwiG	16#00 255 div	def
/cwiB	16#00 255 div	def

/char_I {
    %
    % Caption character I
    % (starting point is lower left corner)
    %
    0 0 m
	 30  165 r
	 47    0 r
	-30 -165 r
    c f
} def

/char_W {
    %
    % Caption character W
    % (starting point is lower left corner)
    %
    0 0 m
	  40    0 r
	  35  110 r
	   0 -110 r
	  40    0 r
	  64  165 r
	 -50    0 r
	 -30  -98 r
	   0   98 r
	 -35    0 r
	 -30  -98 r
	   0   98 r
	 -48    0 r
    c f
} def

/char_C {
    %
    % Caption character C
    % (starting point is lower right corner)
    %
    -4 40 m
	%
	% Inner curve
	%
	-100 -10		% control 1
	-70  150		% control 2
	-10  115 curveto	% endpoint
	  5   40 r
	%
	% Outer curve
	%
	-145  185		% control 1
	-145  -70		% control 2
	   0    0 curveto	% endpoint
    c f
} def

/caption {
    %
    % Caption has three characters: C, W and I
    %
    S 144 53 t char_C R
    S 162 42 t char_W R
    S 320 42 t char_I R
} def

/RR 250 def
/dR 20 def

/outside {
    S
	lw setlinewidth upperside
	lw setlinewidth lowerside
    R
} def

/upperside {
    S
	color { 1 1 1 }{ 1 } ifelse
	outsidepath
    R
} def

/lowerside {
    S
	180 rotate
	color { cwiR cwiG cwiB }{ 0 } ifelse
	outsidepath
    R
} def

/outsidepath {
    S
	color { cwiR cwiG cwiB setrgbcolor}{ 0 setgray } ifelse
	0 0 RR 0 90 arc stroke
	newpath
	    0 0 RR dR add 90 180 arc
	    0 0 RR dR sub 180 90 arcn
	closepath
	S
	    lw 2 mul setlinewidth
	    stroke
	R
	color {setrgbcolor}{setgray} ifelse fill
    R
} def

%
% Shorthands
%
/m {   moveto} def
/l {   lineto} def
/r {  rlineto} def
/c {closepath} def
/f {     fill} def
/t {translate} def
/S {    gsave} def
/R { grestore} def

/CWIlogo {
    newpath
    S
	1 setlinejoin
	.86 dup scale
	cwiscale dup scale
	58 153 t			% Make the lowerleft corner (0,0)
	S
	    1.02 dup scale
	    caption			% CWI
	R
	220 125 t
	/lw 6 def
	outside
    R
} def
end	% CWIdict
%%EndProcSet
CWIdict begin
    /cwiscale .1 def
    CWIlogo
end
%%Trailer
%%EndDocument

true
EndFrame4Picture
end
102 0 :M
f2_8 sf
( )S
106 0 :M
FrameMacDict begin
0 0 0 1 0 0 0 FmK
0 FmP
FmG 441.164 43.769 M 1.053 1.053 scale ( >> 68 SET_LINENO          6)S FmR
FmG 441.164 54.068 M 1.053 1.053 scale (    71 LOAD_GLOBAL         1 \(time\))S FmR
FmG 441.164 64.367 M 1.053 1.053 scale (    74 LOAD_ATTR           1 \(time\))S FmR
FmG 441.164 74.666 M 1.053 1.053 scale (    77 BUILD_TUPLE         0)S FmR
FmG 441.164 84.964 M 1.053 1.053 scale (    80 BINARY_CALL    )S FmR
FmG 441.164 95.263 M 1.053 1.053 scale (    81 STORE_FAST          2)S FmR
FmG 441.164 105.562 M 1.053 1.053 scale (  )S FmR
FmG 441.164 115.861 M 1.053 1.053 scale (    84 SET_LINENO          7)S FmR
FmG 441.164 126.159 M 1.053 1.053 scale (    87 LOAD_FAST           2)S FmR
FmG 441.164 136.458 M 1.053 1.053 scale (    90 LOAD_FAST           1)S FmR
FmG 441.164 146.757 M 1.053 1.053 scale (    93 BINARY_SUBTRACT)S FmR
FmG 441.164 157.056 M 1.053 1.053 scale (    94 RETURN_VALUE   )S FmR
FmG 441.164 167.354 M 1.053 1.053 scale (    95 LOAD_CONST          0 \(None\))S FmR
FmG 441.164 177.653 M 1.053 1.053 scale (    98 RETURN_VALUE   )S FmR
end
endp
%%Trailer
end		% md
%%EOF
