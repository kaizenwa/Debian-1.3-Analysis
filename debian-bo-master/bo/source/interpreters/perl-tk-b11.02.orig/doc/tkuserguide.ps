%!PS-Adobe-3.0
%%Creator: groff version 1.09
%%CreationDate: Mon Aug 21 13:16:09 1995
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.09 0
%%Pages: 7
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.09 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll 
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 9/Times-Bold@0 SF(Intr)72
84 Q(oduction)-.162 E F0(Writing Tk applications in perl5.)108 96 Q .357
(This manual page is for be)108 112.8 R 2.857(ginners. It)-.15 F .357
(assumes you kno)2.857 F 2.856(ws)-.25 G .356(ome perl, and ha)-2.856 F
.656 -.15(ve g)-.2 H .356(ot perl+Tk running.).15 F(Please)5.356 E
(run the `widget' demo before reading this te)108 124.8 Q
(xt; it will teach you the v)-.15 E
(arious widget types supported by Tk.)-.25 E F1(Some backgr)72 141.6 Q
(ound)-.162 E F0 1.004(Tk GUI programming is e)108 153.6 R -.15(ve)-.25
G(nt-dri).15 E -.15(ve)-.25 G 3.504(n. \(This).15 F 1.004
(may already be f)3.504 F 1.004(amiliar to you.\))-.1 F 1.005(In e)6.005
F -.15(ve)-.25 G(nt-dri).15 E -.15(ve)-.25 G 3.505(np).15 G(rograms,)
-3.505 E .404(the main GUI loop is outside of the user program, and put\
 inside the GUI library)108 165.6 R 5.403(.T)-.65 G .403
(his loop will w)-5.403 F .403(atch all)-.1 F -2.15 -.25(ev e)108 177.6
T .056(nts of interest, and acti).25 F -.25(va)-.25 G .057
(te the correct handler procedures to handle these e).25 F -.15(ve)-.25
G 2.557(nts. Some).15 F .057(of these handler)2.557 F
(procedures may be user)108 189.6 Q
(-supplied; others will be part of the library)-.2 E(.)-.65 E -.15(Fo)
108 206.4 S 2.543(rap).15 G(rogrammer)-2.543 E 2.543(,t)-.4 G .043
(his means that you')-2.543 F .042(re not w)-.5 F .042
(atching what is happening; instead, you are requested by the)-.1 F .246
(toolkit to perform actions whene)108 218.4 R -.15(ve)-.25 G 2.747(rn)
.15 G(ecessary)-2.747 E 5.247(.S)-.65 G .247(o, you')-5.247 F .247
(re not w)-.5 F .247(atching for `raise windo)-.1 F 2.747(w/c)-.25 G
.247(lose windo)-2.747 F 2.747(w/)-.25 G(redra)108 230.4 Q 2.933(ww)-.15
G(indo)-2.933 E .433(w' requests, b)-.25 F .433(ut you tell the toolkit\
 which routine will handle such cases, and the toolkit will)-.2 F
(call the procedures when required.)108 242.4 Q F1(First r)72 259.2 Q
(equir)-.162 E(ements)-.162 E F0(An)108 271.2 Q 3.004(yp)-.15 G .504
(erl program that uses Tk needs to include)-3.004 F/F2 10/Courier@0 SF
.504(use Tk)3.004 F F0 5.505(.I)C .505(advise also to use)-2.5 F F2 .505
(use strict)3.005 F F0 .505(and use the)3.005 F/F3 10/Times-Bold@0 SF
<ad77>108 283.2 Q F0(switch.)2.5 E(An)108 300 Q 2.8(yT)-.15 G 2.8(ka)
-2.8 G .3(pplication starts by creating the Tk main windo)-2.8 F 4.1
-.65(w. Y)-.25 H .3(ou then create items inside the main windo)-.45 F
-.65(w,)-.25 G .402(or create ne)108 312 R 2.902(ww)-.25 G(indo)-2.902 E
.402(ws, before starting the mainloop.)-.25 F(\(Y)5.402 E .403
(ou can also create more items and windo)-1.1 F .403(ws while)-.25 F
(you')108 324 Q 1.214(re running.\))-.5 F 1.214(The items will be sho)
6.214 F 1.213(wn on the display after you)-.25 F F2(pack)3.713 E F0
1.213(them; more info on this later)3.713 F(.)-.55 E .039
(Then you do a Tk mainloop; this will start the GUI and handle all e)108
336 R -.15(ve)-.25 G 2.539(nts. That').15 F 2.539(sy)-.55 G .039
(our application.)-2.539 F 2.539(At)5.039 G(ri)-2.539 E(vial)-.25 E
(one-windo)108 348 Q 2.5(we)-.25 G(xample is sho)-2.65 E 2.5(wb)-.25 G
(elo)-2.5 E(w:)-.25 E F2(#! /usr/bin/perl5 -w)156 364.8 Q(use strict;)
156 388.8 Q(use Tk;)156 400.8 Q(my $main = new MainWindow;)156 424.8 Q
($main->Label\(-text => 'Hello, world!'\)->pack;)156 436.8 Q
($main->Button\(-text => 'Quit',)156 448.8 Q(-command => sub{exit})240
460.8 Q(\)->pack;)240 472.8 Q(MainLoop;)156 484.8 Q F0 .7
(Please run this e)108 508.8 R 3.2(xample. It)-.15 F(sho)3.2 E .7
(ws you tw)-.25 F 3.2(oi)-.1 G .699(tems types also sho)-3.2 F .699
(wn in the widget demo; it also sho)-.25 F .699(ws you)-.25 F(ho)108
520.8 Q 2.5(wi)-.25 G(tems are created and pack)-2.5 E 2.5(ed. Finally)
-.1 F 2.5(,n)-.65 G(ote the typical Tk style using)-2.5 E F2(-option)2.5
E F0(=>)2.5 E F2(value)2.5 E F0(pairs.)2.5 E F1(Item cr)72 537.6 Q
(eation)-.162 E F0 .153(Tk windo)108 549.6 R .153
(ws and widgets are hierarchical, i.e.)-.25 F .154
(one includes one or more others.)2.5 F -1.1(Yo)5.154 G 2.654(uc)1.1 G
.154(reate the \214rst Tk win-)-2.654 F(do)108 561.6 Q 2.914(wu)-.25 G
(sing)-2.914 E F2 .414(new MainWindow)2.914 F F0 5.414(.T)C .414
(his returns a windo)-5.414 F 2.914(wh)-.25 G .414(andle, assigned to)
-2.914 F F2($main)2.914 E F0 .414(in the e)2.914 F .414(xample abo)-.15
F -.15(ve)-.15 G(.).15 E -.25(Ke)108 573.6 S
(ep track of the main handle.).25 E -1.1(Yo)108 590.4 S 2.9(uc)1.1 G .4
(an use an)-2.9 F 2.9(yT)-.15 G 2.9(kh)-2.9 G .4
(andle to create sub-items within the windo)-2.9 F 2.9(wo)-.25 G 2.9(rw)
-2.9 G 2.9(idget. This)-2.9 F .4(is done by calling the a)2.9 F .33
(Tk constructor method on the v)108 602.4 R 2.83(ariable. In)-.25 F .33
(the e)2.83 F .33(xample abo)-.15 F -.15(ve)-.15 G 2.83(,t).15 G(he)
-2.83 E F2(Label)2.83 E F0 .33(method called from)2.83 F F2($main)2.83 E
F0(cre-)2.83 E .809(ates a label widget inside the main windo)108 614.4
R 4.609 -.65(w. I)-.25 H 3.309(nt).65 G .81
(he constructor call, you can specify v)-3.309 F .81
(arious options; you)-.25 F 1.787
(can later add or change options for an)108 626.4 R 4.287(yw)-.15 G
1.787(idget using the)-4.287 F F2(configure)4.287 E F0 1.787
(method, which tak)4.287 F 1.786(es the same)-.1 F .58
(parameters as the constructor)108 638.4 R 5.58(.T)-.55 G .581(he one e)
-5.58 F .581(xception to the hierarchical structure is the)-.15 F F2
(Toplevel)3.081 E F0(construc-)3.081 E(tor)108 650.4 Q 2.5(,w)-.4 G
(hich creates a ne)-2.5 E 2.5(wo)-.25 G(utermost windo)-2.5 E -.65(w.)
-.25 G 1.398(After you create an)108 667.2 R 3.898(yw)-.15 G 1.397
(idget, you must render it by calling)-3.898 F F2(pack)3.897 E F0 6.397
(.\()C 1.397(This is not entirely true; more info)-6.397 F 2.793
(later\). If)108 679.2 R .293(you do not need to refer to the widget af\
ter construction and packing, call)2.793 F F2(pack)2.793 E F0(of)2.794 E
2.794(ft)-.25 G .294(he construc-)-2.794 F .711(tor results, as sho)108
691.2 R .711(wn for the label and b)-.25 F .711(utton in the e)-.2 F
.711(xample abo)-.15 F -.15(ve)-.15 G 5.711(.N).15 G .711
(ote that the result of the compound)-5.711 F(call is the result of)108
703.2 Q F2(pack)2.5 E F0 2.5(,w)C(hich is not a v)-2.5 E
(alid Tk handle.)-.25 E -.4(Wi)108 720 S(ndo).4 E .921
(ws and widgets are deleted by calling)-.25 F F2(destroy)3.421 E F0 .921
(on them; this will delete and un-dra)3.421 F 3.422(wt)-.15 G .922
(he widget)-3.422 F(1)535 768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R
(and all its children, with the e)108 84 Q(xception of T)-.15 E(ople)-.8
E -.15(ve)-.25 G 2.5(lw).15 G(indo)-2.5 E(ws.)-.25 E/F1 9/Times-Bold@0
SF(Standard Tk types)72 100.8 Q F0(Button)108 112.8 Q(Radiob)108 129.6 Q
(utton)-.2 E(Checkb)108 146.4 Q(utton)-.2 E(Listbox)108 163.2 Q
(Scrollbar)108 180 Q(Entry)108 196.8 Q -1.25 -.7(Te x)108 213.6 T(t).7 E
(Can)108 230.4 Q -.25(va)-.4 G(s).25 E(Frame)108 247.2 Q -.8(To)108 264
S(ple).8 E -.15(ve)-.25 G(l).15 E(Scale)108 280.8 Q(Menu)108 297.6 Q
(Menub)108 314.4 Q(utton)-.2 E F1 -.828(Va)72 331.2 S
(riables and call-back r).828 E(outines)-.162 E F0 .09
(Most graphical interf)108 343.2 R .09
(aces are used to set up a set of v)-.1 F .089
(alues and conditions, and then perform the appropriate)-.25 F 3.221
(action. The)108 355.2 R .721(Tk toolkit is dif)3.221 F .721
(ferent from your a)-.25 F -.15(ve)-.2 G .721(rage te).15 F .721
(xt-based prompting or menu dri)-.15 F -.15(ve)-.25 G 3.222(ns).15 G
.722(ystem in that)-3.222 F 1.183(you do not collect settings yourself,\
 and decide on an action based on an input code; instead, you lea)108
367.2 R -.15(ve)-.2 G(these v)108 379.2 Q
(alues to your toolkit and only get them when the action is performed.)
-.25 E(So, where a traditional te)108 396 Q(xt-based system w)-.15 E
(ould look lik)-.1 E 2.5(et)-.1 G(his: \(yes, this is ob)-2.5 E
(viously dumb code\))-.15 E/F2 10/Courier@0 SF(#! /usr/bin/perl5 -w)156
412.8 Q(use strict;)156 436.8 Q(print "Please type a font name\\n";)156
460.8 Q(my $font = <>; chop $font;)156 472.8 Q 6(#V)156 484.8 S
(alidate font)-6 E(print "Please type a file name\\n";)156 508.8 Q
(my $filename = <>; chop $filename;)156 520.8 Q 6(#V)156 532.8 S
(alidate filename)-6 E(print "Type <1> to fax, <2> to print\\n";)156
556.8 Q(my $option = <>; chop $option;)156 568.8 Q
(if \($option eq 1\) {)156 580.8 Q
(print "Faxing $filename in font $font\\n";)180 592.8 Q 6(}e)156 604.8 S
(lsif \($option eq 2\) {)-6 E
(print "Now sending $filename to printer in font $font\\n";)180 616.8 Q
(})156 628.8 Q F0 .004(The \(slightly lar)108 652.8 R .004(ger\) e)-.18
F .004(xample belo)-.15 F 2.504(ws)-.25 G(ho)-2.504 E .004(ws ho)-.25 F
2.504(wt)-.25 G 2.504(od)-2.504 G 2.504(ot)-2.504 G .004(his is Tk.)
-2.504 F .004(Note the use of call-backs.)5.004 F .005(Note, also, that)
5.005 F .992(Tk handles the v)108 664.8 R .992
(alues, and the subroutine uses)-.25 F F2(get)3.492 E F0 .992
(to get at the v)3.492 F 3.492(alues. If)-.25 F 3.492(au)3.492 G .992
(ser changes his mind and)-3.492 F -.1(wa)108 676.8 S
(nts to change the font ag).1 E(ain, the application ne)-.05 E -.15(ve)
-.25 G 2.5(rn).15 G(otices; it')-2.5 E 2.5(sa)-.55 G(ll handled by Tk.)
-2.5 E F2(#! /usr/bin/perl5 -w)156 693.6 Q F0(2)535 768 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 10/Courier@0 SF
(use strict;)156 84 Q(use Tk;)156 96 Q(my $main = new MainWindow;)156
120 Q($main->Label\(-text => 'Print file'\)->pack;)156 132 Q
(my $font = $main->Entry\(-width => 10\);)156 144 Q($font->pack;)156 156
Q(my $filename = $main->Entry\(-width => 10\);)156 168 Q
($filename->pack;)156 180 Q($main->Button\(-text => 'Fax',)156 192 Q
(-command => sub{do_fax\($filename, $font\)})240 204 Q(\)->pack;)240 216
Q($main->Button\(-text => 'Print',)156 228 Q
(-command => sub{do_print\($filename, $font\)})240 240 Q(\)->pack;)240
252 Q(MainLoop;)156 264 Q(sub do_fax {)156 288 Q
(my \($file, $font\) = @_;)180 300 Q(my $file_val = $file->get;)180 312
Q(my $font_val = $font->get;)180 324 Q
(print "Now faxing $file_val in $font_val\\n";)180 336 Q(})156 348 Q
(sub do_print {)156 372 Q(my \($file, $font\) = @_;)180 384 Q
($file = get $file;)180 396 Q($font = get $font;)180 408 Q
(print "Sending file $file to printer in $font\\n";)180 420 Q(})156 432
Q/F2 9/Times-Bold@0 SF(The pack)72 460.8 Q(er)-.09 E 4.5(.G)-.9 G -.162
(ro)-4.5 G(uping and frames.).162 E F0 .32(In the e)108 472.8 R .32
(xamples abo)-.15 F -.15(ve)-.15 G 2.82(,y).15 G .32(ou must ha)-2.82 F
.62 -.15(ve n)-.2 H .32(oticed to).15 F F1(pack)2.82 E F0 2.82
(calls. This)2.82 F .32(is one of the more complicated parts of)2.82 F
2.845(Tk. The)108 484.8 R .345(basic idea is that an)2.845 F 2.845(yw)
-.15 G(indo)-2.845 E 2.845(wo)-.25 G 2.845(rw)-2.845 G .345
(idget should be subject to a Tk windo)-2.845 F 2.845(wm)-.25 G .345
(anager; the)-2.845 F/F3 10/Times-Italic@0 SF(pac)2.845 E -.1(ke)-.2 G
(r).1 E F0(is)2.845 E(the most useful windo)108 496.8 Q 2.5(wm)-.25 G
(anager)-2.5 E(.)-.55 E .605(The actions of the pack)108 513.6 R .605
(er are rather simple: when applied to a widget, the pack)-.1 F .605
(er positions that widget on)-.1 F 1.627
(the indicated position within the remaining space in its parent.)108
525.6 R 1.627(By def)6.627 F 1.627(ault, the position is on top; this)
-.1 F .633(means the ne)108 537.6 R .633(xt items will be put belo)-.15
F 4.433 -.65(w. Y)-.25 H .634
(ou can also specify the left, right, or bottom positions.)-.45 F
(Specify)5.634 E(position using)108 549.6 Q/F4 10/Times-Bold@0 SF
(\255side => `right')2.5 E F0(.)A .786
(Additional packing parameters specify the beha)108 566.4 R .785
(vior of the widget when there is some space left, or when)-.2 F .07
(the windo)108 578.4 R 2.57(ws)-.25 G .07(ize is increased.)-2.57 F -.15
(Fo)5.07 G 2.57(rw).15 G .07(idgets that you w)-2.57 F .071(ant to k)-.1
F .071(eep the same size, specify nothing; for widgets)-.1 F .386
(that you w)108 590.4 R .386(ant to \214ll all space, specify)-.1 F F4
<ad8c6c6c>2.886 E F0(to)2.886 E F4(x)2.886 E F0(,)A F4(y)2.886 E F0
2.886(,o)C(r)-2.886 E F4(both)2.886 E F0 2.886(;f)C .386
(or widgets that should gro)-2.886 F 1.686 -.65(w, s)-.25 H(pecify).65 E
F4(\255expand)2.886 E(=> `y)108 602.4 Q(es')-.1 E F0 5(.T)C
(hese parameters are not sho)-5 E(wn in the e)-.25 E(xample belo)-.15 E
(w; see the widget demo.)-.25 E .51(If you w)108 619.2 R .51
(ant to group some items within a windo)-.1 F 3.01(wt)-.25 G .51(hat ha)
-3.01 F .81 -.15(ve a d)-.2 H(if).15 E .51
(ferent packing order than others, you can)-.25 F .665
(include them in a Frame.)108 631.2 R .664(This is a do-nothing windo)
5.664 F 3.164(wt)-.25 G .664
(ype that is meant for packing \(and to play g)-3.164 F(ames)-.05 E
(with borders and colors\).)108 643.2 Q(The e)108 660 Q(xample belo)-.15
E 2.5(ws)-.25 G(ho)-2.5 E(ws the use of pack and frames:)-.25 E F1
(#! /usr/bin/perl5 -w)156 676.8 Q(use strict;)156 700.8 Q(use Tk;)156
712.8 Q F0(3)535 768 Q EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 10/Courier@0 SF 6(#T)156
84 S(ake top, the bottom -> now implicit top is in the middle)-6 E
(my $main = new MainWindow;)156 96 Q
($main->Label\(-text => 'At the top \(default\)'\)->pack;)156 108 Q
($main->Label\(-text => 'At the bottom'\)->pack\(-side => 'bottom'\);)
156 120 Q($main->Label\(-text => 'The middle remains'\)->pack;)156 132 Q
6(#S)156 156 S(ince left and right are taken, bottom will not work...)-6
E(my $top1 = $main->Toplevel;)156 168 Q
($top1->Label\(-text => 'Left'\)->pack\(-side => 'left'\);)156 180 Q
($top1->Label\(-text => 'Right'\)->pack\(-side => 'right'\);)156 192 Q
($top1->Label\(-text => '?Bottom?'\)->pack\(-side => 'bottom'\);)156 204
Q 6(#B)156 228 S(ut when you use frames, things work quite alright)-6 E
(my $top2 = $main->Toplevel;)156 240 Q(my $frame = $top2->Frame;)156 252
Q($frame->pack;)156 264 Q
($frame->Label\(-text => 'Left2'\)->pack\(-side => 'left'\);)156 276 Q
($frame->Label\(-text => 'Right2'\)->pack\(-side => 'right'\);)156 288 Q
($top2->Label\(-text => 'Bottom2'\)->pack\(-side => 'bottom'\);)156 300
Q(MainLoop;)156 324 Q/F2 9/Times-Bold@0 SF(Mor)72 352.8 Q 2.25(et)-.162
G(han one windo)-2.25 E(w)-.09 E F0 .413
(Most real applications require more than one windo)108 364.8 R 4.213
-.65(w. A)-.25 H 2.913(sy).65 G .413
(ou read before, you can create more outermost)-2.913 F(windo)108 376.8
Q .958(ws by using T)-.25 F(ople)-.8 E -.15(ve)-.25 G 3.458(l. Each).15
F(windo)3.458 E 3.458(wi)-.25 G 3.458(si)-3.458 G .958
(ndependent; closing a tople)-3.458 F -.15(ve)-.25 G 3.458(lw).15 G
(indo)-3.458 E 3.458(wd)-.25 G .958(oes not af)-3.458 F .958(fect the)
-.25 F 4.398(others. Closing)108 388.8 R 1.898(the main windo)4.398 F
4.398(ww)-.25 G 1.898(ill end the application.)-4.398 F 1.898(The e)
6.898 F 1.898(xample belo)-.15 F 4.398(ws)-.25 G(ho)-4.398 E 1.898
(ws a tri)-.25 F 1.898(vial three-)-.25 F(windo)108 400.8 Q 2.5(wa)-.25
G(pplication:)-2.5 E F1(#! /usr/bin/perl5 -w)156 417.6 Q(use strict;)156
441.6 Q(use Tk;)156 453.6 Q(my $main = new MainWindow;)156 477.6 Q
(fill_window\($main, 'Main'\);)156 489.6 Q(my $top1 = $main->Toplevel;)
156 501.6 Q(fill_window\($top1, 'First top-level'\);)156 513.6 Q
(my $top2 = $main->Toplevel;)156 525.6 Q
(fill_window\($top2, 'Second top-level'\);)156 537.6 Q(MainLoop;)156
549.6 Q(sub fill_window {)156 573.6 Q(my \($window, $header\) = @_;)180
585.6 Q($window->Label\(-text => $header\)->pack;)180 597.6 Q
($window->Button\(-text => 'close',)180 609.6 Q
(-command => sub{destroy $window})276 621.6 Q
(\)->pack\(-side => 'left'\);)276 633.6 Q
($window->Button\(-text => 'exit',)180 645.6 Q(-command => sub{exit})276
657.6 Q(\)->pack\(-side => 'right'\);)276 669.6 Q(})156 681.6 Q F0(4)535
768 Q EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 9/Times-Bold@0 SF(Mor)72
84 Q 2.25(ec)-.162 G(allbacks)-2.25 E F0 1.333(So f)108 96 R(ar)-.1 E
3.833(,a)-.4 G 1.333(ll call-back routines sho)-3.833 F 1.332
(wn called a user procedure.)-.25 F -1.1(Yo)6.332 G 3.832(uc)1.1 G 1.332
(an also ha)-3.832 F 1.632 -.15(ve a c)-.2 H 1.332
(all-back routine call).15 F .67(another Tk routine.)108 108 R .67
(This is the w)5.67 F .67(ay that scroll bars are implemented: scroll-b\
ars can call a Tk items, or a)-.1 F .851(user procedure,)108 120 R
(whene)5.851 E -.15(ve)-.25 G 3.351(rt).15 G .851
(heir position has changed.)-3.351 F .85
(The Tk item that has a scrollbar attached calls the)5.851 F .616
(scrollbar when its size or of)108 132 R .616(fset has changed.)-.25 F
.616(In this w)5.616 F(ay)-.1 E 3.117(,t)-.65 G .617(he items are link)
-3.117 F 3.117(ed. Y)-.1 F .617(ou can still ask a scroll-)-1.1 F(bar')
108 144 Q 2.5(sp)-.55 G(osition, or set it by hand \255 b)-2.5 E
(ut the def)-.2 E(aults will be tak)-.1 E(en care of.)-.1 E .43(The e)
108 160.8 R .43(xample belo)-.15 F 2.93(ws)-.25 G(ho)-2.93 E .43
(ws a listbox with a scroll bar)-.25 F 5.429(.M)-.55 G -.15(ov)-5.429 G
.429(ing the scrollbar mo).15 F -.15(ve)-.15 G 2.929(st).15 G .429
(he listbox.)-2.929 F .429(Scanning a)5.429 F
(listbox \(dragging an item with the left mouse b)108 172.8 Q
(utton\) mo)-.2 E -.15(ve)-.15 G 2.5(st).15 G(he scrollbar)-2.5 E(.)-.55
E/F2 10/Courier@0 SF(#! /usr/bin/perl5 -w)156 189.6 Q(use strict;)156
213.6 Q(use Tk;)156 225.6 Q(my $main = new MainWindow;)156 249.6 Q
(my $box = $main->Listbox\(-relief => 'sunken',)156 261.6 Q
(-width => -1, # Shrink to fit)306 273.6 Q(-height => 5,)306 285.6 Q
(-setgrid => 'yes'\);)306 297.6 Q
(my @items = qw\(One Two Three Four Five Six Seven)156 309.6 Q
(Eight Nine Ten Eleven Twelve\);)246 321.6 Q(foreach \(@items\) {)156
333.6 Q($box->insert\('end', $_\);)174 345.6 Q(})156 357.6 Q
(my $scroll = $main->Scrollbar\(-command => ['yview', $box]\);)156 369.6
Q($box->configure\(-yscrollcommand => ['set', $scroll]\);)156 381.6 Q
($box->pack\(-side => 'left', -fill => 'both', -expand => 'yes'\);)156
393.6 Q($scroll->pack\(-side => 'right', -fill => 'y'\);)156 405.6 Q
(MainLoop;)156 429.6 Q F1(Can)72 458.4 Q -.09(va)-.36 G(ses and tags).09
E F0 .744(One of the most po)108 470.4 R .744(werful windo)-.25 F 3.245
(wt)-.25 G .745(ypes in Tk is the Can)-3.245 F -.25(va)-.4 G 3.245(sw)
.25 G(indo)-3.245 E 4.545 -.65(w. I)-.25 H 3.245(nac).65 G(an)-3.245 E
-.25(va)-.4 G 3.245(sw).25 G(indo)-3.245 E 2.045 -.65(w, y)-.25 H .745
(ou can dra).65 F(w)-.15 E 1.124
(simple graphics and include other widgets.)108 482.4 R 1.124(The can)
6.124 F -.25(va)-.4 G 3.624(sa).25 G 1.124(rea may be lar)-3.624 F 1.123
(ger than the visible windo)-.18 F 2.423 -.65(w, a)-.25 H(nd).65 E .972
(may then be scrolled.)108 494.4 R(An)5.972 E 3.472(yi)-.15 G .972
(tem you dra)-3.472 F 3.472(wo)-.15 G 3.472(nt)-3.472 G .972(he can)
-3.472 F -.25(va)-.4 G 3.472(sh).25 G .972(as its o)-3.472 F .972
(wn id, and may optionally ha)-.25 F 1.272 -.15(ve o)-.2 H .972(ne or)
.15 F(more)108 506.4 Q/F3 10/Times-Italic@0 SF(ta)2.727 E(gs)-.1 E F0
5.227(.Y)C .227(ou may refer to an)-6.327 F 2.727(yi)-.15 G .227
(tem by its id, and may refer to an)-2.727 F 2.727(yg)-.15 G .227
(roup of items by a common tag; you)-2.727 F .223(can mo)108 518.4 R
-.15(ve)-.15 G 2.723(,d).15 G .223
(elete, or change groups of items using these tags, and you can)-2.723 F
F3(bind)2.723 E F0 .223(actions to tags.)2.723 F -.15(Fo)5.223 G 2.723
(rap).15 G(rop-)-2.723 E(erly designed \(often structured\) can)108
530.4 Q -.25(va)-.4 G(s, you can specify po).25 E
(werful actions quite simply)-.25 E(.)-.65 E .724(In the e)108 547.2 R
.724(xample belo)-.15 F 2.024 -.65(w, a)-.25 H .724(ctions are bound to\
 circles \(single click\) and blue items \(double-click\); ob).65 F
(viously)-.15 E(,)-.65 E(this can be e)108 559.2 Q(xtended to an)-.15 E
2.5(yt)-.15 G(ag or group of tags.)-2.5 E F2(#! /usr/bin/perl5 -w)156
576 Q(use strict;)156 600 Q(use Tk;)156 612 Q 6(#C)156 636 S
(reate main window and canvas)-6 E(my $main = new MainWindow;)156 648 Q
(my $canvas = $main->Canvas;)156 660 Q
($canvas->pack\(-expand => 'yes', -fill => 'both'\);)156 672 Q F0(5)535
768 Q EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 10/Courier@0 SF 6(#C)156
84 S(reate various items)-6 E
(create_item\($canvas, 1, 1, 'circle', 'blue', 'Jane'\);)156 96 Q
(create_item\($canvas, 4, 4, 'circle', 'red', 'Peter'\);)156 108 Q
(create_item\($canvas, 4, 1, 'square', 'blue', 'James'\);)156 120 Q
(create_item\($canvas, 1, 4, 'square', 'red', 'Patricia'\);)156 132 Q 6
(#S)156 156 S
(ingle-clicking with left on a 'circle' item invokes a procedure)-6 E
($canvas->bind\('circle', '<1>' => sub {handle_circle\($canvas\)}\);)156
168 Q 6(#D)156 180 S
(ouble-clicking with left on a 'blue' item invokes a procedure)-6 E
($canvas->bind\('blue', '<Double-1>' => sub {handle_blue\($canvas\)}\);)
156 192 Q(MainLoop;)156 204 Q 6(#C)156 228 S
(reate an item; use parameters as tags \(this is not a default!\))-6 E
(sub create_item {)156 240 Q
(my \($can, $x, $y, $form, $color, $name\) = @_;)180 252 Q
(my $x2 = $x + 1;)180 276 Q(my $y2 = $y + 1;)180 288 Q(my $kind;)180 300
Q($kind = 'oval' if \($form eq 'circle'\);)180 312 Q
($kind = 'rectangle' if \($form eq 'square'\);)180 324 Q
($can->create\(\($kind, "$x" . 'c', "$y" . 'c',)180 336 Q
("$x2" . 'c', "$y2" . 'c'\),)264 348 Q(-tags => [$form, $color, $name],)
258 360 Q(-fill => $color\);)258 372 Q(})156 384 Q 6(#T)156 408 S
(his gets the real name \(not current, blue/red, square/circle\))-6 E 6
(#N)156 420 S
(ote: you'll want to return a list in realistic situations...)-6 E
(sub get_name {)156 432 Q(my \($can\) = @_;)180 444 Q
(my $item = $can->find\('withtag', 'current'\);)180 456 Q
(my @taglist = $can->gettags\($item\);)180 468 Q(my $name;)180 480 Q
(foreach \(@taglist\) {)180 492 Q(next if \($_ eq 'current'\);)204 504 Q
(next if \($_ eq 'red' or $_ eq 'blue'\);)204 516 Q
(next if \($_ eq 'square' or $_ eq 'circle'\);)204 528 Q($name = $_;)204
540 Q(last;)204 552 Q(})180 564 Q(return $name;)180 576 Q(})156 588 Q
(sub handle_circle {)156 612 Q(my \($can\) = @_;)180 624 Q
(my $name = get_name\($can\);)180 636 Q
(print "Action on circle $name...\\n";)180 648 Q(})156 660 Q F0(6)535
768 Q EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 82.16(/USR/LOCAL/LIB/PERL/TK/USERGUIDE\(1\) /US\
R/LOCAL/LIB/PERL/TK/USERGUIDE\(1\))72 48 R/F1 10/Courier@0 SF
(sub handle_blue {)156 84 Q(my \($can\) = @_;)180 96 Q
(my $name = get_name\($can\);)180 108 Q
(print "Action on blue item $name...\\n";)180 120 Q(})156 132 Q F0(7)535
768 Q EP
%%Trailer
end
%%EOF
