'\"
.so man.macros
.TH Wm n 4.0 Tk "Tix Extensions"
.BS
'
'
.SH NAME
Wm - Tix's addition to the standard TK \fBwm\fR command.
'
'
'
.SH SYNOPSIS
.PP
\fI$widget\fR->\fBcapture\fR
.PP
\fI$widget\fR->\fBrelease\fR
.PP
.SH DESCRIPTION
.PP

The \fBcapture\fR and the \fBrelease\fR methods change the
toplevel attribute of Tk widgets.
.SH COMMAND OPTIONS
.PP
.TP
\fI$widget\fR->\fBcapture\fR
'
Converts the toplevel window specified by $widget\fR into a non-toplevel
widget. Normally this command is called to convert a \fBtoplevel\fR widget
into a \fBframe\fR widget. The newly-converted frame widget is
un-mapped from the screen. To make it appear inside its parent, you
must call a geometry manager (e.g. pack) explictly.
'
.TP
\fI$widget\fR->\fBrelease\fR
'
Makes the non-toplevel window specified by $widget\fR into a toplevel
widget. Normally this command is called to convert a \fBframe\fR widget
into a \fBtoplevel\fR widget, but it can also be used on any
non-toplevel widget (e.g, button). The newly-converted toplevel window
is automatically mapped to the screen. To prevent it from appearing in
the screen, you must call \fBwithdraw\fR immediately after calling
\fBrelease\fR. 
'
.SH BUGS
How these methods interact with perl/Tk's class hierarchy is not yet clear.
In particular a \fBrelease\fPd window will not automatically "inherit"
the Tk::Wm methods, however a \fBcapture\fPd window still will.
It is likely that \fBCapture\fP and \fBRelease\fR will be developed which 
will "re-bless" the object into an appropriate (perhaps dynamicaly created) class.
(A \fBrelease\fPd \fBLabel\fP might make a good candidate for an \fBIcon\fP.)
.SH AUTHOR
'
Ioi Kim Lam - ioi@graphics.cis.upenn.edu
'
'
.PP

.SH "SEE ALSO"
wm

.SH KEYWORDS
TIX
