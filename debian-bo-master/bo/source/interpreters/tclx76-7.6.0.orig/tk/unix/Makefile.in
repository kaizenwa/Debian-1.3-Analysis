#
# tk/unix/Makefile.in --
#
# Makefile to build a wish with Extended Tcl (wishx).
# 
#------------------------------------------------------------------------------
# Copyright 1992-1995 Karl Lehenbauer and Mark Diekhans.
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted, provided
# that the above copyright notice appear in all copies.  Karl Lehenbauer and
# Mark Diekhans make no representations about the suitability of this
# software for any purpose.  It is provided "as is" without express or
# implied warranty.
#------------------------------------------------------------------------------
# $Id: Makefile.in,v 8.0 1996/11/21 00:25:36 markd Exp $
#------------------------------------------------------------------------------
#

#------------------------------------------------------------------------------
# Common and user-editable defines.
#
srcdir = @srcdir@
@MAKEINCLUDE@ @MAKEQUOTE@@bldbasedir@/unix/Common.mk@MAKEQUOTE@
@MAKEINCLUDE@ @MAKEQUOTE@@bldbasedir@/unix/Config.mk@MAKEQUOTE@

#------------------------------------------------------------------------------
# Local macros.
#
CC_SWITCHES = ${CPPFLAGS} ${XCFLAGS} ${CFLAGS} \
              ${TK_DEFS} \
	      -I${TKX_GENERIC_DIR} \
	      -I${TK_GENERIC_DIR} -I${TK_UNIX_DIR} \
	      -I${TCLX_GENERIC_DIR} -I${TCLX_UNIX_SRC_DIR} \
	      -I${TCLX_UNIX_BLD_DIR} \
	      -I${TCL_GENERIC_DIR} -I${TCL_UNIX_DIR} ${TK_XINCLUDES}

LD_SWITCHES = ${LDFLAGS} ${TCL_LD_FLAGS} ${XLDFLAGS} ${XCFLAGS} ${CFLAGS}

# The ordering of the libraries is important.  Some X libs on SysV include
# "random" in a BSD module.  This would conflict with the one in the TclX
# library if it was brought in.

LIBS = ${TK_LIB} ${TK_XLIBSW} @SHARED_LIBS@ ${TKX_LD_SEARCH_FLAGS}

ALL_LIBS = ${TKX_BUILD_LIB_SPEC} ${TK_LIB} ${TK_XLIBSW} \
	   ${TCLX_BUILD_LIB_SPEC} ${TCL_LIB} ${TK_LIBS} ${TCLX_LIBS} \
	   ${TCL_LIBS} ${TCL_DL_LIBS} ${XLDLIBS} ${TKX_CC_SEARCH_FLAGS}

STATIC_LIBS = ${TKX_STLIB_NAME} ${TK_LIB} ${TK_XLIBSW} \
              ${TCLX_UNIX_SRC_DIR}/${TCLX_STLIB_NAME} ${TCL_LIB} \
              ${TK_LIBS} ${TCLX_LIBS} ${TCL_LIBS} ${TCL_DL_LIBS} ${XLDLIBS} \
              ${TKX_CC_SEARCH_FLAGS}

#------------------------------------------------------------------------------
# Source and target macros.
#
GENERIC_OBJS = tkXinit.o tkXshell.o

GENERIC_SOBJS = tkXinit@SHOBJ_SUFFIX@ tkXshell@SHOBJ_SUFFIX@

OBJS = ${GENERIC_OBJS}

SOBJS = ${GENERIC_SOBJS}

RUNTIME_DIR = ${srcbasedir}/tk/runtime

LIBTCLX = ../../tcl/unix/${TCLX_STLIB_NAME}

HELP_DIR = ${srcbasedir}/tk/help

TEST_OBJS = tkTest.o tkSquare.o tkXunixTest.o

#------------------------------------------------------------------------------
# Dependencies for generating the libraries and linking the executable.
# If a link fails, purge the executable, as some systems leave invalid
# executables around.
#
all: ${TKX_STLIB_NAME} wishx RUNTIME tktest runtest \
     ${bldbasedir}/tk/tests

static: wishx.static

wishx: tkXAppInit.o SHLIB_@BUILD_SHARED@ ${LIBTCLX}
	${CC} ${LD_SWITCHES} tkXAppInit.o ${ALL_LIBS} \
	    -o $@ || (rm -f $@; exit 1)

wishx.static: tkXAppInit.o ${TKX_STLIB_NAME} ${LIBTCLX}
	${CC} ${LD_SWITCHES} tkXAppInit.o ${STATIC_LIBS} -o $@ || \
	    (rm -f $@; exit 1)

${TKX_STLIB_NAME}: ${OBJS}
	${AR} cr ${TKX_STLIB_NAME} ${OBJS}
	${RANLIB} ${TKX_STLIB_NAME}

SHLIB_YES: ${TKX_SHLIB_NAME}
	touch SHLIB_YES

${TKX_SHLIB_NAME}: ${SOBJS}
	rm -f ${TKX_SHLIB_NAME}
	${TCL_SHLIB_LD} -o ${TKX_SHLIB_NAME} ${SOBJS} ${TCL_SHLIB_LD_LIBS}

SHLIB_NO:
	touch SHLIB_NO

#------------------------------------------------------------------------------
# Dependencies for generating objects.
#
tkXinit.o: ${TKX_GENERIC_DIR}/tkXinit.c Makefile
	${CC} -c ${CC_SWITCHES} -DTKX_LIBRARY=\"${TKX_INST_RUNTIME}\" \
	  ${TKX_GENERIC_DIR}/tkXinit.c

tkXshell.o: ${TKX_GENERIC_DIR}/tkXshell.c
	${CC} -c ${CC_SWITCHES} ${TKX_GENERIC_DIR}/tkXshell.c

tkXAppInit.o: ${TKX_UNIX_SRC_DIR}/tkXAppInit.c
	${CC} -c ${CC_SWITCHES} ${TKX_UNIX_SRC_DIR}/tkXAppInit.c

tkXunixTest.o: ${TKX_UNIX_SRC_DIR}/tkXunixTest.c
	${CC} -c ${CC_SWITCHES} ${TKX_UNIX_SRC_DIR}/tkXunixTest.c

#------------------------------------------------------------------------------
# Dependencies for generating objects (position independant versions).
#
tkXinit..o: ${TKX_GENERIC_DIR}/tkXinit.c Makefile
	@OBJ_SAVE@
	${CC} -c ${CC_SHOBJ_FLAG} ${CC_SWITCHES} ${TCL_SHLIB_CFLAGS} \
	    -DTKX_LIBRARY=\"${TKX_INST_RUNTIME}\" ${TKX_GENERIC_DIR}/tkXinit.c
	@OBJ_RESTORE@

tkXshell..o: ${TKX_GENERIC_DIR}/tkXshell.c
	@OBJ_SAVE@
	${CC} -c ${CC_SHOBJ_FLAG} ${CC_SWITCHES} ${TCL_SHLIB_CFLAGS} \
	    ${TKX_GENERIC_DIR}/tkXshell.c
	@OBJ_RESTORE@

#------------------------------------------------------------------------------
# We need the "help" directory here so that the help command will work before
# installation. Normally just symlink, unless we don't have them.
#
RUNTIME: tkx.tcl tclhelp help.tmp

tkx.tcl: ${RUNTIME_DIR}/tkx.tcl
	rm -f tkx.tcl
	cp ${RUNTIME_DIR}/tkx.tcl tkx.tcl

tclhelp: ${srcdir}/../runtime/tclhelp.tcl
	rm -f tclhelp
	echo "#!${TKX_INST_BIN}/wishx"       >tclhelp
	cat ${srcdir}/../runtime/tclhelp.tcl >>tclhelp
	chmod +rx tclhelp

help.tmp: help
	touch help.tmp

help:
	if [ "@HAVE_SYML@" = "YES" ]; then \
	    rm -rf help ;\
	    ln -s ${HELP_DIR} help ;\
	else \
	    rm -rf help ;\
	    (cd ${HELP_DIR}; tar -cf - help) | tar -xf - ;\
	fi

#------------------------------------------------------------------------------
# Generate the test program.
#

tktest: ${TEST_OBJS} SHLIB_@BUILD_SHARED@  ${LIBTCLX}
	${CC} ${LD_SWITCHES} ${TEST_OBJS} ${ALL_LIBS} \
	    -o $@ || (rm -f $@; exit 1)

tkTest.o: ${TK_SRC}/generic/tkTest.c
	${CC} -c ${CC_SWITCHES} ${TK_SRC}/generic/tkTest.c

tkSquare.o: ${TK_SRC}/generic/tkSquare.c
	${CC} -c ${CC_SWITCHES} ${TK_SRC}/generic/tkSquare.c

tkXtest.o: ${TKX_GENERIC_DIR}/tkXtest.c
	${CC} -c ${CC_SWITCHES} ${TKX_GENERIC_DIR}/tkXtest.c

#------------------------------------------------------------------------------

runtest: Makefile
	@echo '#!/bin/sh'                                           >runtest
	@echo "TCL_LIBRARY=${TCL_SRC}/library"                     >>runtest
	@echo "TCLX_LIBRARY=${TCLX_TMP_RUNTIME}"                   >>runtest
	@echo "TK_LIBRARY=${TK_SRC}/library"                       >>runtest
	@echo "TKX_LIBRARY=${TKX_TMP_RUNTIME}"                     >>runtest
	@echo "TCL_PROGRAM=${TCLX_UNIX_BLD_DIR}/tcl"               >>runtest
	@echo "TESTWISH=${TKX_UNIX_BLD_DIR}/tktest"                >>runtest
	@echo "export TCL_LIBRARY TCLX_LIBRARY"                    >>runtest
	@echo "export TK_LIBRARY TKX_LIBRARY TCL_PROGRAM"          >>runtest
	@echo "LD_LIBRARY_PATH=${bldbasedir}/tk/unix:${TK_BUILD}/unix:${bldbasedir}/tcl/unix:${TCL_BUILD}/unix:${LD_LIBRARY_PATH}" >>runtest
	@echo "SHLIB_PATH=${bldbasedir}/tk/unix:${TK_BUILD}/unix:${bldbasedir}/tcl/unix:${TCL_BUILD}/unix:${SHLIB_PATH}" >>runtest
	@echo "export LD_LIBRARY_PATH SHLIB_PATH"                  >>runtest
	@echo "if [ \$$# = 0 ]"                                    >>runtest
	@echo "then"                                               >>runtest
	@echo "    exec \$$TESTWISH"                               >>runtest
	@echo "else"                                               >>runtest
	@echo "    exec \$$TESTWISH \"\$$@\""                      >>runtest
	@echo "fi"                                                 >>runtest
	chmod a+rx runtest

#------------------------------------------------------------------------------
# If test directory in not in build tree, copy it from the source tree.
#
${bldbasedir}/tk/tests:
	mkdir ${bldbasedir}/tk/tests
	cp ${srcbasedir}/tk/tests/*.test ${bldbasedir}/tk/tests

#------------------------------------------------------------------------------
# Run the UCB tests with wishx.

test: all
	echo "cd ${TK_SRC}/tests; source all; exit" | \
	    ./runtest -geometry +0+0

#------------------------------------------------------------------------------
# Build help for Tk.  These files are normally part of the distribution and
# not rebuilt by users.
#
buildhelp:
	rm -rf ${HELP_DIR} help
	mkdir ${HELP_DIR}
	${BLDMANHELP} ${TK_SRC}/doc ${srcbasedir}/unix/tools/tkmanpages \
	    ${HELP_DIR} Tk.brf

#------------------------------------------------------------------------------

install: install-exec install-runtime
	${INSTCOPY} ${TKX_UNIX_SRC_DIR}/tkXAppInit.c \
	    ${INSTALL_ROOT}${TKX_INST_RUNTIME}
	${INSTCOPY} ${HELP_DIR} ${INSTALL_ROOT}${TKX_INST_RUNTIME}/help

install-runtime:
	${INSTCOPY} tkx.tcl ${INSTALL_ROOT}${TKX_INST_RUNTIME}

install-exec:
	${INSTCOPY} wishx ${INSTALL_ROOT}${TKX_INST_BIN}
	${STRIP} ${INSTALL_ROOT}${TKX_INST_BIN}/wishx
	${INSTCOPY} ${TKX_STLIB_NAME} ${INSTALL_ROOT}${TKX_INST_LIB}
	${RANLIB} ${INSTALL_ROOT}${TKX_INST_LIB}/${TKX_STLIB_NAME}
	if test "@BUILD_SHARED@" = "YES"; then \
	    ${INSTCOPY} ${TKX_SHLIB_NAME} ${INSTALL_ROOT}${TKX_INST_LIB} ;\
	fi
	${INSTCOPY} tkxConfig.sh ${INSTALL_ROOT}${TKX_INST_LIB}
	${INSTCOPY} pkgIndex.tcl ${INSTALL_ROOT}${TKX_INST_RUNTIME}
	${INSTCOPY} tclhelp ${INSTALL_ROOT}${TKX_INST_BIN}

#------------------------------------------------------------------------------
clean:
	-rm -f tkXAppInit.o ${OBJS} ${SOBJS} ${TEST_OBJS} wishx wishx.static
	-rm -rf libtkx* tkx.tcl tclhelp help help.tmp
	-rm -f SHLIB_YES SHLIB_NO

#------------------------------------------------------------------------------
# Restore to the distributed state.

distclean: clean
	rm -f Makefile tkxConfig.sh runtest tktest pkgIndex.tcl

# Disable Sun's parallel make, it doesn't get the dependencies right.
.NO_PARALLEL:
