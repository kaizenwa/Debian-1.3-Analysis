../o/usig2.c:207: p->token_st_dim = MINN(token->st.st_dim,tok_leng+1);
../o/usig2.c:211: bcopy(token->st.st_self,p->token_bufp,p->token_st_dim);
../o/usig2.c:262:  bcopy(p->token_bufp,token->st.st_self,p->token_st_dim);
../o/usig2_aux.c:7:XS(token->st.st_fillp);
../o/pathname.d:56:		token->st.st_self[i] = s[i];
../o/pathname.d:63:	token->st.st_fillp = end;
../o/pathname.d:347:		token->st.st_self[i++] = '/';
../o/pathname.d:373:			token->st.st_self[i++] = '.';
../o/pathname.d:374:			token->st.st_self[i++] = '/';
../o/pathname.d:377:			token->st.st_self[i++] = '.';
../o/pathname.d:378:			token->st.st_self[i++] = '.';
../o/pathname.d:379:			token->st.st_self[i++] = '/';
../o/pathname.d:385:			token->st.st_self[i++]
../o/pathname.d:388:		token->st.st_self[i++] = '/';
../o/pathname.d:400:		token->st.st_self[i++] = '*';
../o/pathname.d:410:		token->st.st_self[i++] = y->st.st_self[j];
../o/pathname.d:416:		token->st.st_self[i++] = '.';
../o/pathname.d:418:		token->st.st_self[i++] = '*';
../o/pathname.d:427:	token->st.st_self[i++] = '.';
../o/pathname.d:429:		token->st.st_self[i++] = y->st.st_self[j];
../o/pathname.d:431:	token->st.st_fillp = i;
../o/read.d:29:#define	token_buffer	token->st.st_self
../o/read.d:436:		if (length >= token->st.st_dim)
../o/read.d:459:				if (length >= token->st.st_dim)
../o/read.d:484:		token->st.st_fillp = length;
../o/read.d:489:	    length == 1 && token->st.st_self[0] == '.') {
../o/read.d:495:			if (token->st.st_self[i] != '.')
../o/read.d:501:	token->st.st_fillp = length;
../o/read.d:515:			token->st.st_fillp = colon;
../o/read.d:526:		token->st.st_fillp = length - (colon + 1);
../o/read.d:539:		token->st.st_fillp = colon;
../o/read.d:549:		token->st.st_fillp = length - (colon + 2);
../o/read.d:557:		x->s.s_self = alloc_relblock(token->st.st_fillp);
../o/read.d:558:		for (i = 0;  i < token->st.st_fillp;  i++)
../o/read.d:926:		if (i >= token->st.st_dim)
../o/read.d:930:	token->st.st_fillp = i;
../o/read.d:955:	token->st.st_fillp = i;
../o/read.d:1330:		if (length >= token->st.st_dim)
../o/read.d:1355:				if (length >= token->st.st_dim)
../o/read.d:1373:	token->st.st_fillp = length;
../o/read.d:1458:	= parse_number(token_buffer, token->st.st_fillp, &i, 2);
../o/read.d:1459:	if (vs_base[0] == OBJNULL || i != token->st.st_fillp)
../o/read.d:1481:	= parse_number(token_buffer, token->st.st_fillp, &i, 8);
../o/read.d:1482:	if (vs_base[0] == OBJNULL || i != token->st.st_fillp)
../o/read.d:1504:	= parse_number(token_buffer, token->st.st_fillp, &i, 16);
../o/read.d:1505:	if (vs_base[0] == OBJNULL || i != token->st.st_fillp)
../o/read.d:1534:	= parse_number(token_buffer, token->st.st_fillp, &i, radix);
../o/read.d:1535:	if (vs_base[0] == OBJNULL || i != token->st.st_fillp)
../o/read.d:1969:		if (i >= token->st.st_dim)
../o/read.d:1971:		token->st.st_self[i++] = char_code(c);
../o/read.d:1975:	if (i > 0 && token->st.st_self[i-1] == '\r') i--;
../o/read.d:1977:	token->st.st_fillp = i;
../o/read.d:2373:	q = alloc_contblock(token->st.st_dim*2);
../o/read.d:2374:	for (i = 0;  i < token->st.st_dim;  i++)
../o/read.d:2375:		q[i] = token->st.st_self[i];
../o/read.d:2376:	token->st.st_self = q;
../o/read.d:2377:	token->st.st_dim *= 2;
../o/read.d:2380:	token->st.st_fillp = token->st.st_dim;
../o/read.d:2390:	q = alloc_contblock(token->st.st_dim*2);
../o/read.d:2391:	for (i = 0;  i < token->st.st_dim;  i++)
../o/read.d:2392:		q[i] = token->st.st_self[i];
../o/read.d:2393:	token->st.st_self = q;
../o/read.d:2394:	token->st.st_dim *= 2;
../o/read.d:2397:	token->st.st_fillp = token->st.st_dim;
../o/symbol.d:637:	token->st.st_fillp = 0;
../o/symbol.d:638:	token->st.st_self = alloc_contblock(INITIAL_TOKEN_LENGTH);
../o/symbol.d:639:	token->st.st_hasfillp = TRUE;
../o/symbol.d:640:	token->st.st_adjustable = TRUE;
