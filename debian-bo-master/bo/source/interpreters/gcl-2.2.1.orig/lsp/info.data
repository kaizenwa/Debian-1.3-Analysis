       
#(#! 
(lisp::in-package "SI")
#(:element-type lisp::string-char :fill-pointer #\" "sharp-u-reader reader needs a \" right after it" #\\ ((#\n . #\Newline) (#\t . #\Tab) (#\r . #\Return)) system::*allow-gzipped-file* "illegal file start ~a" system::*match-data* system::*case-fold-search* "[
]+Indirect:" "" "
([^
]+): ([0-9]+)" "[
]+Tag Table:" "" "Need tags if have multiple files" "\\()[]+.*|^$?" "Node: ([^]*" "[^]*)" system::*current-info-data* "index" "
\\* ([^:
]*" "[^:
]*):[ 	]+([^	
,.]+)" "Node: " "([0-9]+)" "cant find node ~s" lisp::nth (lisp::string system::begin system::end system::header system::name system::info-subfile system::file system::tags) system::*old-lib-directory* system::*lib-directory* system::*info-paths* "info/" "DIR" "dir" ("" ".info") "dir" "(dir)Top" "\\(([^(]*" "(.info)?)\\)" system::*info-data* "(not found ~s)" system::index system::*tk-connection* system::*last-info-file* :exists :return system::boolean :configure :cursor "watch" "" "" "[
][^
]*Node:[ 	]+([^
	,]+)[
	,][^
]*
" "[]" "bad arg" system::*info-window* "^\\(([^(]+)\\)([^)]*)" "" "Top" "~%Sorry, Can't find node ~a" "[
][^
]*Node:[ 	]+" "[,	
][^
]*
" "[]" "
 - [A-Za-z ]+: " "[ 
]" "
 - [A-Z]" "Cant find node  ~a?" system::node system::*default-info-files* "~%From ~a:~%" "~% ~d: ~@[~a :~]~@[(~a)~]~a." 2147483646 "~%Enter n, all, none, or multiple choices eg 1 3 : " "" :start "ALL" "~%Info from file ~a:" "hotlist" :direction :output :if-exists :append :if-does-not-exist :create "
File:	hotlist	Node: Top

* Menu: Hot list of favrite info items.

" "* (~a)~a::~%" lisp::make-array lisp::vector-push-extend lisp::open system::fread system::file-to-string system::string-match system::match-end system::match-beginning system::atoi system::get-match system::info-error lisp::position system::re-quote-string system::string-concatenate system::get-nodes system::show-info system::get-index-node system::fix-load-path system::file-search system::info-get-tags system::nodes-from-index system::tkerror system::winfo system::info-subfile system::info-get-file system::waiting system::setup-info system::get-node-index system::print-node system::end-waiting system::get-info-choices system::add-file system::info-aux system::offer-choices sloop::type-error lisp::read-from-string lisp::user-homedir-pathname system::default-info-hotlist (system::%init . #((system::mf (lisp::quote system::sharp-u-reader) 0) (lisp::set-dispatch-macro-character #\# #\u (lisp::quote system::sharp-u-reader)) (system::*make-special (lisp::quote system::*info-data*)) (lisp::or (lisp::boundp (lisp::quote system::*info-data*)) (lisp::setq system::*info-data* lisp::nil)) (system::*make-special (lisp::quote system::*current-info-data*)) (lisp::or (lisp::boundp (lisp::quote system::*current-info-data*)) (lisp::setq system::*current-info-data* lisp::nil)) (system::mf (lisp::quote system::file-to-string) 1) (system::mf (lisp::quote system::atoi) 2) (system::mf (lisp::quote system::info-get-tags) 3) (system::mf (lisp::quote system::re-quote-string) 4) (system::mf (lisp::quote system::get-match) 5) (system::mf (lisp::quote system::get-nodes) 6) (system::mf (lisp::quote system::get-index-node) 7) (system::mf (lisp::quote system::nodes-from-index) 8) (system::mf (lisp::quote system::get-node-index) 9) (system::mf (lisp::quote system::all-matches) 10) (system::mm (lisp::quote system::node) 11) (system::mf (lisp::quote system::node-offset) 12) (system::*make-special (lisp::quote system::*info-paths*)) (lisp::or (lisp::boundp (lisp::quote system::*info-paths*)) (lisp::setq system::*info-paths* (lisp::quote ("" "/usr/info/" "/usr/local/lib/info/" "/usr/local/info/" "/usr/local/gnu/info/")))) (system::*make-special (lisp::quote system::*old-lib-directory*)) (lisp::or (lisp::boundp (lisp::quote system::*old-lib-directory*)) (lisp::setq system::*old-lib-directory* lisp::nil)) (system::mf (lisp::quote system::setup-info) 13) (system::mf (lisp::quote system::get-info-choices) 14) (system::mf (lisp::quote system::add-file) 15) (system::*make-special (lisp::quote system::*info-window*)) (lisp::or (lisp::boundp (lisp::quote system::*info-window*)) (lisp::setq system::*info-window* lisp::nil)) (system::*make-special (lisp::quote system::*tk-connection*)) (lisp::or (lisp::boundp (lisp::quote system::*tk-connection*)) (lisp::setq system::*tk-connection* lisp::nil)) (system::mf (lisp::quote system::info-error) 16) (system::*make-special (lisp::quote system::*last-info-file*)) (lisp::or (lisp::boundp (lisp::quote system::*last-info-file*)) (lisp::setq system::*last-info-file* lisp::nil)) (system::mf (lisp::quote system::info-get-file) 17) (system::mf (lisp::quote system::waiting) 18) (system::mf (lisp::quote system::end-waiting) 19) (system::mf (lisp::quote system::info-subfile) 20) (system::mf (lisp::quote system::info-node-from-position) 21) (system::mf (lisp::quote system::show-info) 22) (system::*make-special (lisp::quote system::*default-info-files*)) (lisp::or (lisp::boundp (lisp::quote system::*default-info-files*)) (lisp::setq system::*default-info-files* (lisp::quote ("gcl-si.info" "gcl-tk.info" "gcl.info")))) (system::mf (lisp::quote system::info-aux) 23) (system::mf (lisp::quote system::info-search) 24) (system::mf (lisp::quote system::idescribe) 25) (system::mf (lisp::quote system::info) 26) (system::mf (lisp::quote system::default-info-hotlist) 27) (system::*make-special (lisp::quote system::*info-window*)) (lisp::or (lisp::boundp (lisp::quote system::*info-window*)) (lisp::setq system::*info-window* lisp::nil)) (system::mf (lisp::quote system::add-to-hotlist) 28) (system::mf (lisp::quote system::list-matches) 29))))
)
