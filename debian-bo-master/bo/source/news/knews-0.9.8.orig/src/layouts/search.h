"vertical { "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		0 <+inf> "
"		regexptitle "
"		0 <+inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <-inf> "
"		vertical { "
"			0 <+inf> "
"			regexpmessage "
"			0 <+inf> "
"		} "
"		regexpfield <+inf-inf*> "
"		height close <-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <+inff-inf> "
"		vertical { "
"			fromtoggle <+inf*> "
"			subjecttoggle <+inf*> "
"			headtoggle <+inf*> "
"			bodytoggle <+inf*> "
"			0 <+inf> "
"		} "
"		(2 * height close) <+inf-inf> "
"		vertical { "
"			allscope <+inf*> "
"			threadscope <+inf*> "
"			subthreadscope <+inf*> "
"			taggedscope <+inf*> "
"			0 <+inf> "
"		} "
"		height close <+inff-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <+inf-inf> "
"		unreadtoggle  "
"		height close <+inf-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <+inf-inf>"
"		search "
"		height close <+4inf-inf> "
"		stop "
"		height close <+4inf-inf> "
"		close "
"		height close <+inf-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		4 "
"		sash <+inf-inf*> "
"		4 "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		0 <+inf> "
"		xpattitle "
"		0 <+inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <-inf> "
"		vertical { "
"			0 <+inf> "
"			headermessage "
"			0 <+inf> "
"		} "
"		horizontal { "
"			width wildcardmessage - width headermessage "
"				headerfield <+inf-inf*> "
"		} "
"		height close <-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <-inf> "
"		vertical { "
"			0 <+inf> "
"			wildcardmessage "
"			0 <+inf> "
"		} "
"		wildcardfield <+inf-inf*>"
"		height close <-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"	horizontal { "
"		height close <+inf-inf> "
"		submit "
"		height close <+inf-inf> "
"		next "
"		height close <+inf-inf> "
"		first "
"		height close <+inf-inf> "
"		clear "
"		height close <+inf-inf> "
"	} "
"	(height close / 2) <+inf-inf> "
"} ",
