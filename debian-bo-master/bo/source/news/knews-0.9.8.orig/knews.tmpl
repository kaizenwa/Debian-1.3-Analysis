/*
 *  This file is included into all Imakefiles.  If your default compiler
 *  is not ISO/ANSI compliant, you have to fix it here.  Below are a few
 *  example settings for systems I have access to.
 *
 *  NOTE:  The compilers on most platforms are not conformant by default.
 *         Linux is a notable exception.
 *
 *  Also note that if you change anything here you should start the build
 *  process over from scratch with
 *
 *  xmkmf ; make Makefiles ; make clean ; make all
 *
 *  to make sure the changes take effect.
 */


/*  Below are some compiler settings for different systems.
 *
 *  CC           is the name of the compiler.
 *  CCOPTIONS    are the flags needed to make it compile C (!).
 *  CDEBUGFLAGS  optimization/debug flags.
 */

/* gcc on decent systems */
#if 0
CC		= gcc
CCOPTIONS	= -ansi -pedantic -Wall
CDEBUGFLAGS	= -O2
#endif

/* gcc on SunOS 4.1.x (and maybe other non-decent systems) */
#if 0
CC		= gcc
CCOPTIONS	= -ansi -pedantic -Wall -D__USE_FIXED_PROTOTYPES__
CDEBUGFLAGS	= -O2
#endif

/* Sun's acc compiler */
#if 0
CC		= acc
CCOPTIONS	= -Xc
CDEBUGFLAGS	= -O2
#endif

/* Dec's cc complier */
#if 0
CC		= cc
CCOPTIONS	= -std1
CDEBUGFLAGS	= -O2
#endif

/* I think some SysV-ish systems want this */
#if 0
CC		= cc
CCOPTIONS	= -Aa
CDEBUGFLAGS	= -O
#endif

/* Debugflags... */
#if 0
CDEBUGFLAGS	= -O -g
#endif




/*
 *  This is where you specify libraries and such for inline images.
 *  These won't actually be used unless HAVE_JPEG and/or HAVE_PNG
 *  are defined to 1 in configure.h.
 *
 *  Note that libgz may be libz on some systems, so -lgz may need to
 *  be changed to -lz.
 */

JPEG_LIB	= -ljpeg
PNG_LIB		= -lpng -lgz -lm


/*
 *  If you need to add include paths for e.g. libjpeg, libpng or libzlib
 *  include files, do it here.
 */
KNEWS_INCLUDES	=




/*
 *  Some private hacks...
 */
#if 0
KNEWS_INCLUDES	= -I/afs/nada.kth.se/home/su95/su95-kjo/include
PNG_LIB		= -L/afs/nada.kth.se/home/su95/su95-kjo/lib -lpng -lz -lm
#endif
