# Makefile for slrn                               -*- sh -*-
# OS/2 specific version; assumes you're using dmake and EMX 0.9b or later.
#---------------------------------------------------------------------------
# This file is divided into five configurable sections.  The last section
# is optional: Section 5 deals with setting up slrn to read the server name 
# from a file. This is probably unnecessary on OS/2.

#-----------------------------------------------------------------------------
# 1. Choose a C compiler.  It must understand prototypes.
#-----------------------------------------------------------------------------
CC = gcc -O2 -Zcrtdll -Zmt -DOS2 -D__os2__#
#CC = gcc -g -Zcrtdll -Zmt -DOS2 -D__os2__#

#-----------------------------------------------------------------------------
# 2. On a few systems, additional libraries are required.
#-----------------------------------------------------------------------------
MISCLIBS = -lsocket -ltermcap -lvideo# OS/2

#-----------------------------------------------------------------------------
# 3. Directory where the slang library, slanglib.a, is located.
#    BUILD SLANG FIRST!!!!  If you do not have it, get it from the same place
#    you picked up slrn.  The current home is space.mit.edu:/pub/davis/slang.
#-----------------------------------------------------------------------------
SDIR = ../../slang/src#                  Location of slang.h
SLIBDIR = $(SDIR)/emxobjs#               Location of libslang.a


#-----------------------------------------------------------------------------
# 4. Location where object files are placed.
#-----------------------------------------------------------------------------
OBJDIR = objs#

#-----------------------------------------------------------------------------
# 5. If you want to read the server from a file, uncomment the following
#    lines and edit it as appropriate.  See INSTALL for more information.
#    It is also possible to provide defaults for other variables such as the
#    HOSTNAME, etc...  by editing the slrnfeat.h file.  Again, read INSTALL.
#-----------------------------------------------------------------------------
#NNTPSERVERFILE = -DNNTPSERVER_FILE=\"/usr/local/lib/news/nntp_server\"
#SLRNLIBDIR = -DSLRN_LIB_DIR=\"/usr/local/lib/news\"
#SLRNLIBDIR = -DSLRN_LIB_DIR=\"$(HOME)/lib/slrn\"


#----------------------------------------------------------------------------
# Nothing below here should require changing.
#----------------------------------------------------------------------------

OBJS = $(OBJDIR)/art.o \
       $(OBJDIR)/chmap.o \
       $(OBJDIR)/editscore.o \
       $(OBJDIR)/group.o \
       $(OBJDIR)/hash.o \
       $(OBJDIR)/help.o \
       $(OBJDIR)/interp.o \
       $(OBJDIR)/menu.o \
       $(OBJDIR)/mime.o \
       $(OBJDIR)/misc.o \
       $(OBJDIR)/post.o \
       $(OBJDIR)/score.o \
       $(OBJDIR)/server.o \
       $(OBJDIR)/slrn.o \
       $(OBJDIR)/sortdate.o \
       $(OBJDIR)/startup.o \
       $(OBJDIR)/ttymsg.o \
       $(OBJDIR)/util.o \
       $(OBJDIR)/uudecode.o \
       $(OBJDIR)/xover.o

OBJSpull = \
	$(OBJDIR)/util.o \
	$(OBJDIR)/ttymsg.o \
	$(OBJDIR)/slrnpull.o \
	$(OBJDIR)/sltcp.o \
	$(OBJDIR)/nntplib.o

CFLAGS = -I. -I$(SDIR) $(SLRNLIBDIR)

slrn.exe: $(OBJDIR) config.h slangversion $(OBJS)
	$(CC) $(OBJS) -o slrn.exe -L$(SLIBDIR) -lslang $(MISCLIBS)

slrnpull.exe: $(OBJDIR) config.h slangversion $(OBJSpull)
	$(CC) $(OBJSpull) -o slrnpull.exe -L$(SLIBDIR) -lslang -lsocket

$(OBJDIR):
	@mkdir $(OBJDIR)

config.h: slrnconf.h
	cp slrnconf.h config.h

$(OBJDIR)/server.o: server.c sltcp.c nntp.c nntplib.c spool.c
	$(CC) -c $(CFLAGS) -o $(OBJDIR)/server.o server.c

$(OBJDIR)/%.o: %.c
	$(CC) -c $(CFLAGS) -o $(OBJDIR)/$*.o $*.c

slangversion: $(OBJDIR)/chkslang.exe
	./$(OBJDIR)/chkslang.exe slrn 9935 9936

$(OBJDIR)/chkslang.exe: $(OBJDIR)/chkslang.o
	$(CC) $(OBJDIR)/chkslang.o -o $(OBJDIR)/chkslang.exe

$(OBJDIR)/chkslang.o: chkslang.c $(SDIR)/slang.h
	$(CC) -c -I$(SDIR) chkslang.c -o $(OBJDIR)/chkslang.o

uudecode.exe: uudecode.c
	$(CC) $(CFLAGS) -DSTANDALONE -o uudecode.exe uudecode.c
	touch uudecode.c

clean:
	rm -rf *.o *~ $(OBJDIR) slrn.exe uudecode.exe *.log \
	core out out.* typescript files.pck* config.h

