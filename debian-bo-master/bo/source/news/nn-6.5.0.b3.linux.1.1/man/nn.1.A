.\" BEGINPART A
.TH NN 1 "Release 6.5"
.\" (c) Copyright 1988, 1990, Kim F. Storm.  All rights reserved.
.\"
.\" NOTICE:  Some versions of the -man package may have problems with
.\" =======  the @ characters in this manual.  Fix your man package by
.\"          substituting ALL occurrences of the @ character in
.\"          tmac.an (or perhaps tmac.an.new) by a BEL (^G) character.
.\"
.UC 4
.SH NAME
nn \- efficient net news interface (No News is good news)
.SH SYNOPSIS
.B nn
[ \fIoptions\fP ] [ \fInewsgroup\fP  |  +\fIfolder\fP  |  \fIfile\fP ]...
.br
.B nn
-g [ -r ]
.br
.B nn
-a0 [ \fInewsgroup\fP ]...
.SH DESCRIPTION
Net news is a world-wide information exchange service covering
numerous topics in science and every day life.  Topics are organized
in \fInews\ groups\fP, and these groups are open for everybody to post
\fIarticles\fP on a subject related to the topic of the group.
.LP
\fINn\fP is a `point-and-shoot' net news interface program, or a
\fInews reader\fP for short (not to be confused with the \fIhuman\fP
news reader).  When you use \fInn\fP, you can decide which of the many
news groups you are interested in, and you can unsubscribe to those
which don't interest you.  \fInn\fP will let you read the new (and
old) articles in each of the groups you subscribe to using a menu
based article selection prior to reading the articles in the news
group.
.PP
When a news group is entered, \fInn\fP will locate all the presently
unread articles in the group, and extract their sender, subject, and
other relevant information.  This information is then rearranged,
sorted, and marked in various ways to give it a pleasant format when
it is presented on the screen.
.PP
This will be done very quickly, because \fInn\fP uses its own database
to maintain all the necessary information on a directly accessible
form (this database is built and maintained by the \fInnmaster\fP(8)
program).
.PP
When the article menu appears on the screen, \fInn\fP will be in a
mode called \fBselection mode\fP.  In this mode, the articles which
seems to be interesting can be selected by single keystrokes (using
the keys a-z and 0-9).  When all the interesting articles among the
ones presently displayed have been selected, the space bar is hit,
which causes \fInn\fP to enter reading mode.
.PP
In \fBreading mode\fP, each of the selected articles will be presented.
You use the \fBspace bar\fP to go on to the next page of
the current article, or to the next article.  Of course, there are
all sorts of commands to scroll text up and down, skip to the next
article, responding to an article, decrypt an article, and so on.
.PP
When all the selected articles in the current group have been read,
the last hit on the space bar will cause \fInn\fP will continue to the
next group with unread articles, and enter selection mode on that group.
.SH FREQUENTLY USED OPTIONS
\fInn\fP accepts a lot of command line options, but here only the
frequently used options are described.  Options can also be set
permanently by including appropriate \fIvariable\fP settings in the
\fIinit\fP file described later.  All options are described in the
section on Command Line Options towards the end of this manual.
.LP
The frequently used command line options are:
.TP
\-\fBa0\fP
Catch up on unread articles and groups.  See the section "Catch up"
below.
.TP
\-\fBg\fP
Prompt for the name of a news group or folder to be entered (with
completion).
.TP
\-\fBr\fP
Used with \-\fBg\fP to repeatedly prompt for groups to enter.
.TP
\-\fBl\fP\fIN\fP
Print only the first \fIN\fP lines of the first page of each article
before prompting to continue.  This is useful on slow terminals and
modem lines to be able to see the first few lines of longer articles.
.TP
\-\fBs\fP\fIWORD\fP
Collect only articles which contain the string
.I WORD
in their subject (case is ignored).  This is normally combined with
the -x and -m options to find all articles on a specific subject.
.TP
\-\fBs/\fP\fIregexp\fP
Collect only articles whose subject matches the regular expression
.IR regexp .
This is normally combined with the -x and -m options to find all
articles on a specific subject.
.TP
\-\fBn\fP\fIWORD\fP or \-\fBn/\fP\fIregexp\fP
Same as \-\fBs\fP except that it matches on the sender's name
instead of the article's subject.
This is normally combined with the -x and -m options to find all
articles from a specific author.  It cannot be mixed with the
\-\fBs\fP option!
.TP
\-\fBi\fP
Normally searches with \-\fBn\fP and \-\fBs\fP are case independent.
Using this option, the case becomes significant.
.TP
\-\fBm\fP
Merge all articles into one `meta group' instead of showing
them one group at a time.  This is normally used together with the -x
and -s options to get all the articles on a specific subject presented
on a single menu (when you don't care about which group they belong
to).  When -m is used, no articles will be marked as read.
.TP
\-\fBx\fP[\fIN\fP]
Present (or scan) all (or the last \fIN\fP) unread as well as
read articles.  When this option is used, \fInn\fP will
.I never
mark unread articles as read (i.e. .newsrc is not updated).
.TP
\-\fBX\fP
Read/scan unsubscribed groups also.  Most useful when looking for
a specific subject in \fBall\fP groups, e.g.
.nf
	nn -mxX -sSubject all
.fi
.TP
\fInews.group\fP  or  \fIfile\fP  or  \fI+folder\fP
If none of these arguments are given, all subscribed news groups will
be used.  Otherwise, only the specified news groups and/or files will
be collected and presented.  In specifying a news groups, the
following `meta notation' can be used:
.br
If the news group ends with a
\&`.' (or `.all'), all subgroups of the news group will be collected,
e.g.
.nf
	comp.sources.
.fi
If a news group starts with a `.' (or `all.'), all the matching
subgroups will be collected, e.g.
.nf
	\&.sources.unix
.fi
The argument `all' identifies all (subscribed) news groups.
.SH COMMAND INPUT
In general, \fInn\fP commands consist of one or two key-strokes, and \fInn\fP
reacts instantly to the commands you give it; you don't have to enter
.B return
after each command (except where explicitly stated).
.LP
Some commands have more serious effects than others, and therefore
\fInn\fP
requests you to confirm the command.  You confirm by hitting the
the
.B y
key, and reject by hitting the
.B n
key.  Some `trivial' requests may also be confirmed simply by hitting
.B space.
For example, to confirm the creation of a save file, just hit
.B space,
but if one or more directories also have to be created, you must enter
.B y.
.LP
Many commands will require that you enter a line of text, e.g. a file
name or a shell command.  If you enter
.B space
as the first character on a line, the line will be
filled with a default value (if one is defined).  For example, the
default value for a file name is the last file name you have entered,
and the default shell command is your previous shell command.  You can
edit this default value as well as a directly typed text, using the
following editing commands.  The \fBerase\fP,
\fBkill\fP, and \fBinterrupt\fP keys are the keys
defined by the current tty settings.  On systems without job control,
the
.B suspend
key will be
.B control-Z
while it is the current suspend character on system with job control.
.TP
.B erase
.br
Delete the last character on the line.
.TP
\fBdelete-word\fP   (normally ^W)
.br
Delete the last word or component of the input.
.TP
.B kill
.br
Delete all characters on the line.
.TP
\fBinterrupt\fP  and  \fBcontrol-G\fP
.br
Cancel the command which needs the input.
.TP
\fBsuspend\fP
Suspend \fInn\fP if supported by the system.  Otherwise, spawn an
interactive shell.
.TP
.B return
.br
Terminate the line, and continue with the command.
.LP
\fBRelated variables\fP:
erase-key, flow-control, flush-typeahead, help-key, kill-key, word-key.
.SH BASIC COMMANDS
There are numerous commands in \fInn\fP, and most of them can be invoked
by a single keystroke.  The descriptions in this manual are based on
the standard bindings of the commands to the keys, but it is possible
to customize these using the
.B map
command described later.  For each of the keystroke commands described
in this manual, the corresponding command name will also be shown in
curly braces, e.g. {\fBcommand\fP}.
.LP
The following commands work in both selection
mode and in reading mode.  The notation ^X means `control X':
.TP
\&\fB?\fP	{\fBhelp\fP}
Help.  Gives a one page overview of the commands available in the
current mode.
.TP
\&\fB^L\fP	{\fBredraw\fP}
Redraw screen.
.TP
\&\fB^R\fP	{\fBredraw\fP}
Redraw screen (Same as ^L).
.TP
\&\fB^P\fP	{\fBmessage\fP}
Repeat the last message shown on the message line.  The command can be
repeated to successively show previous messages (the maximum number of
saved messages is controlled via the \fBmessage-history\fP variable.)
.TP
\&\fB!\fP	{\fBshell\fP}
Shell escape.  The user is prompted for a command which is executed
by your favorite shell (see the
.B shell
variable).  Shell escapes are described in detail later on.
.TP
\&\fBQ\fP	{\fBquit\fP}
Quit \fInn\fP.  When you use this command, you neither lose unread
articles in the
current group nor the selections you might have made (unless the
articles are expired in the meantime of course).
.TP
\&\fBV\fP	{\fBversion\fP}
Print release and version information.
.TP
\fB:\fP\fIcommand\fP  {\fBcommand\fP}
Execute the \fIcommand\fP by name.  This form can be used to invoke
any of \fInn\fP's commands, also those which cannot be bound to a key
(such as \fB:coredump\fP), or those which are not bound to a key by
default (such as \fBpost\fP and \fBunshar\fP).
.LP
\fBRelated and basic variables\fP:
backup, backup-suffix, confirm-auto-quit, expert, mail,
message-history,
new-group-action, newsrc, quick-count.
.SH SELECTION MODE
In selection mode, the screen is divided into four parts: the header
line showing the name of the news group and the number of articles,
the menu lines which show the collected articles - one article
per line, the prompt line where you enter commands, and the message
line where \fInn\fP prints various messages to you.
.LP
Each menu line begins with an \fIarticle id\fP which is a unique
letter (or digit if your screen can show more than 26 menu lines).  To
select an articles for reading, you simply enter the corresponding
\fIid\fP, and the menu line will be high-lighted to indicate that the
article is selected.  When you have selected all the interesting
articles on the present menu, you simply hit \fBspace\fP.
.LP
If there are more articles collected for the current group than could
be presented on one screenful of text, you will
be presented with the next portion of articles to select from.  When
you have had the opportunity to select among all the articles in the
group, hitting \fBspace\fP will enter reading mode.
.LP
If no articles have been selected in the current group, hitting
\fBspace\fP will enter selection mode on the next news group, or exit
\fInn\fP if the current group was the last news group with unread
articles. It is thus possible to go through ALL unread articles
(without reading any of them) just by hitting \fBspace\fP a few times.
.LP
The articles will be presented on the menu using one of the following
layouts:
.sp 0.5v
.TP
0:
\fIx Name.........  Subject.............. +123\fP
.TP
1:
\fIx Name.........   123  Subject..............\fP
.TP
2:
\fIx 123  Subject...................................\fP
.TP
3:
\fIx Subject...........................................\fP
.TP
4:
\fIx    Subject........................................\fP
.LP
Here \fIx\fP is the letter or digit that must be entered to select the
article, \fIName\fP is the real name of the sender (or the mail
address if the real name cannot be found), \fISubject\fP is the
contents of the "Subject:" line in the article, and \fI123\fP is the number
of lines in the article.
.LP
Layout 0 and 1 are just two ways to present the same information,
while layout 2 and 3 are intended for groups whose articles have very
long subject lines, e.g. comp.sources.
.PP
Layout 4 is a hybrid between layout 1 and 3.  It will normally use
layout 1, but it will use layout 3 (with a little indentation) for
menu lines where the subject is longer than the space available with
layout 1.
.LP
Layout 1 is the default layout, and an alternative menu line layout is
selected using the \-\fBL\fP option or by setting the
.B layout
variable.  Once \fInn\fP is started the layout can be changed at any
time using the \fB"\fP key {\fBlayout\fP}.
.LP
The \fIName\fP is limited to 16 characters, and to make maximum use of
this space, \fInn\fP will perform a series of simplifications on the
name, e.g. changing first names into initials, removing domain names
from mail addresses (if the real name is not found) etc.  It does a
good job, but some people on the net put weird things into the From:
field (or actually into their password file) which result in \fInn\fP
producing quite cryptic, and sometimes funny "names".
.LP
One a usual 80 column terminal, the \fISubject\fP is limited to about
60 characters (75 in layout 3) and is thus only an approximation to
the actual subject line which may be much longer.  To get as much out
of this space, \fIRe:\fP prefixes (in various forms) are recognized
and replaced by a single \&`>' character (see the \fBre-layout\fP
variable).
.PP
Since articles are sorted according to the subject, two or more
adjacent articles may share the same subject (ignoring any `>'s).  In
this case, only the first article will show the subject of the
article; the rest will only show the `>' character in the subject
field (or a `-' if there is no `>' at the beginning of the line).  A
typical menu will thus only show each subject once, saving a lot of
time in scanning the news articles.
.LP
If \fIconsolidated menus\fP (see section below) are enabled, adjacent
articles sharing the same subject will be shown with a \fIsingle\fP
line on the menu corresponding to the \fIfirst\fP of the articles.
The number of articles with the same subject will be shown as a
braketed number in front of the subject, e.g. with layout 1:
.nf
	\fIx Name.........   123  [4] Subject..............\fP
.fi
For further information see the section on consolidated menus below.
.LP
\fBRelated variables\fP:
collapse-subject, columns, confirm-entry, confirm-entry-limit,
entry-report-limit, fsort, kill, layout, limit, lines, long-menu,
re-layout, repeat, slow-mode, sort, sort-mode, split,
subject-match-limit, subject-match-offset, subject-match-parts,
subject-match-minimum.
.SH ARTICLE ATTRIBUTES
While \fInn\fP is running and between invocations, \fInn\fP associates
an \fIattribute\fP with each
article on your system.  These attributes are used to differentiate
between read and unread articles, selected articles, articles marked
for later treatment, etc.  Depending on how \fInn\fP is configured,
these attributes can be saved between invocations of \fInn\fP, or some
of them may only be used while \fInn\fP is running.
.LP
The attribute is shown on the
menu using either a single character following the \fIarticle id\fP
or by high-lighting the menu line, depending on the attribute and the
capabilities of the terminal.  You can also change the attributes to
your own taste (see the \fBattributes\fP variable).
.LP
The attribute of an article can be changed explicitly using the
selection mode commands described below, or it will change
automatically for example when you have read or saved a selected
article.
If a command may change any article attributes, it will be noted in
the description of the command.  The following descriptions of the
attributes will only mention the most important commands that may set
(or preserve) the attribute.
.LP
The following attributes may be associated with an article:
.TP
.B read
Menu attribute "." - indicates that the article has been read or saved.
When you leave the group, these articles will be marked permanently
read, and are not presented the next time you enter the group.
.TP
.B seen
Menu attribute "," - indicates that the article is unread, but that it
has been \fIpresented\fP on a menu.  Depending on how \fInn\fP is
configured, these articles will automatically be marked \fIread\fP
when you leave the group, they may remain \fIseen\fP, or they may just
be \fIunread\fP the next time you enter the group (see the
\fBauto-junk-seen\fP, \fBconfirm-junk-seen\fP, and
\fBretain-seen-status\fP variables).
.sp 0.5v
Only the commands \fBcontinue\fP (\fBspace\fP) and \fBread-skip\fP
(\fBX\fP) will mark \fIunread\fP articles on the current (or all) menu
pages as \fIseen\fP when they are used.  Other commands that scroll
through the menu pages or enter reading mode will let unread articles
remain unread.
.TP
.B unread
Menu attribute " " - indicates an unread article.  These articles were
unread when you entered the group, and they may remain unread when you
leave the group, unless they have been marked \fIseen\fP by the command
that you used to leave the group or enter reading mode.
.TP
.B selected
Menu line high-lighted (or menu attribute "*") - indicates that you have
selected the article.  If you leave the group, the selected articles
will remain selected the next time you enter the group.  When you have
read a selected article, the attribute will automatically change to
\fIread\fP.
.TP
.B auto-selected
These articles have the same appearance as \fIselected\fP articles on
the menu, and the only difference is that these articles have been
selected automatically via the auto-selection facility rather than
manually by you.  Very few commands differentiate between these
attributes and if they do, it is explicitly stated in this manual.
The main difference is that these articles are only marked as
\fIunread\fP when you leave the group (supposing they will also be
auto-selected the next the group is entered).  This simplifies the
house-keeping between invocations of \fInn\fP.
.TP
.B leave
Menu attribute "+" - indicates that the article is marked for later
treatment by the \fBleave-article\fP (\fBl\fP) command.  These
articles may be selected (on demand) when you have read all selected
articles in a group.  However, if you do not select them then
immediately, they are stored as the \fBleave-next\fP attribute
described below.
.TP
.B leave-next
Menu attribute "=" - indicates that the article is marked for later
treatment by the \fBleave-next\fP (\fBL\fP) command.  This is a
permanent attribute, which will remain on the article until you either
read the article, change the attribute, or it is expired.  So
assinging this attribute to an article will effectively keep it unread
until \fIyou\fP do something.  If the variable \fBselect-leave-next\fP
is set, \fInn\fP will ask whether these articles should be
\fBselected\fP on entry to a group (but naturally, doing so will
change the \fBleave-next\fP attribute to \fBselect\fP).
.TP
.B cancelled
Menu attribute "#" - indicates that the article has been cancelled.
This is mainly useful when tidying a folder; it is set by the
\fBcancel\fP (\fBC\fP) command, and can be cleared by any command that
change attributes, e.g. you can select and deselect the article.
.TP
.B killed
Menu attribute "!" - indicates that the article has been killed (e.g.
by the \fBK\fP {\fBkill-select\fP} command).  Killed articles are
immediately removed from the menu, so you should not normally see
articles with this attribute.  If you do, report it as a bug!
.LP
The attributes are saved in two files: .newsrc (\fIread\fP articles)
and .nn/select (other attributes).  Plain \fIunread\fP articles are
saved by not occurring in either of these files.  Both files are
described in more detail later on.
.LP
\fBRelated variables\fP:
attributes, auto-junk-seen, confirm-junk-seen, retain-seen-status,
select-leave-next.
.SH SELECTION MODE COMMANDS
The primary purpose of the selection mode is of course to select the
articles to be read, but numerous other commands may also be
performed in this mode: saving of articles in files, replying and
following up on articles, mailing/forwarding articles, shell escapes
etc.
.PP
As described above, the \fIselected\fP articles are marked either by
showing the corresponding menu line in standout mode (reverse video),
or if the terminal does not have this capability by placing an
asterisk (*) after the selection letter or digit.
.LP
Most commands which are used to select articles will work as toggle
commands.  If the article is not already selected, the
\fIselected\fPattribute on the article(s), independent on the previous
attribute.  Otherwise, the article(s) will be \fIdeselected\fP and
marked \fIunread\fP.  Consequently, any article can be marked
\fIunread\fP simply be selecting and deselecting it.
.LP
During selection, the cursor will normally be placed on the article
following the last article whose attribute was changed (initially the
first article).  The article pointed out by the cursor is called the
\fIcurrent article\fP, and the following commands work relative to the
current article and cursor position.
.TP
\&\fBabc...z 01..9\fP  {\fIarticle N\fP}
The article with the given identification letter or digit is
selected or deselected.  The following article becomes the current
article.  If the variable \fBauto-select-subject\fP is set, all
articles with the same subject as the given article are selected.
.TP
\&\fB.\fP	{\fBselect\fP}
Select or deselect the current article and move the cursor to the next
article.
.TP
\&\fB,\fP	{\fBline+1\fP}
Move the cursor to the next article.  You can use the \fIdown arrow\fP
as well.
.TP
\&\fB/\fP	{\fBline-1\fP}
Move cursor to previous article.  You can use the \fIup arrow\fP
as well.
.TP
\&\fB*\fP	{\fBselect-subject\fP}
Select or deselect all articles with same subject as current
article.  This will work across several menu pages if necessary.
.TP
\&\fB-\fP\fIx\fP	{\fBselect-range\fP}
Select or deselect the range of articles between the current article
and the article specified by \fIx\fP.  For example you can select all
articles from \fIe\fP to \fIk\fP by simply typing \fBe-k\fP.
.LP
The following commands may change the attributes on all articles on
the current menu page, or on all articles on all menu pages.
.TP
\&\fB@\fP	{\fBselect-invert\fP}
.br
Reverse selections.  All selected articles on the current page are
deselected, and vice-versa.  (Use the \fBfind\fP command to select all
articles.)
.TP
\&\fB~\fP	{\fBunselect-all\fP}
Deselect all \fIauto-selected\fP articles in the group (this works
across all menu pages).  If the command is executed twice, the
\fIselected\fP articles will also be deselected.
.TP
\&\fB+\fP	{\fBselect-auto\fP}
Perform auto-selections in the group (see the section on "auto
kill/select" below).
.TP
\&\fB=\fP	{\fBfind\fP}
Prompts for a regular expression, and selects all articles on the menu
(all pages) which matches the regular expression.  Depending on the
variable \fBselect-on-sender\fP matching is performed against the
subject (default) or the sender of the articles.  An empty
answer (\fB= return\fP) will reuse the previous expression.
Example:  The command \fB= . return\fP will select \fIall\fP articles
in the group.
.TP
\&\fBJ\fP	{\fBjunk-articles\fP}
This is a very versatile command which can be used to perform all
sorts of attribute changes, either on individual articles, all
articles on the current menu page, all articles with a specific
attribute, or all available articles.  To access all the functions of
this command, the \fBJ\fP key may have to be hit up to four times,
to loop through different one-line menus.  The full functionality of
the \fBjunk-articles\fP command is described in a separate section
below.
.TP
\&\fBL\fP	{\fBleave-next\fP}
This is a specialized version of the generic \fBJ\fP
{\fBjunk-articles\fP} command to set the \fIleave-next\fP attribute on
a subset of the articles on the menu.  It is also described further
below.
.LP
The following commands move between the pages belonging to the same
news group when there are more articles than will fit on a single
page.  These commands will not change any article attributes.
.TP
\&\fB>\fP	{\fBpage+1\fP}
Goto next menu page.
.TP
\&\fB<\fP	{\fBpage-1\fP}
Goto previous menu page, or to last menu page if on first menu page.
.TP
\&\fB$\fP	{\fBpage=$\fP}
Goto last menu page.
.TP
\&\fB^\fP	{\fBpage=1\fP}
Goto first menu page.
.LP
The following commands are used to enter reading mode for the selected
articles, and to move between news groups (in selection mode).  They
may change article attributes if noted below.
.TP
\&\fBspace\fP	{\fBcontinue\fP}
Continue to next menu page, or if on last menu page, read the selected
articles.  If no articles have been selected, continue to the next news
group.  The \fIunread\fP articles on the current menu page will
automatically be marked \fIseen\fP.
.TP
\&\fBreturn\fP	{\fBcontinue-no-mark\fP}
Identical to the \fBcontinue\fP command, except that the \fIunread\fP
articles on the current menu page will remain \fIunread\fP.
(The
.B newline
key has the same effect).
.TP
\&\fBZ\fP	{\fBread-return\fP}
Enter reading mode
.I immediately
with the currently selected articles.  When all
articles have been read, return to selection mode in the
.I current
group.  It will mark \fIselected\fP articles \fIread\fP as they are
read, but \fIunread\fP articles are not normally changed (can be
controlled with the variable \fBmarked-by-read-return\fP.)
.TP
\&\fBX\fP	{\fBread-skip\fP}
Mark all \fIunmarked\fP articles \fIseen\fP on all menu pages (or the
pages defined by the \fBmarked-by-read-skip\fP variable), and enter
reading mode \fIimmediately\fP with the currently selected articles.
As the selected articles are read, they are marked \fIread\fP.  When
all selected articles have been read, \fInn\fP will enter selection
mode in the \fInext\fP news group.  \fBWhen no articles are selected,
it goes directly to the next group\fP.  This can be used to skip all
the articles in a large news group without having to go through all
the menu pages.
.LP
If you don't want to read the current group now, but want to keep it
for later, you can use the following commands which will only mark
\fIseen\fP and \fIread\fP articles as read.  Currently selected
articles will still be selected the next time you enter the group.
None of these commands will change any attributes themselves (by default).
.TP
\&\fBN\fP	{\fBnext-group\fP}
Go forward to the next group in the presentation sequence.  If the
variable \fBmarked-by-next-group\fP is set articles on the menu can
optionally be marked \fIseen\fP
.TP
\&\fBP\fP	{\fBprevious\fP}
Go back to the previous group.  This command will enter selection mode
on the last active group (two P commands in sequence will bring you to
the current group).  If there are still some \fIunread\fP articles in
the group, only those articles will be shown.  Otherwise, all the
articles which were unread when \fInn\fP was invoked will be shown
marked with the \fIread\fP attribute (which can be changed as usual).
.LP
As described in the "Article Attributes" section, the \fIread\fP and
\fIseen\fP articles will normally be marked read when you leave the
group, and these articles are not shown the next time you enter the
group.
.LP
In all releases prior to release 6.4, it was impossible to have
individual articles in a group marked \fIunread\fP when you left a
group, and the default behaviour of release 6.4 onwards will closely
match the traditional behaviour.  This means that the \fIseen\fP and
\fIread\fP articles are treated alike for most practical purposes
with the default variable settings.
.LP
If you don't like \fInn\fP to silently mark the \fIseen\fP articles
read, you can \fIset\fP the variable \fBconfirm-junk-seen\fP to get
\fInn\fP to prompt you for confirmation before doing this, or you can
\fIunset\fP the variable \fBauto-junk-seen\fP to simply keep the seen
articles for the next time you enter the group.  You then have to use
the \fBJ\fP {\fBjunk-articles\fP} to mark articles read.
.LP
Using \fBreturn\fP {\fBcontinue-no-mark\fP} will also allow you to keep
articles \fIunread\fP rather than marking them \fIseen\fP when
scrolling through the menu pages and entering reading mode.  If this
is your preferred reading style, you can remap \fBspace\fP to this
command.
.LP
\fBRelated variables\fP:
auto-junk-seen, auto-preview-mode, auto-select-subject, case-fold-search,
confirm-auto-quit, confirm-entry, confirm-junk-seen,
marked-by-next-group, marked-by-read-return, marked-by-read-skip,
retain-seen-status, select-on-sender.
.SH CONSOLIDATED MENUS
Normally, \fInn\fP will use one menu line for each article, so if
there are many articles with identical subjects, each menu page will
only contain a few different subjects.  To have each subject occur
only once on the menu, \fInn\fP can operate with consolidated menus by
setting the variable \fBconsolidated-menu\fP.
.LP
When consolidated menus are used, \fInn\fP operates with two kinds of
subjects: open and closed.
.LP
An \fIopen subject\fP is a subject which is shown in the traditional way
with one menu line for each article with the given subject.  In other
words, when consolidated menus are not used, all subjects are open (by
default).
.LP
A \fIclosed subject\fP is a multi-article subject which is presented
by a single menu line.  This line will be the normal menu line for the
first (oldest) article with the subject, but with the subject field
annotated with a bracketed number showing the number of articles with
that subject, e.g.
.sp 0.5v
.nf
	a Kim F. Storm     12  [4] Future plans for nn
	b.Kim F. Storm     43  [3] More plans for nn
.fi
.sp 0.5v
In this example, there are four unread articles with subject `a' of
which the first is posted by me and has 12 lines.  The rest of the
articles are hidden, and will only be shown on request.  The `.'
marker on subject `b' shows that all three articles within that
subject have been read (or seen).
.LP
To select (or deselect) ALL the articles within a closed subject,
simply select the article shown on the menu; this will automatically
select (or deselect) the rest (see auto-select-closed).  When all the
unread articles within a closed subject are selected, the menu line
will be high-lighted.
.LP
If you want to view the individual articles in a subject (maybe to
select individual articles), you can open the subject with the
commands:
.TP
\fB(x\fP
Open subject \fIx\fP on menu.
.TP
\fB((\fP
Open current subject.
.LP
When you have completed viewing the opened subject, you can close it
again using the commands:
.TP
\fB)x\fP
Close subject \fIx\fP on menu (\fIx\fP is any article with the subject).
.TP
\fB))\fP
Close current subject.
.LP
In the basic layout of the menu line for a closed subject as shown
above, ALL articles in the closed subject are supposed to be either:
.TP
\fIunread\fP
The menu line is \fInot\fP high-lighted.
.TP
\fIselected\fP
Menu line is fully high-lighted (if all UNREAD are selected).
.TP
\fBread/seen\fP
There is a `.' (read attribute) following the article id.
.LP
If neither of these cases apply, i.e. there is a mixture of unread,
selected, and seen/read articles, the bracketed number will have one
of the following formats:
.TP
[U:T]
There are U unread articles of T total (U<T).
.TP
[S/T]
There are S selected articles of T total (S<U=T).
.TP
[S/U:T]
There are S selected of U unread of T total (S<U<T).
.LP
If there are any selected articles (S>0), the information between the
brackets will be high-lighted (to show that something is selected, but
not all the unread articles).
.LP
\fBNotice\fP:  Consolidated menus only work with the `subject' and
`lexical' sorting methods.
.LP
Variables related to consolidated menus are:
auto-select-closed,
consolidated-menu,
counter-delim-left, counter-delim-right,
counter-padding,
save-closed-mode.
.SH THE JUNK-ARTICLES AND LEAVE-NEXT COMMANDS
The \fBJ\fP {\fBjunk-articles\fP} command is a very flexible command
which can perform all sorts of attribute changes, either on individual
articles, all articles on the current menu page, all articles with a
specific attribute, or all available articles.
.LP
To access all the functions of this command, the \fBJ\fP key may have
to be hit up to four times, to loop through different one-line menus:
.TP
\fBMark Read\fP
This submenu allows you to mark articles \fIread\fP.
.TP
\fBUnmark\fP
This submenu allows you to mark articles \fIunread\fP.
.TP
\fBSelect\fP
This submenu allows you to select articles based on their attribute.
.TP
\fBKill\fP
This submenu allows you to mark articles \fIread\fP and remove them
from the menu based on their attribute.
.LP
The \fBL\fP {\fBleave-next\fP} command is an extension of the \fBJ\fP
command with a fifth menu:
.TP
\fBLeave\fP
This menu allows you to mark articles for later handling with the
\fIleave-next\fP attribute which will keep the article unread until
you explicitly change the attribute (e.g. by reading it) or it is
expired.
.LP
For each of these submenus, \fInn\fP will list the most plausible
choices you may use, but all of the following answers can be used at
all submenus.  When you have entered a choice, \fInn\fP will afterward
ask whether the change should be made to all menu pages or only the
current page.
.TP
\fBJ\fP
Show next submenu.
.TP
\fBL\fP
Change attribute on all \fIleave\fP articles.
.TP
\fBN\fP
Change attribute on all \fIleave-next\fP articles.
.TP
\fBR\fP
Change attribute on all \fIread\fP articles.
.TP
\fBS\fP
Change attribute on all \fIseen\fP articles.
.TP
\fBU\fP
Change attribute on all unmarked (i.e. \fIunread\fP) articles.
.TP
\fBA\fP
Change attribute on \fIall\fP articles no matter their current attribute.
.TP
\fB*\fP
Change attribute on all \fIselected\fP articles on \fIthe current\fP page.
.TP
\fB+\fP
Change attribute on all \fIselected\fP articles on \fIall\fP pages.
.TP
\fBa-z0-9\fP
Change attribute on one or more specific articles on the current page.
You end the list of articles by a \fBspace\fP or by using one of the
other choices described above.
.TP
\fB.\fP
Change attribute on \fIcurrent\fP article.
.TP
\fB, /\fP
Move the current article down or up the menu without changing any
attributes.
.SH READING MODE COMMANDS
In reading mode, the \fIselected\fP articles are presented one page at
a time.  To get the next page of an article, simply hit \fBspace\fP,
and when you are on the last page of an article, hit \fBspace\fP to
get to the next selected article.  Articles are normally marked read
when you go to the next article, while going back to the menu,
quitting \fInn\fP, etc. will retain the attribute on the current
article.
.LP
When you are on the last page of the last article, hit \fBspace\fP to
enter selection mode on the next group (or the current group if
reading mode was entered using the \fBZ\fP command).
.LP
To read an article, the following text scrolling commands are
available:
.TP
\&\fBspace\fP	{\fBcontinue\fP}
Scroll \fIone page forward\fP or continue with the next article or
group as described above.
.TP
\&\fBbackspace / delete\fP  {\fBpage-1\fP}
Go \fIone page backwards\fP in article.
.TP
\&\fBd\fP	{\fBpage+1/2\fP}
Scroll one \fIhalf page forward\fP.
.TP
\&\fBu\fP	{\fBpage-1/2\fP}
Go one \fIhalf page backwards\fP.
.TP
\&\fBreturn\fP	{\fBline+1\fP}
Scroll \fIone line forward\fP in the article.
.TP
\&\fBtab\fP	{\fBskip-lines\fP}
Skip over lines starting with the same character as the last line on
the current page.  This is useful to skip over included text or to the
next file in a shell archive.
.TP
\&\fB^\fP	{\fBpage=1\fP}
Move to the \fIfirst page\fP (excluding the header) of the article.
.TP
\&\fB$\fP	{\fBpage=$\fP}
Move to the \fIlast page\fP of the article.
.TP
\&\fBg\fP\fIN\fP	{\fBline=@\fP}
Move to line \fIN\fP in the article.
.TP
\&\fB/\fP\fIregexp\fP	{\fBfind\fP}
Search forward for text matching the regular expression \fIregexp\fP
in the article.  If a matching text is found, it will be high-lighted.
.TP
\&\fB.\fP	{\fBfind-next\fP}
Repeat search for last regular expression.
.TP
\&\fBh\fP	{\fBpage=0\fP}
Show the \fIheader\fP of the article, and continue from the top of the
article.
.TP
\&\fBH\fP	{\fBfull-digest\fP}
If the current article is extracted from a digest, show the entire
digest article including its header.
Another \fBH\fP command will return to the current subarticle.
.TP
\&\fBD\fP	{\fBrot13\fP}
Turn \fIrot13\fP (caesar) decryption on and off for the current
article, and redraw current page.  If the article is saved while it is
decrypted on the screen, it will be saved in decrypted form as well!
.TP
\&\fBc\fP	{\fBcompress\fP}
Turn compression on and off for the current article and redraw current
page.  With compression turned on, multiple spaces and tabs are shown
as a single space.  This makes it much easier to read right justified
text which separate words with several spaces.  (See also the
\fBcompress\fP variable)
.LP
The following commands are used to move among the selected articles.
.TP
\&\fBn\fP	{\fBnext-article\fP}
Move to next selected article.  This command skips the rest of the
current article, marks it \fIread\fP, and jumps directly to the first
page of the next selected article (or to the next group if it was the
last selected article).
.TP
\&\fBl\fP	{\fBleave-article\fP}
Mark the current article with the \fIleave\fP attribute and continue
with the next selected article.  When all the selected articles
in the current group have been read, these \fIleft over\fP articles
can be automatically selected and shown once more, or the treatment
can be postponed to the next time you enter the group.
  This is particularly useful if you see an article
which you may want to respond to unless one the following articles is
already saying what you intended to say.
.TP
\&\fBL\fP	{\fBleave-next\fP}
Mark the current article with the \fIleave-next\fP attribute and
continue with the next selected article.
.TP
\&\fBp\fP	{\fBprevious\fP}
Goto previous article.
.TP
\&\fBk\fP	{\fBnext-subject\fP}
Kill subject.  Skips rest of current article, and all following
articles with the same subject.  The skipped articles are marked
\fIread\fP.  To kill a subject permanently use the \fBK\fP command.
.TP
\&\fB*\fP	{\fBselect-subject\fP}
Show next article with \fIsame\fP subject (even if it is not
selected).  This command will \fIselect\fP all following articles with
the same subject as the current article
(similar to the `*' command in selection mode).  This can be used to
select only the first article on a subject in selection mode, and then
select all follow-ups in reading mode if you find the article
interesting.
.TP
\&\fBa\fP	{\fBadvance-article\fP}
Goto the following article on the menu even if it is not selected.
This command skips the rest of the current article
and jumps directly to the first page of the next article (it will not skip
to the next group if it is the last article).  The attribute on the
current article will be restored, except for the \fIunread\fP
attribute which will be changed to \fIseen\fP.
.TP
\&\fBb\fP	{\fBback-article\fP}
Goto the article before current article on the menu even if it is not
selected.  This is similar to the \fBa\fP command, except for the
direction.
.LP
The following commands perform an
immediate return from reading mode to selection mode in
the
.I current
group or skip to the next group.
.TP
\&\fB=\fP	{\fBgoto-menu\fP}
Return to selection mode in the current group (think of = as the
\&"icon" of the selection menu).  The articles read so far will be
marked \fIread\fP.
.TP
\&\fBN\fP	{\fBnext-group\fP}
Skip the rest of the \fIselected\fP and \fIunread\fP articles in the
current group and go directly to the next group.  Only the \fIread\fP
(and \fIseen\fP) articles in the current group are marked as read.
.TP
\&\fBX\fP	{\fBread-skip\fP}
Mark \fIall\fP articles in the current group as read and go directly
to the next group.  (You will be asked to confirm this command.)
.LP
\fBRelated variables\fP:
case-fold-search, charset, compress, data-bits, date, header-lines,
mark-overlap, monitor, overlap, scroll-clear-page, stop,
trusted-escape-codes, wrap-header-margin.
.SH PREVIEWING ARTICLES IN SELECTION MODE
In selection mode, it is possible to read a specific article on the
menu without entering reading mode for all the selected articles on
the menu.  Using the commands described below will enter reading mode
for one article only, and then return to the menu mode immediately
after (depending on the setting of the \fBpreview-continuation\fP
variable).
.PP
If there are more than 5 free lines at the bottom of the menu screen,
\fInn\fP will use that space to show the article (a minimal preview
window can be permanently allocated with the
.B window
variable).  Otherwise,
the screen will be cleared to show the article.
.PP
After previewing an article, it will be marked read (if the
\fBpreview-mark-read\fP variable is set), and the following article
will become the current article.
.TP
\&\fB%\fP\fIx\fP	{\fBpreview\fP}
Preview article
.IR x .
.TP
\&\fB%%\fP	{\fBpreview\fP}
Preview the current article.
.LP
When the article is being shown, the following reading mode commands
are very useful:
.TP
\&\fB=\fP	{\fBgoto-menu\fP}
Skip the rest of the current article, and return to menu mode.
.TP
\&\fBn\fP	{\fBnext-article\fP}
Skip the rest of the current article, and \fIpreview the next article\fP.
.TP
\&\fBl\fP	{\fBleave-article\fP}
Mark the article as \fIselected\fP (!) on the menu for handling later
on.  Then skip the rest of the current article, and preview the next
article.
.TP
\&\fB%\fP\fIy\fP	{\fBpreview\fP}
Preview article
.I y .
.LP
If the variable \fBauto-preview-mode\fP is set, just hitting the
article id in menu mode will enter preview mode on the specified
article.
.LP
\fBRelated variables\fP:
auto-preview-mode, min-window, preview-continuation,
preview-mark-read, window.
.SH SAVING ARTICLES
The following commands are used to save articles in files, unpack
archives, decode binaries, etc.  It is possible to use the commands in
both reading mode to save the current article and in selection mode to
save one or more articles on the menu.
.LP
The saved articles will be \fIappended\fP to the specified file(s)
followed by an empty line each.  Both files and directories will be
created as needed.  When an article has been saved in a file, a
message reporting the number of lines saved will be shown if the
\fBsave-report\fP variable is set (default on).
.TP
\&\fBS\fP	{\fBsave-full\fP}
Save articles including the full article header.
.TP
\&\fBO\fP	{\fBsave-short\fP}
Save articles with a short header
containing only the name of the sender, the subject, and the posting
date of the article.
.TP
\&\fBW\fP	{\fBsave-body\fP}
Write article
.I without
a header.
.TP
\&\fB:print\fP	{\fBprint\fP}
Print article.  Instead of a file name,
this command will prompt for the print command to which the current
article will be piped.  The default print command is specified at
compile time, but it can be changed by setting the
.B printer
variable.  The output will be identical to that of the
.B O
command.
.TP
\&\fB:patch\fP	{\fBpatch\fP}
Send articles through \fBpatch\fP(1) (or the program defined in the
\fBpatch-command\fP variable).  Instead of a file name, you will be
prompted for the name of a directory in which you want the patch
command to be executed.  \fInn\fP will then pipe the body of the
article through the patch command.
  The output from the patch process will be shown on the screen and
also appended to a file named \fIPatch.Result\fP in the patch directory.
.TP
\&\fB:unshar\fP	{\fBunshar\fP}
Unshar articles.  You will be prompted for the name of a directory in
which you want \fInn\fP to unshar the articles.  \fInn\fP will then
pipe the proper parts of the article body into a Bourne Shell whose
working directory will be set to the specified directory.
  During the unpacking, the normal output from the unshar process will
appear on the screen, and the menu or article text will be redrawn when
the process is finished.
  The output is also appended to a file named \fIUnshar.Result\fP in
the unshar directory.
  The file specified in \fBunshar-header-file\fP (default
"Unshar.Headers") in the unshar directory will
contain the header and initial text (before the shar data) from the
article.  You can use the `G' {\fBgoto-group\fP} command to look at
the Unshar.Headers file.
.TP
\&\fB:decode\fP	{\fBdecode\fP}
Decode \fIuuencoded\fP articles into binary files.  You will be
prompted for the name of a directory in which you want \fInn\fP to
place the decoded binary files (the file names are taken from the
uuencoded data).
  \fInn\fP will combine several articles into single files as needed,
and you can even decode unrelated packages (into the same directory)
with one \fBdecode\fP command.
  To be able to decode a binary file which spans several articles,
\fInn\fP may have to \fIignore\fP lines which fail the normal sanity checks
on uuencoded data instead of treating them as \fItransmission errors\fP.
Consequently, it is strongly recommended to check the resulting
decoded file using the checksum which is normally contained in the
original article.  (Actually, you are also supposed to do this after
decoding with a stand-alone uudecode program).
  The header and initial information in the decoded articles are saved
in the file specified in \fBdecode-header-file\fP (default
"Decode.Headers") in the same directory as the decoded files.
  If \fBdecode-skip-prefix\fP is non-null, \fB:decode\fP will attempt
to ignore up to that many characters on each line to find the encoded data.
This is particularly useful in some binaries groups where files are
both uuencoded and packed with shar; \fInn\fP will ignore the prefix
added to each line by shar, and thus be able to unshar, concatenate,
and decode multi-part postings automatically.
.LP
In reading mode, the following keys can also be used to invoke the
save commands:
.TP
.B s
Same as
.BR S .
.TP
.B o
Same as
.BR O .
.TP
.B w
Same as
.BR W .
.TP
.B P
Same as
.BR :print .
.LP
The save commands will prompt for a file name which is expanded
according to the rules described in the section on file name expansion
below.  For each group, it is possible to specify a default save file
in the init file, either in connection with the group presentation
sequence or in a separate \fBsave-files\fP section (see below).
If a default save file is specified for the group, \fInn\fP will show
this on the prompt line when it prompts for the file name.  You can
edit this name as usual, but if you kill the entire name immediately,
\fInn\fP will replace the default name with the last file name you
entered.  If you kill this as well, \fInn\fP will leave you with a
blank line.
.LP
If the
.B quick-save
variable is set, \fInn\fP will only prompt for a save file name when
the current article is inside a folder; otherwise, the default save
file defined in the init file will be used unconditionally.
.LP
If the file (and directories in the path) does not exist,
\fInn\fP
will ask whether the file (and the directories) should be created.
.LP
If the file name contains an asterisk, e.g.
.nf
	part*.shar
.fi
\fInn\fP will save each of the articles in uniquely named files
constructed by replacing the asterisk by numbers from the sequence 1,
2, 3, etc.  The format of the string that replaces the * can be
changed with the \fBsave-counter\fP variable, and the first number to
use can be changed via \fBsave-counter-offset\fP.
.PP
In \fIselection\fP mode, \fInn\fP will prompt you for the identifier
of one or more articles you want to save.  When you don't want to save
more articles, just hit \fBspace\fP.  The saved articles will be
marked \fIread\fP.
.LP
If you enter an asterisk `*' when you are prompted for an article to
save, \fInn\fP will automatically save all the \fIselected\fP articles
on the \fIcurrent\fP menu page and mark them \fIread\fP.
.LP
Likewise, if you enter a plus `+', \fInn\fP will save all the selected
articles on \fIall\fP menu pages and mark them \fIread\fP.
.LP
This is very useful to unpack an entire package using the
\fB:unshar\fP and \fB:decode\fP commands.  It can also be used in
combination with the \fIsave selected articles\fP feature to save a
selection of articles in separate, successively numbered files.  But do
not confuse these two concepts!  The
.B S*
and
.B S+
commands can be used to save the selected articles in a single file as
well as in separate files, and the \fIsave in separate files\fP
feature can be used also when saving individual articles, either in
the selection mode, or in the article reading mode.
.LP
When articles are saved in a file with a full or partial header, any
header lines in the
.I body
of the article will be escaped by a tilde (e.g. ~From: ...) to enable
\fInn\fP to split the folder into separate articles.
The escape string can be redefined via the
\fBembedded-header-escape\fP variable.
.LP
Articles can optionally be saved in MAIL or MMDF compatible format by
setting the \fBmail-format\fP and \fBmmdf-format\fP variables.
These variables only specify the format used when creating a new folder,
while appending to an existing folder will be done in the format of the
folder (unless \fBfolder-format-check\fP is false).
.LP
\fBRelated variables\fP:
confirm-append, confirm-create, decode-header-file,
decode-skip-prefix, default-save-file, folder-save-file,
edit-patch-command, edit-print-command, edit-unshar-command, folder,
folder-format-check,
mail-format, mmdf-format, patch-command, printer, quick-save,
save-counter, save-counter-offset, save-report,
suggest-default-save, unshar-command, unshar-header-file.
.SH FOLDER MAINTENANCE
When more than one article is saved in a folder, \fInn\fP is able to
split the folder, and each article in the folder can be treated like
a separate article.
.LP
This means that you can save, decode, reply, follow-up, etc. just as
with the original article.
.LP
You can also \fIcancel\fP (delete) individual articles in a folder
using the normal \fBC\fP {\fBcancel\fP} command described later.
When you quit from the folder, you will then be given the option to
remove the cancelled articles from the folder.
.LP
The original folder is saved in a file named `BackupFolder~' in the
\&.nn directory (see the \fBbackup-folder-path\fP variable) by
renaming or copying the old folder as appropriate.
When the folder
has been compressed, the backup folder will be removed unless the
variable \fBkeep-backup-folder\fP is set.
.LP
If all articles in a folder are cancelled, the folder will be removed
or truncated to zero length (whatever is allowed by directory and file
permissions).
In this case no backup folder is retained even when
\fBkeep-backup-folder\fP is set!
.LP
If the variable \fBtrace-folder-packing\fP is set, \fInn\fP will show
which articles are kept and which are removed as the folder is
rewritten.
.LP
Folders are rewritten in the format of the original folder, i.e. the
\fBmail-format\fP and \fBmmdf-format\fP variables are ignored.
.LP
\fBRelated variables\fP:
backup-folder-path,
keep-backup-folder,
trace-folder-packing.
.\" ENDPART A
