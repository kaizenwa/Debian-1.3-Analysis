.if n .ds Q \&"
.if t .ds Q ``
.if n .ds U \&"
.if t .ds U ''
.TH "SUCK" 1J 
.tr \&
.nr bi 0
.nr ll 0
.nr el 0
.de DS
..
.de DE
..
.de Pp
.ie \\n(ll>0 \{\
.ie \\n(bi=1 \{\
.nr bi 0
.if \\n(t\\n(ll=0 \{.IP \\(bu\}
.if \\n(t\\n(ll=1 \{.IP \\n+(e\\n(el.\}
.\}
.el .sp 
.\}
.el \{\
.ie \\nh=1 \{\
.LP
.nr h 0
.\}
.el .PP 
.\}
..
.SH 名前

.PP
.PP
suck - NEWNEWS コマンドを使わずに
NNTP サーバからニュース記事を取り込みます。
.PP
.PP
.SH 形式

.PP
.PP
\fBsuck\fP [ \fIhostname\fP ]
[ \fB@filename\fP ]
[ \fB-V\fP ]
[ \fB-K\fP ]
[ \fB-L\fP ]
[ \fB-H\fP ]
[ \fB-d[tmd]\fP \fIdirname\fP ]
[ \fB-s\fP | \fB-S\fP \fIfilename\fP ]
[ \fB-e\fP | \fB-E\fP \fIfilename\fP ]
[ \fB-a\fP ]
[ \fB-m\fP ]
[ \fB-b[ir]\fP \fIbatchfile\fP ]
[ \fB-r\fP \fIfilesize\fP ]
[ \fB-p\fP \fIextension\fP ]
[ \fB-U\fP \fIuserid\fP ]
[ \fB-P\fP \fIpassword\fP ]
[ \fB-c\fP ]
[ \fB-M\fP ]
[ \fB-N\fP \fIport_number\fP ]
[ \fB-W\fP \fIpause_time pause_nr_msgs\fP ]
[ \fB-w\fP \fIpause_time pause_nr_msgs\fP ]
[ \fB-k\fP ]
[ \fB-l\fP \fIphrase_file\fP ]
.PP
.PP
.SH 全モードに共通のオプション

.PP
.PP
\fB-V\fP
.PP
\fBsuck\fP のバージョン番号を表示し、終了します。
.PP
\fB-s\fP | \fB-S\fP \fIfilename\fP
.PP
このオプションは、
デフォルトでは標準出力に出力されるステータス情報を、
指定したファイルに書き出します。
小文字のオプション (\fB-s\fP) は、
コンパイル時に \fIsuck_config.h\fP に指定した出力先に書き出します。
デフォルト値は /dev/null です。
大文字のオプション (\fB-S\fP) を指定する場合は、
ファイル名を指定しなければなりません。
すべてのステータス情報は、このファイルに書き込まれます。
.PP
\fB-e\fP | \fB-E\fP \fIfilename\fP
.PP
このオプションは、
デフォルトでは標準エラーに出力されるエラーメッセージを、
指定したファイルに書き出します。
小文字のオプション (\fB-e\fP) は、
コンパイル時に \fIsuck_config.h\fP に指定した出力先に書き出します。
デフォルト値は suck.errlog です。
大文字のオプション (\fB-S\fP) を指定する場合は、
ファイル名を指定しなければなりません。
すべてのエラーメッセージは、このファイルに書き込まれます。
.PP
\fB-a\fP
.PP
\fBsuck\fP が 何らかの原因で中断してしまう場合であっても、
つねにバッチファイルを作成します。
このオプションを指定しなければ、
すべての記事の取り込みが終った場合か、
シグナル ( 下記参照 ) でキャンセルされた場合にしか、
バッチファイルは作られません。
.PP
\fB-N\fP \fIport_number\fP
.PP
.PP
サーバホストの NNRP ポート番号がデフォルトの 119 以外である場合に、
その番号を指定します。
.PP
\fB@filename\fP
.PP
.PP
その他のオプションをコマンドラインに指定する代わりに、
このファイルから読み込みます。
.PP
\fB-dt\fP \fIdirname\fP
.PP
\fB-dm\fP \fIdirname\fP
.PP
\fB-dd\fP \fIdirname\fP
.PP
suck が用いる各種ファイル / ディレクトリの場所を指定します。
.PP
\fB-dt\fP \fIdirname\fP
.PP
suck が作成する一時ファイル
(suck.newrc 、 suck.sort 、 suck.restart 、 suck.killlog) を
格納するディレクトリ。
.PP
\fB-dm\fP \fIdirname\fP
.PP
マルチファイルモードまたはバッチモードで取り込んだ記事を
格納するディレクトリ。
.PP
\fB-dd\fP \fIdirname\fP
.PP
suck が使用するデータファイル
(sucknewsrc 、 suckkillfile 、 suckothermsgs) を
格納するディレクトリ。
.PP
\fB-p\fP \fIextension\fP
.PP
ニュースを複数のサイトから取り込みたい場合にこのオプションが有用です。
たとえば \fB-p\fP .dummy を指定すると、 \fBsuck\fP は、
sucknewsrc.dummy や suckkillfile.dummy などのファイルを探して使い、
同じ拡張子を持つ一時ファイルを作成します。
このようにして、各サイトごとの sucknewsrc ファイルなどを複数持てます。
.PP
\fB-K\fP
.PP
killfile の処理を省略します。
.PP
.PP
\fB-L\fP
.PP
.PP
削除したメッセージを suck.killog に記録しません。
.PP
\fB-H\fP
.PP
history ( 記事の履歴 ) のチェックを省略します。
.PP
.PP
\fB-U\fP \fIuserid\fP
.PP
\fB-P\fP \fIpassword\fP
.PP
これら 2 つのオプションは、
NNTP サーバがユーザ ID とパスワードを要求する場合のために、
それらを指定するものです。
.PP
.PP
\fB-c\fP
.PP
このオプションを指定すると、 suck は実行後に次の後始末を行います。
.nr ll +1
.nr el +1
.nr t\n(ll 1
.nr e\n(el 0 1
.af e\n(el \*(f\n(el
.if \n(ll>1 .RS
.nr bi 1
.Pp
sucknewsrc を sucknewsrc.old にリネームする
.nr bi 1
.Pp
suck.newrc を sucknewsrc にリネームする
.nr bi 1
.Pp
suck.sorted および suckothermsgs を削除する
.if \n(ll>1 .RE
.nr el -1
.nr ll -1
.PP
\fB-M\fP
.PP
.PP
このオプションを指定すると、
suck は遠隔サーバに "mode reader" コマンドを送ります。
welcome のメッセージの直後に invalid command メッセージが表示される場合、
このオプションを試してみるといいでしょう。
.PP
\fB-W\fP \fIpause_time pause_nr_msgs\fP
.PP
このオプションは、記事のダウンロード中にどの程度の頻度で
ダウンロードを一時停止させるかを指定します。
引数には一時停止時間(単位: 秒)、一時停止の頻度(指定した記事数ごと)を
指定します。
たとえば-W 10 100を指定すると、suck は100記事をダウンロードするごとに
10秒ずつ一時停止します。
suck はリモートサーバに対して過大な負荷をかけることがあります。
このオプションによる一時停止は、サーバに一息つかせることになります。
.PP
\fB-w\fP \fIpause_time pause_nr_msgs\fP
.PP
.PP
このオプションは、記事のダウンロード中に
ダウンロード速度を遅くすることができるようにします。
suck にあらかじめ決めておいたシグナル (デフォルトでは SIGUSR1、
\fIsuck_config.h\fP を参照) を送ると、suck はデフォルトの一
時停止オプション (-W オプションで指定した値) とこのオプション
の値を交換します。
たとえば -w 2 2 を指定しておくと、kill で SIGUSR1 を suck に送
れば 2 記事ごとに 2 秒の休憩をはさむようになります。
これは、サーバに「息つぎの時間」を与えることになります。
もう一度 SIGUSR1 を送ると、suck は元の一時停止オプション値に戻します。
-W オプションを指定していなかった場合は、
デフォルトである全速力でのダウンロードに戻ります。
.PP
.PP
\fB-k\fP
.PP
.PP
このオプションは、非標準的な振る舞いをする msnews.microsoft.com 
サーバのために設けられました。
このサーバは、記事のリストをダウンロードする XHDR コマンドに関して、
通常とは異なるリターンコードを返すのです。
標準では 221 になるところが、microsoft は 224 を返します。
このオプションを指定すると、
suck は 221 の代わりに 224 を受け付けるようになります。
.PP
.SH 機能説明

.PP
.PP
\fB モード 1  - 標準出力モード \fP
.PP
.DS
.sp
.nf
% suck
% suck myhost.com
.DE
.fi 
.sp
.PP
NNTP サーバから取り込んだ記事は、標準出力に出力されます。
NNTP サーバの名前は、引数に指定するか、
環境変数 \fINNTPSERVER\fP に設定しておきます。
取り込んだ記事は標準出力に出力されるので、
ファイルに保存したり、圧縮したり、自由に操作できます。
たとえば
.PP
.DS
.sp
.nf
% suck server.domain | gzip -9 > output.gz
.DE
.fi 
.sp
.PP
のように。
したがって、その後の記事の活用方法は、完全にユーザに任されます。
すでに SLIP や PPP などでローカルマシンにコピーした記事がある場合や、
今後もローカルマシンに記事ベースでコピーする必要がある場合に
適しています。
.PP
.PP
\fB モード 2 - マルチファイルモード \fP
.PP
.PP
.DS
.sp
.nf
% suck -m
% suck myhost.com -m
.DE
.fi 
.sp
.PP
.PP
.PP
NNTP サーバから取り込んだ記事ごとに、別々のファイルに格納します。
これらのファイルは、 \fIsuck_config.h\fP または
\fB-dm\fP コマンドラインオプションで指定されたディレクトリに
格納されます。
.PP
.PP
\fB モード 3\fP \fB-\fP \fB バッチモード \fP
.PP
.PP
.DS
.sp
.nf
% suck -b[ir] batchfile
% suck myhost.com -b[ir] batchfile
.DE
.fi 
.sp
.PP
.PP
.PP
NNTP サーバから取り込んだ記事ごとに、別々のファイルに格納します。
これらのファイルは、 \fIsuck_config.h\fP または
\fB-dm\fP コマンドラインオプションで指定されたディレクトリに
格納されます ( ここまではマルチファイルモードと同じ ) 。
記事のダウンロードが終了すると、
\fBsuck\fP は innxmit または rnews が処理できる形式の
バッチファイルを作成します。
.PP
.PP
\fB-bi\fP ---
innxmit 用のバッチファイルを作成します。
個々の記事はそのまま残され、 
1 行あたり 1 記事の完全なパス名を記述したバッチファイルが作られます。
そこで、 \fBsuck\fP の終了後、
次の形式で innxmit を呼び出してください。
.PP
.DS
.sp
.nf
% innxmit localhost batchfile
.DE
.fi 
.sp
.PP
.PP
\fB-br\fP ---
rnews 用のバッチファイルを作成します。
記事は 1 つのファイルにまとめられ、
"#!rnews サイズ " という行がセパレータとして記事間に挿入されます。
rnews は次の形式で呼び出します。
.PP
.DS
.sp
.nf
% rnews -S localhost batchfile
.DE
.fi 
.sp
.PP
.PP
\fB-r\fP \fIfilesize\fP ---
rnews 用バッチファイルの最大のサイズを指定します。
このオプションは、
上述の \fB-br\fP オプションと一緒に指定したときのみ有効です。
ファイルサイズが上限に達すると、
現在のバッチファイルを書き出した後で新しいバッチファイルが作られます。
2 番目以降のバッチファイルには、 1 ずつ増加するシーケンス番号が、
\fB-br\fP オプションに指定したファイル名の後ろに付けられます。
ただしこの最大ファイルサイズは、厳密なものではありません。
というのは、ファイルサイズの上限に達しても、
現在書き出している記事の書き出しを完了しなければならないからです。
.PP
.PP
.SH suck への引数をファイルに収める

.PP
.PP
\fB@filename\fP をコマンドラインに指定すると、
suck はそのファイルを読み込んで、実行時のオプションを解析します。
ファイルには、
コマンドラインに指定するのと同じオプションを指定できます。
引数は 1 行にまとめて書いても、複数行に分けて書いてもかまいません。
また、コメントも書き込めます。
コメントは、 "#" からその行の終わりまでです。
コマンドラインに指定したオプションの方が、
ファイルに指定したオプションより優先します。
.PP
.DS
.sp
.nf
# Sample Argument file
-bi batch # batch file option
-M     # use mode reader option
.DE
.fi 
.sp
.PP
.PP
.SH SUCKNEWSRC について

.PP
.PP
\fIsucknewsrc\fP は、読み込むグループ名、
ならびにすでにどこまで読み込んでいるかを記録するファイルです。
\fIsucknewsrc\fP の構造はきわめてシンプルで、
各行は 2 つまたは 3 つのフィールドで構成されます。
最初のフィールドはグループ名、 
2 番目のフィールドは前回ダウンロードしたときの最後の記事の番号です。
3 番目のフィールドは、 1 回の処理で読み込む最大の記事数です。
このフィールドは省略してもかまいません。
最大記事数より多い記事があれば、より新しい記事が読み込まれます。
これらのフィールド間はスペースで区切ります。
.PP
.DS
.sp
.nf
comp.os.linux.announce 1 [ 100 ]
.DE
.fi 
.sp
.PP
.PP
\fBsuck\fP の実行が終了すると、 suck.newrc が作られます。
このファイルは sucknewrc と同じグループを持ち、
記事番号だけが更新されています。
したがって、これをコピーして、次回の sucknewsrc として使います。
.PP
.PP
取り込むニュースグループを追加するには、 sucnewsrc にそれを登録します。
ただし記事番号には -1 ( 負の数であればなんでもよい ) を
指定しておきます。
\fBsuck\fP はそのニュースグループについて、
最新の X 個の記事を読み込みます。
たとえば -100 を指定すると、最新の 100 個の記事が読み込まれます。
.PP
.PP
あるニュースグループの取り込みをスキップしたければ、
その行の先頭に "#" を挿入します。
.PP
.PP
.SH SUCKKILLFILE およびグループ KEEP/KILLFILES

.PP
.PP
killfile/keepfile ルーチンを使うには、
\fIsuck_config.h\fP の
\fI#define KILLFILE\fP のコメントを外しておきます。
こうしておけば、 \fIsuckkillfile\fP が存在する場合には
全記事のヘッダが調べられ、条件に適合する記事はダウンロードされません。
\fB-L\fP オプションを指定してログへの記録を抑制した場合を除いて、
ダウンロードしなかった記事のヘッダは、
\fIsuck.killlog\fP に集められます。
この中でダウンロードしたい記事があれば、
その Message-ID を \fIsuckothermsgs\fP ファイルに登録します。
.PP
.PP
keep/delete 機能の動作の仕組みは次のとおりです。
まず、すべての記事は、マスター killfile (suckkillfile) と照合されます。
ここで記事が削除されなかったなら、その Newsgroups: 行がチェックされます。
Newsgroups: 行にあるどれかのグループに対するグループファイルがあれば、
そのグループファイルに対するチェックが行われます。
記事が keep ファイルとマッチすれば、
その記事は取り込まれることになります。
また記事が delete ファイルとマッチすれば、その記事は削除されます。
このような処理が、グループ行の各グループに対して行われます。
ここで、記事が keep と delete の両方の条件にマッチする可能性があります。
この場合の処理方法は、
\fIsuck_config.h\fP の tiebreaker の指定によって決まります。
tiebreaker が定義されていれば、両条件にマッチした記事は取り込まれます。
定義されていなければ、削除されます。
.PP
.PP
\fB パラメータ \fP
.PP
.PP
.DS
.sp
.nf
LOWLINES=#######
HIGHLINES=#######
PATH=xxxxx,yyyyy
FROM=xxxxx,yyyyy
SUBJECT=xxxxxx,yyyy
NNTPHOST=xxxxxx,yyyyy
QUOTE=c
GROUP=keep groupname filename または GROUP=delete groupname filename
NRGRPS=########
PATH_SEP=c
SUBJECT_SEP=c
FROM_SEP=c
NNTPHOST_SEP=c
PROGRAM=path-name
.DE
.fi 
.sp
.PP
.PP
.PP
.PP
\fBKILL/KEEP ファイルのパラメータ \fP
.PP
.PP
\fIHIGHLINES=\fP
.PP
指定した行数より長いすべての記事がマッチします。
.PP
.PP
\fILOWLINES=\fP
.PP
指定した行数より短いすべての記事がマッチします。
.PP
.PP
\fIQUOTE=\fP
.PP
引用符号の文字を指定します。デフォルト値は " です。
正規表現を使う場合には、この項目は最初に指定する必要があり、
それ以外の指定は無視されます。
.PP
\fIPATH=\fP \fIFROM=\fP \fISUBJECT=\fP \fINNTPHOST=\fP
.PP
ヘッダの内容にもとづいてマッチを判断します。
各パラメータには、コンマで区切って複数の値を指定できます。
値が引用符 ( 上記 \fIQUOTE=\fP で指定した値 ) で囲まれていれば、
大文字小文字も区別され、厳密なチェックが行われます。
引用符で囲まれていなければ、大文字小文字は区別されません。
suck をUSE_REGEXオプション(\fIsuck_config.h\fPを参照)を指定して
コンパイルしてあれば、これらに対してPOSIXの正規表現を指定できます。
セバレータとして使うコンマは、
後述の``*_SEP''オプションで他の文字に変更できます。
.PP
\fIGROUP=\fP
.PP
記事の取り込み / 削除は、グループ単位でも制御できます。
この行は 3 つの要素で構成されます。
最初の要素は、 "keep" または "delete" です。
"keep" を指定すると、グループファイルのパラメータに一致する、
そのグループの記事だけが取り込まれます。
"delete" なら、そのグループの記事は取り込まれません。
第 2 の要素はグループ名で、完全なグループ名でなければなりません。
第 3 の要素は、記事のチェックに用いるグループファイル名です。
.PP
.PP
\fINRGRPS=\fP
.PP
この行に指定された数より多数のグループが指定されている記事が
マッチします。
このオプションは、 spammed message を取り込みたくないときに有用です
(spammed message とは、「金持ちになる方法教えます」などの、
きわめて多数のグループにポストされている記事のことです ) 。
.PP
.PP
\fIPATH_SEP=\fP  \fISUBJECT_SEP=\fP \fIFROM_SEP=\fP \fINNTPHOST_SEP=\fP
.PP
.PP
PATH、SUBJECT、FROM、および NNTPHOST オプションで使う
デフォルトのセパレータ (コンマ) を変更します。
これらのセパレータ変更オプションの後に指定した行に対してだけ、
これらの変更が有効になります。
.PP
\fIPROGRAM=\fP
.PP
この行を指定すると、
外部のプログラムを使って記事をチェックすることができるようになります。
この行には、プログラム名だけでなく、任意の引数も指定できます。
この行を \fIsuckkillfile\fP に指定すると、
他の行はすべて無視されます。
代わりにヘッダ情報が外部プログラムに渡され、
外部プログラムはその記事をダウンロードすべきかどうかを判断します。
この動きを少し解説します。
suck は外部プログラムを fork し、
標準入力と標準出力をリダイレクトします。
suck は標準入力経由でヘッダ情報をプログラムに渡し、
標準出力から結果が返されるのを待ちます。
個々の記事に関するデータの流れは次のとおりです。
.PP
.PP
.nr ll +1
.nr el +1
.nr t\n(ll 1
.nr e\n(el 0 1
.af e\n(el \*(f\n(el
.if \n(ll>1 .RS
.nr bi 1
.Pp
suck はまず、長さ 8 バイトの文字列を
( 外部プログラムの ) 標準入力に
書き込みます。
これは、次に送るヘッダレコードの長さです。
長さは左寄せしたアスキーテキストで表現され、
最後の文字は new line 文字です ( 例 : \f(CR"1234   \n"\fP) 。
.nr bi 1
.Pp
次に suck はヘッダを ( 外部プログラムの ) 標準入力に書き込みます。
.nr bi 1
.Pp
suck は標準出力から 2 バイトのレスポンスが返されるのを待ちます。
レスポンスは、 "0\n" または "1\n" でなければなりません。
ここで "0" 、 "1" はバイナリの 0 、 1 ではなく、  
ASCII コードの "0" または "1" のキャラクタです。
レスポンスが "0" なら suck はその記事をダウンロードし、
"1" ならダウンロードしません。
.nr bi 1
.Pp
処理する記事がなくなったら、
ステップ 1 で書き込まれる長さは
ゼロ (\f(CR"0      \n"\fP) になります。
そして suck は、外部プログラムが終了するのを待ちます。
長さがゼロという情報を受け取ったら
必要な終了処理を行って終了するように、
外部プログラムを作成してください。 
\fB 注意 :\fP suck は外部プログラムが終了したことを検出するまで、
処理を中断して待ち続けます。
.if \n(ll>1 .RE
.nr el -1
.nr ll -1
.PP
.PP
\fIGROUP=\fP と \fIPROGRAM\fP を除くすべてのパラメータが、
マスター killfile とグループファイルの両方で使えます。
\fIGROUP=\fP だけはマスター killfile だけでしか使えません。
.PP
.PP
.PP
.PP
.SH SUCKOTHERMSGS

.PP
.PP
\fIsuckothermsgs\fP は、 1 行に 1 記事の Message-ID を記述したファイルで、
Message-ID は <> で囲んである必要があります。
これらの記事は、 \fIsucknewsrc\fP ファイルにもとづく記事と並んで
ダウンロードされます。
したがって、他のグループの記事や、
killfile 機能によって読み込まなかった記事を読み込むのに利用できます。
なお、ここで指定した記事は、
killfile ルーチンでチェックされることはありません。
.PP
.PP
.PP
.SH 他国語によるメッセージの表示

\fB-l phrases\fP オプションを指定すると、
suck は代替のフレーズファイルを読み込んで
すべてのステータスやメッセージの表示にこれを使います。
フレーズファイルには、
suck、rpost、および testhost コマンドで使われるすべてのメッセージが、
1 行に 1 メッセージずつ引用符で囲んで書いてあります。
\fBmake phrases\fP を実行すると、
サンプルのフレーズファイル (phrases.engl) が作られます。
このファイルにはデフォルトのメッセージが入っています。
これを編集して他国語のメッセージファイルを作成することができます。
このとき、メッセージを囲む引用符を削除しないでください。
プログラムから与えられた変数値をメッセージに埋め込むこともできます。
変数はメッセージ中では %vN% という形式で表示されています。
ここで N は個々のメッセージ中で 1 から始まる連番です。
メッセージ中での変数の出現順序は任意です。
たとえば、

.PP
.DS
.sp
.nf
   "Hello, %v1%, welcome to %v2%"
   "Welcome to %v2%, %v1%"
   "いらっしゃいませ %v1% さん、ようこそ %v2% へ"
.DE
.fi 
.sp
.PP
はどれも正しいフレーズです。
フレーズ中に \en、\er、\et などの
改行、復帰、タブなどを表す文字も指定できます。
.PP
.PP
ソースコードを変更して新しいフレーズを追加したら、
\fBphrases.h\fP も作り直す必要があります。
この場合、\fBmake phrases.h\fP をコマンドラインから
実行してください。
.PP
.PP
.SH シグナルの処理

.PP
.PP
.PP
\fBsuck\fP は、 \fIsuck_config.h\fP に指定した 2 つのシグナルを
受け付けます。
1 つ目はデフォルトでは SIGTERM で、このシグナルを受け付けると、
\fBsuck\fP は現在の記事を最後まで読み込み、
バッチファイルを作成し、エラー扱いとせずに正常終了します。
.PP
.PP
2 番目はデフォルトでは SIGUSR1 で、
\fB-w\fP オプションで指定した値にもとづいて、
ダウンロード中に休憩を取るようになります。
.PP
.SH リターンコード

.PP
.PP
\fBrpost\fPは終了時に次のコードを返します。
.nr ll +1
.nr t\n(ll 2
.if \n(ll>1 .RS
.IP "0"
.nr bi 1
.PP
正常終了
.IP "1"
.nr bi 1
.PP
ダウンロードすべき記事がなかった
.IP "2"
.nr bi 1
.PP
リモートサーバに送ったコマンドに対して予期しない応答があった
.IP "3"
.nr bi 1
.PP
-V オプションを指定してあった
.IP "4"
.nr bi 1
.PP
リモートサーバのNNTP認証に失敗した
.IP "-1"
.nr bi 1
.PP
その他のエラー
.if \n(ll>1 .RE
.nr ll -1
.PP
.PP
.SH 歴史

.PP
.PP
原作者 - Tim Smith ( メールアドレス不詳 )
.PP
メンテナンス担当 - 
.PP
March 1995 - Sven Goldt (goldt@math.tu-berlin.de)
.PP
July 1995  - Robert A. Yetman (boby@pixi.com)
.PP
.PP
.SH 関連マニュアル項目

.PP
.PP
testhost(1) 、 rpost(1) 、 lpost(1)
.PP
.PP
.SH 日本語版について

.PP
.PP
この日本語版に関する質問や問題点の指摘は、
久保元治 (mkubo@3ware.co.jp) までお知らせください。
.PP
