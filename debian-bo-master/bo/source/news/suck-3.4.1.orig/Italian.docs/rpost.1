.\" Traduzione italiana di Giuseppe De Marco <gdm@rebel.net>
.\" 4 Ottobre 1996 - Ultima modifica: 15 Marzo 1997

.\" $Revision: 1.5 $
.TH RPOST 1
.SH NOME
rpost - posta un article su un news server NNTP
.SH SINTASSI
.I rpost
[
.BI
hostname
]
[
.BI @filename
]
[
.BI -s\ |\ -S
filename
]
[
.BI -e\ |\ -E
filename
]
[
.BI -b
batchfile
]
[
.BI -p
prefix
]
[
.BI -d
]
[
.BI \-U
userid
]
[
.BI \-P
password
]
[
.BI \-M
]
[
.BI \-N
port_number
]
[
.BI \-l
phrase_file
]
[
.BI -f
filter $$o=<outfile> filter_arg1 ...
]
.SH DESCRIZIONE
.I Rpost
posterà uno o più article, sull' host specificato in
.I hostname.
Se hostname non viene specificato, rpost userà la variabile
d'ambiente
.BI NNTPSERVER.
.SH Opzioni Generiche

.BI \-s | \-S
filename

Queste opzioni manderanno tutti i messaggi di stato (normalmente mostrati su
stdout) ad un file alternativo.  La versione minuscola, -s, manderà i messaggi
di stato al compiled-in default definito in suck_config.h. Il default
è /dev/null, per cui non verranno mostrati messaggi di stato.  La versione
maiuscola, -S, richiede il parametro filename.  Tutti i messaggi di stato
verranno allora mandati a questo file.

.BI \-e | \-E
filename

Queste opzioni manderanno tutti i messaggi di errore (normalmente mostrati su
stderr) ad un file alternativo.  La versione minuscola, -e, manderà i messaggi
d'errore al compiled-in default definito in suck_config.h.  Il default
è suck.errlog.  La versione maiuscola, -E, richiede il parametro filename.
Tutti i messaggi d'errore verranno allora mandati a questo file.

.BI \-U
userid
.BI \-P
password

Queste due opzioni permettono di specificare un userid ed una password, se
il vostro NNTP server ve li richiede.

.BI \-M

Questa opzione dice ad rpost di mandare il comando "mode reader" al server
remoto.  Se si ottiene un messaggio di comando invalido da rpost immediatamente
dopo l'annuncio di benvenuto, allora si provi questa opzione.

.BI \-N
port_number

Questa opzione dice ad rpost di usare un numero di porta NNRP alternativo
quando si connette all'host, invece del numero di porta di default, 119.

.BI \@filename 

Questa opzione dice ad rpost di leggere altre opzioni da un file, in aggiunta
alla linea di comando.

\-l phrase_file

Questa opzione dice ad rpost di caricare un file delle frasi alternativo, invece
di usare i messaggi built-in.  Questo permette di avere rpost che stampa le frasi
in un'altra lingua, o permette di customizzare i messaggi senza ricompilare.
Vedere "FRASI IN UNA LINGUA STRANIERA" in suck.1 per ulteriori dettagli.

.SH MODO STDIN
rpost

rpost hostname

rpost legge un article da stdin e lo manda al server NNTP.
L'article deve avere una intestazione di almeno due linee, chiamate
Newsgroups: e Subject:, ed un corpo (l'article). Intestazione e corpo
devono essere separati da una linea vuota.  Rpost non modifica l'article
in alcun modo.

Rpost usa il comando POST per postare l'article, esattamente come un newsreader
standard.  Questo è utile quando si usano SLIP e PPP, in quanto molti providers
non permettono di postare article con altri metodi (tipo nntpsend o innxmit).
.SH MODO BATCH
.I rpost
.BI
hostname

.BI -b
batchfile
.BI -p
prefix
.BI -d
.BI -f
filter $$o=<outfile> filter_arg1 ...

-b batchfile

La lista degli article da postare.  Questo parametro è OBBLIGATORIO.
Tale file contiene un article per line, con
la linea essente il percorso al file che contiene l'article. Per
esempio:

.RS
-b /usr/spool/news/out.going/pixi
.RE

SE ci sono problemi con l'upload di messaggi specifici, verrà creato
un "failed" file.  Sarà chiamato "batchfile".fail, e conterrà le
linee di questo batchfile riguardanti i messaggi che non sono stati
mandati con successo.  Questo file può essere usato per riprocessare
tali messaggi tramite rpost.  NOTA: i messaggi duplicati NON sono
considerati un errore per il file fail.

-d 

Se l'upload dei messaggi ha successo, questa opzione comporterà
da parte di rpost la cancellazione del batchfile passato all'opzione -b.
 
-p prefix

Se il batchfile non contiene percorsi completi ma bensì
percorsi parziali, allora bisogna specificare questo parametro. Ciò è utile
quando il batch file è generato da un altro programma.
Per esempio, Inn nel file out.going elenca i path relativi alla sua
directory di base /usr/spool/news.  In quel caso usare appunto:

.RS
 -p /usr/spool/news
.RE

-f filter $$o=<outfile> filter_arg1 filter_arg2 ...

In molti casi, ogni article deve essere "ritoccato" prima che l'NNTP
remoto lo accetti.  Questa opzione permette di farlo.
Ci sono tre parametri obbligatori:

$$o=<outfile>	- <outfile> è il nome del file prodotto dal vostro
filtro che verrà uploadato al server NNTP remoto.
Questo argomento NON viene passato al vostro programma di filtro, e
può essere specificato dovunque nella linea di comando DOPO l'argomento
di filtro -f, sia prima del nome del filtro, sia dopo.

filter - nome del programma da chiamare.  Tutto ciò che segue filter,
TRANNE il $$o, sono argomenti passati al filtro.

arg1 - Il primo argomento al vostro programma/script di filtro.  Esso
molto probabilmente sarà $$i, che rpost riempie con il nome dell'article
che ha bisogno di essere pulito.

arg2 ... - possono essere specificati eventuali argomenti addizionali necessari.

.PP
Chiariamo un po' questo con un esempio.  Ad alcuni server NNTP non
piace ricevere article con l'NNTP-Posting-Host riempito.
Creiamo un piccolo script di shell per rimuoverlo da un file:

\-myscr--------------------------------------------

#!/bin/sh

sed -e "/^NNTP-Posting-Host/d" $1 > $2

\-end myscr----------------------------------------
.PP
quindi chiamiamo rpost in un modo tipo questo:
.RS
rpost -b /usr/spool/news/out.going/pixi -f myscr \\$\\$o=/tmp/FILTERED_MSG \\$\\$i /tmp/FILTERED_MSG
.RE

Allora, prima che ogni article venga uploadato, myscr viene chiamato più o meno
così:
.RS
myscr infilename /tmp/FILTERED_MSG
.RE

Dopo che myscr termina, rpost uploada al server NNTP
remoto l'article ripulito, conservato in /tmp/FILTERED_MSG.
.SH NOTA:
$$o e $$i devono essere escaped, usando o le barre inverse
come sopra, o gli apici, per evitare che la shell provi ad
interpretarli come variabili.  Se non si effettua bene l'escaping
rpost non funzionerà!

.SH AVVERTIMENTO:

Prestare molta attenzione a cosa il programma di filtro cancella dall'article.
Cancellare la linea sbagliata può avere cattivi effetti in seguito.  Per
esempio, non cancellare la linea MSG-ID, in quanto potrebbe far postare
tante volte lo stesso messaggio, in base alla configurazione di entrambi
i news server locale e remoto.

.SH FILE DI ARGOMENTI PER RPOST
.PP
Se si specifica @filename sulla linea di comando, rpost leggerà dal filename e
lo interpreterà per trovare eventuali argomenti che si vogliono passare ad
rpost.  In questo file si possono specificare gli stessi argomenti che si
specificherebbero sulla linea di comando. Gli argomenti possono trovarsi su
una linea, o sparsi tra più linee.
Si possono anche usare commenti.  I commenti iniziano con un '#' ed arrivano
alla fine della linea. Tutti gli argomenti dati dalla linea di comando
overridano gli argomenti nel file. Un vantaggio ad usare il file al posto della
linea di comando, è che non c'è bisogno di escapare eventuali caratteri
speciali, tipo $.

.RS
# Semplice file di Argomenti
.RE
.RS
-b batch # opzione batch file
.RE
.RS
-M	# usare l'opzione mode reader
.RE

.SH VALORI DI RITORNO
Rpost ritorna i seguenti valori d'uscita:

.RS
0 = successo
.RE
.RS
1 = errore postando un messaggio
.RE
.RS
2 = incapace di compiere l'autorizzazione NNTP con il server remoto.
.RE
.RS
3 = risposta inaspettata ad un comando mentre si stava compiendo
l'autorizzazione NNTP.
.RE
.RS
-1 = altro errore fatale.
.RE

.de R$
Questa è la revisione \\$3, \\$4.
..
.SH "VEDERE ANCHE"
suck(1), testhost(1), lpost(1).
