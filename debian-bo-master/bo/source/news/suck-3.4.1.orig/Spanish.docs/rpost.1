.\" $Revision: 1.3 $
.\" $Date: 1997/01/30 21:46:15 $
.TH RPOST 1
.SH NOMBRE
rpost - enviará un artículo a un servidor de noticias NNTP
.SH SINTAXIS
.I rpost
[
.BI
hostname
]
[
.BI @archivo
]
[
.BI -s\ |\ -S
archivo
]
[
.BI -e\ |\ -E
archivo
]
[
.BI -b
archivo-batch
]
[
.BI -p
prefijo
]
[
.BI -d
]
[
.BI \-U
userid
]
[
.BI \-P
clave
]
[
.BI \-M
]
[
.BI \-N
número_puerto
]
[
.BI \-l
archivo_de_frases
]
[
.BI -f
filtro $$o=<archivo_salida> filtro_arg1 ...
]
.SH DESCRIPCION
.I Rpost
enviará uno a más artículos al servidor específicado por
.I hostname.
Si ningún hostname es específicado, rpost usará la variable
.BI NNTPSERVER.
.SH Opciones Genéricas

.BI \-s | \-S
archivo

Estas opciones enviarán todos los mensajes de estado (normalmente
escritos a stdout) a un archivo alternativo.  La opción en minúsculas,
-s, enviará los mensajes de estado al archivo compilado por defecto en
suck_config.h.  Por defecto es /dev/null, por eso no será escrito ningún
mensaje en pantalla.  La opción en mayúsculas, -S, requiere el parámetro
de archivo. Todos los mensajes de estado serán enviados a ese archivo.

.BI \-e | \-E
archivo

Estas opciones enviarán todos los mensajes de error (normalmente
enviados a stderr) a un archivo alternativo.  La opción en minúsculas,
-e, enviará los mensajes de error al archivo compilado por defecto en
suck_config.h. Por defecto suck.errlog. La opción en mayúsculas, -E,
requiere el parámetro de archivo.  Todos los mensajes de error serán
enviados a ese archivo.

.BI \-U
userid
.BI \-P
clave

Estas dos opciones te permiten especificar una identificación de usuario
y una clave, si tu servidor NNTP las requiere.

.BI \-M

Esta opción le indica a rpost que mande el comando "mode reader" al
sevidor remoto.  Si se obtiene un mensaje de comando inválido
inmediatamente después de la bienvenida, inténtalo con esta opción.

.BI \-N
número_puerto

Esta opción indica a rpost que debe usar un número alternativo de puerto
NNRP cuando se conecte al host, en lugar de usar el predeterminado, 119.

.BI \@archivo 

Esta opción indica a rpost que lea otras opciones de un archivo además de
las específcadas en la línea de comando.

.BI \-l
archivo_de_frases

Esta opción le indica a rpost que cargue un archivo alternativo para las
frases, en vez de usar las frases compilados por defecto.  Esto permite
usar rpost con frases de otros idiomas, o que se puede modificar los
mensajes, sin tener que recompilar el programa.  Ver "FRASES EN IDIOMAS
EXTRANJEROS" en suck.1 para más información.

.SH MODO STDIN
rpost

rpost hostname

rpost lee un artículo de stdin y lo envia al servidor NNTP.  El artículo
debe tener un título de al menos dos líneas, llamándose Newsgroups:
y Subject: y un cuerpo (el artículo).  Título y cuerpo han de estar
separados por una línea. Rpost no modifica el artículo de ningún modo.

Rpost usa el comando POST para postear un artículo, igualmente que un
lector standar de noticias.  Ésto es beneficioso usando SLIP y PPP,
ya que la mayoría de los proveedores no admiten ningún otro método para
enviar artículos al servidor (como nntpsend o innxmit).

.SH MODO BATCH
.I rpost
.BI
hostname

.BI -b
archivo-batch
.BI -p
prefijo
.BI -d
.BI -f
filtro $$o=<salida> filtro_arg1 ...

-b archivo-batch

Una lista de artículos para ser enviados. Se REQUIERE este parámetro.
Este archvio contiene un artículo por línea, con la línea siendo la ruta
del archivo que contien el artículo. Por ejemplo:

.RS
-b /usr/spool/news/out.going/pixi
.RE

Si hay algún problema subiendo un mensáje específico, un archvio de
"fallo" será creado.  Se llamará "archivo-batch".fail, y contendrá las
líneas de los mensajes de el archivo-batch que no hayan sido correctamente
subidos.  Este archvio puede ser usado para reejecutar rpost con los
mensajes fallidos.  NOTA: mensajes duplicados NO son considerados un
error para el archivo fail.

-d 

Si el envío del mensaje es satisfactorio, está opción hará que rpost borre
el archivo-batch llamado con la opción -b.
 
-p prefijo

Si el archivo-batch no contiene la ruta completa, pero sí rutas relativas,
este parámetro debe ser especificado. Esto es útil cuando el archivo-batch
es generado por otro programa.  Por ejemplo, INN lista la ruta en
out.going relativa la directorio base /usr/spool/news.  En este caso usa:

.RS
 -p /usr/spool/news
.RE

-f filtro $$o=<salida> filtro_arg1 filtro_arg2 ...

En la mayoría de los casos, cada artículo debe ser modificado antes de que
el NNTP remoto lo acepte. Esta opción te permite hacerlo. Se requieren
dos parámetros para hacerlo:

$$o=<salida>	- <salida> es el nombre del archvio que tu filtro enviará al
servidor remoto NNTP. ESTO NO se pasa a tu program filtro.  Esto puede ser
específicado en cualquier lugar en la línea de comandos DEPUES del argumento
-f filtro.

$$i - Cuando rpost llama a tu filtro, reemplazará $$i con el nombre
del archivo del artículo para ser modificado.

arg1 - El primer argumento para tu filtro programa/script. Debería ser como
$$i

arg2 ... - cualquier argumento necesario adicional.

.PP
Vamos a aclarar esto con un ejemplo.  A algunos servidores NNTP no les
gusta recibir artículos con el header NNTP-Posting-Host.  Crea un
pequeño shell script para borrar ésto de un archivo:

\-myscr--------------------------------------------

#!/bin/sh

sed -e "/^NNTP-Posting-Host/d" $1 > $2

\-end myscr----------------------------------------
.PP
Luego ejecuta rpost así:
.RS
rpost -b /usr/spool/news/out.going/pixi -f myscr \\$\\$o=/tmp/FILTERED_MSG \\$\\$i /tmp/FILTER_MSG
.RE

Luego, después de que cada artículo ha sido subido, myscr es llamado así:
.RS
myscr infilename /tmp/FILTER_MSG
.RE

depués que myscr ha finalizado, rpost sube el artículo ya "filtrado",
almacenadolo en /tmp/FILTER_MSG, al servidor remoto NNTP.

.SH NOTA:
El $$o y $$i tienen que ser "escaped", usando backslashes como arriba,
o con comillas simples, para evitar que el shell intente interpretarlas
como variables.  Al no evitar esta interpretatación
¡hará que rpost deje de funcionar!

.SH AVISO:
Ten mucho cuidado con las cosas que el programa de filtración borra
del artículo.  Borrando una línea equivocada puede tener efectos
problematicos posteriormente.  Por ejemplo, NO borres la línea de MSG-ID,
porque esto puede provocar que se manda un artículo varias veces, segun
la configuración del servidor remoto o local.

.SH ARCHVIO DE ARGUMENTOS DE RPOST
.PP
Si específicas @archivo en la línea de comandos, rpost leerá del archivo
and y lo leerá para encontrar argumentos adicionales que podrías querer
pasar a rpost.  Se especifica los mismos argumentos en este fichero
que los que usarás en la línea de comando.  Los argumentos pueden estar
en una solo línea o separados en varias líneas.  Puedes también poner
comentarios.  Comentarios empiezan con '#' y terminan en el final de
la línea.  Todos los argumentos en la línea de comando tienen preferencia
sobre los argumentos del archivo.  Una ventaja del archivo es que no es
necesario usar el backslash para "escape" los caracteres especiales que
pueden ser interpretados por el shell, como $.

.RS
# Archivo de argumentos sencillo
.RE
.RS
-b batch # usa opción "batch file"
.RE
.RS
-M	# usa opción "mode reader"
.RE

.SH VALORES DE RETORNO
Rpost devuelve los siguientes valores de retorno:

.RS
0 = éxito
.RE
.RS
1 = error al enviar un artículo
.RE
.RS
2 = no ha sido posible conseguir la autorización del servidor NNTP remoto.
.RE
.RS
3 = respuesta no esperada al intentar conseguir la autorización NNTP.
.RE
.RS
-1 = otro error fatal.
.RE

.de R$
Esto es la revisión \\$3, \\$4.
..
.SH "VER TAMBIEN"
suck(1), testhost(1), lpost(1).
