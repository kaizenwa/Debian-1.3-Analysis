#@SHELL@

# If you have a /dev/audio character device, it will be used for
# playing the messages. If you don't, it will use zplay -s to play
# them.

AUDIO=/dev/audio

# using the vplay program for Linux results in significantly
# better quality. If it doesn't exist, /dev/audio is used,
# if that doesn't exist either, the modem speaker.

VPLAY=/usr/local/bin/vplay

check_messages () {
	if [ "`ls @VOICE_DIR@/incoming 2>/dev/null | wc -l`" -eq 0 ]
	then
		echo "No messages."
		exit 0
	fi
}

check_messages

if [ ! -c "$AUDIO" -a -z "$ZPLAY_X" ]
then
	trap "" SIGQUIT
	eval "@BINDIR@/zplay -X/bin/sh $0 $*"
	exit 0
fi

cd @VOICE_DIR@/incoming
FLAG=.flag

DIALOG=dialog
DONE=no

while [ $DONE = "no" ]; do
	if $DIALOG </dev/tty --clear --title "PLAY VOICE" \
		--menu "Pick a voice file to play" 20 51 14 \
		`ls -l voc* \
		| awk '{ printf("%s %s-%s-%s-(%dk)\n",$9,$6,$7,$8,$5/1024) }' \
		| sort +1M +1 -r` \
		2> /tmp/menu.tmp.$$; then

		choice=`cat /tmp/menu.tmp.$$`
		$DIALOG </dev/tty --title "PLAYING FILE" \
			--infobox "Playing $choice\npress [space] to skip" 5 51
		if [ -z "$ZPLAY_X" ]
		then
			trap "" SIGINT
			stty quit ' '
			if [ -x $VPLAY ]
			then
				adpcmtopvf <$choice | pvftovoc | $VPLAY
			else
				adpcmtopvf <$choice | pvfspeed 1.2 | \
					pvftoau -ulaw > $AUDIO
			fi
			stty sane
			trap SIGINT
		else
			trap "" SIGINT
			stty quit ' ' </dev/tty
			zplay -S -s $choice
			stty sane </dev/tty
			trap SIGINT
		fi
		if $DIALOG </dev/tty --clear --title "DELETE FILE" \
			--yesno "Delete $choice?" 5 51; then
			rm -f $choice
		fi
		check_messages
	else
		$DIALOG --clear
		DONE=yes
		rm -f $FLAG
	fi
	rm -f /tmp/menu.tmp.$$
done
