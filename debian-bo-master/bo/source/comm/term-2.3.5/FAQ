1) Term doesn't work! Why not??!!

	This is one of the most tremendously useful questions I have
ever been asked. You will notice that it contains all the pertinent
information I might want to know, like what version of term they are
using, and exactly what the symptoms are, and what machine they are
running it on, and what they have tried, etc etc. However here are a
few things to try before mailing me with details. :)

	a) Create a ~/.term/termrc file at both ends with the two
lines "escape 0-31" and "escape 128-159" in it. Then try term. If this
works, try shortening the ranges as much as possible. Experience
indicates that most people will be able to get away with either
nothing, or "escape 17" and "escape 19", or escaping 17, 19, 145 and
147. 

	b) If 'a' doesn't work, it's possible that you have a
seven-bit line. Try using a termrc with the two lines "sevenbit"
and "escape 0-31" in it. It is important to know that the termrc at
each end must have 'sevenbit' in it.
	
	If you do need to mail me please include as much of the following
list as is relevant:
		Term version(s):
		Remote system:
		Local system:
		Local modem type & UART type:
		Remote modem type & UART type, if known:
		A detailed description of the problem.
		A description of what you have tried.
		A transcript of the problem, if possible.
		Code that produces the problem, if possible.
		A patch to fix it, if you know the solution.

2) Term doesn't run as fast as it should. Why not??

	Several ways to speed up term. Here are the most common...
	a) Escape as few characters as possible. Escaping 32 characters will
cut thru-put by about 12-15%.

	b) If you escape a character on one end, add a corresponding 'ignore'
on the other. I.e. if you 'escape 17' on the remote end, put a 'ignore 17'
on the local end.

	c) Sevenbit mode will completely block all compression.  This means
term won't compress and neither will your modem.  However this is still
more efficient than escape 128-255.  This will probably be fixed with a
future release.

	d) There is still a little black magic involved in getter term to run
at full speed.  By this I mean, I can't describe a step by step procedure
for all situations, but normally with enough playing with termrc options,
modem settings, and stty settings you can get 99% performance.  Usually,
the best way to learn how to optimize speed, is to try it first with no
hardware problems.  To do this, try running termtest as:

	'./termtest -s <your baudrate>',

and optimize the speed to better than <your baudrate>/9 cps with the termrc
file.  Then putting in your serial line's restrictions such as escape
characters, sevenbit, stop bits, etc.  Now at any time you should be
able to use ./termtest to determine what is the maximum speed you should
be obtaining for compressed data.

3) 'txconn' doesn't seem to work.

	a) Make sure you have 'xhost +' on both machines.

	b) X windows take awhile to open; be patient.

	c) Make sure you are running txconn on your remote machine, not your
local machine.

	d) The syntax of txconn for term 2.X is slightly different than 
from term 1.X.  Be sure to read the manual page.

        e) Try instead "tredir 6009 6000"

4) X windows take a long time to open, and then run very slowly.

	a) Try picking up a copy of sxpc from sunsite.unc.edu.  Don't ask
me how to install it; I've never used it.  Expect about 20% speed
improvement.

	b) Try compiling your favorite X applications on your home machine.
For applications like xarchie, this is a big win.

5) Trsh just hangs when I execute it.

	Trsh is an endless source of problems.

	a) Try using something simple like:

	       	trsh -s echo trsh works in simple mode

	If this works, then you can use "trsh" with the "-s" option.  Try
defining NO_PTYEXEC in config.h and recompile.

	b) Try using telnet instead.  i.e. Do once "tredir 4023 23".  Then
you should be able to connect with the command "telnet localhost 4023".  If
this works, you may wish to recompile telnet with the instructions in 
README.porting, so you don't have to do the tredir command every time you
establish a term connection.  Also, you can compile rlogin, so you don't have
to login every time.

6) Is there a term mailing list? 

	 Yes there is; it is a channel of the linux-activists stuff.  Try
mailing:

  echo X-Mn-Admin: join term | mail linux-activists-request@niksula.hut.fi

A help file is available upon request from the same address.

7) Is there a term internet news group?

	No, but please use comp.protocols.misc.  If the traffic gets large
enough, someone can propose a split for term.

8) I get a : gethostbyname: ...  error when term starts.  Why?

	This means that your `hostname` is not set properly set.  Term will
still work despite this error, but won't automatically recognize your hostname.

9) I did tredir 4021 21, but people still can't ftp my machine.

	You need inetd.term.tar.gz  There is a copy on physics.purdue.edu.
It should appear at other sites sometime.  Also, in.ftpd needs to be compiled
with term support.

10) Is there an easier way to port software than recompiling?

	Under Linux, you can use "termify", also available on
physics.purdue.edu.  Eventually "termify" may be ported to other
OS's that use shared libraries.

	Under Solaris 2.x, you can use "termwrap".  Unlike "termify" it
uses LD_PRELOAD, so SUID programs won't work.  Unfortunately, the
same trick won't work under Linux yet...  (Although, people are 
working on it. LD_PRELOAD works, but you can't access the original
functions yet.  At least that is what I was told last time I checked.)

11) I've termified in.ftpd and am using inetd.term, but I get the following
error when I try transferring data:

425 Can't build data connection -1 7f000001 2104: Transport endpoint is already connected.
connected.

	I don't understand why, but from neither the localhost or remotehost
can you use the name 'localhost' with termified in.ftpd.  If you simply use
the full hostname instead, it should work.  i.e. ftp localhost 4021 fails,
but ftp `hostname` 4021 works.


