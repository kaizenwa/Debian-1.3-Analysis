#
# This file is a Makefile for GroupKit, adapted from the one for Tcl-DP.  
# If it has the name "Makefile.in" then it is a template for a Makefile;  
# to generate the actual Makefile, run "./configure", which is a 
# configuration script generated by the "autoconf" program (constructs 
# like "@foo@" will get replaced in the actual Makefile.

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@

# Directory in which to install the library of GroupKit scripts 
# and demos (note: you can set the GK_LIBRARY environment 
# variables at run-time to override the compiled-in location):

GK_LIBRARY =	$(prefix)/lib/groupkit

# Directory in which to install the archive libgk.a:
LIB_DIR =	$(exec_prefix)/lib

# Directory in which to install the program gkwish:
BIN_DIR =	$(exec_prefix)/bin

# Directory in which to install the include file gk.h:
INCLUDE_DIR =	$(prefix)/include

# Top-level directory for manual entries:
MAN_DIR =	$(prefix)/man

# Directory in which to install manual entry for gkwish, registrar, etc.
MAN1_DIR =	$(MAN_DIR)/man1

# Directory in which to install manual entries for GroupKit's C library
# procedures:
MAN3_DIR =	$(MAN_DIR)/man3

# Directory in which to install manual entries for the built-in
# Tcl commands implemented by GroupKit:
MANN_DIR =	$(MAN_DIR)/mann

# The directory containing the Tcl sources and headers appropriate
# for this version of GroupKit ("@srcdir@" will be replaced or has already
# been replaced by the configure script):
TCL_DIR =	$(INCLUDE_DIR)

# The directory containing the Tk sources and headers appropriate
# for this version of GroupKit ("@srcdir@" will be replaced or has already
# been replaced by the configure script):
TK_DIR =	$(INCLUDE_DIR)

# The directory containing the Tcl library archive file appropriate
# for this version of GroupKit:
TCL_BIN_DIR =	$(LIB_DIR)

# The directory containing the Tk library archive file appropriate
# for this version of GroupKit:
TK_BIN_DIR =	$(LIB_DIR)

# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =  @XINCLUDES@

# Linker switch(es) to use to link with the X11 library archive (the
# configure script will try to set this value automatically, but you
# can override it).
X11_LIB_SWITCHES =	@XLIBSW@

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -O

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# Mathematical functions like sin and atan2 are enabled for expressions
# by default.  To disable them, reverse the comment characters on the
# following pairs of lines:
MATH_LIBS = @MATH_LIBS@
#MATH_LIBS =

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# Libraries to use when linking:  must include at least GroupKit, Tk, 
# Tcl, Xlib, and the math library (in that order).  The "@LIBS@" part will be
# replaced (or has already been replaced) with relevant libraries as
# determined by the configure script.
LIBS = libgk.a $(TK_BIN_DIR)/libtk4.1.a $(TCL_BIN_DIR)/libtcl7.5.a $(X11_LIB_SWITCHES) @DL_LIBS@ @LIBS@ $(MATH_LIBS)

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

AC_FLAGS =		@DEFS@
INSTALL =		@INSTALL@
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA =		@INSTALL_DATA@
RANLIB =		@RANLIB@
SRC_DIR =		@srcdir@
VPATH =			@srcdir@

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------


CC =		@CC@
CC_SWITCHES =	${CFLAGS} -I${SRC_DIR} -I${TCL_DIR} -I${TK_DIR} \
-I${DP_DIR} ${AC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
-DGK_LIBRARY=\"${GK_LIBRARY}\" \
${X11_INCLUDES} ${HP_ANSI_FLAGS}


OBJS = tclXkeylist.o tclXmath.o gk.o gkenv.o

all: gkwish tclIndex

libgk.a: $(OBJS)
	rm -f libgk.a
	ar cr libgk.a $(OBJS)
	$(RANLIB) libgk.a

gkwish: libgk.a tkAppInit.o
	$(CC) $(CC_SWITCHES) tkAppInit.o $(LIBS) -o gkwish

tclIndex:
	@echo "Building tclIndex file"
	@./buildTclIndex

install: install-binaries install-libraries install-man

install-binaries: gkwish
	@for i in $(BIN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing gkwish"
	@$(INSTALL_PROGRAM) gkwish $(BIN_DIR)
	@echo "Installing libgk.a"
	@$(INSTALL_PROGRAM) libgk.a $(LIB_DIR)
	@echo "Installing gk.h"
	@$(INSTALL_PROGRAM) gk.h $(INCLUDE_DIR)
	@echo "Installing registrar and clients"
	@$(INSTALL_PROGRAM) bin/registrar $(BIN_DIR)
	@$(INSTALL_PROGRAM) bin/open.reg $(BIN_DIR) 
	@$(INSTALL_PROGRAM) bin/rmconf.reg $(BIN_DIR) 
	@$(INSTALL_PROGRAM) bin/command.reg $(BIN_DIR) 
	@$(INSTALL_PROGRAM) bin/room_server $(BIN_DIR) 
	@$(INSTALL_PROGRAM) bin/persist_server $(BIN_DIR) 
	@$(INSTALL_PROGRAM) bin/rooms.reg $(BIN_DIR) 

install-libraries:
	@for i in $(prefix)/lib $(INCLUDE_DIR) $(GK_LIBRARY) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@for i in $(SRC_DIR)/main $(SRC_DIR)/confs \
	     $(SRC_DIR)/reg_clients $(SRC_DIR)/bin $(SRC_DIR)/docs \
	     $(SRC_DIR)/library $(SRC_DIR)/tclIndex \
	     $(SRC_DIR)/widgets \
             $(SRC_DIR)/classBuilder $(SRC_DIR)/contrib ; \
            do \
	    echo "Installing $$i"; \
	    cp -r $$i $(GK_LIBRARY); \
	    done;

install-man:
	@for i in $(MAN_DIR) $(MAN1_DIR) $(MANN_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
	        echo "Making directory $$i"; \
	        mkdir $$i; \
	        chmod 755 $$i; \
	        else true; \
	        fi; \
	    done; \
        echo "Installing manual pages" 
	@cp $(SRC_DIR)/docs/*.1 $(MAN1_DIR) 
	@cp $(SRC_DIR)/docs/*.n $(MANN_DIR)
	

Makefile: $(SRC_DIR)/Makefile.in
	$(SHELL) config.status

clean:
	rm -f *.a *.o core errs *~ \#* TAGS *.E a.out errors gkwish libgk.a

distclean: clean
	rm -f Makefile config.status

.c.o:
	$(CC) -c $(CC_SWITCHES) $<
