%!PS-Adobe-3.0
%%Creator: groff version 1.08
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Courier
%%+ font Symbol
%%+ font Courier-Oblique
%%DocumentSuppliedResources: procset grops 1.08 0
%%Pages: 31
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.08 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll 
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-Oblique
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron
/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space
/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft
/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four
/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C
/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash
/bracketright/circumflex/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q
/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase
/guillemotleft/guillemotright/bullet/florin/fraction/perthousand/dagger
/daggerdbl/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guilsinglleft/logicalnot/minus
/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guilsinglright
/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def/Courier-Oblique@0 ENC0/Courier-Oblique RE
/Courier@0 ENC0/Courier RE/Times-Roman@0 ENC0/Times-Roman RE/Times-Italic@0
ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF(Elk: The Extension Language Kit)201.984 123 Q/F1 10
/Times-Italic@0 SF(Oliver Laumann* and Car)204.44 147 Q(sten Bormann)-.1 E<87>
-2 I/F2 10/Times-Roman@0 SF 2.5(*T)203.78 165 S(echnische Uni)216.69 165 Q -.15
(ve)-.25 G(rsit\344t Berlin, German).15 E(y)-.15 E 2.5<8755>224.12 177 S(ni)
238.84 177 Q -.15(ve)-.25 G(rsit\344t Bremen, German).15 E(y)-.15 E F1(ABSTRA)
264.535 213 Q(CT)-.3 E F2 .385
(In the past, users of an application generally were at the merc)133 245 R
2.885(yo)-.15 G 2.885(fi)395.465 245 S .385(ts authors when)404.46 245 R .628
(it came to adapting it to their indi)108 265 R .629(vidual needs and tastes.)
-.25 F .629(Fitting an application with an)5.629 F F1 -.2(ex)108 285 S 1.249
(tension langua).2 F -.1(ge)-.1 G F2(\(or)3.849 E F1 1.248(embedded langua)
3.748 F -.1(ge)-.1 G F2 3.748(\)e).1 G 1.248
(nables users to customize and enhance it)298.322 285 R 2.647(without ha)108
305 R 2.647(ving to modify its source code.)-.2 F(Recently)7.648 E 5.148(,v)
-.65 G 2.648(ariants of Lisp ha)345.008 305 R 2.948 -.15(ve b)-.2 H(ecome).15 E
2.335(increasingly popular for this purpose, to the point where the ab)108 325
R 2.335(undance of dif)-.2 F(ferent)-.25 E .139(dialects has gro)108 345 R .139
(wn into a problem.)-.25 F .139(Of the tw)5.139 F 2.639(os)-.1 G .14
(tandardized dialects of Lisp, only)300.821 345 R F1(Sc)2.64 E(heme)-.15 E F2
(is suitably modest, yet suf)108 365 Q(\214ciently general, to serv)-.25 E 2.5
(ea)-.15 G 2.5(sa)319.8 365 S 2.5(ne)330.63 365 S(xtension language.)342.42 365
Q F1(Elk)133 388.6 Q F2 2.624(,t)C(he)154.234 388.6 Q F1 .123(Extension Langua)
2.623 F .323 -.1(ge K)-.1 H(it).1 E F2 2.623(,i)C 2.623(saS)270.916 388.6 S
.123(cheme implementation that is intended to be)290.052 388.6 R .111
(used as a general, reusable e)108 408.6 R .112
(xtension language subsystem for inte)-.15 F .112(gration into e)-.15 F .112
(xisting and)-.15 F .367(future applications.)108 428.6 R .367
(Applications can de\214ne their o)5.367 F .366
(wn Scheme data types and primiti)-.25 F -.15(ve)-.25 G(s,).15 E(pro)108 448.6
Q .203(viding for a tightly-knit inte)-.15 F .204
(gration of the C/C++ parts of the application with Scheme)-.15 F 3.87
(code. Library)108 468.6 R(interf)3.87 E 1.37(aces, for e)-.1 F 1.369
(xample to the UNIX operating system and to v)-.15 F 1.369(arious X)-.25 F -.4
(Wi)108 488.6 S(ndo).4 E 3.896(wS)-.25 G 1.396(ystem libraries, sho)151.246
488.6 R 3.896(wt)-.25 G 1.396(he ef)245.734 488.6 R(fecti)-.25 E -.15(ve)-.25 G
1.396(ness of this approach.).15 F(Se)6.397 E -.15(ve)-.25 G 1.397
(ral features of).15 F .367(Elk such as dynamic loading of object \214les and \
freezing of fully customized applications)108 508.6 R 2.587(into e)108 528.6 R
-.15(xe)-.15 G 2.587(cutables \(implemented for those UNIX en).15 F 2.587
(vironments where it w)-.4 F 2.587(as feasible\))-.1 F .254
(increase its usability as the backbone of a comple)108 548.6 R 2.754(xa)-.15 G
2.754(pplication. Elk)319.816 548.6 R .254(has been used in this)2.754 F -.1
(wa)108 568.6 S 2.859(yf).1 G .359(or se)130.749 568.6 R -.15(ve)-.25 G 2.859
(ny).15 G .359(ears within a locally-de)172.167 568.6 R -.15(ve)-.25 G .359
(loped OD).15 F .359(A-based multimedia document editor;)-.4 F 1.063
(it has been used in numerous other projects after it could be made freely a)
108 588.6 R -.25(va)-.2 G 1.063(ilable \214v).25 F(e)-.15 E(years ago.)108
608.6 Q/F3 10/Times-Bold@0 SF 2.5(1. Intr)72 660.6 R(oduction)-.18 E F2 .848
(The designers and implementors of a lar)97 684.2 R .848(ge or comple)-.18 F
3.348(xa)-.15 G .848(pplication can rarely anticipate all require-)329.53 684.2
R .087(ments future users will ha)72 704.2 R .387 -.15(ve o)-.2 H 2.587(nt).15
G .087(he application.)202.712 704.2 R -.8(Ty)5.087 G(pically).8 E 2.587(,u)
-.65 G .086(sers wish to be able to customize the user inter)313.733 704.2 R(-)
-.2 E -.1(fa)72 724.2 S 2.765(ces of applications according to their personal \
tastes or requirements, or the).1 F 5.265(yw)-.15 G 2.765(ant to e)429.475
724.2 R 2.765(xtend the)-.15 F EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2-)279.67 56 S .478
(functionality of an application \(either by combining e)72 92 R .477
(xisting functions into ne)-.15 F 2.977(wo)-.25 G .477
(nes or by adding entirely)402.662 92 R(ne)72 112 Q 2.798(wc)-.25 G 2.798
(apabilities\). This)95.648 112 R .299
(is especially true for applications used routinely)2.798 F 2.799(,s)-.65 G
.299(uch as te)370.436 112 R .299(xt editors, and for appli-)-.15 F
(cations with a high de)72 132 Q(gree of user interaction or with comple)-.15 E
2.5(xg)-.15 G(raphical user interf)327.49 132 Q(aces.)-.1 E .95(Certainly an)97
155.6 R 3.45(ya)-.15 G .95
(pplication can be customized by modifying its source code and recompiling it.)
159.85 155.6 R(But)5.95 E .402(this approach is often not feasible, as the sou\
rce code of the application or the tools needed to recompile it)72 175.6 R .619
(may not be a)72 195.6 R -.25(va)-.2 G 3.119(ilable. Ev).25 F .619
(en if it were feasible, it w)-.15 F .618
(ould be a time-consuming process; it w)-.1 F .618(ould be hard to)-.1 F -.1
(ke)72 215.6 S .454(ep up with ne).1 F 2.954(wr)-.25 G .454
(eleases of the application; and the coe)150.116 215.6 R .454
(xistence of multiple, similar v)-.15 F .455(ersions of the same)-.15 F
(application w)72 235.6 Q(ould become a general maintenance headache.)-.1 E
.256(The alternati)97 259.2 R .556 -.15(ve t)-.25 H 2.756(ot).15 G .256
(his approach is not to `)173.188 259.2 R(`hard-wire')-.74 E 2.756('t)-.74 G
.256(he entire functionality and all e)318.764 259.2 R .256(xternal aspects)
-.15 F 1.166(of an application in the source code at all, b)72 279.2 R 1.167
(ut to pro)-.2 F 1.167(vide means to customize the application')-.15 F 3.667
(sb)-.55 G(eha)474.21 279.2 Q(vior)-.2 E(later by its users.)72 299.2 Q/F1 10
/Times-Bold@0 SF 2.5(1.1. Early)72 339.2 R
(Customization and Extension Languages)2.5 E F0(Man)97 362.8 Q 2.967(ya)-.15 G
.466(pplications support at least simple methods for customization, such as co\
mmand line options)127.587 362.8 R .007(or con\214guration \214les.)72 382.8 R
.007(More po)5.007 F .008(werful tools for customization are)-.25 F/F2 10
/Times-Italic@0 SF(macr)2.508 E 2.508(ol)-.45 G(angua)365.226 382.8 Q -.1(ge)
-.1 G(s).1 E F0(,)A F2 .008(command langua)2.508 F -.1(ge)-.1 G(s).1 E F0 2.508
(,o)C(r)500.67 382.8 Q F2 1.102(scripting langua)72 402.8 R -.1(ge)-.1 G(s).1 E
F0 1.102(that are typically found in te)3.602 F 1.101(xt editors and w)-.15 F
1.101(ord processors.)-.1 F 1.101(Prominent e)6.101 F 1.101(xamples of)-.15 F
1.299(such customization and e)72 422.8 R 1.299
(xtension languages are the macro language of the no)-.15 F 3.8(wl)-.25 G -.15
(eg)410.46 422.8 S 1.3(endary TECO editor).15 F .04
(and, in UNIX, the macro language of the)72 442.8 R F2(tr)2.54 E(of)-.45 E(f)
-.18 E F0(te)2.54 E .04
(xt formatter [Ossanna 1979] and the con\214guration language)-.15 F(of the)72
462.8 Q F2(sendmail)2.5 E F0(program.)2.5 E 2.012(Although man)97 486.4 R 4.512
(yo)-.15 G 4.513(ft)170.874 486.4 S 2.013(hese classic e)181.497 486.4 R 2.013
(xtension languages are quite po)-.15 F 2.013(werful \(some of them are full-)
-.25 F .161(\215edged programming languages\), the)72 506.4 R 2.661(yh)-.15 G
-2.25 -.2(av e)234.414 506.4 T 2.661(ar)2.861 G .161(eputation of being `)
261.036 506.4 R(`cryptic')-.74 E 2.661('a)-.74 G .16
(nd hard to understand and use)383.5 506.4 R 1.037(by untrained users.)72 526.4
R 1.037(The pre)6.037 F -.25(va)-.25 G 1.037
(iling opinion seems to be that only e).25 F 1.038
(xperts can actually bene\214t from these)-.15 F .339(types of e)72 546.4 R
.339(xtension languages \(for e)-.15 F .338(xample, people who ha)-.15 F .638
-.15(ve m)-.2 H .338(astered the).15 F F2(sendmail)2.838 E F0 .338
(con\214guration language)2.838 F .086
(in all details are commonly appointed the status of a `)72 566.4 R(`guru')-.74
E 2.586('\). In)-.74 F -.1(fa)2.586 G .086(ct, it can be observ).1 F .086
(ed that only v)-.15 F .086(ery fe)-.15 F(w)-.25 E 1.707(users of the)72 586.4
R F2(tr)4.207 E(of)-.45 E(f)-.18 E F0(te)4.207 E 1.707(xt formatter \(whose ma\
cro language is reputed to be particularly cryptic\) are using)-.15 F 1.938
(macro packages written by themselv)72 606.4 R 1.938(es; man)-.15 F 4.438(yu)
-.15 G 1.938(sers gi)272.738 606.4 R 2.238 -.15(ve u)-.25 H 4.438(pa).15 G
1.938(fter some time and f)332.862 606.4 R 1.939(all back on v)-.1 F(endor)-.15
E(-)-.2 E(supplied macro packages or packages written by a `)72 626.4 Q(`trof)
-.74 E 2.5(fg)-.25 G(uru.)306.22 626.4 Q -.74('')-.7 G .262
(Experience also indicates that simpli\214ed or specialized e)97 650 R .261
(xtension languages often ha)-.15 F .561 -.15(ve m)-.2 H .261(ore features).15
F 1.186(added and gro)72 670 R 3.686(wu)-.25 G 1.186(ntil the)146.678 670 R
3.686(yr)-.15 G 1.186(esemble a full programming language.)187.79 670 R 1.186
(Such `)6.186 F(`or)-.74 E -.05(ga)-.18 G 1.187(nically gro).05 F(wn')-.25 E
3.687('e)-.74 G(xtension)470.11 670 Q .49(languages are lik)72 690 R .49
(ely to be contorted designs as the)-.1 F 2.989(yw)-.15 G .489
(ill consist of se)291.399 690 R -.15(ve)-.25 G .489(ral le).15 F -.15(ve)-.25
G .489(ls of e).15 F .489(xtensions glued on to)-.15 F
(their initial, more limited design.)72 710 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-3-)279.67 56 S/F1 10/Times-Bold@0 SF 2.5
(1.2. High-Le)72 92 R -.1(ve)-.15 G 2.5(lE).1 G(xtension Languages)148.7 92 Q
F0 .475(Recently application designers ha)97 115.6 R .775 -.15(ve b)-.2 H -.15
(eg).15 G .476(un to abandon specialized and cryptic macro-style e).15 F
(xtension)-.15 E .839(languages in f)72 135.6 R -.2(avo)-.1 G 3.339(ro).2 G
3.339(fe)155.387 135.6 S .838(xtension languages that resemble usual high-le)
166.346 135.6 R -.15(ve)-.25 G 3.338(lp).15 G .838
(rogramming languages, mainly)377.614 135.6 R .889(languages with Algol/P)72
155.6 R .889(ascal-style or Lisp-style syntax and semantics.)-.15 F .889
(Prominent e)5.889 F .89(xamples of such high-)-.15 F(le)72 175.6 Q -.15(ve)
-.25 G 3.254(le).15 G .754(xtension languages are TPU de)98.584 175.6 R -.15
(ve)-.25 G .753(loped by DEC, the).15 F/F2 10/Times-Italic@0 SF(Ness)3.253 E F0
.753(language of the Andre)3.253 F 3.253(wT)-.25 G .753(oolkit [Hansen)444.087
175.6 R .228(1990], AutoDesk')72 195.6 R 2.728(sC)-.55 G .228(AD e)157.176
195.6 R .228(xtension language \(a dialect of Lisp\), and)-.15 F F2(Emacs-Lisp)
2.729 E F0 2.729(,t)C .229(he e)403.763 195.6 R .229(xtension language of)-.15
F(Richard Stallman')72 215.6 Q 2.5(sp)-.55 G
(opular GNU Emacs editor [Stallman 1981, Le)155.89 215.6 Q(wis et al. 1990].)
-.25 E .043(Emacs w)97 239.2 R .042
(as the \214rst wide-spread application to emplo)-.1 F 2.542(ya)-.1 G 2.542(na)
322.658 239.2 S .042(lready e)334.64 239.2 R .042
(xisting and widely used high-le)-.15 F -.15(ve)-.25 G(l).15 E .646
(programming language as its e)72 259.2 R .647
(xtension and customization language.)-.15 F .647
(Emacs-Lisp is a dynamically scoped)5.647 F .396
(dialect of Lisp with additional operations for te)72 279.2 R 2.896
(xt-editing. The)-.15 F .396(approach tak)2.896 F .396
(en by Emacs has been tremen-)-.1 F(dously successful; users of Emacs ha)72
299.2 Q .3 -.15(ve c)-.2 H(ontrib).15 E(uted a wealth of e)-.2 E
(xtensions written in Emacs-Lisp.)-.15 E 1.082(Note that Emacs-Lisp is not a)97
322.8 R F2 1.082(scripting langua)3.582 F -.1(ge)-.1 G F0 6.082(.I).1 G 3.582
(ti)312.666 322.8 S 3.582(st)321.808 322.8 S 1.082(ightly interw)332.06 322.8 R
-.15(ove)-.1 G 3.582(nw).15 G 1.082(ith the application for)414.374 322.8 R
.437(which it pro)72 342.8 R .437(vides e)-.15 F(xtensibility)-.15 E 5.437(.I)
-.65 G 2.937(ta)205.018 342.8 S .437(lso is some)215.175 342.8 R .436
(what inaccessible to the casual user)-.25 F 2.936(,w)-.4 G .436(ho is unlik)
416.596 342.8 R .436(ely to ha)-.1 F -.15(ve)-.2 G(pre)72 362.8 Q .556(vious e)
-.25 F .556(xperience with Lisp-lik)-.15 F 3.056(el)-.1 G 3.056(anguages. This)
218.144 362.8 R .557(can be contrasted with languages such as Tcl [Ouster)3.056
F(-)-.2 E 1.132(hout 1990] and REXX [Co)72 382.8 R(wlisha)-.25 E 3.632(w1)-.15
G 1.131(985], whose underlying models are no less comple)225.86 382.8 R 1.131
(x, b)-.15 F 1.131(ut which are)-.2 F .499(similar enough to well-kno)72 402.8
R .499(wn languages such as B)-.25 F .5
(ASIC to present less of an obstacle to casual users.)-.35 F(On)5.5 E .446
(the other hand, non-tri)72 422.8 R .446(vial e)-.25 F .445(xtensions bene\214\
t from the structuring functionality inherent in general purpose)-.15 F
(programming languages such as Lisp.)72 442.8 Q F1 2.5(1.3. Elk)72 482.8 R
(as a General, Reusable Extension Language)2.5 E F0 .791
(Using Lisp or Lisp-style languages as e)97 506.4 R .792
(xtension languages seems to enjo)-.15 F 3.292(yg)-.1 G(ro)409.036 506.4 Q .792
(wing popularity; se)-.25 F(v-)-.25 E 1.118(eral applications besides Emacs no)
72 526.4 R 3.617(wu)-.25 G 1.117(se dialects of Lisp as their e)231.477 526.4 R
1.117(xtension language.)-.15 F 1.117(This de)6.117 F -.15(ve)-.25 G(lopment)
.15 E .094(has one disadv)72 546.4 R .094
(antage: the number of incompatible \(b)-.25 F .095(ut similar\) e)-.2 F .095
(xtension languages is continually gro)-.15 F(wing.)-.25 E .944(Users ha)72
566.4 R 1.244 -.15(ve t)-.2 H 3.444(ol).15 G .944(earn a ne)134.192 566.4 R
3.444(wl)-.25 G .944(anguage for each ne)185.364 566.4 R 3.444(wa)-.25 G .944
(pplication, and application writers k)283.29 566.4 R .944(eep implementing)-.1
F(ne)72 586.4 Q 2.5(we)-.25 G
(xtension language interpreters instead of reusing e)95.2 586.4 Q
(xisting ones.)-.15 E .012(These problems can be solv)97 610 R .012
(ed by a general, reusable e)-.15 F .013
(xtension language implementation that applica-)-.15 F .995
(tion writers can include into their applications, an)72 630 R F2 -.2(ex)3.494
G .994(tension langua).2 F 1.194 -.1(ge k)-.1 H(it).1 E F0 5.994(.T)C .994
(he main objecti)386.95 630 R 1.294 -.15(ve o)-.25 H 3.494(ft).15 G(he)477.736
630 Q F2(Elk)3.494 E F0 .645(project w)72 650 R .645(as to de)-.1 F -.15(ve)
-.25 G .645(lop such an e).15 F .646(xtension language kit and to mak)-.15 F
3.146(ei)-.1 G 3.146(tf)351.174 650 S .646(reely a)360.43 650 R -.25(va)-.2 G
.646(ilable to encourage use by).25 F(application writers.)72 670 Q EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-4-)279.67 56 S/F1 10/Times-Bold@0 SF 2.5(2. Ov)72
92 R(er)-.1 E(view of the Extension Language Kit)-.1 E 2.5(2.1. The)72 132 R
(Ev)2.5 E(olution of Elk)-.1 E F0 2.48 -.8(We w)97 155.6 T .88
(ere prompted to de).8 F -.15(ve)-.25 G .88
(lop Elk when a search for a suitable e).15 F .88
(xtension language implementation)-.15 F .363(for ISO)72 175.6 R .363
(TEXT [Bormann et al. 1988, Bormann 1991] w)-.4 F .364(as fruitless.)-.1 F(ISO)
5.364 E(TEXT)-.4 E 2.864(,ad)-.74 G .364(ocument processing sys-)404.952 175.6
R .812(tem with a graphical user interf)72 195.6 R .812
(ace, is almost entirely written in C++; its user interf)-.1 F .812
(ace is based on the X)-.1 F(windo)72 215.6 Q 2.688(ws)-.25 G .188(ystem [Sche\
i\215er et al. 1986, Schei\215er et al. 1992] and the OSF/Motif widget set.)
110.548 215.6 R(Customizability)5.188 E(and e)72 235.6 Q
(xtensibility through a full e)-.15 E
(xtension language were basic requirements on the design of ISO)-.15 E(TEXT)-.4
E(.)-.74 E .002(As we consider language design to be the domain of a `)97 259.2
R .002(`selected fe)-.74 F(w')-.25 E 2.502('a)-.74 G .002(nd did not w)383.826
259.2 R .002(ant to act as ama-)-.1 F .64
(teurs in this \214eld, we decided to use an e)72 279.2 R .64
(xisting programming language as the basis for the e)-.15 F .64(xtension lan-)
-.15 F .573(guage of ISO)72 299.2 R(TEXT)-.4 E 5.573(.T)-.74 G .573
(his decision w)165.059 299.2 R .572(as also in\215uenced by our desire to de)
-.1 F -.15(ve)-.25 G .572(lop a general, reusable e).15 F(xten-)-.15 E .239(si\
on language implementation that is not hard-wired into one speci\214c applicat\
ion.)72 319.2 R -.15(Fo)5.24 G 2.74(ran).15 G .24(umber of reasons)434.65 319.2
R .614(an interpreted language seemed preferable: e)72 339.2 R .613
(xtensions can be added to \(or modi\214ed in\) a running applica-)-.15 F .565
(tion without re-linking it; b)72 359.2 R .565(ugs in e)-.2 F .566
(xtensions can be caught in the interpreter and do not crash the applica-)-.15
F .329(tion; interpreted languages usually of)72 379.2 R .328(fer better deb)
-.25 F .328(ugging f)-.2 F .328
(acilities; and implementing an interpreter gener)-.1 F(-)-.2 E
(ally is easier than implementing a compiler)72 399.2 Q(.)-.55 E .021
(From the be)97 422.8 R .021(ginning we f)-.15 F -.2(avo)-.1 G .021
(red Lisp or a dialect of Lisp as the basis for a general e).2 F .022
(xtension language.)-.15 F .975(Most dialects of the Lisp f)72 442.8 R .974
(amily are `)-.1 F(`small')-.74 E .974
(', easy to implement, general-purpose languages with simple)-.74 F 1.905
(syntax and po)72 462.8 R 1.905
(werful semantics, and the suitability of Lisp as an e)-.25 F 1.906
(xtension language had already been)-.15 F .388(demonstrated by se)72 482.8 R
-.15(ve)-.25 G .388(ral applications, among them GNU Emacs.).15 F .387
(Early in the project we considered to use)5.387 F .215(Emacs-Lisp, b)72 502.8
R .215(ut it appeared infeasible to isolate the Lisp interpreter from the rest\
 of Emacs.)-.2 F .216(In addition, at)5.216 F .287(the time we in)72 522.8 R
-.15(ve)-.4 G(stig).15 E .287(ated Emacs-Lisp it w)-.05 F .287(as lacking se)
-.1 F -.15(ve)-.25 G .286(ral desirable language features, such as support for)
.15 F 1.31(\215oating point and arbitrary precision numbers \()72 542.8 R/F2 10
/Times-Italic@0 SF(bignums)A F0 3.81(\). W)B 3.81(ea)-.8 G 1.31
(lso considered using MIT Scheme [MIT)336.64 542.8 R .382(1984], b)72 562.8 R
.381(ut due to the enormous size of its implementation it w)-.2 F .381(ould ha)
-.1 F .681 -.15(ve d)-.2 H .381(ominated the size of the applica-).15 F(tion.)
72 582.8 Q F1 2.5(2.2. Scheme)72 622.8 R(as an Extension Language)2.5 E F0 .205
(As other implementations of Lisp or Lisp-lik)97 646.4 R 2.706(el)-.1 G .206
(anguages a)287.498 646.4 R -.25(va)-.2 G .206
(ilable did not meet our requirements, we).25 F 2.006
(\214nally decided to write an interpreter for the Lisp dialect)72 666.4 R F2
(Sc)4.506 E(heme)-.15 E F0 2.005([Clinger et al. 1991, Dyb)4.505 F 2.005
(vig 1987,)-.15 F .191(Springer et al. 1989, Abelson et al. 1985].)72 686.4 R
.192(This Scheme interpreter is the main component of the Elk pack-)5.192 F
3.766(age. Scheme)72 706.4 R 1.266(is a simpli\214ed, `)3.766 F(`cleaned-up')
-.74 E 3.766('d)-.74 G 1.266
(ialect of Lisp with \214rst-class procedures and static scoping)259.466 706.4
R 2.751(rules. The)72 726.4 R .252(Scheme language is based on only a fe)2.751
F 2.752(wl)-.25 G .252(anguage features and semantic concepts; it consists of)
286.446 726.4 R EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-5-)279.67 56 S 2.947(as)72 92 S .447
(mall core of syntactic forms, a set of e)83.277 92 R .446(xtended forms deri)
-.15 F -.15(ve)-.25 G 2.946(df).15 G .446
(rom them, and a number of standard pro-)336.468 92 R .629(cedures \()72 112 R
/F1 10/Times-Italic@0 SF(primitive)A F0 .629
(procedures\) that operate on a comprehensi)3.129 F .929 -.15(ve s)-.25 H .63
(et of types of objects \(among them num-).15 F 3.59(bers, lists, v)72 132 R
3.59(ectors, symbols, characters, and strings\).)-.15 F 3.59
(In 1990 Scheme became an IEEE standard)8.59 F -.834([IEEE Std 1178-1990])72
152 R .402(\(the standard document, although only 50 pages long, includes the \
formal semantics)2.902 F(of the language\).)72 172 Q .61
(The standardization ef)97 195.6 R .609
(fort has increased the acceptance of Scheme; for instance, the Extension Lan-)
-.25 F .234(guage W)72 215.6 R .234(orking Group of the CAD Frame)-.8 F -.1(wo)
-.25 G .234(rk Initiati).1 F .534 -.15(ve h)-.25 H .234
(as recently selected Scheme as the e).15 F .234(xtension lan-)-.15 F 1.483
(guage for future CAD applications [CFI 1991a, CFI 1991b].)72 235.6 R 1.482
(Among the established programming lan-)6.482 F .765
(guages we consider Scheme the ideal candidate for a general e)72 255.6 R .765
(xtension language \212 it is standardized; its)-.15 F .743(semantics are well\
-de\214ned; it has a simple syntax and is easy to implement; and it is suf)72
275.6 R .743(\214ciently small to)-.25 F(not dw)72 295.6 Q
(arf the application it mak)-.1 E(es e)-.1 E(xtensible.)-.15 E/F2 10
/Times-Bold@0 SF 2.5(2.3. Extending)72 335.6 R(the Extension Language)2.5 E F0
1.445(The implementation of an e)97 359.2 R 1.446
(xtension language must itself be e)-.15 F 3.946(xtensible. Extension)-.15 F
1.446(language code)3.946 F .067(that manipulates objects or state of the appl\
ication requires adding application-speci\214c primiti)72 379.2 R .366 -.15
(ve p)-.25 H(rocedures).15 E .613(to the base e)72 399.2 R .613
(xtension language.)-.15 F 2.213 -.8(To a)5.613 H(llo).8 E 3.113(wE)-.25 G .613
(lk programs to be e)249.231 399.2 R(xpressi)-.15 E .913 -.15(ve i)-.25 H 3.114
(nt).15 G .614(he conte)382.9 399.2 R .614(xt of a gi)-.15 F -.15(ve)-.25 G
3.114(na).15 G(pplica-)476.23 399.2 Q .342
(tion, application writers are encouraged \(and e)72 419.2 R .342
(xpected\) to e)-.15 F .342(xtend standard Scheme by a rich set of applica-)
-.15 F .152(tion-speci\214c data types and Scheme primiti)72 439.2 R -.15(ve)
-.25 G 2.652(st).15 G 2.652(oo)264.162 439.2 S .153
(perate on objects of these types.)276.814 439.2 R .153(In f)5.153 F .153
(act, easy e)-.1 F(xtensibil-)-.15 E .087
(ity of the language has been the primary design consideration in the de)72
459.2 R -.15(ve)-.25 G .086(lopment of Elk \(as opposed to per).15 F(-)-.2 E
.183(formance or number of language features\).)72 479.2 R .183(Adding ne)5.183
F 2.683(wt)-.25 G .183(ypes and primiti)303.704 479.2 R -.15(ve)-.25 G 2.683
(st).15 G 2.683(oE)387.463 479.2 S .183(lk is an ine)401.256 479.2 R(xpensi)
-.15 E .484 -.15(ve o)-.25 H(per).15 E(-)-.2 E(ation; it is not uncommon for a\
n application to de\214ne hundreds of application-speci\214c Scheme primiti)72
499.2 Q -.15(ve)-.25 G(s.).15 E .162(All primiti)97 522.8 R .462 -.15(ve p)-.25
H .161(rocedures of Elk are implemented as C or C++ functions.).15 F .161
(This is true for both b)5.161 F(uilt-in)-.2 E(primiti)72 542.8 Q -.15(ve)-.25
G 3.865(s\().15 G 1.365(such as)119.355 542.8 R F1(car)3.865 E F0(and)3.865 E
F1(cdr)3.865 E F0 3.865(\)a)C 1.365(nd primiti)214.21 542.8 R -.15(ve)-.25 G
3.865(sd).15 G 1.365(e\214ned by e)277.1 542.8 R 3.865(xtensions. From)-.15 F
1.365(the Scheme programmers')3.865 F .089(point of vie)72 562.8 R 1.388 -.65
(w, p)-.25 H(rimiti).65 E -.15(ve)-.25 G 2.588(sa).15 G .088(nd types from the\
 base set of the language are indistinguishable from application-)176.884 562.8
R .983(speci\214c primiti)72 582.8 R -.15(ve)-.25 G 3.483(sa).15 G .983
(nd types.)154.116 582.8 R .983(Extensions `)5.983 F(`re)-.74 E(gister')-.15 E
3.483('n)-.74 G 1.483 -.25(ew p)294.728 582.8 T(rimiti).25 E -.15(ve)-.25 G
3.483(sw).15 G .983(ith the interpreter by supplying the)360.484 582.8 R 1.614
(name of the primiti)72 602.8 R 1.914 -.15(ve a)-.25 H 1.614
(long with a pointer to the function implementing the primiti).15 F 1.914 -.15
(ve a)-.25 H 1.614(nd information).15 F .426(about the ar)72 622.8 R .426
(guments and calling style.)-.18 F(Ne)5.426 E 2.926(wt)-.25 G .427
(ypes are de\214ned in a similar w)255.362 622.8 R(ay)-.1 E 5.427(.R)-.65 G
-.15(eg)403.409 622.8 S .427(istration of ne).15 F 2.927(wp)-.25 G(rimi-)484
622.8 Q(ti)72 642.8 Q -.15(ve)-.25 G 2.744(sa).15 G .244(nd types usually tak)
97.674 642.8 R .243
(es place on startup of the interpreter or when a compiled e)-.1 F .243
(xtension is loaded into)-.15 F(the running interpreter)72 662.8 Q(.)-.55 E
.379(Another w)97 686.4 R .379(ay to use the e)-.1 F .379
(xtension mechanisms of Elk is to pro)-.15 F .38(vide interf)-.15 F .38
(aces to libraries, such as the)-.1 F 3.276(Cl)72 706.4 S .776
(ibrary or the libraries of the X windo)84.726 706.4 R 3.276(ws)-.25 G .775
(ystem \(e.)251.764 706.4 R(g.)1.666 E F1(Xlib)3.275 E F0 3.275(\). Elk)B .775
(has no f)3.275 F .775(acility to directly import `)-.1 F(`for)-.74 E(-)-.2 E
(eign')72 726.4 Q 2.548('f)-.74 G .048(unctions \(although one such f)101.018
726.4 R .048(acility has been contrib)-.1 F .048(uted as an e)-.2 F .048
(xtension to Elk\).)-.15 F .049(Therefore, a small)5.048 F EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-6-)279.67 56 S .795(amount of code acting as `)72
92 R(`glue')-.74 E 3.295('b)-.74 G .794
(etween Elk and the library has to be written to mak)215.81 92 R 3.294(et)-.1 G
.794(he contents of a)438.578 92 R 1.079(library a)72 112 R -.25(va)-.2 G 1.079
(ilable to Scheme programmers.).25 F 1.079(The main purpose of this interf)
6.079 F 1.08(ace code is to check the ar)-.1 F(gu-)-.18 E .082
(ments supplied to the library functions, to con)72 132 R -.15(ve)-.4 G .082
(rt Scheme objects into C types, and to con).15 F -.15(ve)-.4 G .081
(rt the results of).15 F 2.473(library functions back into Scheme objects.)72
152 R(Such)7.473 E/F1 10/Times-Italic@0 SF(libr)4.974 E 2.474(ary e)-.15 F
(xtensions)-.2 E F0 2.474(often act as an additional layer)4.974 F .372
(between the application to be e)72 172 R .372
(xtended and the libraries used by the application; the)-.15 F 2.872(ya)-.15 G
(llo)424.068 172 Q 2.871(wt)-.25 G .371(he application)447.249 172 R 1.386
(writers to abstract from the details of the libraries.)72 192 R 1.386
(Although it is useful to distinguish between)6.386 F F1(libr)3.887 E(ary)-.15
E F0 -.15(ex)72 212 S .049(tensions and e).15 F .049(xtensions interf)-.15 F
.049(acing to)-.1 F F1(applications)2.549 E F0 2.549(,t)C .049
(here is no technical dif)291.604 212 R .048(ference \212 in both cases a col-)
-.25 F(lection of types and functions is made a)72 232 Q -.25(va)-.2 G
(ilable to the Scheme w).25 E(orld.)-.1 E .987(Since man)97 255.6 R 3.487(yo)
-.15 G 3.487(ft)153.264 255.6 S(oday')162.861 255.6 Q 3.487(sa)-.55 G .987
(pplications need to interact with the X W)196.898 255.6 R(indo)-.4 E 3.487(wS)
-.25 G .988(ystem, library e)401.904 255.6 R(xtensions)-.15 E .367
(are included with Elk that interf)72 275.6 R .367(ace to the X11 `)-.1 F
(`Xlib')-.74 E 2.866('\()-.74 G .366(similar in its functionality to `)299.038
275.6 R(`CLX')-.74 E 2.866('[)-.74 G .366(CLX 1991],)455.304 275.6 R -.2(bu)72
295.6 S 3.518(ti).2 G 1.018
(mplemented on top of Xlib\), to the X11 toolkit intrinsics \(`)90.878 295.6 R
(`Xt')-.74 E 1.019('\), and to the Athena and OSF/Motif)-.74 F(widget sets.)72
315.6 Q .269(In addition, the Elk UNIX e)97 339.2 R .269(xtension pro)-.15 F
.268(vides Scheme access to most UNIX system calls and operat-)-.15 F 1.331
(ing system interf)72 359.2 R 1.331(ace C library functions)-.1 F/F2 8
/Times-Roman@0 SF(1)-3.2 I F0 6.331(.T)3.2 K 1.331(he e)256.086 359.2 R 1.331
(xtension supports a wide range of dif)-.15 F 1.332(ferent UNIX plat-)-.25 F
.897(forms without restricting its functionality to the lo)72 379.2 R .896
(west common denominator or the POSIX 1003.1 func-)-.25 F 3.229(tions. T)72
399.2 R 3.229(of)-.8 G .729(acilitate writing portable Scheme programs, the e)
116.448 399.2 R .729(xtension attempts to hide dif)-.15 F .73(ferences between)
-.25 F(the types of supported UNIX \215a)72 419.2 Q -.2(vo)-.2 G(rs.).2 E/F3 10
/Times-Bold@0 SF 2.5(3. Using)72 459.2 R(Elk in A)2.5 E(pplications)-.25 E F0
.188(In contrast to other e)97 482.8 R .188
(xtension language implementations \(e.)-.15 F .187(g. Tcl\), Elk does not pro)
1.666 F .187(vide its function-)-.15 F .501
(ality in the form of a library that is statically link)72 502.8 R .501
(ed into an application to be e)-.1 F 3.001(xtended. Instead,)-.15 F .502
(the object)3.001 F 1.438
(modules comprising the application and all required library e)72 522.8 R 1.437
(xtensions are dynamically link)-.15 F 1.437(ed with and)-.1 F 2.512
(loaded into the running Scheme interpreter)72 542.8 R 7.512(.T)-.55 G 5.012
(oa)270.692 542.8 S 2.512(ccomplish this, the)285.144 542.8 R F1(load)5.012 E
F0(primiti)5.012 E 2.812 -.15(ve o)-.25 H 5.012(fE).15 G 2.512(lk has been)
453.986 542.8 R -.15(ex)72 562.8 S .071
(tended to load not only \214les containing Scheme code, b).15 F .071
(ut also object \214les \212 compiled e)-.2 F .071(xtensions written)-.15 F
.567(in C or C++.)72 582.8 R .568(Dynamic loading enables applications to load\
 less frequently used modules into the running)5.567 F .268(program only on de\
mand; such an application is initially smaller than the equi)72 602.8 R -.25
(va)-.25 G .268(lent statically link).25 F .268(ed appli-)-.1 F
(cation \(where all modules must be combined into one lar)72 622.8 Q(ge e)-.18
E -.15(xe)-.15 G(cutable \214le\).).15 E 2.292
(Dynamic loading of object \214les is often used together with the)97 646.4 R
F1(dump)4.793 E F0(primiti)4.793 E 2.593 -.15(ve t)-.25 H 2.293(hat creates an)
.15 F -.15(exe)72 666.4 S 1.175(cutable \214le from the running interpreter).15
F 3.675(,s)-.4 G 1.175(imilar to)259.7 666.4 R F1(une)3.675 E(xec)-.2 E F0
1.175(of GNU Emacs or)3.675 F F1(dumplisp)3.675 E F0 1.175(in some Lisp)3.675 F
.32 LW 76 676.4 72 676.4 DL 80 676.4 76 676.4 DL 84 676.4 80 676.4 DL 88 676.4
84 676.4 DL 92 676.4 88 676.4 DL 96 676.4 92 676.4 DL 100 676.4 96 676.4 DL 104
676.4 100 676.4 DL 108 676.4 104 676.4 DL 112 676.4 108 676.4 DL 116 676.4 112
676.4 DL 120 676.4 116 676.4 DL 124 676.4 120 676.4 DL 128 676.4 124 676.4 DL
132 676.4 128 676.4 DL 136 676.4 132 676.4 DL 140 676.4 136 676.4 DL 144 676.4
140 676.4 DL/F4 6/Times-Roman@0 SF(1)82 685.8 Q F2 .161(The UNIX e)4 2.4 N .162
(xtension de\214nes procedures for lo)-.12 F(w-le)-.2 E -.12(ve)-.2 G .162
(l, \214le-descriptor).12 F .162
(-based I/O; creation of pipes; \214le/record locking;)-.16 F 1.025(\214le and\
 directory system calls; process creation and control; signal handling; error \
handling; and obtaining information)72 698.2 R
(about date, time, users, limits, process resources, etc.)72 708.2 Q EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-7-)279.67 56 S 3.632(systems. The)72 92 R/F1 10
/Times-Italic@0 SF(dump)3.632 E F0(primiti)3.632 E 1.432 -.15(ve o)-.25 H 3.632
(fE).15 G 1.132(lk dif)215.31 92 R 1.132(fers from e)-.25 F 1.132
(xisting, similar mechanisms in that the ne)-.15 F 1.132(wly created)-.25 F
-.15(exe)72 112 S .23(cutable, when called, starts at the point where).15 F F1
(dump)2.73 E F0 -.1(wa)2.73 G 2.73(sc).1 G .23(alled in the original in)319.95
112 R -.2(vo)-.4 G .23(cation \(as opposed to).2 F .012(the program')72 132 R
(s)-.55 E F1(main)2.512 E F0 .012(entry point\).)2.512 F .013
(Here the return v)5.013 F .013(alue of)-.25 F F1(dump)2.513 E F0 .013(is `)
2.513 F(`true')-.74 E .013(', while in the original in)-.74 F -.2(vo)-.4 G .013
(cation it).2 F(returns `)72 152 Q(`f)-.74 E(alse')-.1 E 2.5('\212n)-.74 G
(ot unlik)152.89 152 Q 2.5(et)-.1 G(he UNIX)193.35 152 Q F1(fork)2.5 E F0
(system call.)2.5 E/F2 10/Times-Bold@0 SF 2.5(3.1. Dynamic)72 192 R
(Loading and Dump in Cooperation)2.5 E F0 1.852 -.8(To g)97 215.6 T .252
(enerate a ne).8 F 2.752(wi)-.25 G .252(nstance of an application one w)175.818
215.6 R .252(ould typically in)-.1 F -.2(vo)-.4 G .452 -.1(ke t).2 H .252
(he Scheme interpreter).1 F 2.752(,l)-.4 G(oad)489.56 215.6 Q 1.725
(all object modules and all Scheme code required initially)72 235.6 R 4.225(,p)
-.65 G 1.726(erform all initializations that can survi)324.625 235.6 R 2.026
-.15(ve a)-.25 H F1(dump)72 255.6 Q F0 4.172(,a)C 1.672(nd \214nally dump an i\
mage of the running interpreter containing all the loaded code into a ne)
105.332 255.6 R(w)-.25 E -.15(exe)72 275.6 S .708(cutable on disk.).15 F .708
(The use of)5.708 F F1(dump)3.208 E F0 -.2(avo)3.208 G .708
(ids time-consuming acti).2 F .708
(vities such as loading of object \214les and)-.25 F .326
(other initializations on each startup.)72 295.6 R .325(The dumped e)5.326 F
-.15(xe)-.15 G .325(cutable, when started, resumes after the call to).15 F F1
(dump)2.825 E F0(;)A .206(at this point one w)72 315.6 R .206
(ould perform the remaining, en)-.1 F .206
(vironment-dependent initializations and \214nally in)-.4 F -.2(vo)-.4 G .407
-.1(ke t).2 H(he).1 E(application')72 335.6 Q 3.39(s`)-.55 G .89
(`main program')129.09 335.6 R 3.39('\()-.74 G -.834(e. g.)202.33 335.6 R .89
(enter the X toolkit')3.39 F 3.39(se)-.55 G -.15(ve)311.796 335.6 S .889
(nt processing main loop\).).15 F .889(Listing 1 sho)5.889 F .889(ws a)-.25 F
(\(slightly simpli\214ed\) Scheme program that generates and starts a ne)72
355.6 Q 2.5(wi)-.25 G(nstance of an application.)351.16 355.6 Q .242(On system\
s that do not support dynamic linking and loading of object \214les \(such as \
older v)97 379.2 R .242(ersions of)-.15 F 1.294(UNIX System V\) or where)72
399.2 R F1(dump)3.794 E F0 1.294(cannot be implemented, the interpreter k)3.794
F 1.294(ernel and the application and)-.1 F(library e)72 419.2 Q
(xtensions are link)-.15 E(ed statically and combined into one e)-.1 E -.15(xe)
-.15 G(cutable.).15 E 1.1(In an)97 442.8 R 3.6(ye)-.15 G -.15(ve)131.01 442.8 S
1.099(nt, in an application using Elk, the control initially rests in the Sche\
me interpreter).15 F 6.099(.T)-.55 G(he)494.56 442.8 Q 1.055
(interpreter acts as the `)72 462.8 R 1.055(`main program')-.74 F 3.555('o)-.74
G 3.556(ft)241.8 462.8 S 1.056(he application; it is the interpreter')251.466
462.8 R(s)-.55 E F1(main\(\))3.556 E F0 1.056(function which is)3.556 F(in)72
482.8 Q -.2(vo)-.4 G -.1(ke).2 G 3.417(do).1 G 3.417(ns)111.937 482.8 S .917
(tartup of the program.)124.244 482.8 R .916(Therefore the \214rst code to e)
5.917 F -.15(xe)-.15 G .916(cute in an application is Scheme code;).15 F 1.318
(this Scheme code pro)72 502.8 R 1.319
(vides the shell functionality of the application \(hence it is called)-.15 F
F1 1.319(shell code)3.819 F F0 3.819(\). The)B .641
(shell code may perform a fe)72 522.8 R 3.141(ws)-.25 G .641
(imple tasks, for instance, load a user)201.116 522.8 R(-pro)-.2 E .64
(vided initialization \214le containing)-.15 F .456
(customization code for the application and then enter the application')72
542.8 R 2.957(sm)-.55 G .457(ain loop, or it may be as comple)367.631 542.8 R
(x)-.15 E(as in ISO)72 562.8 Q(TEXT)-.4 E 2.5(,w)-.74 G
(here the entire X-based user interf)145.85 562.8 Q(ace is written in Scheme.)
-.1 E F2 2.5(3.2. Making)72 602.8 R(Oneself Kno)2.5 E
(wn to the Extension Language)-.1 E F0 .527(The application, as it is link)97
626.4 R .526(ed with the e)-.1 F .526(xtension language interpreter)-.15 F
3.026(,h)-.4 G .526(as full access to all e)391.27 626.4 R(xternal)-.15 E 1.528
(functions and v)72 646.4 R 1.528(ariables of the interpreter k)-.25 F 4.029
(ernel. The)-.1 F(interpreter)4.029 E 4.029(,o)-.4 G 4.029(nt)352.157 646.4 S
1.529(he other hand, does not ha)363.966 646.4 R 1.829 -.15(ve a)-.2 H -.15(ny)
.15 G(kno)72 666.4 Q 1.171(wledge of the contents of dynamically link)-.25 F
1.17(ed and loaded object modules; all it sees of an object \214le)-.1 F .903
(being loaded is the \214le')72 686.4 R 3.403(ss)-.55 G .903(ymbol table.)
180.125 686.4 R 2.503 -.8(To o)5.903 H .903(btain `).8 F(`hooks')-.74 E 3.403
('i)-.74 G .903(nto a ne)320.96 686.4 R .903(wly loaded e)-.25 F .904
(xtension, the interpreter)-.15 F .661(searches the symbol table of each objec\
t \214le being loaded for functions whose names start with the pre\214x)72
706.4 R -.74(``)72 726.4 S(elk_init_').74 E 5.542('\()-.74 G F1 -.2(ex)128.272
726.4 S 3.042(tension initialization functions).2 F F0 5.543(\)a)C 3.043(nd in)
278.039 726.4 R -.2(vo)-.4 G -.1(ke).2 G 5.543(st).1 G 3.043
(hese functions as the)332.315 726.4 R 5.543(ya)-.15 G 3.043(re encountered.)
439.317 726.4 R EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-8-)279.67 56 S(__________________________________\
____________________________________________________)74 105.6 Q/F1 8/Courier@0
SF(;;; Load initially required object files and Scheme files of)100.346 127.103
Q(;;; application and dump image into executable file.)100.346 140.103 Q
(;;; Dumped file enters application's main loop on startup.)100.346 153.103 Q
(\(load 'main.o\))100.346 172.863 Q 4.8(;i)191.546 172.863 S
(nitial object modules)205.946 172.863 Q(\(load 'edit.o\))100.346 185.863 Q
(\(load 'x11.o\))100.346 198.863 Q 4.8(;\()191.546 198.863 S 4.8(al)205.946
198.863 S(ibrary extension\))220.346 198.863 Q(...)100.346 211.863 Q
(\(load 'ui.scm\))100.346 224.863 Q 4.8(;i)191.546 224.863 S
(nitial Scheme files)205.946 224.863 Q(\(load 'custom.scm\))100.346 237.863 Q
(\(load 'x11.scm\))100.346 250.863 Q(...)100.346 263.863 Q
(\(initialize-application\))100.346 276.863 Q(\(if \(dump 'a.out\))100.346
296.623 Q 86.4(\(begin ;)119.546 309.623 R(dumped a.out starts execution here)
4.8 E(\(initialize-depending-on-environment\))129.146 322.623 Q
(\(main-loop-of-application\))129.146 335.623 Q(\(exit\)\)\))129.146 348.623 Q
(;; Original invocation gets here when dump is finished.)100.346 368.383 Q
(We're done.)9.6 E/F2 9/Times-Bold@0 SF(Listing 1:)179.518 402.383 Q/F3 9
/Times-Roman@0 SF(Scheme code to generate and start an application)4.5 E/F4 8
/Times-Italic@0 SF(Note:)100.346 440.383 Q/F5 8/Times-Roman@0 SF .948
(Filenames can be gi)2.948 F -.12(ve)-.2 G 2.948(na).12 G 2.948(ss)205.414
440.383 S .948(ymbols \(besides the usual string literals\).)214.586 440.383 R
2.948(Am)4.948 G .948(ore meaningful name than a.out)370.326 440.383 R -.08(wo)
100.346 458.383 S(uld probably be chosen in practice.).08 E F0(_______________\
_______________________________________________________________________)74
475.983 Q(Lik)72 515.983 Q -.25(ew)-.1 G .633(ise, to support e).25 F .633
(xtensions written in C++, an)-.15 F 3.133(yC)-.15 G .632
(++ static constructors found in the symbol table are)293.244 515.983 R 2.675
(called. When)72 535.983 R(link)2.675 E .175(ed statically with its e)-.1 F
.176(xtensions, the interpreter must scan its o)-.15 F .176
(wn symbol table on startup)-.25 F .039(to \214nd and in)72 555.983 R -.2(vo)
-.4 G .239 -.1(ke t).2 H .039(he initialization functions.).1 F .038
(\(Similar support is a)5.039 F -.25(va)-.2 G .038(ilable for calling e).25 F
.038(xtension \214nalization)-.15 F
(functions and C++ static destructors on termination.\))72 575.983 Q 1.219
(Besides initializing pri)97 599.583 R -.25(va)-.25 G 1.219
(te data of the modules being loaded, these initialization functions re).25 F
(gister)-.15 E 1.83(with the interpreter the Scheme primiti)72 619.583 R -.15
(ve)-.25 G 4.33(sa).15 G 1.83(nd Scheme data types implemented by the e)258.11
619.583 R 4.33(xtensions. T)-.15 F(o)-.8 E .897(enable e)72 639.583 R .897
(xtensions to re)-.15 F .897(gister ne)-.15 F 3.397(wp)-.25 G(rimiti)216.185
639.583 Q 1.197 -.15(ve p)-.25 H .897(rocedures and types, the interpreter k)
.15 F .897(ernel e)-.1 F .898(xports tw)-.15 F 3.398(of)-.1 G(unc-)486.23
639.583 Q(tions:)72 659.583 Q/F6 10/Times-Italic@0 SF(De\214ne_Primitive\(\))
3.383 E F0 .883(to re)3.383 F .883(gister a ne)-.15 F 3.383(wS)-.25 G .883
(cheme primiti)253.538 659.583 R 1.183 -.15(ve a)-.25 H(nd).15 E F6(De\214ne_T)
3.383 E(ype\(\))-.74 E F0 .883(to re)3.383 F .883(gister a ne)-.15 F 3.382(wS)
-.25 G(cheme)477.9 659.583 Q .027(data type.)72 679.583 R .027
(Both functions tak)5.027 F 2.527(ep)-.1 G .027(ointers to C functions as ar)
201.745 679.583 R .027(guments that implement the ne)-.18 F 2.527(wp)-.25 G
(rimiti)447.125 679.583 Q .327 -.15(ve o)-.25 H 2.528(rt).15 G(he)494.56
679.583 Q(basic access functions of the type \(such as the print function and \
the equality predicates\).)72 699.583 Q EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-9-)279.67 56 S 2.5(As)97 92 S(imple e)110.61 92 Q
(xample for a library e)-.15 E(xtension is presented in Appendix A.)-.15 E/F1
10/Times-Bold@0 SF 2.5(4. Notes)72 132 R(on the Implementation)2.5 E F0 .638
(Designing Elk, not as another Scheme implementation, b)97 155.6 R .638
(ut as an e)-.2 F .638(xtension language kit, pro)-.15 F .637(vided a)-.15 F
.344(design space dif)72 175.6 R .344(ferent from that traditionally a)-.25 F
-.25(va)-.2 G .344(ilable for Lisp implementations.).25 F .345
(The necessary de)5.344 F(viations)-.25 E 1.42
(from the treaded paths of UNIX programming unco)72 195.6 R -.15(ve)-.15 G 1.42
(red limitations in portability).15 F 3.92(,a)-.65 G(ggra)424.96 195.6 Q -.25
(va)-.2 G 1.42(ted by badly).25 F 1.078(tested corners of standard UNIX f)72
215.6 R 3.578(acilities. This)-.1 F 1.079
(section discusses the more interesting e)3.579 F 1.079(xamples of such)-.15 F
(issues.)72 235.6 Q F1 2.5(4.1. Implementing)72 275.6 R(Continuations)2.5 E F0
.267(Finding a w)97 299.2 R .267(ay to ef)-.1 F .267
(\214ciently implement Scheme')-.25 F(s)-.55 E/F2 10/Times-Italic@0 SF
(continuations)2.767 E F0 .266(called for considerable ef)2.767 F .266
(forts during)-.25 F .223(the design phase of Elk.)72 319.2 R .224
(Continuations are a po)5.224 F .224(werful language feature; the)-.25 F 2.724
(ys)-.15 G .224(upport the de\214nition of arbi-)389.224 319.2 R .135
(trary control structures such as non-local loop and procedure e)72 339.2 R
(xits,)-.15 E F2(br)2.635 E(eak)-.37 E F0(and)2.635 E F2 -.37(re)2.635 G(turn)
.37 E F0 .134(as in C, e)2.634 F .134(xception han-)-.15 F(dling f)72 359.2 Q
(acilities, e)-.1 E
(xplicit backtracking, co-routines, or multitasking based on)-.15 E F2(engines)
2.5 E F0([Dyb)2.5 E(vig 1987].)-.15 E(The primiti)97 382.8 Q .3 -.15(ve p)-.25
H(rocedure).15 E/F3 9/Courier@0 SF(\(call-with-current-continuation)100.346
404.303 Q/F4 9/Times-Italic@0 SF -.333(re)5.4 G(ceiver).333 E F3(\))A F0 1.045
(packages up the current e)72 434.303 R -.15(xe)-.15 G 1.046
(cution state of the program into an object \(the).15 F F2(continuation)3.546 E
F0(or)3.546 E F2 1.046(escape pr)3.546 F(oce-)-.45 E(dur)72 454.303 Q(e)-.37 E
F0 2.868(\)a)C .368(nd passes this object as an ar)100.598 454.303 R .368
(gument to)-.18 F F2 -.37(re)2.868 G(ceiver).37 E F0 .367
(\(which is a procedure of one ar)2.868 F 2.867(gument\). Continua-)-.18 F .584
(tions are \214rst-class objects in Scheme; the)72 474.303 R 3.084(ya)-.15 G
.584(re represented as procedures of one ar)255.638 474.303 R .584
(gument \(not to be con-)-.18 F .128(fused with the)72 494.303 R F2 -.37(re)
2.627 G(ceiver).37 E F0 2.627(procedure\). Each)2.627 F .127
(time a continuation procedure is called with a v)2.627 F .127
(alue, it causes this)-.25 F -.25(va)72 514.303 S .083
(lue to be returned as the result of the).25 F F2(call-with-curr)2.584 E
(ent-continuation)-.37 E F0 -.15(ex)2.584 G .084
(pression which created this contin-).15 F 2.669(uation. If)72 534.303 R .169
(the procedure)2.669 F F2 -.37(re)2.669 G(ceiver).37 E F0 .169
(terminates normally \(i.)2.669 F .169(e. does not in)1.666 F -.2(vo)-.4 G .369
-.1(ke t).2 H .169(he continuation gi).1 F -.15(ve)-.25 G 2.669(nt).15 G 2.669
(oi)470.052 534.303 S .169(t\), the)480.501 534.303 R -.25(va)72 554.303 S
(lue returned by).25 E F2(call-with-curr)2.5 E(ent-continuation)-.37 E F0
(is the return v)2.5 E(alue of)-.25 E F2 -.37(re)2.5 G(ceiver).37 E F0(.)A .731
(As long as the use of a continuation is con\214ned to the runtime of the)97
577.903 R F2 -.37(re)3.232 G(ceiver).37 E F0(procedure,)3.232 E F2(call-with-)
3.232 E(curr)72 597.903 Q(ent-continuation)-.37 E F0 .211
(is similar in its functionality to)2.711 F F2(catc)2.711 E(h/thr)-.15 E(ow)
-.45 E F0 .211(in most Lisp dialects or)2.711 F F2(setjmp/longjmp)2.71 E F0(in)
2.71 E 2.966(C. Ho)72 617.903 R(we)-.25 E -.15(ve)-.25 G 1.267 -.4(r, c).15 H
.467(ontinuations, lik).4 F 2.967(ea)-.1 G .467(ll procedures in Scheme, ha)
209.367 617.903 R .767 -.15(ve i)-.2 H .467(nde\214nite e).15 F .467
(xtent \(unlimited lifetime\); the)-.15 F(y)-.15 E .221(can be stored in v)72
637.903 R .221(ariables and called an arbitrary number of times, e)-.25 F -.15
(ve)-.25 G 2.72(na).15 G .22(fter the)366.92 637.903 R F2 -.37(re)2.72 G
(ceiver).37 E F0 .22(and the enclosing)2.72 F F2(call-with-curr)72 657.903 Q
(ent-continuation)-.37 E F0(ha)2.65 E .45 -.15(ve a)-.2 H .15
(lready terminated.).15 F .15(Listing 2 sho)5.15 F .15
(ws a program fragment where contin-)-.25 F .278(uations are used to get back \
an arbitrary number of times into the middle of an e)72 677.903 R .277
(xpression whose computa-)-.15 F .897(tion has already been completed.)72
697.903 R .897(While not particularly useful, this e)5.897 F .897
(xample demonstrates that continua-)-.15 F .313(tions can be used to b)72
717.903 R .313(uild control structures that cannot be implemented by means of \
less general language)-.2 F(features lik)72 737.903 Q 2.5(ec)-.1 G(atch/thro)
127.99 737.903 Q 2.5(wo)-.25 G 2.5(rs)178.01 737.903 S(etjmp/longjmp.)187.73
737.903 Q EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(0-)288 56 S(___________________\
___________________________________________________________________)74 105.6 Q
/F1 8/Courier@0 SF(\(define my-function)100.346 127.103 Q(\(lambda \(n m\))
109.946 140.103 Q(\(+ n \(mark m\)\)\))119.546 153.103 Q 4.8(;r)287.546 153.103
S(eturn n+m)301.946 153.103 Q(\(define get-back "uninitialized"\))100.346
172.863 Q(\(define mark)100.346 192.623 Q 4.8(;i)287.546 192.623 S
(dentity function, but also)301.946 192.623 Q(\(lambda \(value\))109.946
205.623 Q 4.8(;a)287.546 205.623 S(ssign current continuation)301.946 205.623 Q
14.4(\(call-with-current-continuation ;)119.546 218.623 R(to a global variable)
4.8 E(\(lambda \(continuation\))129.146 231.623 Q
(\(set! get-back continuation\))138.746 244.623 Q 4.8(;\()287.546 244.623 S
(assign it\))301.946 244.623 Q(value\)\)\)\))138.746 257.623 Q
(\(my-function 10 20\))100.346 284.143 Q 4.8(;i)287.546 284.143 S
(nvoke my-function)301.946 284.143 Q/F2 8/Times-Italic@0 SF(prints 30)407.546
284.143 Q F1(\(get-back 5\))100.346 297.143 Q 4.8(;r)287.546 297.143 S
(esume with new value)301.946 297.143 Q F2(prints 15)9.6 E F1(\(get-back 0\))
100.346 310.143 Q 4.8(;.)287.546 310.143 S(..once more)301.946 310.143 Q F2
(prints 10)407.546 310.143 Q/F3 9/Times-Bold@0 SF(Listing 2:)191.686 344.143 Q
/F4 9/Times-Roman@0 SF(Using continuations with unlimited e)4.5 E(xtent)-.135 E
F0(___________________________________________________________________________\
___________)74 367.743 Q .933(The dif)97 411.343 R .933(ferent approaches appl\
icable to implementing continuations are intimately tied to the strate-)-.25 F
.525(gies used for interpreting the language itself.)72 431.343 R .525
(Scheme interpreters generally emplo)5.525 F 3.025(yal)-.1 G -.15(ex)425.91
431.343 S .525(ical analyzer and).15 F .392(parser \212 the)72 451.343 R/F5 10
/Times-Italic@0 SF -.37(re)2.892 G(ader).37 E F0 2.892<8a74>2.892 G 2.892(or)
172.18 451.343 S .393
(ead and parse the Scheme source code and produce an intermediate representa-)
183.402 451.343 R 1.019(tion of the program.)72 471.343 R 1.019
(During this phase, symbols are collected in a global hash table \(in Lisp jar)
6.019 F 1.018(gon, the)-.18 F .307(symbols are)72 491.343 R F5(interned)2.807 E
F0 .307(\), and a tree structure representing the program')B 2.808(sS)-.55 G
(-e)361.402 491.343 Q .308(xpressions is b)-.15 F .308(uilt up on the heap)-.2
F 1.549(of the interpreter)72 511.343 R 6.549(.T)-.55 G 1.548(he majority of i\
nterpreters compile this intermediate representation into an abstract)156.907
511.343 R 1.006(machine language \(such as)72 531.343 R F5 1.006(byte code)
3.506 F F0 3.507(\). The)B -.25(eva)3.507 G 1.007
(luator is then implemented as an abstract machine which).25 F .75
(interprets the lo)72 551.343 R(w-le)-.25 E -.15(ve)-.25 G 3.25(ll).15 G .75
(anguage; this machine \212 usually a simple stack machine \212 may e)171.64
551.343 R -.15(ve)-.25 G 3.25(nb).15 G 3.25(ei)470.2 551.343 S(mple-)480.67
551.343 Q(mented in hardw)72 571.343 Q(are.)-.1 E .17
(In an abstract machine implementation, the straightforw)97 594.943 R .17
(ard approach to implement)-.1 F F5(call-with-curr)2.67 E(ent-)-.37 E
(continuation)72 614.943 Q F0 1.993
(is to package up the contents of the abstract machine')4.493 F 4.493(sr)-.55 G
-.15(eg)370.273 614.943 S 1.993(isters \(program counter).15 F 4.492(,s)-.4 G
(tack)487.34 614.943 Q(pointer)72 634.943 Q 2.792(,e)-.4 G .292
(tc.\) and runtime stack.)109.662 634.943 R .292(Since continuations ha)5.292 F
.592 -.15(ve i)-.2 H .293(nde\214nite e).15 F .293(xtent, it w)-.15 F .293
(ould not suf)-.1 F .293(\214ce to just cap-)-.25 F .993(ture its re)72 654.943
R .993(gisters \(as the C library function)-.15 F F5(setjmp)3.493 E F0 .993
(does for the real machine\).)3.493 F 2.592 -.8(To b)5.992 H 3.492(ea).8 G .992
(ble to continue the)426.864 654.943 R -.25(eva)72 674.943 S .377
(luation of procedures that ha).25 F .677 -.15(ve a)-.2 H .378
(lready returned and whose frames are therefore no longer on the stack,).15 F
4.157(ac)72 694.943 S 1.657
(ontinuation must also embody the contents of the abstract machine')85.037
694.943 R 4.156(ss)-.55 G 1.656(tack at the time it is created.)381.584 694.943
R .197(When a continuation is applied, the machine resumes the `)72 714.943 R
(`frozen')-.74 E 2.697('c)-.74 G .198(omputation by restoring the sa)348.81
714.943 R -.15(ve)-.2 G 2.698(dr).15 G -.15(eg)491.38 714.943 S(-).15 E
(isters and stack contents of the abstract machine.)72 734.943 Q EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(1-)288 56 S .503(Just sa)97 92 R
.503(ving the abstract machine')-.2 F 3.003(ss)-.55 G .503(tate w)241.245 92 R
.503(ould not w)-.1 F .503(ork in Elk, because at the time a continuation is)
-.1 F .652(created, arbitrary library functions may be acti)72 112 R .952 -.15
(ve i)-.25 H 3.152(na).15 G .652(ddition to Scheme primiti)289.256 112 R -.15
(ve)-.25 G 3.152(s. F).15 F .653(or instance, consider)-.15 F 1.127
(the Elk interf)72 132 R 1.127(ace to the `)-.1 F(`Xt')-.74 E 3.627('t)-.74 G
1.127(oolkit intrinsics of the X windo)199.372 132 R 3.627(ws)-.25 G 3.626
(ystem. Here,)344.774 132 R 3.626(at)3.626 G 1.126(ypical scenario is that)
413.692 132 R .332(some Scheme procedure in)72 152 R -.2(vo)-.4 G -.1(ke).2 G
2.832(st).1 G .332(he primiti)209.268 152 R .632 -.15(ve t)-.25 H .332
(hat enters the toolkit').15 F 2.832(se)-.55 G -.15(ve)360.05 152 S .332
(nt dispatching main loop \().15 F/F1 10/Times-Italic@0 SF(XtApp-)A
(MainLoop\(\))72 172 Q F0 3.76(\). When)B 1.26(an e)3.76 F -.15(ve)-.25 G 1.26
(nt arri).15 F -.15(ve)-.25 G 3.76(s\().15 G 1.259(for e)232.18 172 R 1.259
(xample, a mouse b)-.15 F 1.259(utton press e)-.2 F -.15(ve)-.25 G 1.259
(nt\), the toolkit').15 F 3.759(sm)-.55 G 1.259(ain loop)470.241 172 R(in)72
192 Q -.2(vo)-.4 G -.1(ke).2 G 3.313(sac).1 G .814
(allback function, which in turn calls a user)117.916 192 R .814
(-supplied Scheme procedure to be e)-.2 F -.15(xe)-.15 G .814(cuted when a).15
F .417(mouse b)72 212 R .417(utton is pressed.)-.2 F .416
(This Scheme procedure might in turn in)5.417 F -.2(vo)-.4 G .616 -.1(ke y).2 H
.416(et another function from the `).1 F(`Xt')-.74 E(')-.74 E(library)72 232 Q
3.547(,a)-.65 G 1.047(nd so on.)108.497 232 R 3.547(As)6.047 G 1.047(imilar e)
167.685 232 R 1.047(xample w)-.15 F 1.047(ould be a)-.1 F F1(qsort)3.547 E F0
(or)3.547 E F1(ftw)3.547 E F0 -.15(ex)3.547 G 1.048
(tension to Elk, where the user).15 F(-supplied)-.2 E(function called by the)72
252 Q F1(qsort\(\))2.5 E F0(or)2.5 E F1(ftw\(\))2.5 E F0 2.5(Cl)2.5 G
(ibrary function w)235.32 252 Q(ould in)-.1 E -.2(vo)-.4 G .2 -.1(ke a p).2 H
(rocedure written in Scheme.).1 E 1.767(The interpreter')97 275.6 R 4.267(st)
-.55 G 1.766(hread of e)172.184 275.6 R -.15(xe)-.15 G 1.766(cution at an).15 F
4.266(yt)-.15 G 1.766(ime ob)286.924 275.6 R 1.766(viously in)-.15 F -.2(vo)-.4
G(lv).2 E 1.766(es both Scheme primiti)-.15 F -.15(ve)-.25 G 4.266(sa).15 G(nd)
494 275.6 Q 1.013(library functions \(such as)72 295.6 R F1(XtAppMainLoop\(\))
3.513 E F0(and)3.513 E F1(qsort\(\))3.513 E F0 1.014(in the e)3.514 F 1.014
(xamples abo)-.15 F -.15(ve)-.15 G 3.514(\)i).15 G 3.514(na)406.818 295.6 S
3.514(na)419.772 295.6 S 1.014(rbitrary combina-)432.726 295.6 R 2.778
(tion. Therefore,)72 315.6 R 2.778(ac)2.778 G .277
(ontinuation must embody not only the e)151.694 315.6 R -.15(xe)-.15 G .277
(cution state of the acti).15 F .577 -.15(ve S)-.25 H .277(cheme procedures,)
.15 F -.2(bu)72 335.6 S 2.868(ta).2 G .368(lso that of the currently acti)
91.888 335.6 R .668 -.15(ve l)-.25 H .368(ibrary functions \(such as local v)
.15 F .369(ariables used by the library functions\).)-.25 F .113(In the approa\
ch used by Elk, a continuation is created by capturing the machine')72 355.6 R
2.613(sr)-.55 G -.15(eg)404.358 355.6 S .113(isters \212 lik).15 F(e)-.1 E F1
(setjmp)2.613 E F0(in)2.613 E 3.006(Cd)72 375.6 S .507
(oes \212 and the C runtime stack.)86.676 375.6 R .507
(When a continuation is applied later)5.507 F 3.007(,t)-.4 G .507(he re)376.165
375.6 R .507(gisters and the sa)-.15 F -.15(ve)-.2 G 3.007(ds).15 G(tack)487.34
375.6 Q .197(contents are copied back.)72 395.6 R(Actually)5.197 E 2.697(,w)
-.65 G 2.697(ed)225.076 395.6 S .197(id not follo)237.213 395.6 R 2.697(wt)-.25
G .197(he usual `)294.504 395.6 R .197(`abstract machine')-.74 F 2.697('t)-.74
G .197(echnique in Elk at all;)415.442 395.6 R .285(instead, the Scheme e)72
415.6 R -.25(va)-.25 G .285(luator directly interprets the intermediate repres\
entation produced by the reader).25 F 5.286(.I)-.55 G(n)499 415.6 Q 3.412(as)72
435.6 S .912(ense, it is the `)83.742 435.6 R(`real')-.74 E 3.412('m)-.74 G
.912(achine \(the hardw)180.132 435.6 R .912(are on which Elk is e)-.1 F -.15
(xe)-.15 G .911(cuted\) that plays the role the abstract).15 F
(machine plays in implementations with byte-code compilation.)72 455.6 Q .463
(Although the abstract machine technique usually yields f)97 479.2 R .463
(aster e)-.1 F -.15(xe)-.15 G .463(cution of Scheme code, the perfor).15 F(-)
-.2 E .859(mance of Elk resembles that of e)72 499.2 R .859
(xisting interpreters emplo)-.15 F .858
(ying this technique, and the implementation of)-.1 F 1.178(Elk is simpler tha\
n that of comparable interpreters using byte-code compilation.)72 519.2 R 1.179
(While the technique to)6.179 F 2.486(implement continuations in Elk is not st\
rictly portable \212 it is based on certain assumptions on the)72 539.2 R
(machine')72 559.2 Q 3.422(ss)-.55 G .922
(tack layout and the C compiler and runtime en)119.862 559.2 R .923
(vironment \212 it w)-.4 F .923(orks on most major machine)-.1 F
(architectures \(with tw)72 579.2 Q 2.5(oe)-.1 G
(xceptions, which are supported using)170.89 579.2 Q F1(asm)2.5 E F0
(statements\).)2.5 E/F2 10/Times-Bold@0 SF 2.5(4.2. The)72 619.2 R
(Implementation of `)2.5 E(`dump')-.63 E(')-.63 E F0 1.01(Continuations pro)97
642.8 R 1.01(vide a natural basis for implementing the e)-.15 F -.15(xe)-.15 G
1.01(cution-state preserving semantics of).15 F(the)72 662.8 Q F1(dump)3.205 E
F0(primiti)3.205 E -.15(ve)-.25 G 5.705(.W).15 G .705(hen called,)166.765 662.8
R F1(dump)3.205 E F0(in)3.205 E -.2(vo)-.4 G -.1(ke).2 G(s).1 E F1
(call-with-curr)3.205 E(ent-continuation)-.37 E F0 5.705(.T)C .706(he real w)
409.2 662.8 R .706(ork is done in)-.1 F(the)72 682.8 Q F1 -.37(re)3.605 G
(ceiver).37 E F0 1.105(procedure; it stores the ne)3.605 F 1.104
(wly created continuation into a global v)-.25 F 1.104(ariable, sets a global)
-.25 F F1(was-)3.604 E(dumped)72 702.8 Q F0 .628
(\215ag to indicate that a dump has tak)3.128 F .628(en place, creates an e)-.1
F -.15(xe)-.15 G .629(cutable \214le from the image of the run-).15 F .361
(ning process, and \214nally returns `)72 722.8 R(`f)-.74 E(alse')-.1 E 2.861
('. The)-.74 F .361(return v)2.861 F .361(alue of the)-.25 F F1(dump)2.861 E F0
(primiti)2.861 E .661 -.15(ve i)-.25 H 2.861(st).15 G .361(he return v)415.046
722.8 R .361(alue of this)-.25 F EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(2-)288 56 S(call to)72 92 Q/F1
10/Times-Italic@0 SF(call-with-curr)2.5 E(ent-continuation)-.37 E F0 2.5(,i)C
1.666(.e)228.85 92 S 2.5(.`)-1.666 G(`f)245.046 92 Q(alse')-.1 E 2.5('i)-.74 G
2.5(fad)278.356 92 S(ump has just been performed.)296.126 92 Q .175
(When the interpreter \212 either the original program or a dumped e)97 115.6 R
-.15(xe)-.15 G .176(cutable \212 is started, it e).15 F(xamines)-.15 E(the)72
135.6 Q F1(was-dumped)3.616 E F0 1.116(\215ag as its v)3.616 F 1.116
(ery \214rst action.)-.15 F 1.116
(If the \215ag is set, the running interpreter w)6.116 F 1.115
(as started from a)-.1 F .335(dumped e)72 155.6 R -.15(xe)-.15 G 2.835
(cutable. In).15 F .335(this case the interpreter immediately in)2.835 F -.2
(vo)-.4 G -.1(ke).2 G .335(s, with an ar).1 F .336(gument of `)-.18 F(`true')
-.74 E .336(', the con-)-.74 F .242(tinuation that w)72 175.6 R .242(as sa)-.1
F -.15(ve)-.2 G 2.742(da).15 G -.1(wa)175.688 175.6 S 2.742(yb).1 G 2.742(yac)
199.99 175.6 S .242(all to)219.354 175.6 R F1(dump)2.742 E F0 2.741(;t)C .241
(his causes that call to)273.139 175.6 R F1(dump)2.741 E F0 .241
(to \214nish and return `)2.741 F(`true')-.74 E 2.741('t)-.74 G(o)499 175.6 Q
1.092(its caller)72 195.6 R 6.092(.I)-.55 G 1.093(f, on the other hand, the)
118.624 195.6 R F1(was-dumped)3.593 E F0 1.093(\215ag is not set \(i.)3.593 F
1.093(e. the running process w)1.666 F 1.093(as not started)-.1 F
(from a dumped image\), the interpreter initializes and starts up as usual.)72
215.6 Q .176(Before writing an image of the running process to disk,)97 239.2 R
F1(dump)2.676 E F0 .175(has to close all open Scheme \214le ports,)2.675 F
2.236(as open \214le descriptors w)72 259.2 R 2.236(ould not survi)-.1 F 2.537
-.15(ve a)-.25 H F1(dump)4.887 E F0 4.737<8a74>4.737 G(he)309.954 259.2 Q 4.737
(yw)-.15 G 2.237(ould no longer be v)336.101 259.2 R 2.237(alid in the dumped)
-.25 F -.15(exe)72 279.2 S 3.282(cutable. Generally).15 F 3.282(,t)-.65 G .781
(his is true for all objects pointing to information maintained by the UNIX k)
170.084 279.2 R(ernel,)-.1 E .642(such as the current directory)72 299.2 R
3.142(,t)-.65 G .642
(he current signal dispositions, resource limits, or interv)195.64 299.2 R .642
(al timers.)-.25 F .642(Users and)5.642 F .389(implementors of Elk e)72 319.2 R
.389(xtensions must be a)-.15 F -.1(wa)-.15 G .389
(re of this particular restriction.).1 F -.15(Fo)5.389 G 2.889(ri).15 G .388
(nstance, users of the X11)401.638 319.2 R -.15(ex)72 339.2 S .486(tensions ha)
.15 F .786 -.15(ve t)-.2 H 2.986(om).15 G(ak)157.118 339.2 Q 2.986(es)-.1 G
.486(ure that, if)177.774 339.2 R F1(dump)2.987 E F0 .487
(is to be used, connections to X-displays are only established in)2.987 F
(the dumped in)72 359.2 Q -.2(vo)-.4 G(cation.).2 E 1.871 -.8(To b)97 382.8 T
2.771(ea).8 G .271(ble to create an e)126.732 382.8 R -.15(xe)-.15 G .271
(cutable from the running process,).15 F F1(dump)2.77 E F0 .27
(has to open and read the a.out \214le)2.77 F .825
(from which the running process w)72 402.8 R .825(as started \(actually)-.1 F
3.325(,i)-.65 G 3.325(ft)297.53 402.8 S .825(he system link)306.965 402.8 R
.825(er has been called to dynamically)-.1 F .291
(load object \214les, the output of the most recent in)72 422.8 R -.2(vo)-.4 G
.29(cation of the link).2 F .29(er is used instead of the original a.out\).)-.1
F .792(The symbol table of the ne)72 442.8 R 3.293(we)-.25 G -.15(xe)197.444
442.8 S .793
(cutable is copied from the a.out \214le of the running program; in addition,)
.15 F .431(the a.out header has to be read to obtain the length of the te)72
462.8 R .43(xt se)-.15 F .43(gment and the start of the data se)-.15 F .43
(gment of)-.15 F .282(the running process.)72 482.8 R 1.882 -.8(To d)5.282 H
2.782(os).8 G(o,)188.43 482.8 Q F1(dump)2.782 E F0 .282
(has to determine the \214lename of the a.out \214le from which the process)
2.782 F -.1(wa)72 502.8 S 3.277(ss).1 G .777
(tarted based on the information in)94.617 502.8 R F1(ar)3.277 E(gv[0])-.37 E
F0 .777(and in the P)3.277 F -1.11(AT)-.92 G 3.277(He)1.11 G -.4(nv)347.124
502.8 S .777(ironment v).4 F 3.277(ariable. This)-.25 F .776(approach is)3.276
F(ob)72 522.8 Q 1.314(viously based on se)-.15 F -.15(ve)-.25 G 1.314
(ral prerequisites:).15 F F1(dump)3.814 E F0 1.314
(must be able to access its a.out \214le \()3.814 F F1(ar)A(gv[0])-.37 E F0
1.315(must carry)3.815 F .306(meaningful information; the \214le must be reada\
ble\) and the running program')72 542.8 R 2.806(sa)-.55 G .306
(.out \214le must not ha)392.27 542.8 R .606 -.15(ve b)-.2 H(een).15 E 3.871
(stripped. It)72 562.8 R -.1(wo)3.871 G 1.371(uld ha).1 F 1.671 -.15(ve b)-.2 H
1.371(een adv).15 F 1.371(antageous for the implementation of)-.25 F F1(dump)
3.871 E F0 1.372(if the entire a.out \214le were)3.871 F
(automatically mapped into memory on startup, lik)72 582.8 Q 2.5(ei)-.1 G 2.5
(ti)281.89 582.8 S 2.5(sd)289.95 582.8 S(one, for instance, in NeXT)301.34
582.8 Q(-OS/Mach.)-.92 E F1(dump)97 606.4 Q F0 .042(combines the data se)2.542
F .041(gment and the `)-.15 F(`bss')-.74 E 2.541('s)-.74 G -.15(eg)295.112
606.4 S .041(ment of the running process into the data se).15 F(gment)-.15 E
.986(of the ne)72 626.4 R 3.486(we)-.25 G -.15(xe)123.708 626.4 S 3.486
(cutable. If).15 F .987
(Elk had a separate heap for storing constant objects \(future v)3.486 F .987
(ersions may ha)-.15 F -.15(ve)-.2 G(one\),)72 646.4 Q F1(dump)2.653 E F0 .152
(could place this read-only part of the memory into the ne)2.653 F 2.652(we)
-.25 G -.15(xe)362.97 646.4 S(cutable').15 E 2.652(st)-.55 G -.15(ex)413.242
646.4 S 2.652(ts).15 G -.15(eg)431.854 646.4 S .152(ment to mak).15 F 2.652(ei)
-.1 G(t)501.22 646.4 Q 3.048(sharable. When)72 666.4 R .548(the interpreter')
3.048 F 3.048(sh)-.55 G .548(eap is written to disk,)211.932 666.4 R F1(dump)
3.048 E F0 .548(seeks o)3.048 F -.15(ve)-.15 G 3.048(rt).15 G .549
(he unused portions of the heap,)376.276 666.4 R .032(so that f)72 686.4 R(ak)
-.1 E 2.531(eb)-.1 G .031
(locks \(holes\) can be used for these parts of the \214le.)125.494 686.4 R
.031(This results in a considerable conserv)5.031 F(ation)-.25 E .051
(of disk space in the \214nal e)72 706.4 R -.15(xe)-.15 G .052
(cutable, as at least half of the interpreter').15 F 2.552(sh)-.55 G .052
(eap is unused at an)360.974 706.4 R 2.552(yt)-.15 G .052(ime due to the)
446.904 706.4 R -.05(ga)72 726.4 S(rbage collection algorithm of Elk.).05 E EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(3-)288 56 S .149
(Since the a.out formats used in the numerous v)97 92 R .149
(ersions of UNIX dif)-.15 F .149(fer v)-.25 F(astly)-.25 E 2.649(,E)-.65 G .148
(lk has to include sepa-)413.977 92 R 1.304(rate implementations of)72 112 R/F1
10/Times-Italic@0 SF(dump)3.804 E F0 1.304
(for the currently supported a.out formats.)3.804 F -1.11(Ve)6.304 G 1.304
(rsion 2.2 of Elk handles the)1.11 F .672
(BSD-style a.out format used in BSD and `)72 132 R(`deri)-.74 E -.15(ve)-.25 G
(d').15 E 3.171('U)-.74 G .671(NIX v)294.072 132 R .671
(ersions \(such as SunOS 4.1\), the COFF a.out)-.15 F .29
(format \(used in older releases of UNIX System V and in A/UX\), Con)72 152 R
.59 -.15(vex S)-.4 H(OFF).15 E 2.79(,E)-.8 G .29(xtended COFF of MIPS-)403.96
152 R .327(based computers \(DEC, SGI\), and the ELF a.out format of System V \
Release 4 and related UNIX v)72 172 R(ersions)-.15 E(\(Solaris 2.x, OSF/1\).)72
192 Q/F2 10/Times-Bold@0 SF 2.5(4.3. Dynamic)72 232 R(Loading of Object Files)
2.5 E F0 1.358(When loading an object \214le during runtime, addresses within \
this object \214le must be relocated to)97 255.6 R .534(their ne)72 275.6 R
3.034(wl)-.25 G .534(ocation in the program')115.588 275.6 R 3.034(sa)-.55 G
.534(ddress space.)222.154 275.6 R 2.134 -.8(To a)5.534 H(llo).8 E 3.034(we)
-.25 G .533(xtensions to directly reference objects of the)323.62 275.6 R .26
(interpreter k)72 295.6 R .26(ernel, such as the heap and the b)-.1 F .261
(uilt-in primiti)-.2 F -.15(ve)-.25 G .261(s, unresolv).15 F .261
(ed references into the)-.15 F F1 .261(base pr)2.761 F -.1(og)-.45 G -.15(ra).1
G(m).15 E F0 .274(must be resolv)72 315.6 R .274(ed during dynamic loading.)
-.15 F(Finally)5.274 E 2.773(,t)-.65 G .273
(he object \214le needs to be able to e)282.557 315.6 R .273
(xport its entry points)-.15 F(\(such as Elk')72 335.6 Q 2.5(se)-.55 G
(xtension initialization functions\) to the base program.)134.34 335.6 Q .565
(More than one object \214le may ha)97 359.2 R .865 -.15(ve t)-.2 H 3.065(ob)
.15 G 3.065(el)260.59 359.2 S .565(oaded into one in)270.875 359.2 R -.2(vo)-.4
G .566(cation of Elk.).2 F 2.166 -.8(To m)5.566 H .566(anage non-tri).8 F
(vial,)-.25 E .895(hierarchically structured sets of e)72 379.2 R .894
(xtensions, where a number of high-le)-.15 F -.15(ve)-.25 G 3.394(le).15 G .894
(xtensions require one or more)381.004 379.2 R(lo)72 399.2 Q(wer)-.25 E(-le)-.2
E -.15(ve)-.25 G 2.721(le).15 G .222(xtensions to be loaded, it is essential t\
hat object \214les loaded later can mak)123.701 399.2 R 2.722(eu)-.1 G .222
(se of the symbols)433.614 399.2 R .914(de\214ned by pre)72 419.2 R .914
(viously loaded object \214les.)-.25 F .913
(As this style of dynamic loading allo)5.913 F .913(ws b)-.25 F .913
(uilding comple)-.2 F 3.413(xs)-.15 G(ys-)491.78 419.2 Q
(tems from small components incrementally)72 439.2 Q 2.5(,w)-.65 G 2.5(ew)
256.89 439.2 S(ill use the term)271.05 439.2 Q F1(incr)2.5 E(emental loading)
-.37 E F0(.)A -.4(Wi)97 462.8 S 1.112(th the adv).4 F 1.112(ent of 4.0)-.15 F
1.112(BSD in 1980 [Jo)1.666 F 3.612(y1)-.1 G 1.112
(980], support for incremental loading w)276.072 462.8 R 1.113(as added to the)
-.1 F 1.232(system link)72 482.8 R 1.231
(er and has since been supported by most major UNIX v)-.1 F 1.231
(ariants: when the \255A option and the)-.25 F .079(name of the base e)72 502.8
R -.15(xe)-.15 G .079(cutable are supplied to the link).15 F(er)-.1 E 2.579(,l)
-.4 G .08(inking is performed in a w)294.44 502.8 R .08
(ay that the object \214le pro-)-.1 F 1.405(duced by the link)72 522.8 R 1.404
(er can be read into the already running e)-.1 F -.15(xe)-.15 G 3.904
(cutable. The).15 F 1.404(symbol table of the resulting)3.904 F 1.196(object \
\214le is a combination of the symbols de\214ned by the base program and the n\
e)72 542.8 R 1.197(wly de\214ned symbols)-.25 F .426(added by the linking proc\
ess, from the object \214le or from libraries used in linking.)72 562.8 R .425
(Only this ne)5.425 F .425(wly link)-.25 F(ed)-.1 E .129
(code and data is entered into the resulting object \214le.)72 582.8 R .129
(The incremental style of dynamic loading is achie)5.129 F -.15(ve)-.25 G(d).15
E .18(by sa)72 602.8 R .18(ving the resulting output \214le each time the link)
-.2 F .18(er is in)-.1 F -.2(vo)-.4 G -.1(ke).2 G 2.679(da).1 G .179
(nd using this \214le as the base program for)339.808 602.8 R(the ne)72 622.8 Q
(xt incremental loading step, such that both old and ne)-.15 E 2.5(ws)-.25 G
(ymbols can be referenced.)323.24 622.8 Q .918
(Incremental loading is generally supported by the link)97 646.4 R .919
(ers of UNIX v)-.1 F .919(ersions that use the BSD-style)-.15 F .199
(a.out format and by those of se)72 666.4 R -.15(ve)-.25 G .199
(ral UNIX systems based on more modern a.out formats \(e.).15 F .199
(g. Ultrix\).)1.666 F .199(It is)5.199 F 1.109(not supported by an)72 686.4 R
3.609(ye)-.15 G 1.109(xisting release of UNIX System V)167.236 686.4 R 6.109
(.S)-1.29 G 1.11(ome ne)323.14 686.4 R 1.11(wer UNIX v)-.25 F 1.11
(ersions that ha)-.15 F 1.41 -.15(ve s)-.2 H(hared).15 E 1.858
(libraries and dynamic linking \(such as System V Release 4 or SunOS\) of)72
706.4 R 1.858(fer a library interf)-.25 F 1.858(ace to the)-.1 F 1.909
(dynamic link)72 726.4 R(er)-.1 E 6.909(.I)-.55 G 4.409(ns)146.268 726.4 S
1.909(ome systems this kind of interf)159.567 726.4 R 1.91
(ace is intended to replace the incremental loading)-.1 F EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(4-)288 56 S .947
(functionality of the system link)72 92 R(er)-.1 E 5.946(.T)-.55 G .946
(hese dynamic link)222.464 92 R .946(er interf)-.1 F .946
(aces usually come in the form of a library)-.1 F 1.094(that e)72 112 R 1.094
(xports functions such as)-.15 F/F1 10/Times-Italic@0 SF(dlopen\(\))3.594 E F0
1.095(to map a shared object module or shared library into the address)3.595 F
.911(space of the caller \(the base program\) and)72 132 R F1(dlsym\(\))3.411 E
F0 .91(to obtain the address of a function or data item in the)3.411 F(ne)72
152 Q(wly attached object module.)-.25 E 1.074
(In some implementations, object \214les attached through)97 175.6 R F1
(dlopen\(\))3.574 E F0 1.074(may directly reference symbols in)3.574 F .028
(the base program; in other implementations the)72 195.6 R 2.528(ym)-.15 G .028
(ay not.)276.196 195.6 R .027(In an)5.027 F 2.527(yc)-.15 G .027
(ase, object \214les cannot directly reference)340.585 195.6 R .291
(symbols de\214ned by objects that ha)72 215.6 R .591 -.15(ve b)-.2 H .292
(een placed into the program by pre).15 F .292(vious calls to)-.25 F F1
(dlopen\(\))2.792 E F0(\(only)2.792 E 2.792(,i)-.65 G 2.792(fa)490.658 215.6 S
(t)501.22 215.6 Q .482(all, indirectly by calling)72 235.6 R F1(dlsym\(\))2.982
E F0 2.982(\). Thus,)B .481(these dynamic link)2.982 F .481(er interf)-.1 F
.481(aces are clearly inferior to incremental)-.1 F .168(loading, as the)72
255.6 R 2.668(yl)-.15 G .169
(ack the important capability to load a set of object \214les)140.684 255.6 R
F1(incr)2.669 E(ementally)-.37 E F0 5.169(.M)C(an)435.642 255.6 Q 2.669(yv)-.15
G .169(endors who)457.451 255.6 R(ha)72 275.6 Q .515 -.15(ve r)-.2 H .215
(eplaced `).15 F .215(`/bin/ld \255A)-.74 F 1.695 -.74('' b)-1.11 H 2.715(ya)
.74 G F1(dlopen)A F0 .215
(-style library in their UNIX systems, or who intend to do so, do not)B
(seem to be a)72 295.6 Q -.1(wa)-.15 G(re of the f).1 E(act that this change w\
ill break applications that rely on incremental loading.)-.1 E -.15(Fo)97 319.2
S 3.146(rE).15 G .647(lk, the consequence of being restricted to dynamic link)
119.996 319.2 R .647(er interf)-.1 F .647(aces of that kind is that, e)-.1 F
(xcept)-.15 E .886(for the simplest applications, one must pre-link all possib\
le combinations of e)72 339.2 R .886(xtensions that are not com-)-.15 F .87
(pletely independent of each other)72 359.2 R 5.87(.I)-.55 G 3.37(ng)219.93
359.2 S .87(eneral, gi)233.3 359.2 R -.15(ve)-.25 G 3.37(nas).15 G .871(et of)
300.49 359.2 R F1(n)3.371 E F0 -.15(ex)3.371 G .871
(tensions each of which can be based on).15 F .583(one out of)72 379.2 R F1(m)
3.083 E F0 .583(other e)3.083 F .583(xtensions, this means ha)-.15 F .583
(ving to prepare and k)-.2 F .583(eep around)-.1 F F1(n)3.083 E/F2 10/Symbol SF
<b4>1.666 E F1(m)1.666 E F0(pre-link)3.082 E .582(ed object \214les;)-.1 F .558
(not to mention the contortions one has to go through when the hierarch)72
399.2 R 3.058(yo)-.05 G 3.058(fe)375.56 399.2 S .558
(xtensions has a depth greater)386.238 399.2 R .552(than tw)72 419.2 R 3.052
(o\()-.1 G .552(not an unlik)113.554 419.2 R .551(ely scenario in practice\).)
-.1 F .551(If the number of e)5.551 F .551
(xtensions and relations between them is)-.15 F(lar)72 439.2 Q 1.418
(ger than tri)-.18 F 1.418(vial, or if the e)-.25 F 1.418(xtensions are lar)
-.15 F 1.418(ge or require lar)-.18 F 1.418(ge libraries, k)-.18 F 1.419
(eeping around all pre-link)-.1 F(ed)-.1 E .015
(combinations of object modules will cause a maintenance problem and may w)72
459.2 R .015(aste a considerable amount of)-.1 F(disk space.)72 479.2 Q
(Another)97 502.8 Q 2.746(,a)-.4 G .246(lthough minor)139.056 502.8 R 2.746(,p)
-.4 G .246(roblem with these dynamic link)206.098 502.8 R .246(er interf)-.1 F
.247(aces is that the)-.1 F 2.747(yu)-.15 G .247(sually of)437.656 502.8 R .247
(fer only)-.25 F 2.692(as)72 522.8 S .191(imple-minded function \(such as)
83.022 522.8 R F1(dlsym\(\))2.691 E F0 2.691(\)t)C 2.691(ol)252.008 522.8 S
.191(ook up the address of a speci\214c symbol of a ne)262.479 522.8 R .191
(wly accessed)-.25 F .007
(object module \(typically some kind of module initialization function\); b)72
542.8 R .008(ut the)-.2 F 2.508(yd)-.15 G 2.508(on)394.222 542.8 S .008(ot pro)
406.73 542.8 R .008(vide a w)-.15 F .008(ay to scan)-.1 F 1.058(all ne)72 562.8
R 1.058(wly de\214ned symbols.)-.25 F 1.058(This functionality is insuf)6.058 F
1.058(\214cient to implement e)-.25 F 1.057(xtension initialization in Elk,)
-.15 F .296(where a dynamically loadable e)72 582.8 R .296
(xtension often is composed from a number of small modules, each de\214ning)
-.15 F 2.013(its o)72 602.8 R 2.013(wn initialization function.)-.25 F 2.012
(Requiring a single, common initialization function name for the entire)7.013 F
.16(object \214le implies that \(often con\214guration-dependent\) `)72 622.8 R
.16(`glue code')-.74 F 2.66('m)-.74 G .16(ust be added to call all the indi)
355.64 622.8 R(vidual)-.25 E
(initialization functions, including the C++ static constructors.)72 642.8 Q
-1.11(Ve)97 666.4 S .255(rsion 2.2 of Elk supports dynamic loading in en)1.11 F
.254(vironments with `)-.4 F .832(`ld \255A)-.74 F 1.734 -.74('' \()-1.11 H
.254(such as BSD, SunOS 4,).74 F 3.696(Ultrix, and certain v)72 686.4 R 3.697
(ersions of SGI Irix and HP-UX\), in HP-UX 9 \(based on)-.15 F F1(shl_load)
6.197 E F0 3.697(\), and in)B(MA)72 706.4 Q(CH/NeXT)-.4 E .823(-OS \()-.92 F F1
(rld_load)A F0 3.323(\). By)B .823(generating shared objects on the \215y)3.323
F 3.323(,S)-.65 G .822(ystem V Release 4 and SunOS 5)369.077 706.4 R
(\(Solaris 2\) are also supported, although in a limited and not yet satisf)72
726.4 Q(actory w)-.1 E(ay)-.1 E(.)-.65 E EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(5-)288 56 S/F1 10/Times-Bold@0
SF 2.5(4.4. Non-Standard)72 92 R(Language F)2.5 E(eatur)-.25 E(es)-.18 E F0
.625(As the current v)97 115.6 R .625
(ersion of the Scheme standard \(deliberately\) does not specify se)-.15 F -.15
(ve)-.25 G .625(ral important lan-).15 F .44
(guage issues, such as error handling or syntactic e)72 135.6 R .44
(xtensions, we ha)-.15 F .74 -.15(ve a)-.2 H .44
(dded a number of non-standard lan-).15 F
(guage features to the Scheme interpreter of Elk to \214ll some of the holes.)
72 155.6 Q 3.975(Ap)97 179.2 S 1.475(roposal for a macro e)113.195 179.2 R
1.476(xtension has only recently been added as an addendum to the)-.15 F/F2 10
/Times-Italic@0 SF(Re)3.976 E(vised)-.15 E/F3 9/Times-Italic@0 SF(4)499.5 174.2
Q F2 1.045(Report on the Algorithmic Langua)72 199.2 R 1.245 -.1(ge S)-.1 H
-.15(ch).1 G(eme).15 E F0 1.044
([Clinger et al. 1991] and is still being discussed contro)3.545 F -.15(ve)-.15
G -.2(r-).15 G 1.413(sially within the Scheme community)72 219.2 R 6.413(.T)
-.65 G 3.913(oa)237.895 219.2 S -.2(vo)251.048 219.2 S 1.413(id ha).2 F 1.413
(ving to w)-.2 F 1.413(ait for a \214nal v)-.1 F 1.414
(ersion of a macro system to)-.15 F -2.2 -.25(ev o)72 239.2 T(lv).25 E 2.604
(ea)-.15 G .103(nd be included in the Scheme standard, we implemented a simple\
-minded macro mechanism in Elk)105.104 239.2 R(that resembles the macro f)72
259.2 Q(acilities of)-.1 E(fered by v)-.25 E(arious e)-.25 E
(xisting Scheme and Lisp systems.)-.15 E .638
(One area where the Scheme standard does not specify an)97 282.8 R 3.138(yl)
-.15 G .638(anguage features yet is error and e)340.94 282.8 R(xcep-)-.15 E
.265(tion handling; the standard merely states which error situations a confor\
ming implementation is required to)72 302.8 R .129(detect and report.)72 322.8
R .129(Since it is essential for a non-tri)5.129 F .13
(vial application to be able to gracefully handle error situ-)-.25 F .141
(ations \(such as f)72 342.8 R .141
(ailures in interactions with the operating system\) and other e)-.1 F .14
(xceptional conditions, we ha)-.15 F -.15(ve)-.2 G(added a simple error and e)
72 362.8 Q(xception handling f)-.15 E(acility to Elk.)-.1 E .152
(When an error is detected by the interpreter)97 386.4 R 2.653(,au)-.4 G(ser)
289.022 386.4 Q .153(-supplied error handling procedure is in)-.2 F -.2(vo)-.4
G -.1(ke).2 G 2.653(dw).1 G(ith)493.44 386.4 Q(ar)72 406.4 Q .407
(guments identifying the type and source of the error)-.18 F 5.406(.T)-.55 G
.406(he standard interacti)304.05 406.4 R .706 -.15(ve e)-.25 H -.4(nv).15 G
.406(ironment \(top-le).4 F -.15(ve)-.25 G .406(l\) of).15 F .386(Elk pro)72
426.4 R .386(vides a def)-.15 F .387(ault error handler that prints an error m\
essage and then resumes the main read-e)-.1 F -.25(va)-.25 G(l-print).25 E .316
(loop by means of a)72 446.4 R F2 -.37(re)2.816 G(set).37 E F0(primiti)2.816 E
-.15(ve)-.25 G 5.316(.M).15 G .316(ost primiti)227.042 446.4 R -.15(ve)-.25 G
2.816(so).15 G 2.816(fE)289.504 446.4 S .315(lk and the e)301.76 446.4 R .315
(xtensions use this error handling f)-.15 F(acil-)-.1 E .115
(ity to signal an error)72 466.4 R 2.616(,a)-.4 G 2.616(so)162.716 466.4 S .116
(pposed to indicating f)174.222 466.4 R .116(ailure by a distincti)-.1 F .416
-.15(ve r)-.25 H .116(eturn v).15 F .116(alue \(which w)-.25 F .116
(ould be prone to)-.1 F 1.142(being ignored\).)72 486.4 R 2.742 -.8(To b)6.142
H 1.141(y-pass the standard error handler and `).8 F(`catch')-.74 E 3.641('f)
-.74 G 1.141(ailure of a particular primiti)356.505 486.4 R -.15(ve)-.25 G
3.641(,p).15 G(ro-)492.34 486.4 Q 1.476
(grams may enclose the call to the primiti)72 506.4 R 1.776 -.15(ve b)-.25 H(y)
.15 E F2(call-with-curr)3.976 E(ent-continuation)-.37 E F0 1.477
(and dynamically bind the)3.976 F(error handler to the continuation \(as sho)72
526.4 Q(wn in listing 3\).)-.25 E .943(Elk pro)97 550 R .943(vides a similar f)
-.15 F .943(acility to handle an)-.1 F F2(interrupt)3.443 E F0 -.15(ex)3.443 G
.943(ception: a user).15 F .942(-supplied interrupt handler is)-.2 F(in)72 570
Q -.2(vo)-.4 G -.1(ke).2 G 3.528(dw).1 G 1.029(hen a SIGINT signal is sent to \
the interpreter \(usually by typing the interrupt character on the)114.268 570
R -.1(ke)72 590 S 2.5(yboard\). Support)-.05 F(for other e)2.5 E
(xceptions, such as timer interrupts, may be pro)-.15 E(vided in future v)-.15
E(ersions.)-.15 E .006(Another non-standard primiti)97 613.6 R .306 -.15(ve t)
-.25 H .006(hat f).15 F .006(acilitates handling of errors is)-.1 F F2
(dynamic-wind)2.506 E F0 2.506(,a)C .005(generalization of)-.001 F(the)72 633.6
Q F2(unwind-pr)3.579 E(otect)-.45 E F0 1.079(form of)3.579 F 1.079
(fered by man)-.25 F 3.579(yL)-.15 G 1.079(isp dialects.)252.594 633.6 R F2
(dynamic-wind)6.079 E F0 1.08(is used to implement the)3.579 F F2(\215uid-let)
3.58 E F0 .692(special form \(to create)72 653.6 R F2(\215uid)3.192 E F0 .692
(or dynamic v)3.192 F .692(ariable bindings\).)-.25 F(Both)5.692 E F2
(dynamic-wind)3.192 E F0(and)3.192 E F2(\215uid-let)3.192 E F0 .692
(are also pro-)3.192 F(vided by se)72 673.6 Q -.15(ve)-.25 G
(ral other Scheme dialects [MIT 1984, Dyb).15 E(vig 1987].)-.15 E .349
(The current v)97 697.2 R .349(ersion of the Scheme standard does not pro)-.15
F .349(vide an)-.15 F 2.85(yl)-.15 G .35(anguage features that w)366.17 697.2 R
.35(ould mak)-.1 F(e)-.1 E .017(it possible to implement a useful Scheme deb)72
717.2 R .016(ugger \(apart from a deb)-.2 F .016
(ugger based on source code instrumen-)-.2 F 2.55(tation\). T)72 737.2 R 2.55
(oc)-.8 G .05(ompensate for this shortcoming, we ha)122.96 737.2 R .35 -.15
(ve a)-.2 H .05(dded a fe).15 F 2.55(wp)-.25 G(rimiti)345.54 737.2 Q -.15(ve)
-.25 G 2.55(st).15 G .05(hat aid the implementation of)386.03 737.2 R EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(6-)288 56 S(___________________\
___________________________________________________________________)74 105.6 Q
/F1 8/Courier@0 SF(\(define \(open-input-file-or-not name\))100.346 127.103 Q
(\(call-with-current-continuation)109.946 140.103 Q(\(lambda \(return\))119.546
153.103 Q(;)277.946 153.103 Q/F2 8/Courier-Oblique@0 SF(return)4.8 E F1
(becomes escape procedure)4.8 E(\(fluid-let \(\(error-handler)129.146 166.103 Q
4.8(;r)277.946 166.103 S(ebind)292.346 166.103 Q F2(error-handler)4.8 E F1
(\(lambda args \(return #f\)\)\)\))196.346 179.103 Q
(\(open-input-file name\)\)\)\)\))138.746 192.103 Q/F3 9/Times-Bold@0 SF
(Listing 3:)112.707 226.103 Q/F4 9/Times-Roman@0 SF 2.25(Av)4.5 G
(ersion of open-input-\214le that returns the ne)167.076 226.103 Q
(wly opened port on success, #f on error)-.225 E F0(__________________________\
____________________________________________________________)74 249.703 Q 4.016
(as)72 289.703 S 1.516(imple interacti)84.346 289.703 R 1.816 -.15(ve d)-.25 H
(eb).15 E(ugger)-.2 E 4.016(,a)-.4 G 1.516(mong them an)204.534 289.703 R/F5 10
/Times-Italic@0 SF -.15(ev)4.016 G(al).15 E F0(primiti)4.016 E 1.816 -.15
(ve \()-.25 H 1.516(although, in theory).15 F(,)-.65 E F5 -.15(ev)4.016 G(al)
.15 E F0 1.516(could be imple-)4.016 F .898(mented by writing an e)72 309.703 R
.898(xpression into a temporary \214le and then loading this \214le\).)-.15 F
.899(In addition, Elk, lik)5.899 F 3.399(ea)-.1 G(fe)72 329.703 Q 2.67(wo)-.25
G .17(ther Scheme dialects, pro)94.41 329.703 R .17(vides le)-.15 F .17
(xical en)-.15 F .17(vironments as \214rst class \(b)-.4 F .17
(ut immutable\) objects.)-.2 F .17(Other non-)5.17 F .813(standard primiti)72
349.703 R -.15(ve)-.25 G 3.313(st).15 G .813(hat aid writing deb)155.446
349.703 R .813(uggers are)-.2 F F5(pr)3.313 E(ocedur)-.45 E(e-lambda)-.37 E F0
.813(to obtain the lambda e)3.313 F .814(xpression that)-.15 F -.25(eva)72
369.703 S .672(luated to a gi).25 F -.15(ve)-.25 G 3.172(np).15 G .671
(rocedure, and a primiti)161.548 369.703 R .971 -.15(ve t)-.25 H .671
(hat returns the list of currently acti).15 F .971 -.15(ve p)-.25 H .671
(rocedures together).15 F .744(with their actual ar)72 389.703 R .744
(guments and the le)-.18 F .744(xical en)-.15 F .745
(vironments in which the procedure calls took place \(a)-.4 F F5(bac)3.245 E
(k-)-.2 E(tr)72 409.703 Q(ace)-.15 E F0(\).)A/F6 10/Times-Bold@0 SF 2.5
(4.5. Garbage)72 449.703 R(Collection)2.5 E F0 2.105(The g)97 473.303 R 2.105
(arbage collector of Elk is based on the)-.05 F F5(stop-and-copy)4.605 E F0
2.105(algorithm \(see e.)4.605 F 2.105(g. [Abelson et al.)1.666 F 2.649
(1985]\). The)72 493.303 R .149(heap area is di)2.649 F .149(vided into tw)-.25
F(o)-.1 E F5(semispaces)2.649 E F0 2.649(,o)C .15(nly one of which is acti)
297.951 493.303 R .45 -.15(ve d)-.25 H .15(uring normal operation.).15 F .551
(In a g)72 513.303 R .551
(arbage collection, all objects that are still reachable are mo)-.05 F -.15(ve)
-.15 G 3.05(di).15 G .55(nto the unused semispace; the pre)355.69 513.303 R
(vi-)-.25 E .474(ously used semispace then remains unused until the ne)72
533.303 R .474(xt g)-.15 F .474(arbage collection.)-.05 F .474
(An incremental, generational)5.474 F -.05(ga)72 553.303 S .09
(rbage collector for Elk, inspired by Y).05 F(ip')-.55 E 2.59(sg)-.55 G .09
(arbage collector [Y)253.06 553.303 R .09
(ip 1991], has recently been implemented as)-.55 F(an alternati)72 573.303 Q .3
-.15(ve t)-.25 H 2.5(ot).15 G(he stop-and-cop)141.31 573.303 Q 2.5(yg)-.1 G
(arbage collector)217.81 573.303 Q/F7 8/Times-Roman@0 SF(2)-3.2 I F0(.)3.2 I
.235(Extensions to Elk can re)97 596.903 R(gister)-.15 E F5(befor)2.735 E(e-GC)
-.37 E F0(and)2.735 E F5(after)2.735 E(-GC)-.2 E F0 .234
(functions with the interpreter; these functions)2.735 F 1.506(are in)72
616.903 R -.2(vo)-.4 G -.1(ke).2 G 4.006(db).1 G 4.006(yt)128.742 616.903 S
1.506(he g)140.528 616.903 R 1.506
(arbage collector immediately before and after each g)-.05 F 1.507
(arbage collection run.)-.05 F -.4(Wi)6.507 G(thin).4 E F5(after)72 636.903 Q
(-GC)-.2 E F0 .342(functions, e)2.842 F .342
(xtensions can determine whether a particular Scheme object has become g)-.15 F
.341(arbage, i.)-.05 F(e.)1.666 E .32 LW 76 646.903 72 646.903 DL 80 646.903 76
646.903 DL 84 646.903 80 646.903 DL 88 646.903 84 646.903 DL 92 646.903 88
646.903 DL 96 646.903 92 646.903 DL 100 646.903 96 646.903 DL 104 646.903 100
646.903 DL 108 646.903 104 646.903 DL 112 646.903 108 646.903 DL 116 646.903
112 646.903 DL 120 646.903 116 646.903 DL 124 646.903 120 646.903 DL 128
646.903 124 646.903 DL 132 646.903 128 646.903 DL 136 646.903 132 646.903 DL
140 646.903 136 646.903 DL 144 646.903 140 646.903 DL/F8 6/Times-Roman@0 SF(2)
82 656.303 Q F7 -.32(Wi)4 2.4 O .737(th a generational g).32 F .737
(arbage collector)-.04 F 2.737(,o)-.32 G .737(bjects survi)220.413 658.703 R
.737(ving g)-.2 F .738(arbage collections will not be touched ag)-.04 F .738
(ain until there is)-.04 F .79
(only a certain amount of memory left on the heap, triggering a full g)72
668.703 R .79(arbage collection.)-.04 F -.12(Pa)4.789 G .789
(rticularly in applications with).12 F(lar)72 678.703 Q .011
(ge amounts of Scheme code or other constant data, partial GCs run much f)-.144
F .012(aster than full GCs.)-.08 F -.32(Wi)4.012 G .012(th incremental g).32 F
(arbage)-.04 E .153(collection, starting a g)72 688.703 R .153(arbage collecti\
on does not suspend the application until the GC is done; instead, the collect\
or returns)-.04 F .485
(control to the application almost immediately \(after ha)72 698.703 R .485
(ving mark)-.16 F .486(ed pages of interest unreadable with the)-.08 F/F9 8
/Times-Italic@0 SF(mpr)2.486 E(otect)-.36 E F7(system)2.486 E(call\) and re)72
708.703 Q -.04(ga)-.12 G(ins control with a SIGSEGV signal.).04 E EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(7-)288 56 S .403
(no references to the object e)72 92 R .403(xist an)-.15 F 2.903(yl)-.15 G
(onger)223.651 92 Q 5.403(.I)-.55 G 2.903(nt)257.104 92 S .403(his case, an e)
267.787 92 R .404(xtension may perform some kind of clean-up)-.15 F
(action; for e)72 112 Q(xample, if the no)-.15 E 2.5(wu)-.25 G
(nreferenced object contains a handle to an open \214le, close this \214le.)
202.41 112 Q .522(The Elk distrib)97 135.6 R .521
(ution contains a library based on this mechanism that enables e)-.2 F .521
(xtensions to re)-.15 F .521(gister a)-.15 F/F1 10/Times-Italic@0 SF .488
(termination function)72 155.6 R F0 .488(for objects of a particular type.)
2.988 F .489(The termination function associated with an object is)5.489 F .49
(then in)72 175.6 R -.2(vo)-.4 G -.1(ke).2 G 2.99(db).1 G 2.99(yt)131.72 175.6
S .49(he g)142.49 175.6 R .489(arbage collector automatically when this object\
 has been detected to be unused.)-.05 F(The)5.489 E .519(Xlib e)72 195.6 R .519
(xtension of Elk uses this library to perform suitable \214nalization operatio\
ns on objects created by the)-.15 F -.15(ex)72 215.6 S .229(tensions, for e).15
F .229(xample, close windo)-.15 F .229
(ws, unload fonts, and free colormap objects that ha)-.25 F .528 -.15(ve b)-.2
H .228(ecome unrefer).15 F(-)-.2 E 2.793(enced. This)72 235.6 R .294
(mechanism is slightly complicated by the f)2.793 F .294
(act that objects may ha)-.1 F .594 -.15(ve t)-.2 H 2.794(ob).15 G 2.794(et)
417.294 235.6 S .294(erminated in a pre-)427.308 235.6 R .494
(de\214ned order; for instance, when an X11 display becomes g)72 255.6 R .493
(arbage, all objects associated with this display)-.05 F
(must be terminated before the display itself is \214nally closed.)72 275.6 Q
/F2 10/Times-Bold@0 SF 2.5(4.6. Library)72 315.6 R(Extensions)2.5 E F0 .075
(The problems we encountered when designing and implementing Elk')97 339.2 R
2.575(si)-.55 G(nterf)387.365 339.2 Q .075(aces to the C libraries of)-.1 F
.334(X11 are lik)72 359.2 R .334(ely to apply to a wide range of similar APIs.)
-.1 F .333(The X11 libraries, especially Xlib, are quite com-)5.334 F(ple)72
379.2 Q 1.323(x; the core Xlib alone e)-.15 F 1.323
(xports more than 600 functions and macros, with numerous dif)-.15 F 1.324
(ferent mecha-)-.25 F .692(nisms for passing ar)72 399.2 R .692(guments and fo\
r manipulating objects, some of which could be considered rather v)-.18 F(er)
-.15 E(-)-.2 E 1.085(bose and error)72 419.2 R 3.585(-prone. This)-.2 F(comple)
3.585 E 1.085(xity is, at least partly)-.15 F 3.585(,c)-.65 G 1.085
(aused by the semantic restricti)314.335 419.2 R -.15(ve)-.25 G 1.085
(ness of the C).15 F .83(programming language.)72 439.2 R .829
(Thus, when designing the Scheme language interf)5.83 F .829
(ace, we had the opportunity to)-.1 F(eliminate some of the `)72 459.2 Q(`w)
-.74 E(arts.)-.1 E -.74('')-.7 G .07(If inte)97 482.8 R .07
(gration of a library with an e)-.15 F .07(xtension language \(or interacti)
-.15 F .37 -.15(ve l)-.25 H .07(anguage in general\) is not antici-).15 F 1.812
(pated at the time the programmer')72 502.8 R 4.311(si)-.55 G(nterf)227.851
502.8 Q 1.811(ace of the library is designed, writing a properly functioning)
-.1 F -.15(ex)72 522.8 S .671(tension language interf).15 F .671
(ace to this library can become rather challenging or e)-.1 F -.15(ve)-.25 G
3.172(ni).15 G 3.172(mpossible. This)412.656 522.8 R(prob-)3.172 E 1.28
(lem is e)72 542.8 R -.15(xe)-.15 G 1.28(mpli\214ed by the `).15 F(`Xt')-.74 E
3.78('t)-.74 G 1.279
(oolkit intrinsics library of X11, in particular by earlier v)210.11 542.8 R
1.279(ersions of this)-.15 F(library)72 562.8 Q 5.231(.T)-.65 G .231(he follo)
111.851 562.8 R .231(wing e)-.25 F .231(xample illustrates a typical dif)-.15 F
.231(\214culty caused by the `)-.25 F(`static')-.74 E 2.732('n)-.74 G .232
(ature of the program-)418.054 562.8 R(mer')72 582.8 Q 2.5(si)-.55 G(nterf)99.5
582.8 Q(ace to `)-.1 E(`Xt')-.74 E(':)-.74 E .497
(Each class of graphical objects \()97 606.4 R F1(widg)A(ets)-.1 E F0 .497
(in `)2.997 F(`Xt')-.74 E 2.997('t)-.74 G .497(erminology\) e)300.468 606.4 R
.497(xports a list of attrib)-.15 F .497(utes \()-.2 F F1 -.37(re)C(sour).37 E
(ces)-.37 E F0(\))A .267(that are associated with objects of this class.)72
626.4 R 2.767(Af)5.267 G .267(unction is pro)269.093 626.4 R .267(vided by `)
-.15 F(`Xt')-.74 E 2.768('t)-.74 G 2.768(oo)389.62 626.4 S .268
(btain the list of resources)402.388 626.4 R .601
(of a widget class together with the name and C type \(inte)72 646.4 R(ger)-.15
E 3.101(,s)-.4 G .601(tring, pixmap, color)328.344 646.4 R 3.101(,e)-.4 G .601
(tc.\) of each resource.)418.627 646.4 R .991(On this basis, operations lik)72
666.4 R 3.491(es)-.1 G .991(etting the v)199.075 666.4 R .991
(alue of a widget')-.25 F 3.491(sr)-.55 G .991
(esource from within Scheme can be imple-)326.421 666.4 R .522
(mented in a straightforw)72 686.4 R .522(ard w)-.1 F(ay)-.1 E 5.522(.T)-.65 G
.522(he `)217.34 686.4 R(`Xt')-.74 E 3.022('e)-.74 G .522
(xtension just has to check if the user)258.954 686.4 R .521
(-supplied Scheme v)-.2 F(alue)-.25 E .269(can be con)72 706.4 R -.15(ve)-.4 G
.269(rted into a C object of the resource').15 F 2.769(st)-.55 G .27
(ype, perform this con)276.87 706.4 R -.15(ve)-.4 G .27
(rsion, and call the Xt-function to).15 F 1.129
(set the resource, or complain to the user if the v)72 726.4 R 1.128
(alue is not suitable for this resource.)-.25 F(Ho)6.128 E(we)-.25 E -.15(ve)
-.25 G 1.928 -.4(r, i).15 H 3.628(ne).4 G(arly)488.45 726.4 Q EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(8-)288 56 S -.15(ve)72 92 S .698
(rsions of Xt, some classes of widgets had a subset of resources \(the).15 F/F1
10/Times-Italic@0 SF(constr)3.198 E .698(aint r)-.15 F(esour)-.37 E(ces)-.37 E
F0 3.199(\)w)C .699(hose names)456.921 92 R .319
(and types could not be obtained by an `)72 112 R(`Xt')-.74 E 2.819('a)-.74 G
2.819(pplication. While)257.521 112 R .319(this omission w)2.819 F .318
(as usually not percei)-.1 F -.15(ve)-.25 G 2.818(da).15 G(s)500.11 112 Q 3.276
(ap)72 132 S .777(roblem for C programmers \(who w)84.716 132 R .777(ould kno)
-.1 F 3.277(we)-.25 G .777(ach widget')279.494 132 R 3.277(sr)-.55 G(esources)
337.148 132 Q F1 3.277(ap)3.277 G(riori)388.132 132 Q F0 .777
(from reading the docu-)3.277 F .592(mentation\), it had a dramatic ef)72 152 R
.592(fect on Elk')-.25 F 3.092(s`)-.55 G(`Xt')257.656 152 Q 3.092('e)-.74 G
.592(xtension, as no)284.288 152 R 3.092(wt)-.25 G .592(he kno)358.034 152 R
.591(wledge about these resources)-.25 F 1.072(had to be hard-wired into the e)
72 172 R 3.573(xtension. As)-.15 F 3.573(ar)3.573 G 1.073(esult, the e)269.523
172 R(xtension')-.15 E 3.573(ss)-.55 G 1.073
(ource code had to be modi\214ed for)362.592 172 R(each ne)72 192 Q 2.5(ww)-.25
G(idget set to be made usable from within Scheme code.)118.95 192 Q .039(This \
particular problem has been remedied in recent releases of X11, though se)97
215.6 R -.15(ve)-.25 G .038(ral similar problems).15 F .096(remain; e)72 235.6
R -.15(ve)-.25 G 2.596(ni).15 G 2.596(nt)129.002 235.6 S .096
(he UNIX C library)139.378 235.6 R 5.096(.W)-.65 G .096(hile design \215a)
231.312 235.6 R .096(ws of library interf)-.15 F .096
(aces often go unnoticed or are con-)-.1 F .297
(sidered minor when writing C or C++ programs \(e.)72 255.6 R .297(g. the f)
1.666 F .297(act that implementations of the)-.1 F F1(qsort\(\))2.797 E F0
(functions)2.797 E .451(are non-reentrant\), the)72 275.6 R 2.951(yb)-.15 G
.451(ecome crucial when these libraries are made accessible to an e)174.833
275.6 R .452(xtension language.)-.15 F 2.283(As the importance of e)72 295.6 R
2.283(xtension languages is gro)-.15 F 2.282
(wing, it is essential that future library interf)-.25 F 2.282(aces are)-.1 F
(designed with the particular requirements of e)72 315.6 Q
(xtensions languages in mind.)-.15 E/F2 10/Times-Bold@0 SF 2.5(5. Practical)72
359.2 R(Experiences with Elk)2.5 E 2.5(5.1. Elk)72 399.2 R(and ISO)2.5 E(TEXT)
-.4 E F0 .575(In de)97 422.8 R -.15(ve)-.25 G .575
(loping the document processing system ISO).15 F(TEXT)-.4 E 3.076(,E)-.74 G
.576(lk pro)342.238 422.8 R -.15(ve)-.15 G 3.076(dt).15 G 3.076(ob)386.42 422.8
S 3.076(eam)399.496 422.8 S .576(ajor asset [Bormann)422.308 422.8 R 2.674
(1991]. Scheme)72 442.8 R -.1(wa)2.674 G 2.674(su).1 G .173
(sed as the implementation language for all user interf)160.462 442.8 R .173
(ace aspects of ISO)-.1 F(TEXT)-.4 E 5.173(.A)-.74 G(part)488.45 442.8 Q .456
(from pro)72 462.8 R .456(viding e)-.15 F .456(xtensibility to users of ISO)
-.15 F(TEXT)-.4 E 2.956(,u)-.74 G .457(sing Elk as the base for ISO)284.852
462.8 R .457(TEXT made it possible to)-.4 F .472
(write the shell code in a high le)72 482.8 R -.15(ve)-.25 G 2.971(ll).15 G
.471(anguage with all its amenities, e.)218.135 482.8 R .471
(g. automatic storage reclamation.)1.666 F(As)5.471 E 1.091
(no recompilation and relinking is necessary)72 502.8 R 3.591(,i)-.65 G 3.592
(ti)259.816 502.8 S 3.592(saq)268.968 502.8 S 1.092
(uick operation to apply and test changes to the user)289.482 502.8 R(interf)72
522.8 Q(ace.)-.1 E .77(Elk pro)97 546.4 R .77(vides for a strong `)-.15 F
(`\214re)-.74 E -.1(wa)-.25 G(ll').1 E 3.27('i)-.74 G 3.27(nt)250.72 546.4 S
.77(he ISO)261.77 546.4 R .77(TEXT system: b)-.4 F .77
(ugs in the Scheme code gi)-.2 F 1.07 -.15(ve r)-.25 H .77(ise to).15 F 1.804
(errors at the Scheme le)72 566.4 R -.15(ve)-.25 G 1.805
(l, which can easily be deb).15 F 1.805(ugged using the \(primiti)-.2 F -.15
(ve)-.25 G 4.305(,b).15 G 1.805(ut functional\) b)414.48 566.4 R(uilt-in)-.2 E
(deb)72 586.4 Q .192(ugger of Elk, while conditions such as core dumps al)-.2 F
-.1(wa)-.1 G .192(ys are the result of b).1 F .191(ugs in the ISO)-.2 F .191
(TEXT k)-.4 F(ernel)-.1 E(implementation.)72 606.4 Q .139
(All this assistance for the de)97 630 R -.15(ve)-.25 G .139(lopment of ISO).15
F .14(TEXT could be obtained without sacri\214cing the perfor)-.4 F(-)-.2 E
(mance of the ISO)72 650 Q(TEXT k)-.4 E
(ernel system, which is still written in ef)-.1 E(\214cient C++.)-.25 E .989
(Elk also allo)97 673.6 R .989(wed us to isolate the ISO)-.25 F .989(TEXT k)-.4
F .989(ernel from the choice of an X toolkit: the ISO)-.1 F(TEXT)-.4 E -.1(ke)
72 693.6 S .53(rnel is una).1 F -.1(wa)-.15 G .53
(re of the toolkit being used \(`).1 F(`Xt')-.74 E 3.031('w)-.74 G .531
(ith OSF/Motif\).)284.062 693.6 R .531(The Scheme code b)5.531 F .531
(uilds a user inter)-.2 F(-)-.2 E -.1(fa)72 713.6 S .442
(ce using the Motif library interf).1 F .442(ace and pro)-.1 F .442
(vides X windo)-.15 F .442(ws to the ISO)-.25 F .442(TEXT k)-.4 F 2.942
(ernel. Input)-.1 F .441(is processed)2.941 F .115
(by the Scheme code which calls editor primiti)72 733.6 R -.15(ve)-.25 G 2.615
(sp).15 G(ro)276.94 733.6 Q .115(vided by the ISO)-.15 F .116(TEXT k)-.4 F .116
(ernel and schedules redisplay)-.1 F EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 56 S 2.5(9-)288 56 S 2.799
(operations. Replacing)72 92 R .299(Xt and OSF/Motif by e.)2.799 F(g.)1.666 E
/F1 10/Times-Italic@0 SF(Xvie)2.798 E(w)-.15 E F0 -.1(wo)2.798 G .298
(uld require no changes in the ISO).1 F .298(TEXT k)-.4 F(ernel.)-.1 E .546
(The w)97 115.6 R .546(ork on ISO)-.1 F .546
(TEXT clearly identi\214ed one single main problem in writing non-tri)-.4 F
.547(vial e)-.25 F(xtensions:)-.15 E .169(as an)72 135.6 R 2.669(yr)-.15 G .169
(equest for ne)103.288 135.6 R 2.668(wh)-.25 G .168(eap space can trigger a g)
169.914 135.6 R .168(arbage collection, e)-.05 F .168(xtensions must re)-.15 F
.168(gister local or tempo-)-.15 F 1.626(rary Scheme objects with the g)72
155.6 R 1.626
(arbage collector to protect them from being discarded during a GC run)-.05 F
.259(caused by an)72 175.6 R 2.759(yn)-.15 G .259(ested procedure call.)136.777
175.6 R .259(While this scheme has the adv)5.259 F .258
(antage that maximum utilization of the)-.25 F -.2(av)72 195.6 S .854
(ailable heap space is guaranteed, it imposes a strict discipline on the e)-.05
F .854(xtension programmer)-.15 F 5.854(.F)-.55 G .854(ailure to)470.096 195.6
R 1.339(properly protect temporary Scheme objects usually results in delayed c\
rashes of the application that are)72 215.6 R .015
(hard to trace back to the actual source of the problem.)72 235.6 R -.15(Fo)
5.016 G 2.516(ri).15 G .016(nstance, when de)311.424 235.6 R -.15(ve)-.25 G
.016(loping the X11 e).15 F .016(xtensions to)-.15 F
(Elk, most of the time spent for deb)72 255.6 Q(ugging w)-.2 E
(as due to GC-related b)-.1 E(ugs.)-.2 E/F2 10/Times-Bold@0 SF 2.5(5.2. Elk)72
295.6 R(and TELES.VISION)2.5 E F0 .753(Another e)97 319.2 R .752
(xample for using Elk and its X interf)-.15 F .752
(ace as the basis for a user interf)-.1 F .752(ace subsystem is the)-.1 F 1.145
(TELES.VISION desktop video conferencing system [TELES 1991].)72 339.2 R 1.146
(First, a some)6.146 F 1.146(what generalized User)-.25 F(Interf)72 359.2 Q
1.43(ace Management System w)-.1 F 1.43(as b)-.1 F 1.429
(uilt in about 1500 lines of Scheme, which w)-.2 F 1.429
(as then instantiated to)-.1 F -.2(bu)72 379.2 S .81(ild a number of re).2 F
.811(visions of the TELES.VISION user interf)-.25 F 3.311(ace. The)-.1 F .811
(user interf)3.311 F .811(ace communicates with)-.1 F .488
(the rest of the conferencing system via a remote procedure call C library)72
399.2 R 2.987(,u)-.65 G .487(sing Scheme continuations as a)377.062 399.2 R
.178(basis for a simple form of multithreading.)72 419.2 R .179
(According to the TELES.VISION implementors [Bastian 1993],)5.178 F .096(Elk w)
72 439.2 R .096(as a `)-.1 F .096(`perfect \214t')-.74 F 2.596('f)-.74 G .096
(or this application, with the single e)170.03 439.2 R .096
(xception that its initial g)-.15 F .095(arbage collector placed)-.05 F .723
(too hea)72 459.2 R .723(vy a b)-.2 F .723(urden on the memory starv)-.2 F .723
(ed initial en)-.15 F .724(vironment \(where 8 MB of memory had to be shared)
-.4 F .012(between an operating system, v)72 479.2 R .012(arious realtime de)
-.25 F .012(vice dri)-.25 F -.15(ve)-.25 G .012(rs, dri).15 F -.15(ve)-.25 G
.012(rs for video codec hardw).15 F .012(are, and an MS-)-.1 F -.4(Wi)72 499.2
S(ndo).4 E .437(ws emulation subsystem\).)-.25 F .437
(This has since been remedied by adding memory)5.437 F 5.437(.U)-.65 G .438
(sing Elk also helped)421.857 499.2 R .775(when TELES.VISION w)72 519.2 R .775
(as ported to OS/2 \212 in particular)-.1 F 3.275(,i)-.4 G .774
(ts continuations ported easily)319.835 519.2 R 5.774(.A)-.65 G .774
(lso, Elk w)453.942 519.2 R(as)-.1 E .708
(used in the TELES.VISION project to b)72 539.2 R .708
(uild a rapid prototype of the central conference management sub-)-.2 F
(system \(ag)72 559.2 Q(ain using continuations to pro)-.05 E
(vide multithreading\) within less than tw)-.15 E 2.5(ow)-.1 G(eeks.)408.08
559.2 Q F2 2.5(5.3. Other)72 599.2 R(Pr)2.5 E(ojects)-.18 E F0 .625
(While Elk has been used in the ISO)97 622.8 R .625
(TEXT project since 1987, le)-.4 F -.05(ga)-.15 G 3.125(li).05 G .625
(ssues pre)377.47 622.8 R -.15(ve)-.25 G .625(nted making it pub-).15 F 1.472
(licly a)72 642.8 R -.25(va)-.2 G 1.472(ilable until the f).25 F 1.472
(all of 1989.)-.1 F 1.473(Since, Elk has g)6.472 F 1.473
(ained acceptance, in f)-.05 F 1.473(act suf)-.1 F 1.473(\214cient momentum to)
-.25 F 1.337(encourage others to contrib)72 662.8 R 1.337(ute softw)-.2 F 3.837
(are. Elk)-.1 F 1.337(has been used successfully as an e)3.837 F 1.336
(xtension language for a)-.15 F -.05(hy)72 682.8 S(perte).05 E .677
(xt database, a distrib)-.15 F .677(uted v)-.2 F .677
(ersion management system, v)-.15 F .678
(arious CAD programs, testing and simula-)-.25 F .228
(tion systems for digital circuits as well as en)72 702.8 R .228
(vironmental models.)-.4 F .228(It also has found use simply as a Scheme)5.228
F(programming en)72 722.8 Q
(vironment, in particular for its X and Motif interf)-.4 E(ace.)-.1 E EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(0-)288 56 S 1.634(The X e)97 92
R 1.634(xtensions ha)-.15 F 1.934 -.15(ve p)-.2 H(ro).15 E -.15(ve)-.15 G 4.134
(nu).15 G 1.634
(seful in particular for writers of applications with graphical user)233.51 92
R(interf)72 112 Q .336
(aces based on X; Elk enables them to write their user interf)-.1 F .335
(aces or parts thereof in Scheme to achie)-.1 F -.15(ve)-.25 G 2.5(ah)72 132 S
(igh de)83.94 132 Q(gree of customizability)-.15 E(.)-.65 E .276
(Elk also has found use as a free-standing Scheme implementation.)97 155.6 R
.277(In combination with the X e)5.277 F(xten-)-.15 E .336
(sions it is well-suited for teaching X to be)72 175.6 R .335
(ginners, as a tool for interacti)-.15 F -.15(ve)-.25 G .335(ly e).15 F .335
(xploring X, and as a platform)-.15 F
(for rapid prototyping of X-based applications.)72 195.6 Q .839
(Outside of the UNIX w)97 219.2 R .839(orld, we are a)-.1 F -.1(wa)-.15 G .839
(re of user).1 F .84(-done ports to DOS \(both 16 bit and 32 bit using)-.2 F
(DJGPP\), OS/2, and MacOS.)72 239.2 Q .229(Users cited the follo)97 262.8 R
.229(wing features as signi\214cant for their choice of Elk: dynamic object co\
de loading,)-.25 F .586(dumping of ready-to-run e)72 282.8 R -.15(xe)-.15 G
.586(cutables, Elk').15 F 3.086(sp)-.55 G .586(erformance, its le)255.71 282.8
R -.05(ga)-.15 G .587(lly unencumbered a).05 F -.25(va)-.2 G(ilability).25 E
3.087(,a)-.65 G .587(nd \214nally)465.353 282.8 R
(its simplicity and adaptability \(and, as users say)72 302.8 Q 2.5(,i)-.65 G
(ts consistent, clean and well-structured code\).)270.23 302.8 Q .516
(Users are not happ)97 326.4 R 3.016(yw)-.1 G .516(ith v)188.384 326.4 R .516(\
arious arti\214cial limitations still in the system \(such as the static heap \
size)-.25 F 1.211(which with the stop-and-cop)72 346.4 R 3.711(yg)-.1 G 1.211
(arbage collector needs to be \214x)203.344 346.4 R 1.211(ed at in)-.15 F -.2
(vo)-.4 G 1.212(cation time\), with Elk').2 F 3.712(sp)-.55 G(erfor)481.44
346.4 Q(-)-.2 E .964(mance, and with the f)72 366.4 R .964(act that Elk `)-.1 F
(`lik)-.74 E .964(es to be in control')-.1 F 3.464('\()-.74 G .964
(i.e., supplies the main program\).)317.678 366.4 R .963(In addition,)5.963 F
(prospecti)72 386.4 Q .628 -.15(ve u)-.25 H .328
(sers tend to ponder acceptance problems with their fello).15 F 2.829(ww)-.25 G
(ork)368.914 386.4 Q .329(ers and customers \(who might)-.1 F .395
(not be well v)72 406.4 R .395
(ersed in Lisp/Scheme\) before committing to Elk.)-.15 F(Finally)5.395 E 2.894
(,f)-.65 G .394(or man)364.414 406.4 R 2.894(ye)-.15 G .394
(xtension language appli-)404.892 406.4 R .62(cations, Elk is `)72 426.4 R .62
(`too big')-.74 F .62(', and users ha)-.74 F .92 -.15(ve a)-.2 H(sk).15 E .62
(ed for v)-.1 F .62(ersions without the more e)-.15 F(xpensi)-.15 E .92 -.15
(ve E)-.25 H .62(lk features such).15 F .628
(as arbitrary size number support or continuations.)72 446.4 R .627
(On the other hand, users ha)5.628 F .927 -.15(ve a)-.2 H(sk).15 E .627
(ed for additional fea-)-.1 F .382(tures such as an inter)72 466.4 R .382
(-process communication interf)-.2 F .382(ace, or a better deb)-.1 F(ugger)-.2
E 5.382(.A)-.55 G .382(lso, a port to MS-W)394.512 466.4 R(indo)-.4 E(ws)-.25 E
(has been acti)72 486.4 Q -.15(ve)-.25 G(ly sought.).15 E/F1 10/Times-Bold@0 SF
2.5(6. Conclusions)72 526.4 R F0 .286(Since the Elk project be)97 550 R -.05
(ga)-.15 G .286
(n, both the research community and signi\214cant industry projects ha).05 F
.585 -.15(ve g)-.2 H(en-).15 E 2.594(erated increasing numbers of `)72 570 R
2.594(`embeddable language')-.74 F 5.094('i)-.74 G 5.094(mplementations. While)
309.904 570 R(man)5.094 E 5.094(ys)-.15 G 2.594(uch languages)444.476 570 R
.367(inherit the syntactic \215a)72 590 R -.2(vo)-.2 G 2.867(ro).2 G 2.867(fB)
185.278 590 S .367(ASIC, those projects that focus on the ability to b)197.795
590 R .366(uild non-tri)-.2 F .366(vial e)-.25 F(xtensions)-.15 E
(recently seem to almost e)72 610 Q(xclusi)-.15 E -.15(ve)-.25 G
(ly turn to the Scheme language.).15 E .315(Scheme has pro)97 633.6 R -.15(ve)
-.15 G 2.815(nt).15 G 2.815(ob)180.685 633.6 S 2.815(ea)193.5 633.6 S 2.815(ne)
205.195 633.6 S -.25(ff)217.45 633.6 S(ecti).25 E .615 -.15(ve l)-.25 H .315
(anguage for e).15 F .315(xtension language purposes.)-.15 F .316(In the be)
5.316 F .316(ginning of)-.15 F .802(the ISO)72 653.6 R .802(TEXT project, ther\
e were concerns that an implementation of the full Scheme language w)-.4 F .802
(ould be)-.1 F .296(both too lar)72 673.6 R .296(ge and too slo)-.18 F 4.096
-.65(w. T)-.25 H .296(hese reserv).65 F .296(ations pro)-.25 F -.15(ve)-.15 G
2.796(dt).15 G 2.796(ob)299.944 673.6 S 2.796(eu)312.74 673.6 S .297
(nfounded: the binary code size of Elk is still)324.976 673.6 R 1.199
(signi\214cantly belo)72 693.6 R 3.699(wt)-.25 G 1.198
(hat of a medium size application such as)155.818 693.6 R/F2 10/Times-Italic@0
SF(vi)3.698 E F0 6.198(.W)C 1.198(hile the performance of Elk may be)355.182
693.6 R .085(uninspiring \(no compiler is a)72 713.6 R -.25(va)-.2 G .086
(ilable\), this turned out not to be a critical issue, as an).25 F 2.586(yb)
-.15 G .086(ottlenecks can easily)421.068 713.6 R(be replaced by a primiti)72
733.6 Q .3 -.15(ve r)-.25 H(ecoded in C or C++.).15 E EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(1-)288 56 S .789
(There also were concerns that Scheme w)97 92 R .789
(as going to be hard to learn for UNIX users f)-.1 F .788(amiliar with,)-.1 F
(say)72 112 Q 2.871(,t)-.65 G .371(he Bourne Shell and C.)92.831 112 R .372
(This seems to be more of a problem with initial acceptance than with a steep)
5.371 F .366(learning curv)72 132 R .366(e: after ha)-.15 F .366(ving o)-.2 F
-.15(ve)-.15 G .366
(rcome the initial barrier \(which generally had to do mainly with percei).15 F
(ving)-.25 E .918
(the syntax as queer\), users reported the same rapid increase in producti)72
152 R .918(vity the)-.25 F 3.418(ya)-.15 G .918(lready kne)409.014 152 R 3.419
(wf)-.25 G .919(rom shell)465.581 152 R 2.64(programming. It)72 172 R .14
(certainly has not been necessary to recruit Lisp programmers to be able to e)
2.64 F .14(xtend applica-)-.15 F(tions with Elk.)72 192 Q(Finally)97 215.6 Q
3.232(,E)-.65 G .732(lk w)136.532 215.6 R .732(as an e)-.1 F -.15(xe)-.15 G
.732(rcise in writing portable softw).15 F .732
(are without being restricted to what is consid-)-.1 F .091
(ered portable today)72 235.6 R 5.091(.A)-.65 G .091(part from the well-kno)
163.543 235.6 R .091(wn problem that true portability between current rele)-.25
F -.25(va)-.25 G .09(nt plat-).25 F .065
(forms cannot be attained by just picking one of the proclaimed `)72 255.6 R
(`standards')-.74 E .065(', and the unwieldy situation that)-.74 F .32
(there are too man)72 275.6 R 2.82(ys)-.15 G .32
(tandards for \(auto-\)con\214guration of softw)154.22 275.6 R .319
(are, a signi\214cant part of the ef)-.1 F .319(fort in generat-)-.25 F 1.881
(ing Elk w)72 295.6 R 1.881(as consumed by de)-.1 F 1.881
(vising support for each ne)-.25 F 4.381(wp)-.25 G 1.882
(latform for dynamic loading, generation of)323.51 295.6 R -.15(exe)72 315.6 S
1.054(cutables from running programs, and switching between threads of control\
 \(continuations\).).15 F 1.054(Note that)6.054 F(man)72 335.6 Q 2.848(yn)-.15
G(on-tri)101.918 335.6 Q .348
(vial applications of today \(apart from Lisp programming en)-.25 F .349
(vironments, GNU emacs and T)-.4 F(E)2 I(X)-2 I 1.039
(come to mind\) need one or more of these features; also note that most rele)72
355.6 R -.25(va)-.25 G 1.039(nt current platforms can be).25 F
(made to support these features quite well \212 just in wildly dif)72 375.6 Q
(ferent w)-.25 E(ays.)-.1 E/F1 10/Times-Bold@0 SF 2.5(7. A)72 415.6 R -.1(va)-1
G(ilability).1 E F0 1.341(Elk is a)97 439.2 R -.25(va)-.2 G 1.342(ilable in le)
.25 F -.05(ga)-.15 G 1.342(lly unencumbered status.).05 F 1.342(The current v)
6.342 F 1.342(ersion as of June 1994 is 2.2.)-.15 F(The)6.342 E 1.245
(most recent v)72 459.2 R 1.245(ersion of Elk is a)-.15 F -.25(va)-.2 G 1.245
(ilable via anon).25 F 1.245(ymous FTP from ftp.x.or)-.15 F 3.745(g\()-.18 G
1.245(/contrib\) and ftp.fu-berlin.de)387.09 459.2 R
(\(/pub/unix/languages/scheme\).)72 479.2 Q F1 2.5(8. Ackno)72 519.2 R
(wledgments)-.1 E F0 .2(An early v)97 542.8 R .2(ersion of Elk w)-.15 F .2
(as written while one of us w)-.1 F .2(as emplo)-.1 F .2
(yed at TELES GmbH, Berlin.)-.1 F 1.8 -.8(We a)5.2 H(re).8 E 1.107
(grateful to Prof. Dr)72 562.8 R 3.607(.S)-.55 G 1.106
(igram Schindler of TELES and TU Berlin for pro)163.088 562.8 R 1.106
(viding the w)-.15 F 1.106(ork en)-.1 F 1.106(vironment for)-.4 F(ISO)72 582.8
Q(TEXT and Elk and for the permission to publish this softw)-.4 E(are.)-.1 E
.231(The present v)97 606.4 R .232(ersion is a result of our research w)-.15 F
.232(ork at T)-.1 F .232(echnische Uni)-.7 F -.15(ve)-.25 G .232
(rsit\344t Berlin, with the bene\214t).15 F .925(of the w)72 626.4 R .925
(ork of man)-.1 F 3.425(yc)-.15 G(ontrib)164.965 626.4 Q 3.425(utors. In)-.2 F
(particular)3.425 E 3.425(,w)-.4 G 3.425(ew)279.9 626.4 S .924
(ish to thank Marco Scheibe who wrote the genera-)294.985 626.4 R
(tional, incremental g)72 646.4 Q(arbage collector)-.05 E(.)-.55 E EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(2-)288 56 S/F1 10/Times-Bold@0
SF 2.5(9. Refer)72 92 R(ences)-.18 E F0([Abelson et al. 1985])72 115.6 Q 1.344
(Harold Abelson and Gerald J. Sussman with Julie Sussman,)97 135.6 R/F2 10
/Times-Italic@0 SF(Structur)3.845 E 3.845(ea)-.37 G 1.345(nd Interpr)396.725
135.6 R 1.345(etation of Com-)-.37 F(puter Pr)97 155.6 Q -.1(og)-.45 G -.15(ra)
.1 G(ms).15 E F0 2.5(,M)C(IT Press, Cambridge, Mass., 1985.)173.8 155.6 Q
([Bastian 1993])72 179.2 Q(Personal communication with Jan Bastian, TELES.)97
199.2 Q([Bormann et al. 1988])72 222.8 Q .915
(Ute Bormann, Carsten Bormann, C. Bathe, SDE \212 A WYSIWYG Editing and F)97
242.8 R .914(ormatting System)-.15 F .813(for OD)97 262.8 R 3.313(Aa)-.4 G .814
(nd SGML Documents, ESPRIT '88,)140.986 262.8 R F2(Pr)3.314 E .814
(oceedings of the 5th Annual ESPRIT Confer)-.45 F(ence)-.37 E(,)-.1 E(Brussels)
97 282.8 Q F0 2.5(,N)C -.15(ove)143.11 282.8 S(mber 14-17, 1988.).15 E
([Bormann 1991])72 306.4 Q .021
(Carsten Bormann, Open Document Processing and the ISO)97 326.4 R .021
(TEXT System, Doctoral Dissertation, TU-)-.4 F(Berlin, 1991.)97 346.4 Q
([CFI 1991a])72 370 Q 2.583(CAD Frame)97 390 R -.1(wo)-.25 G 2.583(rk Initiati)
.1 F -.15(ve)-.25 G 5.083(,C).15 G 2.583(FI Extension Language Sub-Committee,)
223.989 390 R F2 2.584(CFI Extension Langua)5.084 F -.1(ge)-.1 G 1.974
(Selection Document)97 410 R F0 4.474(,C)C 1.974
(FI Document Number 87, CAD Frame)192.878 410 R -.1(wo)-.25 G 1.973
(rk Initiati).1 F 2.273 -.15(ve I)-.25 H 1.973(nc., Austin, T).15 F -.15(ex)-.7
G(as,).15 E(1991.)97 430 Q([CFI 1991b])72 453.6 Q 3.257(CAD Frame)97 473.6 R
-.1(wo)-.25 G 3.257(rk Initiati).1 F -.15(ve)-.25 G 5.758(,E).15 G 3.258
(xtension Language W)225.452 473.6 R 3.258(orking Group: Architecture T)-.8 F
3.258(echnical Sub-)-.7 F(Committee,)97 493.6 Q F2 .836(Extension Langua)3.336
F -.1(ge)-.1 G 3.336(:C).1 G(or)243.198 493.6 Q 3.336(eL)-.37 G(angua)265.054
493.6 Q 1.036 -.1(ge S)-.1 H(election).1 E F0 3.335(,D)C .835(raft Proposal V)
352.345 493.6 R .835(ersion 0.7, CFI Docu-)-1.11 F
(ment Number ARCH-91-G-1, CAD Frame)97 513.6 Q -.1(wo)-.25 G(rk Initiati).1 E
.3 -.15(ve I)-.25 H(nc., Austin, T).15 E -.15(ex)-.7 G(as, 1991.).15 E
([Clinger et al. 1991])72 537.2 Q -.4(Wi)97 557.2 S .023
(lliam Clinger and Jonathan Rees \(Editors\),).4 F F2(Re)2.523 E(vised)-.15 E
/F3 9/Times-Italic@0 SF(4)314.448 552.2 Q F2 .024
(Report on the Algorithmic Langua)321.471 557.2 R .224 -.1(ge S)-.1 H -.15(ch)
.1 G(eme).15 E F0(,)A(No)97 577.2 Q -.15(ve)-.15 G(mber 2, 1991.).15 E -1.27
-.74(Av a)5 H
(ilable as ftp://cs.indiana.edu/pub/scheme-repository/doc/r4rs.ps.Z.).74 E
([CLX 1991])72 600.8 Q .167(CLX \212 Common LISP X Interf)97 620.8 R .167
(ace, 1991.)-.1 F(\(P)5.167 E .167(art of the X11 Release 5 distrib)-.15 F .167
(ution a)-.2 F -.25(va)-.2 G .166(ilable from the).25 F(MIT softw)97 640.8 Q
(are distrib)-.1 E(ution center)-.2 E(.\))-.55 E([Co)72 664.4 Q(wlisha)-.25 E
2.5(w1)-.15 G(985])127.43 664.4 Q 1.813(M. F)97 684.4 R 4.313(.C)-.8 G -.25(ow)
130.946 684.4 S(lisha).25 E -.65(w,)-.15 G F2 1.813(The REXX Langua)4.963 F
2.013 -.1(ge \212 A P)-.1 H -.15(ra).1 G 1.813(ctical Appr).15 F(oac)-.45 E
4.313(ht)-.15 G 4.313(oP)378.16 684.4 S -1.7 -.45(ro g)393.583 684.4 T -.15(ra)
.45 G(mming).15 E F0 1.814(Prentice Hall,)4.313 F(Engle)97 704.4 Q -.1(wo)-.25
G(od Clif).1 E(fs, NJ, 1985.)-.25 E EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(3-)288 56 S([Dyb)72 92 Q
(vig 1987])-.15 E(R. K)97 112 Q(ent Dyb)-.25 E(vig,)-.15 E/F1 10/Times-Italic@0
SF(The Sc)2.5 E(heme Pr)-.15 E -.1(og)-.45 G -.15(ra).1 G(mming Langua).15 E
-.1(ge)-.1 G F0 2.5(,P).1 G(rentice Hall, Engle)323.87 112 Q -.1(wo)-.25 G
(od Clif).1 E(fs, NJ, 1987.)-.25 E([Hansen 1990])72 135.6 Q -.4(Wi)97 155.6 S
.583(lfred J. Hansen, Enhancing documents with embedded programs: Ho).4 F 3.083
(wN)-.25 G .583(ess e)406.268 155.6 R .583(xtends insets in the)-.15 F(Andre)97
175.6 Q 3.916(wT)-.25 G(oolKit,)138.186 175.6 Q F1(Pr)3.916 E 1.416
(oceedings of IEEE Computer Society 1990 International Confer)-.45 F 1.417
(ence on Com-)-.37 F(puter Langua)97 195.6 Q -.1(ge)-.1 G(s).1 E F0 2.5(,M)C
(arch 12-15, 1990, Ne)178.19 195.6 Q 2.5(wO)-.25 G(rleans.)279.58 195.6 Q -.834
([IEEE Std 1178-1990])72 219.2 R F1 .097(IEEE Standar)97 239.2 R 2.597(df)-.37
G .096(or the Sc)162.934 239.2 R .096(heme Pr)-.15 F -.1(og)-.45 G -.15(ra).1 G
.096(mming Langua).15 F -.1(ge)-.1 G F0 2.596(,N).1 G .596 -.25(ew Y)332.344
239.2 T .096(ork, May 28, 1991 \(appro)-.85 F -.15(ve)-.15 G 2.596(dD).15 G
(ecem-)479.57 239.2 Q(ber 10, 1990\).)97 259.2 Q([Jo)72 282.8 Q 2.5(y1)-.1 G
(980])96.62 282.8 Q 2.69(Bill Jo)97 302.8 R 3.99 -.65(y, C)-.1 H 2.69
(hanges in the V).65 F 2.69(AX system in the F)-1.35 F 2.69(ourth Berk)-.15 F
(ele)-.1 E 5.19(yD)-.15 G(istrib)376.86 302.8 Q 2.69(ution, Computer Systems)
-.2 F(Research Group, Uni)97 322.8 Q -.15(ve)-.25 G(rsity of California, Berk)
.15 E(ele)-.1 E 1.3 -.65(y, N)-.15 H -.15(ove).65 G(mber 1980.).15 E([Le)72
346.4 Q(wis et al. 1990])-.25 E 1.184(Bil Le)97 366.4 R 1.183(wis, Dan LaLiber\
te, the GNU Manual Group, GNU Emacs Lisp Reference Manual, Edition)-.25 F
(1.03, Free Softw)97 386.4 Q(are F)-.1 E
(oundation, Cambridge, Mass., December 1990.)-.15 E([MIT 1984])72 410 Q .173
(MIT Scheme Manual, Se)97 430 R -.15(ve)-.25 G .174
(nth Edition, Department of Electrical Engineering and Computer Science,).15 F
(Massachusetts Institute of T)97 450 Q(echnology)-.7 E 2.5(,C)-.65 G
(ambridge, Mass., September 1984.)261.47 450 Q([Ossanna 1979])72 473.6 Q .224
(J. F)97 493.6 R 2.724(.O)-.8 G .224(ssanna, Nrof)123.318 493.6 R(f/T)-.25 E
(rof)-.35 E 2.724(fU)-.25 G(ser')210.386 493.6 Q 2.724(sM)-.55 G .224
(anual, UNIX Programmer')240.33 493.6 R 2.724(sM)-.55 G .224(anual, Se)363.202
493.6 R -.15(ve)-.25 G .224(nth Edition, v).15 F .223(ol. 2, Bell)-.2 F -.7(Te)
97 513.6 S(lephone Laboratories, Murray Hill, NJ, January 1979.).7 E
([Ousterhout 1990])72 537.2 Q 1.296
(John K. Ousterhout, Tcl: An Embeddable Command Language,)97 557.2 R F1(Pr)
3.796 E 1.296(oceedings of the USENIX 1990)-.45 F -.55(Wi)97 577.2 S
(nter Confer).55 E(ence)-.37 E F0 2.5(,J)C(anuary 1990, pp. 133-146.)180.79
577.2 Q([Schei\215er et al. 1986])72 600.8 Q .348(Robert W)97 620.8 R 2.848(.S)
-.92 G .348(chei\215er and Jim Gettys, The X W)146.496 620.8 R(indo)-.4 E 2.847
(wS)-.25 G(ystem,)316.038 620.8 Q F1 -.3(AC)2.847 G 2.847(MT).3 G -.15(ra)
373.942 620.8 S .347(nsactions on Gr).15 F(aphics)-.15 E F0 2.847(,v)C .347
(ol. 5,)483.373 620.8 R(no. 2, pp. 79-109, 1986.)97 640.8 Q
([Schei\215er et al. 1992])72 664.4 Q(Robert Schei\215er and James Gettys,)97
684.4 Q F1 2.5(XW)2.5 G(indow System)256.15 684.4 Q F0 2.5(,T)C
(hird Edition, Digital Press, 1992.)321.98 684.4 Q([Springer et al. 1989])72
708 Q(Geor)97 728 Q 3.164(ge Springer and Daniel O. Friedman,)-.18 F F1(Sc)
5.665 E 3.165(heme and the Art of Pr)-.15 F -.1(og)-.45 G -.15(ra).1 G(mming)
.15 E F0 5.665(,M)C 3.165(IT Press,)465.285 728 R EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(4-)288 56 S
(Cambridge, Mass., 1989.)97 92 Q([Stallman 1981])72 115.6 Q 1.13
(Richard M. Stallman, EMA)97 135.6 R 1.13
(CS \212 The Extensible, Customizable, Self-documenting Display Editor)-.4 F
2.405(Production System,)97 155.6 R/F1 10/Times-Italic@0 SF 2.405
(SIGPLAN Notices)4.905 F F0 4.905(,v)C 2.405
(ol. 16, no. 6, pp. 147-156, Association for Computing)269.76 155.6 R
(Machinery)97 175.6 Q 2.5(,N)-.65 G .5 -.25(ew Y)151.89 175.6 T(ork, 1981.)-.85
E([TELES 1991])72 199.2 Q .429(Das TELES.VISION System \212 Philosophie und T)
97 219.2 R .429(echnologie, TELES GmbH, Berlin, 1991 \(in Ger)-.7 F(-)-.2 E
(man\).)97 239.2 Q([Y)72 262.8 Q(ip 1991])-.55 E .546(G. May Y)97 282.8 R .546
(ip, Incremental, Generational Mostly-Cop)-.55 F .546
(ying Garbage Collection in Uncooperati)-.1 F .846 -.15(ve E)-.25 H -.4(nv).15
G(i-).4 E 1.546(ronments, WRL Research Report 91/8, DEC W)97 302.8 R 1.545
(estern Research Laboratory)-.8 F 4.045(,P)-.65 G 1.545(alo Alto, California,)
420.36 302.8 R(1991.)97 322.8 Q EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(5-)288 56 S/F1 10/Times-Bold@0
SF -.25(Ap)72 92 S(pendix A:).25 E(Extending Elk \212 An Example)5 E 2.5
(A.1. The)72 132 R -.63(``)2.5 G(ndbm').63 E 2.5('L)-.63 G(ibrary Extension)
159.63 132 Q F0 .535(The e)97 155.6 R .536
(xtensibility mechanisms of Elk can be demonstrated best by e)-.15 F .536
(xamining a simple library e)-.15 F(xten-)-.15 E 2.665(sion. Consider)72 175.6
R(the)2.665 E/F2 10/Times-Italic@0 SF(ndbm)2.665 E F0 .165(library that is a)
2.665 F -.25(va)-.2 G .165(ilable on most v).25 F .165(ersions of UNIX.)-.15 F
.165(This library implements func-)5.165 F
(tions to maintain a simple database \214le of k)72 195.6 Q -.15(ey)-.1 G
(/contents pairs.).15 E 1.002(As sho)97 219.2 R 1.002
(wn in Listing 4, both the k)-.25 F -.15(ey)-.1 G 3.502(sa).15 G 1.002
(nd the data to be stored are described by the type)258.126 219.2 R F2(datum)
3.502 E F0 3.502(;i)C(t)501.22 219.2 Q 1.089
(consists of the data \(a string of bytes\) and the length of the data.)72
239.2 R F2(dbm_open\(\))6.089 E F0 1.089(opens a database \214le and)3.589 F
1.001(returns a handle to that \214le to be used in subsequent operations on t\
hat database \(a pointer to an opaque)72 259.2 R 1.683
(data type, similar to the)72 279.2 R F2(fopen)4.182 E F0(and)4.182 E F2 -.37
(re)4.182 G(addir).37 E F0(interf)4.182 E 1.682
(aces\); it returns a null pointer if the \214le could not be)-.1 F 3.244
(opened. A)72 299.2 R .744(database is closed by a call to)3.244 F F2
(dbm_close\(\))3.244 E F0 5.744(.T)C .744(he data stored under a gi)309.39
299.2 R -.15(ve)-.25 G 3.245(nk).15 G 1.045 -.15(ey i)433.325 299.2 T 3.245(sa)
.15 G .745(ccessed by)460.215 299.2 R .192(the function)72 319.2 R F2(dbm_fetc)
2.692 E(h\(\))-.15 E F0 2.692(;i)C 2.692(tr)179.356 319.2 S .192
(eturns an object of type)188.158 319.2 R F2(datum)2.692 E F0 .192
(\(with a null)2.692 F F2(dptr)2.692 E F0 .192(if the k)2.692 F .492 -.15(ey c)
-.1 H .192(ould not be found\).).15 F F2(dbm_stor)72 339.2 Q(e)-.37 E F0 .406
(is used to insert an entry into a database and to modify an e)2.906 F .407
(xisting entry; it returns zero on suc-)-.15 F(cess and a non-zero v)72 359.2 Q
(alue on error)-.25 E(.)-.55 E(_______________________________________________\
_______________________________________)74 392.8 Q/F3 8/Courier@0 SF
(#include <ndbm.h>)100.346 414.303 Q(typedef struct {)100.346 440.823 Q
(char *dptr;)119.546 453.823 Q(int dsize;)119.546 466.823 Q 4.8(}d)100.346
479.823 S(atum;)114.746 479.823 Q
(DBM *dbm_open\(char *file, int flags, int mode\);)100.346 506.343 Q
(void dbm_close\(DBM *db\);)100.346 526.103 Q
(datum dbm_fetch\(DBM *db, datum key\);)100.346 545.863 Q
(int dbm_store\(DBM *db, datum key, datum data, int flags\);)100.346 565.623 Q
/F4 9/Times-Bold@0 SF(Listing 4:)223.758 599.623 Q/F5 9/Times-Roman@0 SF
(The UNIX)4.5 E/F6 9/Times-Italic@0 SF(ndbm)2.25 E F5(library)2.25 E/F7 8
/Times-Italic@0 SF(Note:)100.346 637.623 Q/F8 8/Times-Roman@0 SF -.12(Fo)2.623
G 2.623(rs).12 G(implicity)137.472 637.623 Q 2.623(,s)-.52 G -1.72 -.2(ev e)
173.583 637.623 T .623(ral functions ha).2 F .864 -.12(ve b)-.16 H .624
(een omitted.).12 F(The)4.624 E F7<8d61>2.624 E(gs)-.08 E F8(and)2.624 E F7
(mode)2.624 E F8(ar)2.624 E .624(guments of)-.144 F F7(dbm_open)2.624 E F8 .624
(are that of)2.624 F(the)100.346 655.623 Q F7(open)2.065 E F8 .065
(system call.)2.065 F(The)4.065 E F7<8d61>2.065 E(gs)-.08 E F8(ar)2.065 E .065
(gument of)-.144 F F7(dbm_stor)2.065 E(e)-.296 E F8 .065(can be DBM_INSER)2.065
F 2.065(Tt)-.48 G 2.064(oi)356.542 655.623 S .064(nsert a ne)364.83 655.623 R
2.064(we)-.2 G .064(ntry into the database)406.806 655.623 R(or DBM_REPLA)
100.346 673.623 Q(CE to change an e)-.32 E(xisting entry)-.12 E(.)-.52 E F0(__\
______________________________________________________________________________\
______)74 691.223 Q EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(6-)288 56 S 1.163
(The straightforw)97 92 R 1.163(ard w)-.1 F 1.163(ay to write an)-.1 F/F1 10
/Times-Italic@0 SF(ndbm)3.663 E F0 -.15(ex)3.662 G 1.162
(tension to Elk is to pro).15 F 1.162(vide a ne)-.15 F 3.662(wS)-.25 G 1.162
(cheme data type)436.696 92 R F1(dbm-\214le)72 112 Q F0 .942
(together with the oblig)3.442 F .942(atory type predicate)-.05 F F1
(dbm-\214le?)3.442 E F0 .943(and the Scheme primiti)3.442 F 1.243 -.15(ve p)
-.25 H(rocedures).15 E F1(dbm-)3.443 E(open)72 132 Q F0(,)A F1(dbm-close)2.5 E
F0(,)A F1(dbm-fetc)2.5 E(h)-.15 E F0(and)2.5 E F1(dbm-stor)2.5 E(e)-.37 E F0
(that operate on objects of type)2.5 E F1(dbm-\214le)2.5 E F0(.)A F1(dbm-open)
97 155.6 Q F0(recei)3.534 E -.15(ve)-.25 G 3.534(st).15 G 1.033
(he \214lename \(a string or a symbol\); the second ar)179.198 155.6 R 1.033
(gument is one of the symbols)-.18 F F1 -.37(re)72 175.6 S(ader).37 E F0 .996
(\(open the \214le read-only\),)3.496 F F1(writer)3.496 E F0 .996
(\(read and write access\), and)3.496 F F1(cr)3.496 E(eate)-.37 E F0 .997
(\(read and write access, create)3.496 F(ne)72 195.6 Q 2.994<778c>-.25 G .494
(le if it does not e)96.964 195.6 R 2.994(xist\). The)-.15 F .494
(optional \214lemode ar)2.994 F .494(gument is an inte)-.18 F(ger)-.15 E(.)-.55
E F1(dbm-open)5.494 E F0 .493(returns an object of)2.994 F(type)72 215.6 Q F1
(dbm-\214le)2.59 E F0 .09(or #f \(f)2.59 F .09
(alse\) if the \214le could not be opened.)-.1 F F1(dbm-close)5.091 E F0 .091
(closes the database \214le associated with)2.591 F 1.248(its ar)72 235.6 R
1.248(gument of type)-.18 F F1(dbm-\214le)3.748 E F0 6.248(.A)C 3.748(st)208.32
235.6 S 1.248(his function is called for its side-ef)218.738 235.6 R 1.248
(fect only)-.25 F 3.748(,a)-.65 G 1.248(nd for lack of a better)411.402 235.6 R
(result, it returns a non-printing object.)72 255.6 Q F1(dbm-fetc)97 279.2 Q(h)
-.15 E F0 -.15(ex)2.977 G .477(pects a).15 F F1(dbm-\214le)2.977 E F0 .477
(and a string ar)2.977 F .477(gument \(the k)-.18 F .777 -.15(ey t)-.1 H 2.977
(ob).15 G 2.977(es)358.407 279.2 S .477(earched\) and returns a string \(the)
369.714 279.2 R 1.025(data stored under the k)72 299.2 R -.15(ey)-.1 G 3.525
(\)o).15 G 3.525(r#)188.235 299.2 S 3.525(fi)200.09 299.2 S 3.525(ft)209.725
299.2 S 1.025(he k)219.36 299.2 R 1.325 -.15(ey d)-.1 H 1.024(oes not e).15 F
3.524(xist. Note)-.15 F 1.024(that in Elk strings may contain arbitrary)3.524 F
.213(8-bit characters, including the null byte.)72 319.2 R F1(dbm-stor)5.213 E
(e)-.37 E F0 .213(is called with a)2.713 F F1(dbm-\214le)2.713 E F0 2.713(,t)C
.413 -.1(wo s)385.255 319.2 T .213(trings \(k).1 F .513 -.15(ey a)-.1 H .213
(nd data\) and).15 F(one of the symbols)72 339.2 Q F1(insert)2.5 E F0(and)2.5 E
F1 -.37(re)2.5 G(place).37 E F0 5(.I)C(ts inte)233 339.2 Q(ger return v)-.15 E
(alue is the return v)-.25 E(alue of)-.25 E F1(dbm_stor)2.5 E(e\(\))-.37 E F0
(.)A .683(These procedures and the ne)97 362.8 R(w)-.25 E F1(dbm-\214le)3.183 E
F0 .683(type can be used by application programmers to manipulate)3.183 F .198
(database \214les in those parts of their applications that are written in Sch\
eme.)72 382.8 R .198(Listing 5 sho)5.198 F .198(ws a small e)-.25 F(xam-)-.15 E
(ple.)72 402.8 Q(_____________________________________________________________\
_________________________)74 436.4 Q/F2 8/Courier@0 SF
(\(define expand-mail-alias)100.346 457.903 Q(\(lambda \(alias\))109.946
470.903 Q(\(let \(\(d \(dbm-open "/etc/aliases" 'reader\)\)\))119.546 483.903 Q
(\(if \(not d\))129.146 496.903 Q
(\(error 'expand-mail-alias "cannot open database"\)\))148.346 509.903 Q
(\(unwind-protect)129.146 522.903 Q(\(dbm-fetch d alias\))138.746 535.903 Q
(\(dbm-close d\)\)\)\)\))138.746 548.903 Q
(\(define address-of-staff \(expand-mail-alias "staff"\)\))100.346 568.663 Q/F3
9/Times-Bold@0 SF(Listing 5:)220.315 602.663 Q/F4 9/Times-Roman@0 SF
(Using the ndbm e)4.5 E(xtension)-.135 E/F5 8/Times-Italic@0 SF(Note:)100.346
640.663 Q/F6 8/Times-Roman@0 SF(The)2 E F5(unwind-pr)2 E(otect)-.36 E F6
(and the)2 E F5(err)2 E(or)-.36 E F6(form are not present in standard Scheme.)2
E F0(_________________________________________________________________________\
_____________)74 658.263 Q EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(7-)288 56 S/F1 10/Times-Bold@0
SF 2.5(A.2. The)72 92 R(Anatomy of a Scheme T)2.5 E(ype)-.74 E F0 .22
(Listing 6 sho)97 115.6 R .22(ws the part of the e)-.25 F .22
(xtension that deals with the ne)-.15 F 2.72(wd)-.25 G .22(ata type)363.91
115.6 R/F2 10/Times-Italic@0 SF(dbm-\214le)2.72 E F0 .22(and the e)2.72 F
(xtension)-.15 E .484(initialization function.)72 135.6 R .484(The v)5.484 F
(ariable)-.25 E F2(T_Dbm)2.984 E F0 .484
(will hold the unique identi\214er of the ne)2.984 F .484(wly de\214ned type.)
-.25 F(The)5.484 E(structure)72 155.6 Q F2(S_Dbm)2.575 E F0 .074(de\214nes the\
 C representation of the type; one such C structure is declared for each compo\
s-)2.575 F .707(ite Scheme type.)72 175.6 R .708(Its main component is the han\
dle of the database \214le that is contained in each object of)5.708 F(type)72
195.6 Q F2(dbm-\214le)2.5 E F0(.)A .415(Scheme objects can usually li)97 219.2
R .715 -.15(ve l)-.25 H .414(onger than their underlying C objects.).15 F .414
(In case of the)5.414 F F2(dbm-\214le)2.914 E F0(type,)2.914 E 2.633(aS)72
239.2 S .133(cheme object of that type can ob)84.633 239.2 R .133
(viously still be referenced after its database handle has been closed by a)
-.15 F 1.152(call to)72 259.2 R F2(dbm-close)3.652 E F0 6.152(.A)C 3.652(sE)
158.496 259.2 S 1.152(lk e)172.148 259.2 R 1.152
(xtensions must not crash the application, we must pre)-.15 F -.15(ve)-.25 G
1.151(nt such stale objects).15 F 1.341(from being used in further calls to)72
279.2 R F2(dbm-fetc)3.842 E(h)-.15 E F0(,)A F2(dbm-stor)3.842 E(e)-.37 E F0
3.842(,a)C(nd)317.124 279.2 Q F2(dbm-close)3.842 E F0 6.342(.O)C 1.342(ne w)
388.128 279.2 R 1.342(ay to achie)-.1 F 1.642 -.15(ve t)-.25 H 1.342(his is to)
.15 F 1.077
(record in each Scheme object whether the underlying C object is still ali)72
299.2 R 1.377 -.15(ve o)-.25 H 3.577(rh).15 G 1.077(as been terminated.)402.739
299.2 R(The)6.077 E 1.078(boolean component)72 319.2 R F2(alive)3.578 E F0
1.078(in the)3.578 F F2(dbm-\214le)3.578 E F0 1.078(type serv)3.578 F 1.078
(es this purpose.)-.15 F 1.079(It is initialized with true and is set to)6.078
F -.1(fa)72 339.2 S(lse in).1 E F2(dbm-close)2.5 E F0 5(.F)C
(urther operations on objects with)157.72 339.2 Q F2(alive)2.5 E F0(being f)2.5
E(alse are rejected.)-.1 E .423(The interpreter stores all Scheme objects in v)
97 362.8 R .423(ariables of type)-.25 F F2(Object)2.922 E F0 5.422(.A)C(n)
387.73 362.8 Q F2(Object)2.922 E F0 .422(is typically a 32-bit)2.922 F -.25(va)
72 382.8 S .354(lue; it is composed of a).25 F F2(ta)2.854 E(g)-.1 E F0 .354
(part and a)2.854 F F2(pointer)2.854 E F0 2.854(part. The)2.854 F F2(ta)2.854 E
(g)-.1 E F0 .354(part indicates the type of the object, and the)2.854 F .937
(remaining bits hold the actual memory address of the object \(the)72 402.8 R
3.437(yp)-.15 G .937(oint into the interpreter')352.397 402.8 R 3.436(sh)-.55 G
3.436(eap\). The)462.804 402.8 R(macros)72 422.8 Q F2(TYPE)3.966 E F0(and)3.966
E F2(POINTER)3.966 E F0 1.466(are pro)3.966 F 1.466(vided to e)-.15 F 1.466
(xtract the \214elds of an)-.15 F F2(Object)3.966 E F0 6.467(.E)C 1.467
(ach type de\214nition must)403.209 422.8 R .9(de\214ne a macro to e)72 442.8 R
.9(xtract the object')-.15 F 3.4(sm)-.55 G .899(emory address from an)235.62
442.8 R F2(Object)3.399 E F0 .899(\(by means of)3.399 F F2(POINTER)3.399 E F0
3.399(\)a)C .899(nd then)473.381 442.8 R
(cast it into a pointer to the underlying C structure \(see)72 462.8 Q F2
(#de\214ne DBMF)2.5 E F0(in Listing 6\).)2.5 E F2(Dbm_Equal\(\))97 486.4 Q F0
.008(implements both the)2.508 F F2(eqv?)2.508 E F0 .008(and the)2.508 F F2
(equal?)2.509 E F0 .009(predicates for)5.009 F F2(dbm-\214le)2.509 E F0 .009
(objects; it returns true)2.509 F(if both objects being compared are ali)72
506.4 Q .3 -.15(ve a)-.25 H(nd contain identical).15 E F2(DBM)2.5 E F0
(handles.)2.5 E F2(Dbm_Print\(\))97 530 Q F0 1.133
(is called by the interpreter each time an object of type)3.633 F F2
(dbm-\214le)3.633 E F0 1.132(is to be printed; it is)3.633 F(in)72 550 Q -.2
(vo)-.4 G -.1(ke).2 G 2.5(dw).1 G
(ith the object and the Scheme port to which the output is to be sent.)113.24
550 Q F2(P_Is_Dbm\(\))97 573.6 Q F0 .876(implements the primiti)3.376 F 1.176
-.15(ve p)-.25 H(rocedure).15 E F2(dbm-\214le?)3.377 E F0 .877
(\(the type predicate\).)5.877 F .877(As with all primi-)5.877 F(ti)72 593.6 Q
-.15(ve)-.25 G(s, it recei).15 E -.15(ve)-.25 G 2.5(sa).15 G -.18(rg)142.85
593.6 S(uments of type).18 E F2(Object)2.5 E F0(and returns an)2.5 E F2(Object)
2.5 E F0 2.5(,a)C(nd it has a name be)337.35 593.6 Q(ginning with `)-.15 E
(`P_')-.74 E('.)-.74 E 5.782(The de\214nition of the initialization function)97
617.2 R F2(elk_init_dbm\(\))8.282 E F0 5.782(is straightforw)8.282 F 5.782
(ard; it in)-.1 F -.2(vo)-.4 G -.1(ke).2 G(s).1 E F2(De\214ne_Primitive\(\))72
637.2 Q F0 2.135(once for each primiti)4.635 F 2.435 -.15(ve p)-.25 H 2.135
(rocedure and \214nally).15 F F2(De\214ne_T)4.635 E(ype\(\))-.74 E F0 2.136
(to mak)4.636 F 4.636(et)-.1 G 2.136(he ne)451.658 637.2 R 4.636(wt)-.25 G(ype)
489.56 637.2 Q(kno)72 657.2 Q(wn to the interpreter)-.25 E(.)-.55 E .438
(The ar)97 680.8 R .438(guments that can be supplied to)-.18 F F2
(De\214ne_Primitive\(\))2.938 E F0 .438
(are a pointer to the function implementing)2.938 F .85(the primiti)72 700.8 R
1.15 -.15(ve p)-.25 H .85(rocedure, the Scheme name of the primiti).15 F -.15
(ve)-.25 G 3.35(,t).15 G .85(he minimum and maximum number of ar)320.76 700.8 R
(gu-)-.18 E 1.229(ments, and a symbol indicating the)72 720.8 R F2 1.228
(calling discipline)3.728 F F0 1.228(of the primiti)3.728 F -.15(ve)-.25 G
6.228(.F).15 G 1.228(or most of the functions in this)373.852 720.8 R EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(8-)288 56 S(___________________\
___________________________________________________________________)74 105.6 Q
/F1 8/Courier@0 SF(#include <scheme.h>)100.346 127.103 Q(#include <ndbm.h>)
100.346 140.103 Q(int T_Dbm;)100.346 159.863 Q(struct S_Dbm {)100.346 179.623 Q
(DBM *dbm;)119.546 192.623 Q(char alive;)119.546 205.623 Q(/* 0 or 1 */)186.746
205.623 Q(};)100.346 218.623 Q
(#define DBMF\(obj\) \(\(struct S_Dbm *\)POINTER\(obj\)\))100.346 238.383 Q
(int Dbm_Equal\(a, b\) Object a, b; {)100.346 258.143 Q(return DBMF\(a\)->aliv\
e && DBMF\(b\)->alive && DBMF\(a\)->dbm == DBMF\(b\)->dbm;)119.546 271.143 Q(})
100.346 284.143 Q(void Dbm_Print\(d, port\) Object d, port; {)100.346 303.903 Q
(Printf\(port, "#[dbm-file %lu]", DBMF\(d\)->dbm\);)119.546 316.903 Q(})100.346
329.903 Q(Object P_Is_Dbm\(x\) Object x; {)100.346 349.663 Q
(return TYPE\(x\) == T_Dbm ? True : False;)119.546 362.663 Q(})100.346 375.663
Q(void elk_init_dbm\(\) {)100.346 395.423 Q 14.4
(Define_Primitive\(P_Is_Dbm, "dbm-file?",)119.546 408.423 R(1, 1, EVAL\);)4.8 E
4.8(Define_Primitive\(P_Dbm_Open, "dbm-open", 2,)119.546 421.423 R
(3, VARARGS\);)4.8 E(Define_Primitive\(P_Dbm_Close, "dbm-close", 1, 1, EVAL\);)
119.546 434.423 Q(Define_Primitive\(P_Dbm_Store, "dbm-store", 4, 4, EVAL\);)
119.546 447.423 Q(Define_Primitive\(P_Dbm_Fetch, "dbm-fetch", 2, 2, EVAL\);)
119.546 460.423 Q(T_Dbm = Define_Type\("dbm-file", sizeof\(struct S_Dbm\),)
119.546 480.183 Q(Dbm_Equal, Dbm_Equal, Dbm_Print, NOFUNC\);)138.746 493.183 Q
(})100.346 506.183 Q/F2 9/Times-Bold@0 SF(Listing 6:)210.487 540.183 Q/F3 9
/Times-Roman@0 SF(Sk)4.5 E(eleton of the ndbm e)-.09 E(xtension)-.135 E/F4 8
/Times-Italic@0 SF(Note:)100.346 578.183 Q/F5 8/Times-Roman@0 SF -.12(Fo)2.643
G 2.643(rs).12 G .643(implicity some details ha)137.512 578.183 R .884 -.12
(ve b)-.16 H .644(een omitted in this listing, and the calling interf).12 F
.644(ace of some functions has)-.08 F .176(been simpli\214ed; the program w)
100.346 596.183 R .176(ould not compile in this form.)-.08 F 2.176(Aw)4.176 G
(orking)315.226 596.183 Q F4(gdbm)2.176 E F5 .176(\(GNU dbm\) e)2.176 F .175
(xtension is included in)-.12 F(the Elk distrib)100.346 614.183 Q(ution.)-.16 E
F0(___________________________________________________________________________\
___________)74 631.783 Q -.15(ex)72 671.783 S .653
(ample, the calling discipline is).15 F/F6 10/Times-Italic@0 SF(EV)3.153 E(AL)
-.6 E F0 3.153(,i)C .653(ndicating a normal procedure with a \214x)240.718
671.783 R .654(ed number of ar)-.15 F(guments,)-.18 E .558(such as)72 691.783 R
F6(car)3.058 E F0 5.558(.E)C .558(lk also supports procedures with v)132.274
691.783 R .557(ariable ar)-.25 F .557(gument list, such as)-.18 F F6(list)3.057
E F0(\()3.057 E F6 -.6(VA)C(RARGS).6 E F0 .557(\); and)B F6(NOE-)3.057 E -.6
(VA)72 711.783 S(L).6 E F0(for)2.5 E F6(special forms)2.5 E F0(\(v)2.5 E
(ariable number of une)-.25 E -.25(va)-.25 G(luated ar).25 E(guments\).)-.18 E
EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2)277.17 56 S 2.5(9-)288 56 S/F1 10/Times-Italic@0
SF(De\214ne_T)97 92 Q(ype\(\))-.74 E F0 .173(is in)2.673 F -.2(vo)-.4 G -.1(ke)
.2 G 2.673(dw).1 G .174(ith the Scheme name of the type, the size of the type')
206.889 92 R 2.674(sr)-.55 G .174(epresentation in C)430.882 92 R .632
(or C++ \(gi)72 112 R -.15(ve)-.25 G 3.132(na).15 G 3.131(sac)137.266 112 S
.631(onstant or as a function\), tw)156.298 112 R 3.131(of)-.1 G .631
(unctions implementing the)282.464 112 R F1(eqv?)3.131 E F0(and)3.131 E F1
(equal?)3.131 E F0(predicates)3.131 E .93(for objects of this type, a function\
 that is called by the interpreter to print an object of the ne)72 132 R 3.431
(wt)-.25 G .931(ype \(the)470.579 132 R(type')72 152 Q(s)-.55 E F1 1.076
(print function)3.576 F F0 1.076(\), and a function pro)B 1.075
(viding information about the type to the g)-.15 F 1.075(arbage collector)-.05
F 6.075(.T)-.55 G(he)494.56 152 Q .977(return v)72 172 R .977(alue of)-.25 F F1
(De\214ne_T)3.477 E(ype\(\))-.74 E F0 .977(is a `)3.477 F(`handle')-.74 E 3.478
('t)-.74 G 3.478(ot)258.81 172 S .978(he ne)270.068 172 R .978
(wly de\214ned type \(a small, unique inte)-.25 F .978(ger\); its main)-.15 F
.793(uses are to check the type of ar)72 192 R .792
(guments supplied to primiti)-.18 F 1.092 -.15(ve p)-.25 H .792
(rocedures and to instantiate objects of this).15 F(type.)72 212 Q/F2 10
/Times-Bold@0 SF 2.5(A.3. Primiti)72 252 R .2 -.1(ve P)-.1 H -.18(ro).1 G
(cedur).18 E(es \212 The Details)-.18 E F0(Listing 7 gi)97 275.6 Q -.15(ve)-.25
G 2.5(st).15 G(he de\214nitions of the primiti)161.33 275.6 Q -.15(ve)-.25 G(s)
.15 E F1(dbm-open)2.5 E F0(and)2.5 E F1(dbm-close)2.5 E F0(.)A F1(dbm-open)97
299.2 Q F0 3.196(,a)C 3.196(si)147.126 299.2 S 3.197(th)156.992 299.2 S .697
(as an optional ar)167.969 299.2 R .697(gument, is a function with)-.18 F F1
-.6(VA)3.197 G(RARGS).6 E F0 .697(calling discipline \(not to be)3.197 F 2.682
(confused with the C language feature of the same name\), as indicated by the \
last ar)72 319.2 R 2.681(gument to the)-.18 F F1(De\214ne_Primitive)72 339.2 Q
F0 2.5(call. Primiti)2.5 F -.15(ve)-.25 G 2.5(so).15 G 2.5(ft)212.98 339.2 S
(his type recei)221.59 339.2 Q .3 -.15(ve a)-.25 H 2.5(na).15 G(rray of)302.83
339.2 Q F1(Objects)2.5 E F0(and a count.)2.5 E .222
(The initial call to the macro)97 362.8 R F1(Mak)2.722 E(e_C_String)-.1 E F0
.222(checks if the \214rst ar)2.722 F .222(gument to)-.18 F F1(dbm-open)2.722 E
F0 .223(is a string \(or a)2.722 F .368(symbol\) and con)72 382.8 R -.15(ve)-.4
G .368(rts it to a C string.).15 F 1.968 -.8(To o)5.368 H .368
(btain the second ar).8 F .368(gument to)-.18 F F1(dbm_open\(\))2.868 E F0
2.867(,t)C .367(he symbol passed to)422.069 382.8 R 2.661(the Scheme primiti)72
402.8 R 2.961 -.15(ve \()-.25 H F1 -.37(re).15 G(ader).37 E F0(,)A F1(writer)
5.161 E F0 5.161(,e)C 5.161(tc.\) has)241.465 402.8 R 2.662
(to be mapped to a corresponding \215ags combination)5.161 F(\()72 422.8 Q F1
(O_RDONL)A(Y)-.2 E F0(,)A F1(O_RD)3.126 E(WR)-.4 E F0 3.126(,e)C 3.126
(tc.\). This)180.972 422.8 R .625(is accomplished by the Elk function)3.126 F
F1(Symbols_T)3.125 E(o_Bits\(\))-.92 E F0 3.125(;i)C 3.125(ti)456.78 422.8 S
3.125(si)465.465 422.8 S -1.9 -.4(nv o)475.26 422.8 T -.1(ke).4 G(d).1 E .176(\
with a Scheme symbol, a \215ag indicating whether a single symbol or a list of\
 symbols \(a mask\) is to be con-)72 442.8 R -.15(ve)72 462.8 S .719
(rted, and a table of pairs of symbol names and C inte).15 F 3.218(gers. The)
-.15 F .718(third ar)3.218 F .718(gument to)-.18 F F1(dbm_open)3.218 E F0 .718
(is the \214le-)3.218 F(mode;)72 482.8 Q F1(Get_Inte)3.235 E -.1(ge)-.4 G
(r\(\)).1 E F0(con)3.235 E -.15(ve)-.4 G .735(rts a Scheme number to a C inte)
.15 F(ger)-.15 E(.)-.55 E F1(dbm-open)5.735 E F0 .736(\214nally allocates a ne)
3.236 F 3.236(wS)-.25 G(cheme)477.9 482.8 Q(object of type)72 502.8 Q F1(T_Dbm)
2.5 E F0
(on the heap, initializes the components of the object, and returns it.)2.5 E
1.013(The auxiliary function)97 526.4 R F1(Chec)3.513 E(k_Dbm\(\))-.2 E F0
1.013(is used by the remaining primiti)3.513 F -.15(ve)-.25 G 3.513(st).15 G
3.513(oc)403.16 526.4 S 1.012(heck whether a gi)416.113 526.4 R -.15(ve)-.25 G
(n).15 E .658(object is of type)72 546.4 R F1(dbm-\214le)3.158 E F0 .658
(and if so, whether it is stale.)3.158 F .659
(In this case an error is signaled;)5.659 F F1(Primitive_Err)3.159 E(or\(\))
-.45 E F0(enters the error handler of Elk.)72 566.4 Q F1(P_Dbm_Close\(\))97 590
Q F0(just marks the object as stale by setting)2.5 E F1(alive)2.5 E F0(to f)2.5
E(alse and closes the database \214le.)-.1 E .795(Listing 8 sho)97 613.6 R .795
(ws the implementation of)-.25 F F1(dbm-stor)3.295 E(e)-.37 E F0(and)3.295 E F1
(dbm-fetc)3.295 E(h)-.15 E F0(.)A F1(Mak)5.795 E(e_Inte)-.1 E -.1(ge)-.4 G
(r\(\)).1 E F0 .795(is the counterpart)3.295 F(to)72 633.6 Q F1(Get_Inte)4.08 E
-.1(ge)-.4 G(r\(\)).1 E F0 4.08(;i)C 4.08(tc)147.98 633.6 S(on)159.28 633.6 Q
-.15(ve)-.4 G 1.58(rts a C inte).15 F 1.581(ger into a Scheme number)-.15 F
6.581(.L)-.55 G(ik)352.316 633.6 Q -.25(ew)-.1 G(ise,).25 E F1(Mak)4.081 E
(e_String\(\))-.1 E F0(con)4.081 E -.15(ve)-.4 G 1.581(rts a C).15 F
(string into a Scheme string.)72 653.6 Q EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-3)277.17 56 S 2.5(0-)288 56 S(___________________\
___________________________________________________________________)74 105.6 Q
/F1 8/Courier@0 SF(static SYMDESCR Flag_Syms[] = {)100.346 127.103 Q 4.8({")
119.546 140.103 S(reader", O_RDONLY },)133.946 140.103 Q 4.8({")119.546 153.103
S(writer", O_RDWR },)133.946 153.103 Q 4.8({")119.546 166.103 S
(create", O_RDWR|O_CREAT },)133.946 166.103 Q 4.8({0)119.546 179.103 S 4.8(,0})
133.946 179.103 S(};)100.346 192.103 Q
(Object P_Dbm_Open\(argc, argv\) int argc; Object *argv; {)100.346 211.863 Q
(char *p;)119.546 224.863 Q(DBM *dp;)119.546 237.863 Q(Object d;)119.546
250.863 Q(Make_C_String\(argv[0], p\);)119.546 270.623 Q
(dp = dbm_open\(p, Symbols_To_Bits\(argv[1], 0, Flag_Syms\),)119.546 283.623 Q
(argc == 3 ? Get_Integer\(argv[2]\) : 0666\);)186.746 296.623 Q(if \(dp == 0\))
119.546 309.623 Q(return False;)138.746 322.623 Q 4.8(d=A)119.546 335.623 S
(lloc_Object\(sizeof\(struct S_Dbm\), T_Dbm, 0\);)143.546 335.623 Q
(DBMF\(d\)->dbm = dp;)119.546 348.623 Q(DBMF\(d\)->alive = 1;)119.546 361.623 Q
(return d;)119.546 374.623 Q(})100.346 387.623 Q
(void Check_Dbm\(d\) Object d; {)100.346 407.383 Q(Check_Type\(d, T_Dbm\);)
119.546 420.383 Q(if \(!DBMF\(d\)->alive\))119.546 433.383 Q
(Primitive_Error\("invalid dbm-file: ~s", d\);)138.746 446.383 Q(})100.346
459.383 Q(Object P_Dbm_Close\(d\) Object d; {)100.346 479.143 Q
(Check_Dbm\(d\);)119.546 492.143 Q(DBMF\(d\)->alive = 0;)119.546 505.143 Q
(dbm_close\(DBMF\(d\)->dbm\);)119.546 518.143 Q(return Void;)119.546 531.143 Q
(})100.346 544.143 Q/F2 9/Times-Bold@0 SF(Listing 7:)152.577 578.143 Q/F3 9
/Times-Roman@0 SF(ndbm e)4.5 E(xtension \212 implementation of)-.135 E/F4 9
/Times-Italic@0 SF(dbm-open)2.25 E F3(and)2.25 E F4(dbm-close)2.25 E F0(______\
______________________________________________________________________________\
__)74 601.743 Q EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-3)277.17 56 S 2.5(1-)288 56 S(___________________\
___________________________________________________________________)74 105.6 Q
/F1 8/Courier@0 SF(static SYMDESCR Store_Syms[] = {)100.346 127.103 Q 4.8({")
119.546 140.103 S 4.8(insert", DBM_INSERT)133.946 140.103 R(},)4.8 E 4.8({")
119.546 153.103 S(replace", DBM_REPLACE },)133.946 153.103 Q 4.8({0)119.546
166.103 S 4.8(,0})133.946 166.103 S(};)100.346 179.103 Q
(Object P_Dbm_Store\(d, key, content, flag\) Object d, key, content, flag; {)
100.346 198.863 Q(datum k, c;)119.546 211.863 Q(int result;)119.546 224.863 Q
(Check_Dbm\(d\);)119.546 244.623 Q(Check_Type\(key, T_String\);)119.546 257.623
Q(Check_Type\(content, T_String\);)119.546 270.623 Q
(k.dptr = STRING\(key\)->data;)119.546 283.623 Q
(k.dsize = STRING\(key\)->size;)282.746 283.623 Q
(c.dptr = STRING\(content\)->data;)119.546 296.623 Q
(c.dsize = STRING\(content\)->size;)282.746 296.623 Q
(result = dbm_store\(DBMF\(d\)->dbm, k, c,)119.546 309.623 Q
(Symbols_To_Bits\(flag, 0, Store_Syms\)\);)210.746 322.623 Q
(return Make_Integer\(result\);)119.546 335.623 Q(})100.346 348.623 Q
(Object P_Dbm_Fetch\(d, key\) Object d, key; {)100.346 368.383 Q(datum k, c;)
119.546 381.383 Q(Check_Dbm\(d\);)119.546 401.143 Q
(Check_Type\(key, T_String\);)119.546 414.143 Q(k.dptr = STRING\(key\)->data;)
119.546 427.143 Q(k.dsize = STRING\(key\)->size;)282.746 427.143 Q 4.8(c=d)
119.546 440.143 S(bm_fetch\(DBMF\(d\)->dbm, k\);)143.546 440.143 Q
(return c.dptr ? Make_String\(c.dptr, c.dsize\) : False;)119.546 453.143 Q(})
100.346 466.143 Q/F2 9/Times-Bold@0 SF(Listing 8:)153.058 500.143 Q/F3 9
/Times-Roman@0 SF(ndbm e)4.5 E(xtension \212 implementation of)-.135 E/F4 9
/Times-Italic@0 SF(dbm-stor)2.25 E(e)-.333 E F3(and)2.25 E F4(dbm-fetc)2.25 E
(h)-.135 E F0(________________________________________________________________\
______________________)74 523.743 Q 2.5(-3)277.17 563.743 S 2.5(1-)288 563.743
S EP
%%Trailer
end
%%EOF
