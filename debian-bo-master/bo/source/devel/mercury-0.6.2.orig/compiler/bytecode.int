:- module bytecode.
:- interface.
:- import_module hlds_data, llds, tree.
:- import_module list, std_util, io.
:- type (bytecode:byte_tree) == (tree:tree((mercury_builtin:list((bytecode:byte_code))))).
:- type (bytecode:byte_code)
	--->	enter_pred((bytecode:byte_pred_id), int)
	;	endof_pred
	;	enter_proc((bytecode:byte_proc_id), (hlds_data:determinism), int, (mercury_builtin:list((bytecode:byte_var_info))))
	;	endof_proc
	;	label((bytecode:byte_label_id))
	;	enter_disjunction((bytecode:byte_label_id))
	;	endof_disjunction
	;	enter_disjunct((bytecode:byte_label_id))
	;	endof_disjunct
	;	enter_switch((bytecode:byte_var), (bytecode:byte_label_id))
	;	endof_switch
	;	enter_switch_arm((bytecode:byte_cons_id), (bytecode:byte_label_id))
	;	endof_switch_arm
	;	enter_if((bytecode:byte_label_id), (bytecode:byte_label_id))
	;	enter_then
	;	endof_then
	;	endof_else
	;	enter_negation((bytecode:byte_label_id))
	;	endof_negation
	;	enter_commit
	;	endof_commit
	;	assign((bytecode:byte_var), (bytecode:byte_var))
	;	test((bytecode:byte_var), (bytecode:byte_var))
	;	construct((bytecode:byte_var), (bytecode:byte_cons_id), (mercury_builtin:list((bytecode:byte_var))))
	;	deconstruct((bytecode:byte_var), (bytecode:byte_cons_id), (mercury_builtin:list((bytecode:byte_var))))
	;	complex_deconstruct((bytecode:byte_var), (bytecode:byte_cons_id), (mercury_builtin:list((std_util:pair((bytecode:byte_var), (bytecode:byte_dir))))))
	;	place_arg((llds:reg), (bytecode:byte_var))
	;	call((bytecode:byte_module_id), (bytecode:byte_pred_id), (prog_data:arity), (bytecode:byte_proc_id))
	;	pickup_arg((llds:reg), (bytecode:byte_var))
	;	builtin_binop((llds:binary_op), (bytecode:byte_arg), (bytecode:byte_arg), (bytecode:byte_var))
	;	builtin_unop((llds:unary_op), (bytecode:byte_arg), (bytecode:byte_var))
	;	builtin_bintest((llds:binary_op), (bytecode:byte_arg), (bytecode:byte_arg))
	;	builtin_untest((llds:unary_op), (bytecode:byte_arg))
	;	context(int)
	;	not_supported.
:- type (bytecode:byte_cons_id)
	--->	cons(string, (prog_data:arity), (bytecode:byte_cons_tag))
	;	int_const(int)
	;	string_const(string)
	;	float_const(float)
	;	pred_const((bytecode:byte_module_id), (bytecode:byte_pred_id), (prog_data:arity), (bytecode:byte_proc_id))
	;	code_addr_const((bytecode:byte_module_id), (bytecode:byte_pred_id), (prog_data:arity), (bytecode:byte_proc_id))
	;	base_type_info_const((bytecode:byte_module_id), string, int).
:- type (bytecode:byte_var_info)
	--->	var_info(string, (prog_data:(type))).
:- type (bytecode:byte_cons_tag)
	--->	no_tag
	;	simple_tag((hlds_data:tag_bits))
	;	complicated_tag((hlds_data:tag_bits), int)
	;	complicated_constant_tag((hlds_data:tag_bits), int).
:- type (bytecode:byte_arg)
	--->	var((bytecode:byte_var))
	;	int_const(int)
	;	float_const(float).
:- type (bytecode:byte_dir)
	--->	to_arg
	;	to_var
	;	to_none.
:- type (bytecode:byte_module_id) == string.
:- type (bytecode:byte_pred_id) == string.
:- type (bytecode:byte_proc_id) == int.
:- type (bytecode:byte_label_id) == int.
:- type (bytecode:byte_var) == int.
:- pred bytecode:output_bytecode_file(string, (mercury_builtin:list((bytecode:byte_code))), (io:io__state), (io:io__state)).
:- mode bytecode:output_bytecode_file(mercury_builtin:in, mercury_builtin:in, mercury_builtin:di, mercury_builtin:uo) is det.
:- pred bytecode:debug_bytecode_file(string, (mercury_builtin:list((bytecode:byte_code))), (io:io__state), (io:io__state)).
:- mode bytecode:debug_bytecode_file(mercury_builtin:in, mercury_builtin:in, mercury_builtin:di, mercury_builtin:uo) is det.
