:- module prog_data.
:- interface.
:- import_module hlds_pred.
:- import_module list, varset, term, std_util.
:- type (prog_data:message_list) == (mercury_builtin:list((std_util:pair(string, (mercury_builtin:term))))).
:- type (prog_data:program).
:- type (prog_data:item_list) == (mercury_builtin:list((prog_data:item_and_context))).
:- type (prog_data:item_and_context) == (std_util:pair((prog_data:item), (mercury_builtin:term__context))).
:- type (prog_data:item).
:- type (prog_data:type_and_mode).
:- type (prog_data:pragma_type).
:- type (prog_data:c_is_recursive).
:- type (prog_data:pragma_var).
:- type (prog_data:goal) == (std_util:pair((prog_data:goal_expr), (mercury_builtin:term__context))).
:- type (prog_data:goal_expr).
:- type (prog_data:goals) == (mercury_builtin:list((prog_data:goal))).
:- type (prog_data:vars) == (mercury_builtin:list((mercury_builtin:var))).
:- type (prog_data:type_defn).
:- type (prog_data:constructor) == (std_util:pair((prog_data:sym_name), (mercury_builtin:list((prog_data:constructor_arg))))).
:- type (prog_data:constructor_arg) == (std_util:pair(string, (prog_data:(type)))).
:- type (prog_data:type_param) == (mercury_builtin:term).
:- type (prog_data:(type)) == (mercury_builtin:term).
:- type (prog_data:tvar) == (mercury_builtin:var).
:- type (prog_data:tvarset) == (varset:varset).
:- type (prog_data:tsubst) == (map:map((prog_data:tvar), (prog_data:(type)))).
:- type (prog_data:condition).
:- type (prog_data:inst_defn).
:- type (prog_data:inst_param) == (mercury_builtin:term).
:- type (prog_data:(inst)).
:- type (prog_data:uniqueness).
:- type (prog_data:pred_inst_info).
:- type (prog_data:bound_inst).
:- type (prog_data:inst_name).
:- type (prog_data:is_live).
:- type (prog_data:unify_is_real).
:- type (prog_data:mode_defn).
:- type (prog_data:(mode)).
:- type (prog_data:module_defn).
:- type (prog_data:sym_list).
:- type (prog_data:sym_specifier).
:- type (prog_data:pred_specifier).
:- type (prog_data:func_specifier) == (prog_data:cons_specifier).
:- type (prog_data:cons_specifier).
:- type (prog_data:typed_cons_specifier).
:- type (prog_data:adt_specifier) == (prog_data:sym_name_specifier).
:- type (prog_data:type_specifier) == (prog_data:sym_name_specifier).
:- type (prog_data:op_specifier).
:- type (prog_data:fixity).
:- type (prog_data:sym_name_specifier).
:- type (prog_data:sym_name).
:- type (prog_data:module_specifier) == string.
:- type (prog_data:module_name) == string.
:- type (prog_data:arity) == int.
