!	mercury_builtin.m	/^:- pred ! is det.$/;-;/!/
+	float.m	/^:- func + float = float.$/;-;/+/
-	float.m	/^:- func - float = float.$/;-;/-/
<	float.m	/^:- pred <(float, float).$/;-;/</
=	mercury_builtin.m	/^:- type comparison_result ---> (=) ; (<) ; (>).$/;-;/=/
=<	float.m	/^:- pred =<(float, float).$/;-;/=</
>	float.m	/^:- pred >(float, float).$/;-;/>/
>=	float.m	/^:- pred >=(float, float).$/;-;/>=/
T1 - T2	std_util.m	/^:- type pair(T1, T2)	--->	(T1 - T2).$/;-;/T1 - T2/
[T	mercury_builtin.m	/^:- type list(T) ---> [] ; [T | list(T)].$/;-;/[T/
[]	mercury_builtin.m	/^:- type list(T) ---> [] ; [T | list(T)].$/;-;/[]/
\	int.m	/^:- func \ int = int.$/;-;/\/
accumulating	getopt.m	/^	;	accumulating(list(string))$/;-;/accumulating/
after	ops.m	/^:- type ops__category ---> before ; after.$/;-;/after/
arc	graph.m	/^:- type arc		== arc(unit).$/;-;/arc/
arc_info	graph.m	/^:- type arc_info(N, A)	--->	arc_info(node(N), node(N), A).$/;-;/arc_info/
array	array.m	/^:- type array(T)	--->	array(int, int, map(int,T)).$/;-;/array/
array__bounds	array.m	/^:- pred array__bounds(array(_T), int, int).$/;-;/array__bounds/
array__bsearch	array.m	/^:- pred array__bsearch(array(T), T, pred(T, T, comparison_result), int).$/;-;/array__bsearch/
array__bsearch_2	array.m	/^:- pred array__bsearch_2(array(T), int, int, T,$/;-;/array__bsearch_2/
array__fetch_items	array.m	/^:- pred array__fetch_items(array(T), int, int, list(T)).$/;-;/array__fetch_items/
array__from_list	array.m	/^:- pred array__from_list(list(T), array(T)).$/;-;/array__from_list/
array__init	array.m	/^:- pred array__init(int, int, T, array(T)).$/;-;/array__init/
array__init_2	array.m	/^:- pred array__init_2(int, int, T, map(int,T), map(int,T)).$/;-;/array__init_2/
array__insert_items	array.m	/^:- pred array__insert_items(array(T), int, list(T), array(T)).$/;-;/array__insert_items/
array__lookup	array.m	/^:- pred array__lookup(array(T), int, T).$/;-;/array__lookup/
array__resize	array.m	/^:- pred array__resize(array(T), int, int, array(T)).$/;-;/array__resize/
array__semidet_lookup	array.m	/^:- pred array__semidet_lookup(array(T), int, T).$/;-;/array__semidet_lookup/
array__set	array.m	/^:- pred array__set(array(T), int, T, array(T)).$/;-;/array__set/
array__to_list	array.m	/^:- pred array__to_list(array(T), list(T)).$/;-;/array__to_list/
assoc_list	assoc_list.m	/^:- type assoc_list(K,V)	==	list(pair(K,V)).$/;-;/assoc_list/
assoc_list__from_corresponding_2	assoc_list.m	/^:- pred assoc_list__from_corresponding_2(list(K), list(V), assoc_list(K,V)).$/;-;/assoc_list__from_corresponding_2/
assoc_list__from_corresponding_lists	assoc_list.m	/^:- pred assoc_list__from_corresponding_lists(list(K), list(V), assoc_list(K,V)).$/;-;/assoc_list__from_corresponding_lists/
assoc_list__keys	assoc_list.m	/^:- pred assoc_list__keys(assoc_list(K, V), list(K)).$/;-;/assoc_list__keys/
assoc_list__remove	assoc_list.m	/^:- pred assoc_list__remove(assoc_list(K, V), K, V,$/;-;/assoc_list__remove/
assoc_list__reverse_members	assoc_list.m	/^:- pred assoc_list__reverse_members(assoc_list(K, V), assoc_list(V, K)).$/;-;/assoc_list__reverse_members/
assoc_list__search	assoc_list.m	/^:- pred assoc_list__search(assoc_list(K, V), K, V).$/;-;/assoc_list__search/
assoc_list__values	assoc_list.m	/^:- pred assoc_list__values(assoc_list(K, V), list(V)).$/;-;/assoc_list__values/
assoc_list_member	map.m	/^:- pred assoc_list_member(K, V, list(pair(K,V))).$/;-;/assoc_list_member/
assoc_unit	bintree_set.m	/^:- pred assoc_unit(list(T), assoc_list(T, unit)).$/;-;/assoc_unit/
bag	bag.m	/^:- type bag(T)		==	map(T, int).$/;-;/bag/
bag__contains	bag.m	/^:- pred bag__contains(T, bag(T)).$/;-;/bag__contains/
bag__init	bag.m	/^:- pred bag__init(bag(T)).$/;-;/bag__init/
bag__insert	bag.m	/^:- pred bag__insert(bag(T), T, bag(T)).$/;-;/bag__insert/
bag__insert_list	bag.m	/^:- pred bag__insert_list(bag(T), list(T), bag(T)).$/;-;/bag__insert_list/
bag__remove	bag.m	/^:- pred bag__remove(bag(T), T, bag(T)).$/;-;/bag__remove/
bag__remove_all	bag.m	/^:- pred bag__remove_all(bag(T), T, bag(T)).$/;-;/bag__remove_all/
bag__to_list_without_duplicates	bag.m	/^:- pred bag__to_list_without_duplicates(bag(T), list(T)).$/;-;/bag__to_list_without_duplicates/
base_type_info	mercury_builtin.m	/^:- type base_type_info(T) ---> base_type_info(int /*, ... */).$/;-;/base_type_info/
before	ops.m	/^:- type ops__category ---> before ; after.$/;-;/before/
benchmark_det	time.m	/^:- pred benchmark_det(pred(T1, T2), T1, T2, int, int).$/;-;/benchmark_det/
benchmark_nondet	time.m	/^:- pred benchmark_nondet(pred(T1, T2), T1, int, int, int).$/;-;/benchmark_nondet/
bimap	bimap.m	/^:- type bimap(K,V)	--->	bimap(map(K,V), map(V, K)).$/;-;/bimap/
bimap__coordinates	bimap.m	/^:- pred bimap__coordinates(bimap(_K, V), list(V)).$/;-;/bimap__coordinates/
bimap__delete	bimap.m	/^:- pred bimap__delete(bimap(K,V), K, V, bimap(K,V)).$/;-;/bimap__delete/
bimap__from_assoc_list	bimap.m	/^:- pred bimap__from_assoc_list(assoc_list(K,V), bimap(K,V)).$/;-;/bimap__from_assoc_list/
bimap__from_corresponding_lists	bimap.m	/^:- pred bimap__from_corresponding_lists(list(K), list(V), bimap(K, V)).$/;-;/bimap__from_corresponding_lists/
bimap__init	bimap.m	/^:- pred bimap__init(bimap(_,_)).$/;-;/bimap__init/
bimap__insert	bimap.m	/^:- pred bimap__insert(bimap(K,V), K, V, bimap(K,V)).$/;-;/bimap__insert/
bimap__is_empty	bimap.m	/^:- pred bimap__is_empty(bimap(_,_)).$/;-;/bimap__is_empty/
bimap__lookup	bimap.m	/^:- pred bimap__lookup(bimap(K,V), K, V).$/;-;/bimap__lookup/
bimap__ordinates	bimap.m	/^:- pred bimap__ordinates(bimap(K, _V), list(K)).$/;-;/bimap__ordinates/
bimap__reverse_lookup	bimap.m	/^:- pred bimap__reverse_lookup(bimap(K,V), K, V).$/;-;/bimap__reverse_lookup/
bimap__search	bimap.m	/^:- pred bimap__search(bimap(K,V), K, V).$/;-;/bimap__search/
bimap__set	bimap.m	/^:- pred bimap__set(bimap(K,V), K, V, bimap(K,V)).$/;-;/bimap__set/
bimap__to_assoc_list	bimap.m	/^:- pred bimap__to_assoc_list(bimap(K,V), assoc_list(K,V)).$/;-;/bimap__to_assoc_list/
binary_prefix	ops.m	/^	;	binary_prefix(ops__assoc, ops__assoc)$/;-;/binary_prefix/
bintree	bintree.m	/^:- type bintree(K,V)		--->	empty$/;-;/bintree/
bintree__balance	bintree.m	/^:- pred bintree__balance(bintree(K, V), bintree(K, V)).$/;-;/bintree__balance/
bintree__branching_factor	bintree.m	/^:- pred bintree__branching_factor(bintree(_K,_V), int, int).$/;-;/bintree__branching_factor/
bintree__count	bintree.m	/^:- pred bintree__count(bintree(_K,_V), int).$/;-;/bintree__count/
bintree__delete	bintree.m	/^:- pred bintree__delete(bintree(K,V), K, bintree(K,V)).$/;-;/bintree__delete/
bintree__depth	bintree.m	/^:- pred bintree__depth(bintree(_K,_V), int).$/;-;/bintree__depth/
bintree__fixup	bintree.m	/^:- pred bintree__fixup(bintree(K,V), bintree(K,V), bintree(K,V)).$/;-;/bintree__fixup/
bintree__from_corresponding_lists	bintree.m	/^:- pred bintree__from_corresponding_lists(list(K), list(V), bintree(K,V)).$/;-;/bintree__from_corresponding_lists/
bintree__from_corresponding_lists_2	bintree.m	/^:- pred bintree__from_corresponding_lists_2(list(K), list(V), bintree(K,V),$/;-;/bintree__from_corresponding_lists_2/
bintree__from_list	bintree.m	/^:- pred bintree__from_list(assoc_list(K,V), bintree(K,V)).$/;-;/bintree__from_list/
bintree__from_list_2	bintree.m	/^:- pred bintree__from_list_2(assoc_list(K,V), bintree(K,V), bintree(K,V)).$/;-;/bintree__from_list_2/
bintree__from_sorted_list	bintree.m	/^:- pred bintree__from_sorted_list(assoc_list(K,V), bintree(K,V)).$/;-;/bintree__from_sorted_list/
bintree__from_sorted_list_2	bintree.m	/^:- pred bintree__from_sorted_list_2(int, assoc_list(K,V),$/;-;/bintree__from_sorted_list_2/
bintree__init	bintree.m	/^:- pred bintree__init(bintree(K,V)).$/;-;/bintree__init/
bintree__insert	bintree.m	/^:- pred bintree__insert(bintree(K,V), K, V, bintree(K,V)).$/;-;/bintree__insert/
bintree__keys	bintree.m	/^:- pred bintree__keys(bintree(K,_V), list(K)).$/;-;/bintree__keys/
bintree__keys_2	bintree.m	/^:- pred bintree__keys_2(bintree(K, _V), list(K), list(K)).$/;-;/bintree__keys_2/
bintree__knock_left	bintree.m	/^:- pred bintree__knock_left(bintree(K,V), K, V, bintree(K, V)).$/;-;/bintree__knock_left/
bintree__knock_right	bintree.m	/^:- pred bintree__knock_right(bintree(K,V), K, V, bintree(K, V)).$/;-;/bintree__knock_right/
bintree__left_depth	bintree.m	/^:- pred bintree__left_depth(bintree(_K,_V), int).$/;-;/bintree__left_depth/
bintree__remove	bintree.m	/^:- pred bintree__remove(bintree(K,V), K, V, bintree(K,V)).$/;-;/bintree__remove/
bintree__right_depth	bintree.m	/^:- pred bintree__right_depth(bintree(_K,_V), int).$/;-;/bintree__right_depth/
bintree__search	bintree.m	/^:- pred bintree__search(bintree(K,V), K, V).$/;-;/bintree__search/
bintree__set	bintree.m	/^:- pred bintree__set(bintree(K,V), K, V, bintree(K,V)).$/;-;/bintree__set/
bintree__to_list	bintree.m	/^:- pred bintree__to_list(bintree(K,V), assoc_list(K,V)).$/;-;/bintree__to_list/
bintree__to_list_2	bintree.m	/^:- pred bintree__to_list_2(bintree(K,V), assoc_list(K,V), assoc_list(K,V)).$/;-;/bintree__to_list_2/
bintree__update	bintree.m	/^:- pred bintree__update(bintree(K,V), K, V, bintree(K,V)).$/;-;/bintree__update/
bintree__values	bintree.m	/^:- pred bintree__values(bintree(_K,V), list(V)).$/;-;/bintree__values/
bintree__values_2	bintree.m	/^:- pred bintree__values_2(bintree(_K, V), list(V), list(V)).$/;-;/bintree__values_2/
bintree_set	bintree_set.m	/^:- type bintree_set(T)          ==      bintree(T, unit).$/;-;/bintree_set/
bintree_set__contains_list	bintree_set.m	/^:- pred bintree_set__contains_list(list(T), bintree_set(T)).$/;-;/bintree_set__contains_list/
bintree_set__delete	bintree_set.m	/^:- pred bintree_set__delete(bintree_set(T), T, bintree_set(T)).$/;-;/bintree_set__delete/
bintree_set__delete_list	bintree_set.m	/^:- pred bintree_set__delete_list(bintree_set(T), list(T), bintree_set(T)).$/;-;/bintree_set__delete_list/
bintree_set__equal	bintree_set.m	/^:- pred bintree_set__equal(bintree_set(T), bintree_set(T)).$/;-;/bintree_set__equal/
bintree_set__init	bintree_set.m	/^:- pred bintree_set__init(bintree_set(_T)).$/;-;/bintree_set__init/
bintree_set__insert	bintree_set.m	/^:- pred bintree_set__insert(bintree_set(T), T, bintree_set(T)).$/;-;/bintree_set__insert/
bintree_set__insert_list	bintree_set.m	/^:- pred bintree_set__insert_list(bintree_set(T), list(T), bintree_set(T)).$/;-;/bintree_set__insert_list/
bintree_set__intersect	bintree_set.m	/^:- pred bintree_set__intersect(bintree_set(T), bintree_set(T), bintree_set(T)).$/;-;/bintree_set__intersect/
bintree_set__is_member	bintree_set.m	/^:- pred bintree_set__is_member(T, bintree_set(T)).$/;-;/bintree_set__is_member/
bintree_set__list_to_set	bintree_set.m	/^:- pred bintree_set__list_to_set(list(T), bintree_set(T)).$/;-;/bintree_set__list_to_set/
bintree_set__member	bintree_set.m	/^:- pred bintree_set__member(T, bintree_set(T)).$/;-;/bintree_set__member/
bintree_set__remove	bintree_set.m	/^:- pred bintree_set__remove(bintree_set(T), T, bintree_set(T)).$/;-;/bintree_set__remove/
bintree_set__remove_list	bintree_set.m	/^:- pred bintree_set__remove_list(bintree_set(T), list(T), bintree_set(T)).$/;-;/bintree_set__remove_list/
bintree_set__singleton_set	bintree_set.m	/^:- pred bintree_set__singleton_set(bintree_set(T), T).$/;-;/bintree_set__singleton_set/
bintree_set__sorted_list_to_set	bintree_set.m	/^:- pred bintree_set__sorted_list_to_set(list(T), bintree_set(T)).$/;-;/bintree_set__sorted_list_to_set/
bintree_set__subset	bintree_set.m	/^:- pred bintree_set__subset(bintree_set(T), bintree_set(T)).$/;-;/bintree_set__subset/
bintree_set__superset	bintree_set.m	/^:- pred bintree_set__superset(bintree_set(T), bintree_set(T)).$/;-;/bintree_set__superset/
bintree_set__to_sorted_list	bintree_set.m	/^:- pred bintree_set__to_sorted_list(bintree_set(T), list(T)).$/;-;/bintree_set__to_sorted_list/
bintree_set__union	bintree_set.m	/^:- pred bintree_set__union(bintree_set(T), bintree_set(T), bintree_set(T)).$/;-;/bintree_set__union/
black	rbtree.m	/^			;	black(K, V, rbtree(K, V), rbtree(K, V)).$/;-;/black/
bool	bool.m	/^:- type bool ---> yes ; no.$/;-;/bool/
bool__and	bool.m	/^:- pred bool__and(bool, bool, bool).$/;-;/bool__and/
bool__and_list	bool.m	/^:- pred bool__and_list(list(bool), bool).$/;-;/bool__and_list/
bool__not	bool.m	/^:- pred bool__not(bool, bool).$/;-;/bool__not/
bool__or	bool.m	/^:- pred bool__or(bool, bool, bool).$/;-;/bool__or/
bool__or_list	bool.m	/^:- pred bool__or_list(list(bool), bool).$/;-;/bool__or_list/
bool_special	getopt.m	/^	;	bool_special$/;-;/bool_special/
builtin_bit_and	int.m	/^:- pred builtin_bit_and(int, int, int).$/;-;/builtin_bit_and/
builtin_bit_neg	int.m	/^:- pred builtin_bit_neg(int, int).$/;-;/builtin_bit_neg/
builtin_bit_or	int.m	/^:- pred builtin_bit_or(int, int, int).$/;-;/builtin_bit_or/
builtin_bit_xor	int.m	/^:- pred builtin_bit_xor(int, int, int).$/;-;/builtin_bit_xor/
builtin_compare_character	mercury_builtin.m	/^:- pred builtin_compare_character(comparison_result::out, character::in,$/;-;/builtin_compare_character/
builtin_compare_float	mercury_builtin.m	/^:- pred builtin_compare_float(comparison_result::out, float::in, float::in)$/;-;/builtin_compare_float/
builtin_compare_int	mercury_builtin.m	/^:- pred builtin_compare_int(comparison_result::out, int::in, int::in) is det.$/;-;/builtin_compare_int/
builtin_compare_pred	mercury_builtin.m	/^:- pred builtin_compare_pred(comparison_result::out, (pred)::in, (pred)::in)$/;-;/builtin_compare_pred/
builtin_compare_string	mercury_builtin.m	/^:- pred builtin_compare_string(comparison_result::out, string::in, string::in)$/;-;/builtin_compare_string/
builtin_div	int.m	/^:- pred builtin_div(int, int, int).$/;-;/builtin_div/
builtin_float_divide	float.m	/^:- pred builtin_float_divide(float, float, float).$/;-;/builtin_float_divide/
builtin_float_ge	float.m	/^:- pred builtin_float_ge(float, float).$/;-;/builtin_float_ge/
builtin_float_gt	float.m	/^:- pred builtin_float_gt(float, float).$/;-;/builtin_float_gt/
builtin_float_le	float.m	/^:- pred builtin_float_le(float, float).$/;-;/builtin_float_le/
builtin_float_lt	float.m	/^:- pred builtin_float_lt(float, float).$/;-;/builtin_float_lt/
builtin_float_minus	float.m	/^:- pred builtin_float_minus(float, float, float).$/;-;/builtin_float_minus/
builtin_float_plus	float.m	/^:- pred builtin_float_plus(float, float, float).$/;-;/builtin_float_plus/
builtin_float_times	float.m	/^:- pred builtin_float_times(float, float, float).$/;-;/builtin_float_times/
builtin_index_character	mercury_builtin.m	/^:- pred builtin_index_character(character::in, int::out) is det.$/;-;/builtin_index_character/
builtin_index_float	mercury_builtin.m	/^:- pred builtin_index_float(float::in, int::out) is det.$/;-;/builtin_index_float/
builtin_index_int	mercury_builtin.m	/^:- pred builtin_index_int(int::in, int::out) is det.$/;-;/builtin_index_int/
builtin_index_pred	mercury_builtin.m	/^:- pred builtin_index_pred((pred)::in, int::out) is det.$/;-;/builtin_index_pred/
builtin_index_string	mercury_builtin.m	/^:- pred builtin_index_string(string::in, int::out) is det.$/;-;/builtin_index_string/
builtin_int_gt	mercury_builtin.m	/^:- pred builtin_int_gt(int, int).$/;-;/builtin_int_gt/
builtin_int_lt	mercury_builtin.m	/^:- pred builtin_int_lt(int, int).$/;-;/builtin_int_lt/
builtin_left_shift	int.m	/^:- pred builtin_left_shift(int, int, int).$/;-;/builtin_left_shift/
builtin_minus	int.m	/^:- pred builtin_minus(int, int, int).$/;-;/builtin_minus/
builtin_mod	int.m	/^:- pred builtin_mod(int, int, int).$/;-;/builtin_mod/
builtin_plus	int.m	/^:- pred builtin_plus(int, int, int).$/;-;/builtin_plus/
builtin_right_shift	int.m	/^:- pred builtin_right_shift(int, int, int).$/;-;/builtin_right_shift/
builtin_solutions	std_util.m	/^:- pred builtin_solutions(pred(T), list(T)).$/;-;/builtin_solutions/
builtin_strcmp	mercury_builtin.m	/^:- pred builtin_strcmp(int, string, string).$/;-;/builtin_strcmp/
builtin_term_to_type_character	mercury_builtin.m	/^:- pred builtin_term_to_type_character(term :: in, character :: out) is semidet.$/;-;/builtin_term_to_type_character/
builtin_term_to_type_float	mercury_builtin.m	/^:- pred builtin_term_to_type_float(term :: in, float :: out) is semidet.$/;-;/builtin_term_to_type_float/
builtin_term_to_type_int	mercury_builtin.m	/^:- pred builtin_term_to_type_int(term :: in, int :: out) is semidet.$/;-;/builtin_term_to_type_int/
builtin_term_to_type_pred	mercury_builtin.m	/^:- pred builtin_term_to_type_pred(term::in, (pred)::out) is semidet.$/;-;/builtin_term_to_type_pred/
builtin_term_to_type_string	mercury_builtin.m	/^:- pred builtin_term_to_type_string(term :: in, string :: out) is semidet.$/;-;/builtin_term_to_type_string/
builtin_times	int.m	/^:- pred builtin_times(int, int, int).$/;-;/builtin_times/
builtin_type_to_term_character	mercury_builtin.m	/^:- pred builtin_type_to_term_character(character :: in, term :: out) is det.$/;-;/builtin_type_to_term_character/
builtin_type_to_term_float	mercury_builtin.m	/^:- pred builtin_type_to_term_float(float :: in, term :: out) is det.$/;-;/builtin_type_to_term_float/
builtin_type_to_term_int	mercury_builtin.m	/^:- pred builtin_type_to_term_int(int :: in, term :: out) is det.$/;-;/builtin_type_to_term_int/
builtin_type_to_term_pred	mercury_builtin.m	/^:- pred builtin_type_to_term_pred((pred)::in, term::out) is det.$/;-;/builtin_type_to_term_pred/
builtin_type_to_term_string	mercury_builtin.m	/^:- pred builtin_type_to_term_string(string :: in, term :: out) is det.$/;-;/builtin_type_to_term_string/
builtin_unary_minus	int.m	/^:- pred builtin_unary_minus(int, int).$/;-;/builtin_unary_minus/
builtin_unary_plus	int.m	/^:- pred builtin_unary_plus(int, int).$/;-;/builtin_unary_plus/
builtin_unify_character	mercury_builtin.m	/^:- pred builtin_unify_character(character::in, character::in) is semidet.$/;-;/builtin_unify_character/
builtin_unify_float	mercury_builtin.m	/^:- pred builtin_unify_float(float::in, float::in) is semidet.$/;-;/builtin_unify_float/
builtin_unify_int	mercury_builtin.m	/^:- pred builtin_unify_int(int::in, int::in) is semidet.$/;-;/builtin_unify_int/
builtin_unify_pred	mercury_builtin.m	/^:- pred builtin_unify_pred((pred)::in, (pred)::in) is semidet.$/;-;/builtin_unify_pred/
builtin_unify_string	mercury_builtin.m	/^:- pred builtin_unify_string(string::in, string::in) is semidet.$/;-;/builtin_unify_string/
c	string.m	/^		;	c(char).$/;-;/c/
c_pointer	mercury_builtin.m	/^:- type c_pointer == int.$/;-;/c_pointer/
cc_multi_equal	std_util.m	/^:- pred cc_multi_equal(T::in, T::out) is cc_multi.$/;-;/cc_multi_equal/
char	char.m	/^:- type char == character.$/;-;/char/
char__is_alnum	char.m	/^:- pred char__is_alnum(char).$/;-;/char__is_alnum/
char__is_alnum_or_underscore	char.m	/^:- pred char__is_alnum_or_underscore(char).$/;-;/char__is_alnum_or_underscore/
char__is_alpha	char.m	/^:- pred char__is_alpha(char).$/;-;/char__is_alpha/
char__is_alpha_or_underscore	char.m	/^:- pred char__is_alpha_or_underscore(char).$/;-;/char__is_alpha_or_underscore/
char__is_binary_digit	char.m	/^:- pred char__is_binary_digit(char).$/;-;/char__is_binary_digit/
char__is_digit	char.m	/^:- pred char__is_digit(char).$/;-;/char__is_digit/
char__is_hex_digit	char.m	/^:- pred char__is_hex_digit(char).$/;-;/char__is_hex_digit/
char__is_lower	char.m	/^:- pred char__is_lower(char).$/;-;/char__is_lower/
char__is_octal_digit	char.m	/^:- pred char__is_octal_digit(char).$/;-;/char__is_octal_digit/
char__is_upper	char.m	/^:- pred char__is_upper(char).$/;-;/char__is_upper/
char__is_whitespace	char.m	/^:- pred char__is_whitespace(char).$/;-;/char__is_whitespace/
char__lower_upper	char.m	/^:- pred char__lower_upper(char, char).$/;-;/char__lower_upper/
char__to_int	char.m	/^:- pred char__to_int(char, int).$/;-;/char__to_int/
char__to_lower	char.m	/^:- pred char__to_lower(char, char).$/;-;/char__to_lower/
char__to_upper	char.m	/^:- pred char__to_upper(char, char).$/;-;/char__to_upper/
close				lexer.m	/^	;	close			% ')'$/;-;/close			/
close_curly			lexer.m	/^	;	close_curly		% '{'$/;-;/close_curly		/
close_list			lexer.m	/^	;	close_list		% ']'$/;-;/close_list		/
comma				lexer.m	/^	;	comma			% ','$/;-;/comma			/
compare	mercury_builtin.m	/^:- pred compare(comparison_result, T, T).$/;-;/compare/
compare_error	mercury_builtin.m	/^:- pred compare_error is erroneous.$/;-;/compare_error/
comparison_result	mercury_builtin.m	/^:- type comparison_result ---> (=) ; (<) ; (>).$/;-;/comparison_result/
const	mercury_builtin.m	/^:- type const		--->	term__atom(string)$/;-;/const/
copy	mercury_builtin.m	/^:- pred copy(T, T).$/;-;/copy/
dead	mercury_builtin.m	/^:- inst dead = clobbered.$/;-;/dead/
det_term_to_type	mercury_builtin.m	/^:- pred det_term_to_type(term :: in, T :: out) is det.$/;-;/det_term_to_type/
di	mercury_builtin.m	/^:- mode di(Inst) :: (Inst -> clobbered).$/;-;/di/
di_four	tree234.m	/^:- mode di_four :: di(uniq_four(ground, ground, uniq_tree234(ground, ground))).$/;-;/di_four/
di_tree234	tree234.m	/^:- mode di_tree234(K, V) :: uniq_tree234(K, V) -> dead.$/;-;/di_tree234/
dir__basename	dir.m	/^:- pred dir__basename(string::in, string::out) is det.$/;-;/dir__basename/
dir__directory_separator	dir.m	/^:- pred dir__directory_separator(character).$/;-;/dir__directory_separator/
dir__dirname	dir.m	/^:- pred dir__dirname(string::in, string::out) is det.$/;-;/dir__dirname/
dir__split_name	dir.m	/^:- pred dir__split_name(string::in, string::out, string::out) is det.$/;-;/dir__split_name/
dir__split_name_2	dir.m	/^:- pred dir__split_name_2(string::in, int::in, string::out, string::out) is det.$/;-;/dir__split_name_2/
dir__this_directory	dir.m	/^:- pred dir__this_directory(string).$/;-;/dir__this_directory/
empty	bintree.m	/^:- type bintree(K,V)		--->	empty$/;-;/empty/
end				lexer.m	/^	;	end			% '.'$/;-;/end			/
eof	io.m	/^			;	eof$/;-;/eof/
eqvclass	eqvclass.m	/^:- type eqvclass(T)	--->$/;-;/eqvclass/
eqvclass__add_element	eqvclass.m	/^:- pred eqvclass__add_element(eqvclass(T), T, partition_id, eqvclass(T)).$/;-;/eqvclass__add_element/
eqvclass__add_equivalence	eqvclass.m	/^:- pred eqvclass__add_equivalence(eqvclass(T), partition_id, partition_id,$/;-;/eqvclass__add_equivalence/
eqvclass__change_partition	eqvclass.m	/^:- pred eqvclass__change_partition(list(T), partition_id,$/;-;/eqvclass__change_partition/
eqvclass__ensure_element	eqvclass.m	/^:- pred eqvclass__ensure_element(eqvclass(T), T, eqvclass(T)).$/;-;/eqvclass__ensure_element/
eqvclass__ensure_element_2	eqvclass.m	/^:- pred eqvclass__ensure_element_2(eqvclass(T), T, partition_id, eqvclass(T)).$/;-;/eqvclass__ensure_element_2/
eqvclass__ensure_equivalence	eqvclass.m	/^:- pred eqvclass__ensure_equivalence(eqvclass(T), T, T, eqvclass(T)).$/;-;/eqvclass__ensure_equivalence/
eqvclass__find_partition	eqvclass.m	/^:- pred eqvclass__find_partition(eqvclass(T), T, partition_id).$/;-;/eqvclass__find_partition/
eqvclass__id_to_partition	eqvclass.m	/^:- pred eqvclass__id_to_partition(eqvclass(T), partition_id, set(T)).$/;-;/eqvclass__id_to_partition/
eqvclass__init	eqvclass.m	/^:- pred eqvclass__init(eqvclass(T)).$/;-;/eqvclass__init/
eqvclass__is_member	eqvclass.m	/^:- pred eqvclass__is_member(eqvclass(T), T).$/;-;/eqvclass__is_member/
eqvclass__make_partition	eqvclass.m	/^:- pred eqvclass__make_partition(list(T), partition_id,$/;-;/eqvclass__make_partition/
eqvclass__new_element	eqvclass.m	/^:- pred eqvclass__new_element(eqvclass(T), T, eqvclass(T)).$/;-;/eqvclass__new_element/
eqvclass__new_equivalence	eqvclass.m	/^:- pred eqvclass__new_equivalence(eqvclass(T), T, T, eqvclass(T)).$/;-;/eqvclass__new_equivalence/
eqvclass__partition_ids	eqvclass.m	/^:- pred eqvclass__partition_ids(eqvclass(T), list(partition_id)).$/;-;/eqvclass__partition_ids/
eqvclass__partition_list	eqvclass.m	/^:- pred eqvclass__partition_list(eqvclass(T), list(set(T))).$/;-;/eqvclass__partition_list/
eqvclass__partition_list_to_eqvclass	eqvclass.m	/^:- pred eqvclass__partition_list_to_eqvclass(list(set(T)), eqvclass(T)).$/;-;/eqvclass__partition_list_to_eqvclass/
eqvclass__partition_set	eqvclass.m	/^:- pred eqvclass__partition_set(eqvclass(T), set(set(T))).$/;-;/eqvclass__partition_set/
eqvclass__partition_set_to_eqvclass	eqvclass.m	/^:- pred eqvclass__partition_set_to_eqvclass(set(set(T)), eqvclass(T)).$/;-;/eqvclass__partition_set_to_eqvclass/
eqvclass__partitions	eqvclass.m	/^:- pred eqvclass__partitions(eqvclass(T), list(partition_id), list(set(T))).$/;-;/eqvclass__partitions/
eqvclass__same_eqvclass	eqvclass.m	/^:- pred eqvclass__same_eqvclass(eqvclass(T), T, T).$/;-;/eqvclass__same_eqvclass/
error	getopt.m	/^	;	error(string).$/;-;/error/
f	string.m	/^			f(float)$/;-;/f/
fdi_four	tree234.m	/^:- mode fdi_four :: di(uniq_four(unique, unique, unique)).$/;-;/fdi_four/
find_all_sub_charlist	string.m	/^:- pred find_all_sub_charlist(list(character), list(character), list(character),$/;-;/find_all_sub_charlist/
find_rest_of_sub_charlist	string.m	/^:- pred find_rest_of_sub_charlist(list(character), list(character), $/;-;/find_rest_of_sub_charlist/
find_sub_charlist	string.m	/^:- pred find_sub_charlist(list(character), list(character), list(character),$/;-;/find_sub_charlist/
float	float.m	/^:- func float + float = float.$/;-;/float/
float__abs	float.m	/^:- pred float__abs(float, float).$/;-;/float__abs/
float__ceiling_to_int	float.m	/^:- pred float__ceiling_to_int(float, int).$/;-;/float__ceiling_to_int/
float__epsilon	float.m	/^:- pred float__epsilon(float).$/;-;/float__epsilon/
float__floor_to_int	float.m	/^:- pred float__floor_to_int(float, int).$/;-;/float__floor_to_int/
float__max	float.m	/^:- pred float__max(float, float, float).$/;-;/float__max/
float__min	float.m	/^:- pred float__min(float, float, float).$/;-;/float__min/
float__pow	float.m	/^:- pred float__pow( float, int, float).$/;-;/float__pow/
float__round_to_int	float.m	/^:- pred float__round_to_int(float, int).$/;-;/float__round_to_int/
float__truncate_to_int	float.m	/^:- pred float__truncate_to_int(float, int).$/;-;/float__truncate_to_int/
four	tree234.m	/^	;	four(K, V, K, V, K, V, tree234(K, V), tree234(K, V),$/;-;/four/
fx	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/fx/
fxx	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/fxx/
fxy	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/fxy/
fy	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/fy/
fyx	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/fyx/
fyy	term_io.m	/^:- type op_type ---> fx; fy; xf; yf; xfx; xfy; yfx; fxx; fxy; fyx; fyy.$/;-;/fyy/
getopt__get_long_options	getopt.m	/^:- pred getopt__get_long_options(option_ops(OptionType)::in(option_ops),$/;-;/getopt__get_long_options/
getopt__get_option_defaults	getopt.m	/^:- pred getopt__get_option_defaults(option_ops(OptionType)::in(option_ops),$/;-;/getopt__get_option_defaults/
getopt__get_short_option_arg	getopt.m	/^:- pred getopt__get_short_option_arg(list(character), string,$/;-;/getopt__get_short_option_arg/
getopt__get_short_options	getopt.m	/^:- pred getopt__get_short_options(option_ops(OptionType)::in(option_ops),$/;-;/getopt__get_short_options/
getopt__get_special_handler	getopt.m	/^:- pred getopt__get_special_handler(option_ops(OptionType)::in(option_ops),$/;-;/getopt__get_special_handler/
getopt__handle_long_option	getopt.m	/^:- pred getopt__handle_long_option(string::in, OptionType::in, option_data::in,$/;-;/getopt__handle_long_option/
getopt__handle_short_options	getopt.m	/^:- pred getopt__handle_short_options(list(character)::in,$/;-;/getopt__handle_short_options/
getopt__lookup_bool_option	getopt.m	/^:- pred getopt__lookup_bool_option(option_table(Option), Option, bool).$/;-;/getopt__lookup_bool_option/
getopt__lookup_int_option	getopt.m	/^:- pred getopt__lookup_int_option(option_table(Option), Option, int).$/;-;/getopt__lookup_int_option/
getopt__lookup_string_option	getopt.m	/^:- pred getopt__lookup_string_option(option_table(Option), Option, string).$/;-;/getopt__lookup_string_option/
getopt__need_arg	getopt.m	/^:- pred getopt__need_arg(option_data::in, bool::out) is det.$/;-;/getopt__need_arg/
getopt__numeric_argument	getopt.m	/^:- pred getopt__numeric_argument(string::in, string::in,$/;-;/getopt__numeric_argument/
getopt__process_arguments	getopt.m	/^:- pred getopt__process_arguments(list(string)::in, list(string)::out,$/;-;/getopt__process_arguments/
getopt__process_option	getopt.m	/^:- pred getopt__process_option(option_data::in, string::in, OptionType::in,$/;-;/getopt__process_option/
getopt__process_options	getopt.m	/^:- pred getopt__process_options($/;-;/getopt__process_options/
getopt__process_special	getopt.m	/^:- pred getopt__process_special(string::in, OptionType::in, special_data::in,$/;-;/getopt__process_special/
graph	graph.m	/^:- type graph(N)	== graph(N, unit).$/;-;/graph/
graph__arc_contents	graph.m	/^:- pred graph__arc_contents(graph(N, A), arc(A), node(N), node(N), A).$/;-;/graph__arc_contents/
graph__arc_supply	graph.m	/^:- type graph__arc_supply	==	int.$/;-;/graph__arc_supply/
graph__det_insert_edge	graph.m	/^:- pred graph__det_insert_edge(graph(N, A), node(N), node(N), A,$/;-;/graph__det_insert_edge/
graph__det_insert_node	graph.m	/^:- pred graph__det_insert_node(graph(N, A), N, node(N), graph(N, A)).$/;-;/graph__det_insert_node/
graph__find_matching_nodes	graph.m	/^:- pred graph__find_matching_nodes(graph(N, A), N, set(node(N))).$/;-;/graph__find_matching_nodes/
graph__get_arc_supply	graph.m	/^:- pred graph__get_arc_supply(graph(N, A), graph__arc_supply).$/;-;/graph__get_arc_supply/
graph__get_arcs	graph.m	/^:- pred graph__get_arcs(graph(N, A), map(arc(A), arc_info(N, A))).$/;-;/graph__get_arcs/
graph__get_edges	graph.m	/^:- pred graph__get_edges(graph(N, A), map(node(N), map(arc(A), node(N)))).$/;-;/graph__get_edges/
graph__get_node_supply	graph.m	/^:- pred graph__get_node_supply(graph(N, A), graph__node_supply).$/;-;/graph__get_node_supply/
graph__get_nodes	graph.m	/^:- pred graph__get_nodes(graph(N, A), map(node(N), N)).$/;-;/graph__get_nodes/
graph__init	graph.m	/^:- pred graph__init(graph(N, A)).$/;-;/graph__init/
graph__insert_edge	graph.m	/^:- pred graph__insert_edge(graph(N, A), node(N), node(N), A,$/;-;/graph__insert_edge/
graph__insert_node	graph.m	/^:- pred graph__insert_node(graph(N, A), N, node(N), graph(N, A)).$/;-;/graph__insert_node/
graph__node_contents	graph.m	/^:- pred graph__node_contents(graph(N, A), node(N), N).$/;-;/graph__node_contents/
graph__node_supply	graph.m	/^:- type graph__node_supply	==	int.$/;-;/graph__node_supply/
graph__nodes	graph.m	/^:- pred graph__nodes(graph(N, A), set(node(N))).$/;-;/graph__nodes/
graph__path	graph.m	/^:- pred graph__path(graph(N, A), node(N), node(N), list(arc(A))).$/;-;/graph__path/
graph__path_2	graph.m	/^:- pred graph__path_2(graph(N, A), node(N), node(N),$/;-;/graph__path_2/
graph__search_node	graph.m	/^:- pred graph__search_node(graph(N, A), N, node(N)).$/;-;/graph__search_node/
graph__select_node	graph.m	/^:- pred graph__select_node(map(node(N), N), N, node(N)).$/;-;/graph__select_node/
graph__set_arc_supply	graph.m	/^:- pred graph__set_arc_supply(graph(N, A), graph__arc_supply, graph(N, A)).$/;-;/graph__set_arc_supply/
graph__set_arcs	graph.m	/^:- pred graph__set_arcs(graph(N, A), map(arc(A), arc_info(N, A)), graph(N, A)).$/;-;/graph__set_arcs/
graph__set_edge	graph.m	/^:- pred graph__set_edge(graph(N, A), node(N), node(N), A,$/;-;/graph__set_edge/
graph__set_edges	graph.m	/^:- pred graph__set_edges(graph(N, A), map(node(N), map(arc(A), node(N))), graph(N, A)).$/;-;/graph__set_edges/
graph__set_node	graph.m	/^:- pred graph__set_node(graph(N, A), N, node(N), graph(N, A)).$/;-;/graph__set_node/
graph__set_node_supply	graph.m	/^:- pred graph__set_node_supply(graph(N, A), graph__node_supply, graph(N, A)).$/;-;/graph__set_node_supply/
graph__set_nodes	graph.m	/^:- pred graph__set_nodes(graph(N, A), map(node(N), N), graph(N, A)).$/;-;/graph__set_nodes/
graph__successors	graph.m	/^:- pred graph__successors(graph(N, A), node(N), set(node(N))).$/;-;/graph__successors/
group	group.m	/^:- type group(T)	--->$/;-;/group/
group__get_elements	group.m	/^:- pred group__get_elements(group(T), map(T, group__key)).$/;-;/group__get_elements/
group__get_group_count	group.m	/^:- pred group__get_group_count(group(T), int).$/;-;/group__get_group_count/
group__get_sets	group.m	/^:- pred group__get_sets(group(T), map(group__key, set(T))).$/;-;/group__get_sets/
group__group	group.m	/^:- pred group__group(group(T), T, set(T)).$/;-;/group__group/
group__group_key	group.m	/^:- pred group__group_key(group(T), T, group__key).$/;-;/group__group_key/
group__group_keys	group.m	/^:- pred group__group_keys(group(T), list(group__key)).$/;-;/group__group_keys/
group__init	group.m	/^:- pred group__init(group(T)).$/;-;/group__init/
group__insert	group.m	/^:- pred group__insert(group(T), set(T), group(T)).$/;-;/group__insert/
group__insert_elements	group.m	/^:- pred group__insert_elements(list(T), group__key,$/;-;/group__insert_elements/
group__key	group.m	/^:- type group__key	==	int.$/;-;/group__key/
group__key_group	group.m	/^:- pred group__key_group(group(T), group__key, set(T)).$/;-;/group__key_group/
group__largest_group_key	group.m	/^:- pred group__largest_group_key(group(T), group__key).$/;-;/group__largest_group_key/
group__largest_group_key_2	group.m	/^:- pred group__largest_group_key_2(assoc_list(group__key, set(T)), int,$/;-;/group__largest_group_key_2/
group__remove_elements	group.m	/^:- pred group__remove_elements(list(T), map(T, group__key), map(T, group__key)).$/;-;/group__remove_elements/
group__remove_group	group.m	/^:- pred group__remove_group(group(T), group__key, set(T), group(T)).$/;-;/group__remove_group/
group__same_group	group.m	/^:- pred group__same_group(group(T), T, T).$/;-;/group__same_group/
group__set_elements	group.m	/^:- pred group__set_elements(group(T), map(T, group__key), group(T)).$/;-;/group__set_elements/
group__set_group_count	group.m	/^:- pred group__set_group_count(group(T), int, group(T)).$/;-;/group__set_group_count/
group__set_sets	group.m	/^:- pred group__set_sets(group(T), map(group__key, set(T)), group(T)).$/;-;/group__set_sets/
group__sets_and_keys	group.m	/^:- pred group__sets_and_keys(group(T), assoc_list(set(T), group__key)).$/;-;/group__sets_and_keys/
group__to_set	group.m	/^:- pred group__to_set(group(T), set(set(T))).$/;-;/group__to_set/
ht_sep				lexer.m	/^	;	ht_sep			% '|'$/;-;/ht_sep			/
i	string.m	/^		;	i(int)$/;-;/i/
in	mercury_builtin.m	/^:- mode in :: (ground -> ground).$/;-;/in/
in_four	tree234.m	/^:- mode in_four :: in(four(ground, ground, ground)).$/;-;/in_four/
in_list_skel	list.m	/^:- mode in_list_skel :: list_skel -> list_skel.$/;-;/in_list_skel/
index	mercury_builtin.m	/^:- pred index(T::in, int::out) is det.$/;-;/index/
infix	ops.m	/^	--->	infix(ops__assoc, ops__assoc)$/;-;/infix/
input	mercury_builtin.m	/^:- mode input :: (ground -> ground).$/;-;/input/
input_list_skel	list.m	/^:- mode input_list_skel :: in_list_skel.$/;-;/input_list_skel/
int	getopt.m	/^	;	int(int)$/;-;/int/
int__abs	int.m	/^:- pred int__abs(int, int).$/;-;/int__abs/
int__log2	int.m	/^:- pred int__log2(int, int).$/;-;/int__log2/
int__log2_2	int.m	/^:- pred int__log2_2(int, int, int).$/;-;/int__log2_2/
int__max	int.m	/^:- pred int__max(int, int, int).$/;-;/int__max/
int__min	int.m	/^:- pred int__min(int, int, int).$/;-;/int__min/
int__pow	int.m	/^:- pred int__pow(int, int, int).$/;-;/int__pow/
int__pow_2	int.m	/^:- pred int__pow_2(int, int, int, int).$/;-;/int__pow_2/
int__to_float	int.m	/^:- pred int__to_float(int, float) is det.$/;-;/int__to_float/
int_special	getopt.m	/^	;	int_special$/;-;/int_special/
integer	lexer.m	/^	;	integer(int)$/;-;/integer/
io__binary_input_stream	io.m	/^:- pred io__binary_input_stream(io__binary_input_stream, io__state, io__state).$/;-;/io__binary_input_stream/
io__binary_input_stream_name	io.m	/^:- pred io__binary_input_stream_name(string, io__state, io__state).$/;-;/io__binary_input_stream_name/
io__binary_output_stream	io.m	/^:- pred io__binary_output_stream(io__binary_output_stream,$/;-;/io__binary_output_stream/
io__binary_output_stream_name	io.m	/^:- pred io__binary_output_stream_name(string, io__state, io__state).$/;-;/io__binary_output_stream_name/
io__call_system	io.m	/^:- pred io__call_system(string, io__res(int), io__state, io__state).$/;-;/io__call_system/
io__call_system_code	io.m	/^:- pred io__call_system_code(string, int, io__state, io__state).$/;-;/io__call_system_code/
io__close_binary_input	io.m	/^:- pred io__close_binary_input(io__binary_input_stream, io__state, io__state).$/;-;/io__close_binary_input/
io__close_binary_output	io.m	/^:- pred io__close_binary_output(io__binary_output_stream, io__state, io__state).$/;-;/io__close_binary_output/
io__close_input	io.m	/^:- pred io__close_input(io__input_stream, io__state, io__state).$/;-;/io__close_input/
io__close_output	io.m	/^:- pred io__close_output(io__output_stream, io__state, io__state).$/;-;/io__close_output/
io__command_line_arguments	io.m	/^:- pred io__command_line_arguments(list(string), io__state, io__state).$/;-;/io__command_line_arguments/
io__delete_stream_name	io.m	/^:- pred io__delete_stream_name(io__stream, io__state, io__state).$/;-;/io__delete_stream_name/
io__do_open	io.m	/^:- pred io__do_open(string, string, int, io__input_stream,$/;-;/io__do_open/
io__error	io.m	/^:- type io__error	==	string.		% This is subject to change.$/;-;/io__error/
io__error_message	io.m	/^:- pred io__error_message(io__error, string).$/;-;/io__error_message/
io__flush_binary_output	io.m	/^:- pred io__flush_binary_output(io__state, io__state).$/;-;/io__flush_binary_output/
io__flush_output	io.m	/^:- pred io__flush_output(io__state, io__state).$/;-;/io__flush_output/
io__gc_call	io.m	/^:- pred io__gc_call(pred(io__state, io__state), io__state, io__state).$/;-;/io__gc_call/
io__get_environment_var	io.m	/^:- pred io__get_environment_var(string, maybe(string), io__state, io__state).$/;-;/io__get_environment_var/
io__get_exit_status	io.m	/^:- pred io__get_exit_status(int, io__state, io__state).$/;-;/io__get_exit_status/
io__get_globals	io.m	/^:- pred io__get_globals(univ, io__state, io__state).$/;-;/io__get_globals/
io__get_line_number	io.m	/^:- pred io__get_line_number(int, io__state, io__state).$/;-;/io__get_line_number/
io__get_op_table	io.m	/^:- pred io__get_op_table(ops__table, io__state, io__state).$/;-;/io__get_op_table/
io__getenv	io.m	/^:- pred io__getenv(string, string).$/;-;/io__getenv/
io__ignore_whitespace	io.m	/^:- pred io__ignore_whitespace(io__result, io__state, io__state).$/;-;/io__ignore_whitespace/
io__init_state	io.m	/^:- pred io__init_state(io__external_state, io__state).$/;-;/io__init_state/
io__input_stream	io.m	/^:- pred io__input_stream(io__input_stream, io__state, io__state).$/;-;/io__input_stream/
io__input_stream_name	io.m	/^:- pred io__input_stream_name(string, io__state, io__state).$/;-;/io__input_stream_name/
io__insert_std_stream_names	io.m	/^:- pred io__insert_std_stream_names(io__state, io__state).$/;-;/io__insert_std_stream_names/
io__insert_stream_name	io.m	/^:- pred io__insert_stream_name(io__stream, string, io__state, io__state).$/;-;/io__insert_stream_name/
io__open_append	io.m	/^:- pred io__open_append(string, io__res(io__output_stream),$/;-;/io__open_append/
io__open_binary_append	io.m	/^:- pred io__open_binary_append(string, io__res(io__binary_output_stream),$/;-;/io__open_binary_append/
io__open_binary_input	io.m	/^:- pred io__open_binary_input(string, io__res(io__binary_input_stream),$/;-;/io__open_binary_input/
io__open_binary_output	io.m	/^:- pred io__open_binary_output(string, io__res(io__binary_output_stream),$/;-;/io__open_binary_output/
io__open_input	io.m	/^:- pred io__open_input(string, io__res(io__input_stream), io__state, io__state).$/;-;/io__open_input/
io__open_output	io.m	/^:- pred io__open_output(string, io__res(io__output_stream),$/;-;/io__open_output/
io__output_stream	io.m	/^:- pred io__output_stream(io__output_stream, io__state, io__state).$/;-;/io__output_stream/
io__output_stream_name	io.m	/^:- pred io__output_stream_name(string, io__state, io__state).$/;-;/io__output_stream_name/
io__poly_type	io.m	/^:- type io__poly_type == string__poly_type.$/;-;/io__poly_type/
io__preallocate_heap_space	io.m	/^:- pred io__preallocate_heap_space(int, io__state, io__state).$/;-;/io__preallocate_heap_space/
io__progname	io.m	/^:- pred io__progname(string, string, io__state, io__state).$/;-;/io__progname/
io__progname_base	io.m	/^:- pred io__progname_base(string, string, io__state, io__state).$/;-;/io__progname_base/
io__putback_byte	io.m	/^:- pred io__putback_byte(int, io__state, io__state).$/;-;/io__putback_byte/
io__putback_char	io.m	/^:- pred io__putback_char(char, io__state, io__state).$/;-;/io__putback_char/
io__putenv	io.m	/^:- pred io__putenv(string).$/;-;/io__putenv/
io__read_anything	io.m	/^:- pred io__read_anything(io__read_result(T), io__state, io__state).$/;-;/io__read_anything/
io__read_byte	io.m	/^:- pred io__read_byte(io__result(int), io__state, io__state).$/;-;/io__read_byte/
io__read_char	io.m	/^:- pred io__read_char(io__result(char), io__state, io__state).$/;-;/io__read_char/
io__read_char_code	io.m	/^:- pred io__read_char_code(io__input_stream, int, io__state, io__state).$/;-;/io__read_char_code/
io__read_line	io.m	/^:- pred io__read_line(io__result(list(char)), io__state, io__state).$/;-;/io__read_line/
io__read_result	io.m	/^:- type io__read_result(T)	--->	ok(T)$/;-;/io__read_result/
io__read_word	io.m	/^:- pred io__read_word(io__result(list(char)), io__state, io__state).$/;-;/io__read_word/
io__read_word_2	io.m	/^:- pred io__read_word_2(io__input_stream, io__result(list(char)),$/;-;/io__read_word_2/
io__report_stats	io.m	/^:- pred io__report_stats(io__state, io__state).$/;-;/io__report_stats/
io__res	io.m	/^:- type io__res		--->	ok$/;-;/io__res/
io__result	io.m	/^:- type io__result	--->	ok$/;-;/io__result/
io__see	io.m	/^:- pred io__see(string, io__res, io__state, io__state).$/;-;/io__see/
io__see_binary	io.m	/^:- pred io__see_binary(string, io__res, io__state, io__state).$/;-;/io__see_binary/
io__seen	io.m	/^:- pred io__seen(io__state, io__state).$/;-;/io__seen/
io__seen_binary	io.m	/^:- pred io__seen_binary(io__state, io__state).$/;-;/io__seen_binary/
io__set_binary_input_stream	io.m	/^:- pred io__set_binary_input_stream(io__binary_input_stream,$/;-;/io__set_binary_input_stream/
io__set_binary_output_stream	io.m	/^:- pred io__set_binary_output_stream(io__binary_output_stream,$/;-;/io__set_binary_output_stream/
io__set_environment_var	io.m	/^:- pred io__set_environment_var(string, string, io__state, io__state).$/;-;/io__set_environment_var/
io__set_exit_status	io.m	/^:- pred io__set_exit_status(int, io__state, io__state).$/;-;/io__set_exit_status/
io__set_globals	io.m	/^:- pred io__set_globals(univ, io__state, io__state).$/;-;/io__set_globals/
io__set_input_stream	io.m	/^:- pred io__set_input_stream(io__input_stream, io__input_stream,$/;-;/io__set_input_stream/
io__set_line_number	io.m	/^:- pred io__set_line_number(int, io__state, io__state).$/;-;/io__set_line_number/
io__set_op_table	io.m	/^:- pred io__set_op_table(ops__table, io__state, io__state).$/;-;/io__set_op_table/
io__set_output_stream	io.m	/^:- pred io__set_output_stream(io__output_stream, io__output_stream,$/;-;/io__set_output_stream/
io__state	io.m	/^:- type io__state$/;-;/io__state/
io__stderr_stream	io.m	/^:- pred io__stderr_stream(io__output_stream, io__state, io__state).$/;-;/io__stderr_stream/
io__stdin_binary_stream	io.m	/^:- pred io__stdin_binary_stream(io__binary_input_stream, io__state, io__state).$/;-;/io__stdin_binary_stream/
io__stdin_stream	io.m	/^:- pred io__stdin_stream(io__input_stream, io__state, io__state).$/;-;/io__stdin_stream/
io__stdout_binary_stream	io.m	/^:- pred io__stdout_binary_stream(io__binary_output_stream, io__state,$/;-;/io__stdout_binary_stream/
io__stdout_stream	io.m	/^:- pred io__stdout_stream(io__output_stream, io__state, io__state).$/;-;/io__stdout_stream/
io__stream_name	io.m	/^:- pred io__stream_name(io__stream, string, io__state, io__state).$/;-;/io__stream_name/
io__stream_names	io.m	/^:- type io__stream_names ==	map(io__stream, string).$/;-;/io__stream_names/
io__stream_putback	io.m	/^:- type io__stream_putback ==	map(io__stream, list(char)).$/;-;/io__stream_putback/
io__tell	io.m	/^:- pred io__tell(string, io__res, io__state, io__state).$/;-;/io__tell/
io__tell_binary	io.m	/^:- pred io__tell_binary(string, io__res, io__state, io__state).$/;-;/io__tell_binary/
io__told	io.m	/^:- pred io__told(io__state, io__state).$/;-;/io__told/
io__told_binary	io.m	/^:- pred io__told_binary(io__state, io__state).$/;-;/io__told_binary/
io__write	io.m	/^:- pred io__write(T, io__state, io__state).$/;-;/io__write/
io__write_byte	io.m	/^:- pred io__write_byte(int, io__state, io__state).$/;-;/io__write_byte/
io__write_bytes	io.m	/^:- pred io__write_bytes(string, io__state, io__state).$/;-;/io__write_bytes/
io__write_char	io.m	/^:- pred io__write_char(char, io__state, io__state).$/;-;/io__write_char/
io__write_float	io.m	/^:- pred io__write_float(float, io__state, io__state).$/;-;/io__write_float/
io__write_int	io.m	/^:- pred io__write_int(int, io__state, io__state).$/;-;/io__write_int/
io__write_many	io.m	/^:- pred io__write_many(list(io__poly_type), io__state, io__state).$/;-;/io__write_many/
io__write_string	io.m	/^:- pred io__write_string(string, io__state, io__state).$/;-;/io__write_string/
io__write_strings	io.m	/^:- pred io__write_strings(list(string), io__state, io__state).$/;-;/io__write_strings/
io_error	lexer.m	/^	;	io_error(io__error)	% error reading from the input stream$/;-;/io_error/
is	int.m	/^:- pred is(T, T) is det.$/;-;/is/
is_mercury_punctuation_char	term_io.m	/^:- pred is_mercury_punctuation_char(character).$/;-;/is_mercury_punctuation_char/
is_mercury_source_char	term_io.m	/^:- pred is_mercury_source_char(character).$/;-;/is_mercury_source_char/
junk	lexer.m	/^	;	junk(character)		% junk character in the input stream$/;-;/junk/
lexer__escape_char	lexer.m	/^:- pred lexer__escape_char(character, character).$/;-;/lexer__escape_char/
lexer__finish_hex_escape	lexer.m	/^:- pred lexer__finish_hex_escape(character, list(character), list(character),$/;-;/lexer__finish_hex_escape/
lexer__finish_octal_escape	lexer.m	/^:- pred lexer__finish_octal_escape(character, list(character), list(character),$/;-;/lexer__finish_octal_escape/
lexer__finish_quoted_name	lexer.m	/^:- pred lexer__finish_quoted_name(character, list(character), token).$/;-;/lexer__finish_quoted_name/
lexer__get_binary	lexer.m	/^:- pred lexer__get_binary(token, io__state, io__state).$/;-;/lexer__get_binary/
lexer__get_binary_2	lexer.m	/^:- pred lexer__get_binary_2(list(character), token, io__state, io__state).$/;-;/lexer__get_binary_2/
lexer__get_char_code	lexer.m	/^:- pred lexer__get_char_code(token, io__state, io__state).$/;-;/lexer__get_char_code/
lexer__get_comment	lexer.m	/^:- pred lexer__get_comment(token, io__state, io__state).$/;-;/lexer__get_comment/
lexer__get_comment_2	lexer.m	/^:- pred lexer__get_comment_2(token, io__state, io__state).$/;-;/lexer__get_comment_2/
lexer__get_context	lexer.m	/^:- pred lexer__get_context(token_context, io__state, io__state).$/;-;/lexer__get_context/
lexer__get_dot	lexer.m	/^:- pred lexer__get_dot(token, io__state, io__state).$/;-;/lexer__get_dot/
lexer__get_float_decimals	lexer.m	/^:- pred lexer__get_float_decimals(list(character), token, io__state, io__state).$/;-;/lexer__get_float_decimals/
lexer__get_float_exponent	lexer.m	/^:- pred lexer__get_float_exponent(list(character), token, io__state, io__state).$/;-;/lexer__get_float_exponent/
lexer__get_float_exponent_2	lexer.m	/^:- pred lexer__get_float_exponent_2(list(character), token,$/;-;/lexer__get_float_exponent_2/
lexer__get_float_exponent_3	lexer.m	/^:- pred lexer__get_float_exponent_3(list(character), token,$/;-;/lexer__get_float_exponent_3/
lexer__get_graphic	lexer.m	/^:- pred lexer__get_graphic(list(character), token, io__state, io__state).$/;-;/lexer__get_graphic/
lexer__get_hex	lexer.m	/^:- pred lexer__get_hex(token, io__state, io__state).$/;-;/lexer__get_hex/
lexer__get_hex_2	lexer.m	/^:- pred lexer__get_hex_2(list(character), token, io__state, io__state).$/;-;/lexer__get_hex_2/
lexer__get_hex_escape	lexer.m	/^:- pred lexer__get_hex_escape(character, list(character), list(character),$/;-;/lexer__get_hex_escape/
lexer__get_int_dot	lexer.m	/^:- pred lexer__get_int_dot(list(character), token, io__state, io__state).$/;-;/lexer__get_int_dot/
lexer__get_name	lexer.m	/^:- pred lexer__get_name(list(character), token, io__state, io__state).$/;-;/lexer__get_name/
lexer__get_number	lexer.m	/^:- pred lexer__get_number(list(character), token, io__state, io__state).$/;-;/lexer__get_number/
lexer__get_octal	lexer.m	/^:- pred lexer__get_octal(token, io__state, io__state).$/;-;/lexer__get_octal/
lexer__get_octal_2	lexer.m	/^:- pred lexer__get_octal_2(list(character), token, io__state, io__state).$/;-;/lexer__get_octal_2/
lexer__get_octal_escape	lexer.m	/^:- pred lexer__get_octal_escape(character, list(character), list(character),$/;-;/lexer__get_octal_escape/
lexer__get_quoted_name	lexer.m	/^:- pred lexer__get_quoted_name(character, list(character), token,$/;-;/lexer__get_quoted_name/
lexer__get_quoted_name_escape	lexer.m	/^:- pred lexer__get_quoted_name_escape(character, list(character), token,$/;-;/lexer__get_quoted_name_escape/
lexer__get_quoted_name_quote	lexer.m	/^:- pred lexer__get_quoted_name_quote(character, list(character), token,$/;-;/lexer__get_quoted_name_quote/
lexer__get_slash	lexer.m	/^:- pred lexer__get_slash(token, io__state, io__state).$/;-;/lexer__get_slash/
lexer__get_source_line_number	lexer.m	/^:- pred lexer__get_source_line_number(list(char), token, io__state, io__state).$/;-;/lexer__get_source_line_number/
lexer__get_token	lexer.m	/^:- pred lexer__get_token(token, token_context, io__state, io__state).$/;-;/lexer__get_token/
lexer__get_token_1	lexer.m	/^:- pred lexer__get_token_1(token, io__state, io__state).$/;-;/lexer__get_token_1/
lexer__get_token_2	lexer.m	/^:- pred lexer__get_token_2(token, io__state, io__state).$/;-;/lexer__get_token_2/
lexer__get_token_list	lexer.m	/^:- pred lexer__get_token_list(token_list, io__state, io__state).$/;-;/lexer__get_token_list/
lexer__get_variable	lexer.m	/^:- pred lexer__get_variable(list(character), token, io__state, io__state).$/;-;/lexer__get_variable/
lexer__get_zero	lexer.m	/^:- pred lexer__get_zero(token, io__state, io__state).$/;-;/lexer__get_zero/
lexer__graphic_token_char	lexer.m	/^:- pred lexer__graphic_token_char(character).$/;-;/lexer__graphic_token_char/
lexer__rev_char_list_to_float	lexer.m	/^:- pred lexer__rev_char_list_to_float(list(character), token).$/;-;/lexer__rev_char_list_to_float/
lexer__rev_char_list_to_int	lexer.m	/^:- pred lexer__rev_char_list_to_int(list(character), int, token).$/;-;/lexer__rev_char_list_to_int/
lexer__rev_char_list_to_string	lexer.m	/^:- pred lexer__rev_char_list_to_string(list(character), string).$/;-;/lexer__rev_char_list_to_string/
lexer__skip_to_eol	lexer.m	/^:- pred lexer__skip_to_eol(token, io__state, io__state).$/;-;/lexer__skip_to_eol/
lexer__special_token	lexer.m	/^:- pred lexer__special_token(character, token).$/;-;/lexer__special_token/
lexer__token_to_string	lexer.m	/^:- pred lexer__token_to_string(token, string).$/;-;/lexer__token_to_string/
lexer__whitespace_after_dot	lexer.m	/^:- pred lexer__whitespace_after_dot(character).$/;-;/lexer__whitespace_after_dot/
library__version	library.m	/^:- pred library__version(string::out) is det.$/;-;/library__version/
list	mercury_builtin.m	/^:- type list(T) ---> [] ; [T | list(T)].$/;-;/list/
list__all_same	list.m	/^:- pred list__all_same(list(T)).$/;-;/list__all_same/
list__all_same_2	list.m	/^:- pred list__all_same_2(T, list(T)).$/;-;/list__all_same_2/
list__append	list.m	/^:- pred list__append(list(T), list(T), list(T)).$/;-;/list__append/
list__apply	list.m	/^:- pred list__apply(list(pred(T)), list(T)).$/;-;/list__apply/
list__chunk	list.m	/^:- pred list__chunk(list(T), int, list(list(T))).$/;-;/list__chunk/
list__chunk_2	list.m	/^:- pred list__chunk_2(list(T), int, list(T), int, list(list(T))).$/;-;/list__chunk_2/
list__condense	list.m	/^:- pred list__condense(list(list(T)), list(T)).$/;-;/list__condense/
list__delete	list.m	/^:- pred list__delete(list(T), T, list(T)).$/;-;/list__delete/
list__delete_all	list.m	/^:- pred list__delete_all(list(T), T, list(T)).$/;-;/list__delete_all/
list__delete_elems	list.m	/^:- pred list__delete_elems(list(T), list(T), list(T)).$/;-;/list__delete_elems/
list__delete_first	list.m	/^:- pred list__delete_first(list(T), T, list(T)).$/;-;/list__delete_first/
list__drop	list.m	/^:- pred list__drop(int, list(T), list(T)).$/;-;/list__drop/
list__duplicate	list.m	/^:- pred list__duplicate(int, T, list(T)).$/;-;/list__duplicate/
list__filter	list.m	/^:- pred list__filter(pred(X), list(X), list(X)).$/;-;/list__filter/
list__filter_map	list.m	/^:- pred list__filter_map(pred(X, Y), list(X), list(Y)).$/;-;/list__filter_map/
list__foldl	list.m	/^:- pred list__foldl(pred(X, Y, Y), list(X), Y, Y).$/;-;/list__foldl/
list__foldr	list.m	/^:- pred list__foldr(pred(X, Y, Y), list(X), Y, Y).$/;-;/list__foldr/
list__hosort	list.m	/^:- pred list__hosort(pred(X, X, comparison_result), int, list(X), list(X), list(X)).$/;-;/list__hosort/
list__index0	list.m	/^:- pred list__index0(list(T)::in, int::in, T::out) is semidet.$/;-;/list__index0/
list__index0_det	list.m	/^:- pred list__index0_det(list(T)::in, int::in, T::out) is det.$/;-;/list__index0_det/
list__index1	list.m	/^:- pred list__index1(list(T)::in, int::in, T::out) is semidet.$/;-;/list__index1/
list__index1_det	list.m	/^:- pred list__index1_det(list(T)::in, int::in, T::out) is det.$/;-;/list__index1_det/
list__insert	list.m	/^:- pred list__insert(T, list(T), list(T)).$/;-;/list__insert/
list__last	list.m	/^:- pred list__last(list(T), T).$/;-;/list__last/
list__length	list.m	/^:- pred list__length(list(_T), int).$/;-;/list__length/
list__length_2	list.m	/^:- pred list__length_2(list(T), int, int).$/;-;/list__length_2/
list__map	list.m	/^:- pred list__map(pred(X, Y), list(X), list(Y)).$/;-;/list__map/
list__member	list.m	/^:- pred list__member(T, list(T)).$/;-;/list__member/
list__merge	list.m	/^:- pred list__merge(list(T), list(T), list(T)).$/;-;/list__merge/
list__merge_and_remove_dups	list.m	/^:- pred list__merge_and_remove_dups(list(T), list(T), list(T)).$/;-;/list__merge_and_remove_dups/
list__merge_sort	list.m	/^:- pred list__merge_sort(list(T), list(T)).$/;-;/list__merge_sort/
list__nth_member_search	list.m	/^:- pred list__nth_member_search(list(T), T, int).$/;-;/list__nth_member_search/
list__partition	list.m	/^:- pred list__partition(list(T), T, list(T), list(T)).$/;-;/list__partition/
list__perm	list.m	/^:- pred	list__perm(list(T), list(T)).$/;-;/list__perm/
list__qsort	list.m	/^:- pred list__qsort(list(T), list(T), list(T)).$/;-;/list__qsort/
list__remove_adjacent_dups	list.m	/^:- pred list__remove_adjacent_dups(list(T), list(T)).$/;-;/list__remove_adjacent_dups/
list__remove_adjacent_dups_2	list.m	/^:- pred list__remove_adjacent_dups_2(list(T), T, list(T)).$/;-;/list__remove_adjacent_dups_2/
list__remove_dups	list.m	/^:- pred list__remove_dups(list(T), list(T)).$/;-;/list__remove_dups/
list__remove_dups_2	list.m	/^:- pred list__remove_dups_2(list(T), bintree_set(T), list(T)).$/;-;/list__remove_dups_2/
list__remove_suffix	list.m	/^:- pred list__remove_suffix(list(T), list(T), list(T)).$/;-;/list__remove_suffix/
list__replace	list.m	/^:- pred list__replace(list(T), T, T, list(T)).$/;-;/list__replace/
list__replace_all	list.m	/^:- pred list__replace_all(list(T), T, T, list(T)).$/;-;/list__replace_all/
list__replace_first	list.m	/^:- pred list__replace_first(list(T), T, T, list(T)).$/;-;/list__replace_first/
list__reverse	list.m	/^:- pred list__reverse(list(T), list(T)).$/;-;/list__reverse/
list__reverse_2	list.m	/^:- pred list__reverse_2(list(T), list(T), list(T)).$/;-;/list__reverse_2/
list__same_length	list.m	/^:- pred list__same_length(list(T1), list(T2)).$/;-;/list__same_length/
list__sort	list.m	/^:- pred list__sort(list(T), list(T)).$/;-;/list__sort/
list__sort_and_remove_dups	list.m	/^:- pred list__sort_and_remove_dups(list(T), list(T)).$/;-;/list__sort_and_remove_dups/
list__split3	list.m	/^:- pred list__split3(list(T), list(T), list(T), list(T)).$/;-;/list__split3/
list__split_list	list.m	/^:- pred list__split_list(int, list(T), list(T), list(T)).$/;-;/list__split_list/
list__sublist	list.m	/^:- pred list__sublist(list(T), list(T)).$/;-;/list__sublist/
list__take	list.m	/^:- pred list__take(int, list(T), list(T)).$/;-;/list__take/
list__zip	list.m	/^:- pred list__zip(list(T), list(T), list(T)).$/;-;/list__zip/
list__zip2	list.m	/^:- pred list__zip2(list(T), list(T), list(T)).$/;-;/list__zip2/
list_skel	list.m	/^:- inst list_skel(I) = bound(([] ; [I | list_skel(I)])).$/;-;/list_skel/
list_skel_in	list.m	/^:- mode list_skel_in(I) :: list_skel(I) -> list_skel(I).$/;-;/list_skel_in/
list_skel_out	list.m	/^:- mode list_skel_out :: list_skel -> ground.$/;-;/list_skel_out/
list_skel_output	list.m	/^:- mode list_skel_output :: list_skel_out.$/;-;/list_skel_output/
map	map.m	/^:- type map(K,V)	==	tree234(K,V).$/;-;/map/
map__apply_to_list	map.m	/^:- pred map__apply_to_list(list(K), map(K, V), list(V)).$/;-;/map__apply_to_list/
map__contains	map.m	/^:- pred map__contains(map(K,_V), K).$/;-;/map__contains/
map__count	map.m	/^:- pred map__count(map(K, V), int).$/;-;/map__count/
map__delete	map.m	/^:- pred map__delete(map(K,V), K, map(K,V)).$/;-;/map__delete/
map__delete_list	map.m	/^:- pred map__delete_list(map(K,V), list(K), map(K,V)).$/;-;/map__delete_list/
map__det_insert	map.m	/^:- pred map__det_insert(map(K,V), K, V, map(K,V)).$/;-;/map__det_insert/
map__det_insert_from_corresponding_lists	map.m	/^:- pred map__det_insert_from_corresponding_lists(map(K,V), list(K),$/;-;/map__det_insert_from_corresponding_lists/
map__det_remove	map.m	/^:- pred map__det_remove(map(K,V), K, V, map(K,V)).$/;-;/map__det_remove/
map__det_update	map.m	/^:- pred map__det_update(map(K,V), K, V, map(K,V)).$/;-;/map__det_update/
map__from_assoc_list	map.m	/^:- pred map__from_assoc_list(assoc_list(K,V), map(K,V)).$/;-;/map__from_assoc_list/
map__from_corresponding_lists	map.m	/^:- pred map__from_corresponding_lists(list(K), list(V), map(K, V)).$/;-;/map__from_corresponding_lists/
map__from_sorted_assoc_list	map.m	/^:- pred map__from_sorted_assoc_list(assoc_list(K,V), map(K,V)).$/;-;/map__from_sorted_assoc_list/
map__init	map.m	/^:- pred map__init(map(_,_)).$/;-;/map__init/
map__insert	map.m	/^:- pred map__insert(map(K,V), K, V, map(K,V)).$/;-;/map__insert/
map__inverse_search	map.m	/^:- pred map__inverse_search(map(K,V), V, K).$/;-;/map__inverse_search/
map__is_empty	map.m	/^:- pred map__is_empty(map(_,_)).$/;-;/map__is_empty/
map__keys	map.m	/^:- pred map__keys(map(K, _V), list(K)).$/;-;/map__keys/
map__lookup	map.m	/^:- pred map__lookup(map(K,V), K, V).$/;-;/map__lookup/
map__member	map.m	/^:- pred map__member(map(K,V), K, V).$/;-;/map__member/
map__merge	map.m	/^:- pred map__merge(map(K, V), map(K, V), map(K, V)).$/;-;/map__merge/
map__optimize	map.m	/^:- pred map__optimize(map(K, V), map(K, V)).$/;-;/map__optimize/
map__overlay	map.m	/^:- pred map__overlay(map(K,V), map(K,V), map(K,V)).$/;-;/map__overlay/
map__overlay_2	map.m	/^:- pred map__overlay_2(assoc_list(K,V), map(K,V), map(K,V)).$/;-;/map__overlay_2/
map__remove	map.m	/^:- pred map__remove(map(K,V), K, V, map(K,V)).$/;-;/map__remove/
map__remove_smallest	map.m	/^:- pred map__remove_smallest(map(K, V), K, V, map(K, V)).$/;-;/map__remove_smallest/
map__search	map.m	/^:- pred map__search(map(K,V), K, V).$/;-;/map__search/
map__select	map.m	/^:- pred map__select(map(K,V), set(K), map(K,V)).$/;-;/map__select/
map__select_2	map.m	/^:- pred map__select_2(list(K), map(K,V), map(K,V), map(K,V)).$/;-;/map__select_2/
map__set	map.m	/^:- pred map__set(map(K,V), K, V, map(K,V)).$/;-;/map__set/
map__to_assoc_list	map.m	/^:- pred map__to_assoc_list(map(K,V), assoc_list(K,V)).$/;-;/map__to_assoc_list/
map__update	map.m	/^:- pred map__update(map(K,V), K, V, map(K,V)).$/;-;/map__update/
map__values	map.m	/^:- pred map__values(map(_K, V), list(V)).$/;-;/map__values/
math__acos	math.m	/^:- pred math__acos(float, float).$/;-;/math__acos/
math__asin	math.m	/^:- pred math__asin(float, float).$/;-;/math__asin/
math__atan	math.m	/^:- pred math__atan(float, float).$/;-;/math__atan/
math__atan2	math.m	/^:- pred math__atan2(float, float, float).$/;-;/math__atan2/
math__ceiling	math.m	/^:- pred math__ceiling(float, float).$/;-;/math__ceiling/
math__cos	math.m	/^:- pred math__cos(float, float).$/;-;/math__cos/
math__cosh	math.m	/^:- pred math__cosh(float, float).$/;-;/math__cosh/
math__e	math.m	/^:- pred math__e(float).$/;-;/math__e/
math__exp	math.m	/^:- pred math__exp(float, float).$/;-;/math__exp/
math__floor	math.m	/^:- pred math__floor(float, float).$/;-;/math__floor/
math__ln	math.m	/^:- pred math__ln(float, float).$/;-;/math__ln/
math__log	math.m	/^:- pred math__log(float, float, float).$/;-;/math__log/
math__log10	math.m	/^:- pred math__log10(float, float).$/;-;/math__log10/
math__log2	math.m	/^:- pred math__log2(float, float).$/;-;/math__log2/
math__pi	math.m	/^:- pred math__pi(float).$/;-;/math__pi/
math__pow	math.m	/^:- pred math__pow(float, float, float).$/;-;/math__pow/
math__round	math.m	/^:- pred math__round(float, float).$/;-;/math__round/
math__sin	math.m	/^:- pred math__sin(float, float).$/;-;/math__sin/
math__sinh	math.m	/^:- pred math__sinh(float, float).$/;-;/math__sinh/
math__sqrt	math.m	/^:- pred math__sqrt(float, float).$/;-;/math__sqrt/
math__tan	math.m	/^:- pred math__tan(float, float).$/;-;/math__tan/
math__tanh	math.m	/^:- pred math__tanh(float, float).$/;-;/math__tanh/
math__truncate	math.m	/^:- pred math__truncate(float, float).$/;-;/math__truncate/
maybe	std_util.m	/^:- type maybe(T) ---> yes(T) ; no.$/;-;/maybe/
maybe_option_table	getopt.m	/^:- type maybe_option_table(OptionType)$/;-;/maybe_option_table/
maybe_pred	std_util.m	/^:- pred maybe_pred(pred(T1, T2), T1, maybe(T2)).$/;-;/maybe_pred/
mdi	mercury_builtin.m	/^:- mode mdi :: mostly_unique -> mostly_clobbered.$/;-;/mdi/
mercury__escape_char	term_io.m	/^:- pred mercury__escape_char(character, string).$/;-;/mercury__escape_char/
mercury_quote_special_char	term_io.m	/^:- pred mercury_quote_special_char(character, character).$/;-;/mercury_quote_special_char/
mui	mercury_builtin.m	/^:- mode mui :: mostly_unique -> mostly_unique.$/;-;/mui/
multi_map	multi_map.m	/^:- type multi_map(Key, Data)	==	map(Key, list(Data)).$/;-;/multi_map/
multi_map__all_count	multi_map.m	/^:- pred multi_map__all_count(multi_map(K, V), int).$/;-;/multi_map__all_count/
multi_map__apply_to_list	multi_map.m	/^:- pred multi_map__apply_to_list(list(K), multi_map(K, V), list(V)).$/;-;/multi_map__apply_to_list/
multi_map__assoc_list_member	multi_map.m	/^:- pred multi_map__assoc_list_member(Value, assoc_list(Key, list(Value)), Key).$/;-;/multi_map__assoc_list_member/
multi_map__assoc_list_merge	multi_map.m	/^:- pred multi_map__assoc_list_merge(assoc_list(K, list(V)), $/;-;/multi_map__assoc_list_merge/
multi_map__contains	multi_map.m	/^:- pred multi_map__contains(multi_map(K,_V), K).$/;-;/multi_map__contains/
multi_map__count	multi_map.m	/^:- pred multi_map__count(multi_map(K, V), int).$/;-;/multi_map__count/
multi_map__count_list	multi_map.m	/^:- pred multi_map__count_list(list(A), int, int).$/;-;/multi_map__count_list/
multi_map__delete	multi_map.m	/^:- pred multi_map__delete(multi_map(K,V), K, multi_map(K,V)).$/;-;/multi_map__delete/
multi_map__det_insert	multi_map.m	/^:- pred multi_map__det_insert(multi_map(K,V), K, V, multi_map(K,V)).$/;-;/multi_map__det_insert/
multi_map__det_remove	multi_map.m	/^:- pred multi_map__det_remove(multi_map(K,V), K, list(V), multi_map(K,V)).$/;-;/multi_map__det_remove/
multi_map__det_replace	multi_map.m	/^:- pred multi_map__det_replace(multi_map(K,V), K, list(V), multi_map(K,V)).$/;-;/multi_map__det_replace/
multi_map__det_update	multi_map.m	/^:- pred multi_map__det_update(multi_map(K,V), K, V, multi_map(K,V)).$/;-;/multi_map__det_update/
multi_map__from_assoc_list	multi_map.m	/^:- pred multi_map__from_assoc_list(assoc_list(K,list(V)), multi_map(K,V)).$/;-;/multi_map__from_assoc_list/
multi_map__from_corresponding_list_lists	multi_map.m	/^:- pred multi_map__from_corresponding_list_lists(list(K), list(list(V)),$/;-;/multi_map__from_corresponding_list_lists/
multi_map__from_corresponding_lists	multi_map.m	/^:- pred multi_map__from_corresponding_lists(list(K), list(V), multi_map(K, V)).$/;-;/multi_map__from_corresponding_lists/
multi_map__from_sorted_assoc_list	multi_map.m	/^:- pred multi_map__from_sorted_assoc_list(assoc_list(K, list(V)), $/;-;/multi_map__from_sorted_assoc_list/
multi_map__init	multi_map.m	/^:- pred multi_map__init(multi_map(_,_)).$/;-;/multi_map__init/
multi_map__insert	multi_map.m	/^:- pred multi_map__insert(multi_map(K,V), K, V, multi_map(K,V)).$/;-;/multi_map__insert/
multi_map__inverse_search	multi_map.m	/^:- pred multi_map__inverse_search(multi_map(K,V), V, K).$/;-;/multi_map__inverse_search/
multi_map__is_empty	multi_map.m	/^:- pred multi_map__is_empty(multi_map(_,_)).$/;-;/multi_map__is_empty/
multi_map__keys	multi_map.m	/^:- pred multi_map__keys(multi_map(K, _V), list(K)).$/;-;/multi_map__keys/
multi_map__lookup	multi_map.m	/^:- pred multi_map__lookup(multi_map(K,V), K, list(V)).$/;-;/multi_map__lookup/
multi_map__member	multi_map.m	/^:- pred multi_map__member(multi_map(K,V), K, V).$/;-;/multi_map__member/
multi_map__merge	multi_map.m	/^:- pred multi_map__merge(multi_map(K, V), multi_map(K, V), multi_map(K, V)).$/;-;/multi_map__merge/
multi_map__nondet_lookup	multi_map.m	/^:- pred multi_map__nondet_lookup(multi_map(K,V), K, V).$/;-;/multi_map__nondet_lookup/
multi_map__nondet_search	multi_map.m	/^:- pred multi_map__nondet_search(multi_map(K,V), K, V).$/;-;/multi_map__nondet_search/
multi_map__optimize	multi_map.m	/^:- pred multi_map__optimize(multi_map(K, V), multi_map(K, V)).$/;-;/multi_map__optimize/
multi_map__remove	multi_map.m	/^:- pred multi_map__remove(multi_map(K,V), K, list(V), multi_map(K,V)).$/;-;/multi_map__remove/
multi_map__remove_smallest	multi_map.m	/^:- pred multi_map__remove_smallest(multi_map(K, V), K, list(V),$/;-;/multi_map__remove_smallest/
multi_map__search	multi_map.m	/^:- pred multi_map__search(multi_map(K,V), K, list(V)).$/;-;/multi_map__search/
multi_map__select	multi_map.m	/^:- pred multi_map__select(multi_map(K,V), set(K), multi_map(K,V)).$/;-;/multi_map__select/
multi_map__set	multi_map.m	/^:- pred multi_map__set(multi_map(K,V), K, V, multi_map(K,V)).$/;-;/multi_map__set/
multi_map__to_assoc_list	multi_map.m	/^:- pred multi_map__to_assoc_list(multi_map(K,V), assoc_list(K,list(V))).$/;-;/multi_map__to_assoc_list/
multi_map__update	multi_map.m	/^:- pred multi_map__update(multi_map(K,V), K, V, multi_map(K,V)).$/;-;/multi_map__update/
multi_map__values	multi_map.m	/^:- pred multi_map__values(multi_map(_K, V), list(V)).$/;-;/multi_map__values/
muo	mercury_builtin.m	/^:- mode muo :: free -> mostly_unique.$/;-;/muo/
name	lexer.m	/^	--->	name(string)$/;-;/name/
no	bool.m	/^:- type bool ---> yes ; no.$/;-;/no/
node	graph.m	/^:- type node(N)			==	int.$/;-;/node/
node_id	store.m	/^:- type node_id(_T)	==	int.$/;-;/node_id/
non_empty_list	list.m	/^:- inst non_empty_list = bound([ground | ground]).$/;-;/non_empty_list/
none	getopt.m	/^	--->	none$/;-;/none/
ok	getopt.m	/^	--->	ok(option_table(OptionType))$/;-;/ok/
op	term_io.m	/^:- type op_details ---> op(int, op_type, string).$/;-;/op/
op_details	term_io.m	/^:- type op_details ---> op(int, op_type, string).$/;-;/op_details/
op_type	term_io.m	/^:- type op_type ---> fx; fy; xf; yf; xfx; xfy; yfx; fxx; fxy; fyx; fyy.$/;-;/op_type/
open				lexer.m	/^	;	open			% '('$/;-;/open			/
open_ct				lexer.m	/^	;	open_ct			% '(' without any preceding whitespace$/;-;/open_ct			/
open_curly			lexer.m	/^	;	open_curly		% '}'$/;-;/open_curly		/
open_list			lexer.m	/^	;	open_list		% '['$/;-;/open_list		/
ops__assoc	ops.m	/^:- type ops__assoc$/;-;/ops__assoc/
ops__category	ops.m	/^:- type ops__category ---> before ; after.$/;-;/ops__category/
ops__class	ops.m	/^:- type ops__class$/;-;/ops__class/
ops__init_op_table	ops.m	/^:- pred ops__init_op_table(ops__table).$/;-;/ops__init_op_table/
ops__lookup_binary_prefix_op	ops.m	/^:- pred ops__lookup_binary_prefix_op(ops__table, string,$/;-;/ops__lookup_binary_prefix_op/
ops__lookup_infix_op	ops.m	/^:- pred ops__lookup_infix_op(ops__table, string, int, ops__assoc, ops__assoc).$/;-;/ops__lookup_infix_op/
ops__lookup_op	ops.m	/^:- pred ops__lookup_op(ops__table, string).$/;-;/ops__lookup_op/
ops__lookup_postfix_op	ops.m	/^:- pred ops__lookup_postfix_op(ops__table, string, int, ops__assoc).$/;-;/ops__lookup_postfix_op/
ops__lookup_prefix_op	ops.m	/^:- pred ops__lookup_prefix_op(ops__table, string, int, ops__assoc).$/;-;/ops__lookup_prefix_op/
ops__op_specifier_to_class	ops.m	/^:- pred ops__op_specifier_to_class(ops__specifier, ops__class).$/;-;/ops__op_specifier_to_class/
ops__op_table	ops.m	/^:- pred ops__op_table(string, ops__category, ops__specifier, ops__priority).$/;-;/ops__op_table/
ops__priority	ops.m	/^:- type ops__priority == int.$/;-;/ops__priority/
ops__specifier	ops.m	/^:- type ops__specifier$/;-;/ops__specifier/
ops__table	ops.m	/^:- type ops__table ---> ops__table.	% XXX$/;-;/ops__table/
option_data	getopt.m	/^:- type option_data$/;-;/option_data/
option_ops	getopt.m	/^:- type option_ops(OptionType)$/;-;/option_ops/
option_table	getopt.m	/^:- type option_table(OptionType)$/;-;/option_table/
out	mercury_builtin.m	/^:- mode out :: (free -> ground).$/;-;/out/
out_list_skel	list.m	/^:- mode out_list_skel :: free -> list_skel.$/;-;/out_list_skel/
output	mercury_builtin.m	/^:- mode output :: (free -> ground).$/;-;/output/
output_list_skel	list.m	/^:- mode output_list_skel :: out_list_skel.$/;-;/output_list_skel/
pair	std_util.m	/^:- type pair(T1, T2)	--->	(T1 - T2).$/;-;/pair/
parse	parser.m	/^:- type parse(T)$/;-;/parse/
parser__add_var	parser.m	/^:- pred parser__add_var(string, var, parser__state, parser__state).$/;-;/parser__add_var/
parser__adjust_priority	parser.m	/^:- pred parser__adjust_priority(ops__assoc, int, int).$/;-;/parser__adjust_priority/
parser__check_for_bad_token	parser.m	/^:- pred parser__check_for_bad_token(token_list, string, int).$/;-;/parser__check_for_bad_token/
parser__check_for_errors	parser.m	/^:- pred parser__check_for_errors(parse(term), varset, token_list, token_list,$/;-;/parser__check_for_errors/
parser__check_priority	parser.m	/^:- pred parser__check_priority(ops__assoc, int, int).$/;-;/parser__check_priority/
parser__could_start_term	parser.m	/^:- pred parser__could_start_term(token, bool).$/;-;/parser__could_start_term/
parser__error	parser.m	/^:- pred parser__error(string, parse(T), parser__state, parser__state).$/;-;/parser__error/
parser__final_state	parser.m	/^:- pred parser__final_state(parser__state, varset, token_list).$/;-;/parser__final_state/
parser__get_ops_table	parser.m	/^:- pred parser__get_ops_table(ops__table, parser__state, parser__state).$/;-;/parser__get_ops_table/
parser__get_term_context	parser.m	/^:- pred parser__get_term_context(token_context, term__context,$/;-;/parser__get_term_context/
parser__get_token	parser.m	/^:- pred parser__get_token(token, parser__state, parser__state).$/;-;/parser__get_token/
parser__init_state	parser.m	/^:- pred parser__init_state(string, token_list, parser__state).$/;-;/parser__init_state/
parser__parse_arg	parser.m	/^:- pred parser__parse_arg(parse(term), parser__state, parser__state).$/;-;/parser__parse_arg/
parser__parse_args	parser.m	/^:- pred parser__parse_args(parse(list(term)), parser__state, parser__state).$/;-;/parser__parse_args/
parser__parse_left_term	parser.m	/^:- pred parser__parse_left_term(int, bool, int, parse(term),$/;-;/parser__parse_left_term/
parser__parse_list	parser.m	/^:- pred parser__parse_list(parse(term), parser__state, parser__state).$/;-;/parser__parse_list/
parser__parse_rest	parser.m	/^:- pred parser__parse_rest(int, bool, int, term, parse(term),$/;-;/parser__parse_rest/
parser__parse_simple_term	parser.m	/^:- pred parser__parse_simple_term(token, token_context, int, parse(term),$/;-;/parser__parse_simple_term/
parser__parse_simple_term_2	parser.m	/^:- pred parser__parse_simple_term_2(token, token_context, int, parse(term),$/;-;/parser__parse_simple_term_2/
parser__parse_term	parser.m	/^:- pred parser__parse_term(parse(term), parser__state, parser__state).$/;-;/parser__parse_term/
parser__parse_term_2	parser.m	/^:- pred parser__parse_term_2(int, bool, parse(term),$/;-;/parser__parse_term_2/
parser__parse_whole_term	parser.m	/^:- pred parser__parse_whole_term(parse(term), parser__state, parser__state).$/;-;/parser__parse_whole_term/
parser__peek_token	parser.m	/^:- pred parser__peek_token(token, parser__state, parser__state).$/;-;/parser__peek_token/
parser__read_term	parser.m	/^:- pred parser__read_term(read_term, io__state, io__state).$/;-;/parser__read_term/
parser__state	parser.m	/^:- type parser__state$/;-;/parser__state/
parser__unexpected	parser.m	/^:- pred parser__unexpected(string, parse(T), parser__state, parser__state).$/;-;/parser__unexpected/
parser__unexpected_tok	parser.m	/^:- pred parser__unexpected_tok(token, token_context, string, parse(T),$/;-;/parser__unexpected_tok/
parser__unget_token	parser.m	/^:- pred parser__unget_token(token, token_context, parser__state, parser__state).$/;-;/parser__unget_token/
partition_id	eqvclass.m	/^:- type partition_id	==	int.$/;-;/partition_id/
postfix	ops.m	/^	;	postfix(ops__assoc).$/;-;/postfix/
pqueue	pqueue.m	/^:- type pqueue(K, V)	--->	empty$/;-;/pqueue/
pqueue__assoc_list_to_pqueue	pqueue.m	/^:- pred pqueue__assoc_list_to_pqueue(assoc_list(K, V), pqueue(K, V)).$/;-;/pqueue__assoc_list_to_pqueue/
pqueue__init	pqueue.m	/^:- pred pqueue__init(pqueue(_K, _V)).$/;-;/pqueue__init/
pqueue__insert	pqueue.m	/^:- pred pqueue__insert(pqueue(K, V), K, V, pqueue(K, V)).$/;-;/pqueue__insert/
pqueue__insert_2	pqueue.m	/^:- pred pqueue__insert_2(K, V, pqueue(K, V), pqueue(K, V),$/;-;/pqueue__insert_2/
pqueue__remove	pqueue.m	/^:- pred pqueue__remove(pqueue(K, V), K, V, pqueue(K, V)).$/;-;/pqueue__remove/
pqueue__remove_2	pqueue.m	/^:- pred pqueue__remove_2(pqueue(K, V), pqueue(K, V), pqueue(K, V)).$/;-;/pqueue__remove_2/
pqueue__to_assoc_list	pqueue.m	/^:- pred pqueue__to_assoc_list(pqueue(K, V), assoc_list(K, V)).$/;-;/pqueue__to_assoc_list/
prefix	ops.m	/^	;	prefix(ops__assoc)$/;-;/prefix/
process_negated_bool_option	getopt.m	/^:- pred process_negated_bool_option(string, OptionType, option_ops(OptionType),$/;-;/process_negated_bool_option/
queue	queue.m	/^:- type queue(T) == pair(list(T)).$/;-;/queue/
queue__equal	queue.m	/^:- pred queue__equal(queue(T), queue(T)).$/;-;/queue__equal/
queue__first	queue.m	/^:- pred queue__first(queue(T), T).$/;-;/queue__first/
queue__get	queue.m	/^:- pred queue__get(queue(T), T, queue(T)).$/;-;/queue__get/
queue__get_2	queue.m	/^:- pred queue__get_2(list(T), list(T), T, list(T), list(T)).$/;-;/queue__get_2/
queue__init	queue.m	/^:- pred queue__init(queue(T)).$/;-;/queue__init/
queue__is_empty	queue.m	/^:- pred queue__is_empty(queue(T)).$/;-;/queue__is_empty/
queue__is_full	queue.m	/^:- pred queue__is_full(queue(T)).$/;-;/queue__is_full/
queue__length	queue.m	/^:- pred queue__length(queue(T), int).$/;-;/queue__length/
queue__list_to_queue	queue.m	/^:- pred queue__list_to_queue(list(T), queue(T)).$/;-;/queue__list_to_queue/
queue__put	queue.m	/^:- pred queue__put(queue(T), T, queue(T)).$/;-;/queue__put/
queue__put_list	queue.m	/^:- pred queue__put_list(queue(T), list(T), queue(T)).$/;-;/queue__put_list/
random__init	random.m	/^:- pred random__init(int, random__supply).$/;-;/random__init/
random__params	random.m	/^:- pred random__params(int, int, int).	% a, c, m$/;-;/random__params/
random__randmax	random.m	/^:- pred random__randmax(int, random__supply, random__supply).$/;-;/random__randmax/
random__random	random.m	/^:- pred random__random(int, random__supply, random__supply).$/;-;/random__random/
random__supply	random.m	/^:- type random__supply		==	int.	% I(j)$/;-;/random__supply/
random__test	random.m	/^:- pred random__test(int, int, list(int), int).$/;-;/random__test/
random__test_2	random.m	/^:- pred random__test_2(int, list(int), random__supply, random__supply).$/;-;/random__test_2/
rbtree	rbtree.m	/^:- type rbtree(K,V)	 --->	empty$/;-;/rbtree/
rbtree__assoc_list_to_rbtree	rbtree.m	/^:- pred rbtree__assoc_list_to_rbtree(assoc_list(K, V), rbtree(K, V)).$/;-;/rbtree__assoc_list_to_rbtree/
rbtree__count	rbtree.m	/^:- pred rbtree__count(rbtree(K, V), int).$/;-;/rbtree__count/
rbtree__delete	rbtree.m	/^:- pred rbtree__delete(rbtree(K, V), K, rbtree(K, V)).$/;-;/rbtree__delete/
rbtree__get_tree_max	rbtree.m	/^:- pred rbtree__get_tree_max(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__get_tree_max/
rbtree__get_tree_min	rbtree.m	/^:- pred rbtree__get_tree_min(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__get_tree_min/
rbtree__init	rbtree.m	/^:- pred rbtree__init(rbtree(K, V)).$/;-;/rbtree__init/
rbtree__insert	rbtree.m	/^:- pred rbtree__insert(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__insert/
rbtree__insert_2	rbtree.m	/^:- pred rbtree__insert_2(rbtree(K, V), K, V, rbtree(K, V)). $/;-;/rbtree__insert_2/
rbtree__insert_duplicate	rbtree.m	/^:- pred rbtree__insert_duplicate(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__insert_duplicate/
rbtree__insert_duplicate_2	rbtree.m	/^:- pred rbtree__insert_duplicate_2(rbtree(K, V), K, V, rbtree(K, V)). $/;-;/rbtree__insert_duplicate_2/
rbtree__keys	rbtree.m	/^:- pred rbtree__keys(rbtree(K, V), list(K)).$/;-;/rbtree__keys/
rbtree__lookup	rbtree.m	/^:- pred rbtree__lookup(rbtree(K, V), K, V).$/;-;/rbtree__lookup/
rbtree__rbtree_to_assoc_list	rbtree.m	/^:- pred rbtree__rbtree_to_assoc_list(rbtree(K, V), assoc_list(K, V)).$/;-;/rbtree__rbtree_to_assoc_list/
rbtree__remove	rbtree.m	/^:- pred rbtree__remove(rbtree(K, V), K, rbtree(K, V)).$/;-;/rbtree__remove/
rbtree__search	rbtree.m	/^:- pred rbtree__search(rbtree(K, V), K, V).$/;-;/rbtree__search/
rbtree__set	rbtree.m	/^:- pred rbtree__set(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__set/
rbtree__set_2	rbtree.m	/^:- pred rbtree__set_2(rbtree(K, V), K, V, rbtree(K, V)). $/;-;/rbtree__set_2/
rbtree__update	rbtree.m	/^:- pred rbtree__update(rbtree(K, V), K, V, rbtree(K, V)).$/;-;/rbtree__update/
rbtree__values	rbtree.m	/^:- pred rbtree__values(rbtree(K, V), list(V)).$/;-;/rbtree__values/
read_term	term_io.m	/^:- type read_term ---> eof ; error(string, int) ; term(varset, term).$/;-;/read_term/
red	rbtree.m	/^			;	red(K, V, rbtree(K,V), rbtree(K,V))$/;-;/red/
relation	relation.m	/^:- type relation(T) --->$/;-;/relation/
relation__add	relation.m	/^:- pred relation__add(relation(T), relation_key, relation_key, relation(T)).$/;-;/relation__add/
relation__add_assoc_list	relation.m	/^:- pred relation__add_assoc_list(relation(T),$/;-;/relation__add_assoc_list/
relation__add_element	relation.m	/^:- pred relation__add_element(relation(T), T, relation_key, relation(T)).$/;-;/relation__add_element/
relation__append_to	relation.m	/^:- pred relation__append_to(relation_key, list(relation_key),$/;-;/relation__append_to/
relation__atsort	relation.m	/^:- pred relation__atsort(relation(T), list(set(T))).$/;-;/relation__atsort/
relation__atsort_2	relation.m	/^:- pred relation__atsort_2(list(relation_key), relation(T),$/;-;/relation__atsort_2/
relation__c_dfs	relation.m	/^:- pred relation__c_dfs(relation(T), list(relation_key), set(relation_key),$/;-;/relation__c_dfs/
relation__c_dfs_2	relation.m	/^:- pred relation__c_dfs_2(relation(T), relation_key, set(relation_key),$/;-;/relation__c_dfs_2/
relation__check_tsort	relation.m	/^:- pred relation__check_tsort(relation(T), set(relation_key),$/;-;/relation__check_tsort/
relation__cliques	relation.m	/^:- pred relation__cliques(relation(T), set(set(relation_key))).$/;-;/relation__cliques/
relation__cliques_2	relation.m	/^:- pred relation__cliques_2(list(relation_key), relation(T),$/;-;/relation__cliques_2/
relation__components	relation.m	/^:- pred relation__components(relation(T), set(set(relation_key))).$/;-;/relation__components/
relation__components_2	relation.m	/^:- pred relation__components_2(relation(T), list(relation_key),$/;-;/relation__components_2/
relation__detect_fake_reflexives	relation.m	/^:- pred relation__detect_fake_reflexives(relation(T), relation(T),$/;-;/relation__detect_fake_reflexives/
relation__dfs	relation.m	/^:- pred relation__dfs(relation(T), relation_key, list(relation_key)).$/;-;/relation__dfs/
relation__dfs_2	relation.m	/^:- pred relation__dfs_2(list(relation_key), relation(T),$/;-;/relation__dfs_2/
relation__dfs_3	relation.m	/^:- pred relation__dfs_3(list(relation_key), relation(T),$/;-;/relation__dfs_3/
relation__dfsrev	relation.m	/^:- pred relation__dfsrev(relation(T), relation_key, list(relation_key)).$/;-;/relation__dfsrev/
relation__domain	relation.m	/^:- pred relation__domain(relation(T), set(T)).$/;-;/relation__domain/
relation__domain_sorted_list	relation.m	/^:- pred relation__domain_sorted_list(relation(T), list(relation_key)).$/;-;/relation__domain_sorted_list/
relation__init	relation.m	/^:- pred relation__init(relation(T)).$/;-;/relation__init/
relation__inverse	relation.m	/^:- pred relation__inverse(relation(T), relation(T)).$/;-;/relation__inverse/
relation__is_dag	relation.m	/^:- pred relation__is_dag(relation(T)).$/;-;/relation__is_dag/
relation__is_dag_2	relation.m	/^:- pred relation__is_dag_2(list(relation_key), relation(T),$/;-;/relation__is_dag_2/
relation__is_dag_3	relation.m	/^:- pred relation__is_dag_3(list(relation_key), relation(T),$/;-;/relation__is_dag_3/
relation__lookup	relation.m	/^:- pred relation__lookup(relation(T), relation_key, relation_key).$/;-;/relation__lookup/
relation__lookup_element	relation.m	/^:- pred relation__lookup_element(relation(T), T, relation_key).$/;-;/relation__lookup_element/
relation__lookup_from	relation.m	/^:- pred relation__lookup_from(relation(T), relation_key, set(relation_key)).$/;-;/relation__lookup_from/
relation__lookup_key	relation.m	/^:- pred relation__lookup_key(relation(T), relation_key, T).$/;-;/relation__lookup_key/
relation__lookup_to	relation.m	/^:- pred relation__lookup_to(relation(T), relation_key, set(relation_key)).$/;-;/relation__lookup_to/
relation__make_clique_map	relation.m	/^:- pred relation__make_clique_map(relation(T), list(set(relation_key)),$/;-;/relation__make_clique_map/
relation__make_clique_map_2	relation.m	/^:- pred relation__make_clique_map_2(map(relation_key, relation_key),$/;-;/relation__make_clique_map_2/
relation__make_reduced_graph	relation.m	/^:- pred relation__make_reduced_graph(map(relation_key, relation_key), $/;-;/relation__make_reduced_graph/
relation__reachable_from	relation.m	/^:- pred relation__reachable_from(relation(T), set(relation_key),$/;-;/relation__reachable_from/
relation__reduced	relation.m	/^:- pred relation__reduced(relation(T), relation(set(T))).$/;-;/relation__reduced/
relation__remove	relation.m	/^:- pred relation__remove(relation(T), relation_key, relation_key, relation(T)).$/;-;/relation__remove/
relation__remove_assoc_list	relation.m	/^:- pred relation__remove_assoc_list(relation(T),$/;-;/relation__remove_assoc_list/
relation__reverse_lookup	relation.m	/^:- pred relation__reverse_lookup(relation(T), relation_key, relation_key).$/;-;/relation__reverse_lookup/
relation__rtc	relation.m	/^:- pred relation__rtc(relation(T), relation(T)).$/;-;/relation__rtc/
relation__rtc_2	relation.m	/^:- pred relation__rtc_2(int, relation(T), list(relation_key),$/;-;/relation__rtc_2/
relation__sc	relation.m	/^:- pred relation__sc(relation(T), relation(T)).$/;-;/relation__sc/
relation__search_element	relation.m	/^:- pred relation__search_element(relation(T), T, relation_key).$/;-;/relation__search_element/
relation__search_key	relation.m	/^:- pred relation__search_key(relation(T), relation_key, T).$/;-;/relation__search_key/
relation__tc	relation.m	/^:- pred relation__tc(relation(T), relation(T)).$/;-;/relation__tc/
relation__to_assoc_list	relation.m	/^:- pred relation__to_assoc_list(relation(T),$/;-;/relation__to_assoc_list/
relation__to_assoc_list_2	relation.m	/^:- pred relation__to_assoc_list_2(map(relation_key, set(relation_key)),$/;-;/relation__to_assoc_list_2/
relation__tsort	relation.m	/^:- pred relation__tsort(relation(T), list(T)).$/;-;/relation__tsort/
relation__tsort_2	relation.m	/^:- pred relation__tsort_2(relation(T), list(relation_key)).$/;-;/relation__tsort_2/
relation__tsort_3	relation.m	/^:- pred relation__tsort_3(relation(T), stack(relation_key), set(relation_key),$/;-;/relation__tsort_3/
relation_key	relation.m	/^:- type relation_key == int.$/;-;/relation_key/
report_stats	time.m	/^:- pred report_stats is det.$/;-;/report_stats/
require	require.m	/^:- pred	require(pred, string).$/;-;/require/
rtc	relation.m	/^:- pred rtc(int, relation(T), relation_key, int, stack(relation_key),$/;-;/rtc/
rtc_2	relation.m	/^:- pred rtc_2(int, relation(T), relation_key, int, list(relation_key),$/;-;/rtc_2/
rtc_3	relation.m	/^:- pred rtc_3(int, relation_key, map(relation_key, int), map(relation_key, int),$/;-;/rtc_3/
rtc__init_map	relation.m	/^:- pred rtc__init_map(map(relation_key, int), list(relation_key),$/;-;/rtc__init_map/
s	string.m	/^		;	s(string)$/;-;/s/
semidet_fail	std_util.m	/^:- pred semidet_fail is semidet.$/;-;/semidet_fail/
semidet_succeed	std_util.m	/^:- pred semidet_succeed is semidet.$/;-;/semidet_succeed/
set	set.m	/^:- type set(T)		  ==	  set_ordlist(T).$/;-;/set/
set__delete	set.m	/^:- pred set__delete(set(T), T, set(T)).$/;-;/set__delete/
set__delete_list	set.m	/^:- pred set__delete_list(set(T), list(T), set(T)).$/;-;/set__delete_list/
set__difference	set.m	/^:- pred set__difference(set(T), set(T), set(T)).$/;-;/set__difference/
set__empty	set.m	/^:- pred set__empty(set(T)).$/;-;/set__empty/
set__equal	set.m	/^:- pred set__equal(set(T), set(T)).$/;-;/set__equal/
set__init	set.m	/^:- pred set__init(set(T)).$/;-;/set__init/
set__insert	set.m	/^:- pred set__insert(set(T), T, set(T)).$/;-;/set__insert/
set__insert_list	set.m	/^:- pred set__insert_list(set(T), list(T), set(T)).$/;-;/set__insert_list/
set__intersect	set.m	/^:- pred set__intersect(set(T), set(T), set(T)).$/;-;/set__intersect/
set__is_member	set.m	/^:- pred set__is_member(T, set(T), bool).$/;-;/set__is_member/
set__list_to_set	set.m	/^:- pred set__list_to_set(list(T), set(T)).$/;-;/set__list_to_set/
set__member	set.m	/^:- pred set__member(T, set(T)).$/;-;/set__member/
set__power_intersect	set.m	/^:- pred set__power_intersect(set(set(T)), set(T)).$/;-;/set__power_intersect/
set__power_union	set.m	/^:- pred set__power_union(set(set(T)), set(T)).$/;-;/set__power_union/
set__remove	set.m	/^:- pred set__remove(set(T), T, set(T)).$/;-;/set__remove/
set__remove_least	set.m	/^:- pred set__remove_least(set(T), T, set(T)).$/;-;/set__remove_least/
set__remove_list	set.m	/^:- pred set__remove_list(set(T), list(T), set(T)).$/;-;/set__remove_list/
set__singleton_set	set.m	/^:- pred set__singleton_set(set(T), T).$/;-;/set__singleton_set/
set__sorted_list_to_set	set.m	/^:- pred set__sorted_list_to_set(list(T), set(T)).$/;-;/set__sorted_list_to_set/
set__subset	set.m	/^:- pred set__subset(set(T), set(T)).$/;-;/set__subset/
set__superset	set.m	/^:- pred set__superset(set(T), set(T)).$/;-;/set__superset/
set__to_sorted_list	set.m	/^:- pred set__to_sorted_list(set(T), list(T)).$/;-;/set__to_sorted_list/
set__union	set.m	/^:- pred set__union(set(T), set(T), set(T)).$/;-;/set__union/
set_bbbtree	set_bbbtree.m	/^:- type set_bbbtree(T) --->$/;-;/set_bbbtree/
set_bbbtree__balance	set_bbbtree.m	/^:- pred set_bbbtree__balance(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__balance/
set_bbbtree__build_node	set_bbbtree.m	/^:- pred set_bbbtree__build_node(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__build_node/
set_bbbtree__concat3	set_bbbtree.m	/^:- pred set_bbbtree__concat3(set_bbbtree(T),set_bbbtree(T),set_bbbtree(T)).$/;-;/set_bbbtree__concat3/
set_bbbtree__concat4	set_bbbtree.m	/^:- pred set_bbbtree__concat4(set_bbbtree(T), set_bbbtree(T), T,$/;-;/set_bbbtree__concat4/
set_bbbtree__def_ratio	set_bbbtree.m	/^:- pred set_bbbtree__def_ratio(int).$/;-;/set_bbbtree__def_ratio/
set_bbbtree__delete	set_bbbtree.m	/^:- pred set_bbbtree__delete(set_bbbtree(T), T, set_bbbtree(T)).$/;-;/set_bbbtree__delete/
set_bbbtree__delete_list	set_bbbtree.m	/^:- pred set_bbbtree__delete_list(set_bbbtree(T), list(T), set_bbbtree(T)).$/;-;/set_bbbtree__delete_list/
set_bbbtree__difference	set_bbbtree.m	/^:- pred set_bbbtree__difference(set_bbbtree(T), set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__difference/
set_bbbtree__difference_r	set_bbbtree.m	/^:- pred set_bbbtree__difference_r(set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__difference_r/
set_bbbtree__double_rot_l	set_bbbtree.m	/^:- pred set_bbbtree__double_rot_l(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__double_rot_l/
set_bbbtree__double_rot_r	set_bbbtree.m	/^:- pred set_bbbtree__double_rot_r(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__double_rot_r/
set_bbbtree__empty	set_bbbtree.m	/^:- pred set_bbbtree__empty(set_bbbtree(T)).$/;-;/set_bbbtree__empty/
set_bbbtree__equal	set_bbbtree.m	/^:- pred set_bbbtree__equal(set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__equal/
set_bbbtree__init	set_bbbtree.m	/^:- pred set_bbbtree__init(set_bbbtree(T)).$/;-;/set_bbbtree__init/
set_bbbtree__insert	set_bbbtree.m	/^:- pred set_bbbtree__insert(set_bbbtree(T), T, set_bbbtree(T)).$/;-;/set_bbbtree__insert/
set_bbbtree__insert_list	set_bbbtree.m	/^:- pred set_bbbtree__insert_list(set_bbbtree(T), list(T), set_bbbtree(T)).$/;-;/set_bbbtree__insert_list/
set_bbbtree__insert_list_r	set_bbbtree.m	/^:- pred set_bbbtree__insert_list_r(set_bbbtree(T), list(T), set_bbbtree(T),int).$/;-;/set_bbbtree__insert_list_r/
set_bbbtree__insert_r	set_bbbtree.m	/^:- pred set_bbbtree__insert_r(set_bbbtree(T), T, set_bbbtree(T), int).$/;-;/set_bbbtree__insert_r/
set_bbbtree__intersect	set_bbbtree.m	/^:- pred set_bbbtree__intersect(set_bbbtree(T), set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__intersect/
set_bbbtree__intersect_r	set_bbbtree.m	/^:- pred set_bbbtree__intersect_r(set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__intersect_r/
set_bbbtree__is_member	set_bbbtree.m	/^:- pred set_bbbtree__is_member(T, set_bbbtree(T), bool).$/;-;/set_bbbtree__is_member/
set_bbbtree__largest	set_bbbtree.m	/^:- pred set_bbbtree__largest(set_bbbtree(T), T).$/;-;/set_bbbtree__largest/
set_bbbtree__least	set_bbbtree.m	/^:- pred set_bbbtree__least(set_bbbtree(T), T).$/;-;/set_bbbtree__least/
set_bbbtree__list_to_set	set_bbbtree.m	/^:- pred set_bbbtree__list_to_set(list(T), set_bbbtree(T)).$/;-;/set_bbbtree__list_to_set/
set_bbbtree__list_to_set_r	set_bbbtree.m	/^:- pred set_bbbtree__list_to_set_r(list(T), set_bbbtree(T), int).$/;-;/set_bbbtree__list_to_set_r/
set_bbbtree__member	set_bbbtree.m	/^:- pred set_bbbtree__member(T, set_bbbtree(T)).$/;-;/set_bbbtree__member/
set_bbbtree__power_intersect	set_bbbtree.m	/^:- pred set_bbbtree__power_intersect(set_bbbtree(set_bbbtree(T)),$/;-;/set_bbbtree__power_intersect/
set_bbbtree__power_intersect_r	set_bbbtree.m	/^:- pred set_bbbtree__power_intersect_r(set_bbbtree(set_bbbtree(T)),$/;-;/set_bbbtree__power_intersect_r/
set_bbbtree__power_intersect_r2	set_bbbtree.m	/^:- pred set_bbbtree__power_intersect_r2(set_bbbtree(set_bbbtree(T)),$/;-;/set_bbbtree__power_intersect_r2/
set_bbbtree__power_union	set_bbbtree.m	/^:- pred set_bbbtree__power_union(set_bbbtree(set_bbbtree(T)), set_bbbtree(T)).$/;-;/set_bbbtree__power_union/
set_bbbtree__power_union_r	set_bbbtree.m	/^:- pred set_bbbtree__power_union_r(set_bbbtree(set_bbbtree(T)),$/;-;/set_bbbtree__power_union_r/
set_bbbtree__remove	set_bbbtree.m	/^:- pred set_bbbtree__remove(set_bbbtree(T), T, set_bbbtree(T)).$/;-;/set_bbbtree__remove/
set_bbbtree__remove_largest	set_bbbtree.m	/^:- pred set_bbbtree__remove_largest(set_bbbtree(T), T, set_bbbtree(T)).$/;-;/set_bbbtree__remove_largest/
set_bbbtree__remove_least	set_bbbtree.m	/^:- pred set_bbbtree__remove_least(set_bbbtree(T), T, set_bbbtree(T)).$/;-;/set_bbbtree__remove_least/
set_bbbtree__remove_list	set_bbbtree.m	/^:- pred set_bbbtree__remove_list(set_bbbtree(T), list(T), set_bbbtree(T)).$/;-;/set_bbbtree__remove_list/
set_bbbtree__single_rot_l	set_bbbtree.m	/^:- pred set_bbbtree__single_rot_l(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__single_rot_l/
set_bbbtree__single_rot_r	set_bbbtree.m	/^:- pred set_bbbtree__single_rot_r(T, set_bbbtree(T), set_bbbtree(T),$/;-;/set_bbbtree__single_rot_r/
set_bbbtree__singleton_set	set_bbbtree.m	/^:- pred set_bbbtree__singleton_set(set_bbbtree(T), T).$/;-;/set_bbbtree__singleton_set/
set_bbbtree__size	set_bbbtree.m	/^:- pred set_bbbtree__size(set_bbbtree(T), int).$/;-;/set_bbbtree__size/
set_bbbtree__sorted_list_to_set	set_bbbtree.m	/^:- pred set_bbbtree__sorted_list_to_set(list(T), set_bbbtree(T)).$/;-;/set_bbbtree__sorted_list_to_set/
set_bbbtree__sorted_list_to_set_len	set_bbbtree.m	/^:- pred set_bbbtree__sorted_list_to_set_len(list(T), set_bbbtree(T), int).$/;-;/set_bbbtree__sorted_list_to_set_len/
set_bbbtree__sorted_list_to_set_len2	set_bbbtree.m	/^:- pred set_bbbtree__sorted_list_to_set_len2(list(T), list(T), int,$/;-;/set_bbbtree__sorted_list_to_set_len2/
set_bbbtree__split_gt	set_bbbtree.m	/^:- pred set_bbbtree__split_gt(set_bbbtree(T), T, set_bbbtree(T), int).$/;-;/set_bbbtree__split_gt/
set_bbbtree__split_lt	set_bbbtree.m	/^:- pred set_bbbtree__split_lt(set_bbbtree(T), T, set_bbbtree(T), int).$/;-;/set_bbbtree__split_lt/
set_bbbtree__subset	set_bbbtree.m	/^:- pred set_bbbtree__subset(set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__subset/
set_bbbtree__superset	set_bbbtree.m	/^:- pred set_bbbtree__superset(set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__superset/
set_bbbtree__to_sorted_list	set_bbbtree.m	/^:- pred set_bbbtree__to_sorted_list(set_bbbtree(T), list(T)).$/;-;/set_bbbtree__to_sorted_list/
set_bbbtree__to_sorted_list2	set_bbbtree.m	/^:- pred set_bbbtree__to_sorted_list2(set_bbbtree(T), list(T), list(T)).$/;-;/set_bbbtree__to_sorted_list2/
set_bbbtree__union	set_bbbtree.m	/^:- pred set_bbbtree__union(set_bbbtree(T), set_bbbtree(T), set_bbbtree(T)).$/;-;/set_bbbtree__union/
set_bbbtree__union_r	set_bbbtree.m	/^:- pred set_bbbtree__union_r(set_bbbtree(T),set_bbbtree(T),set_bbbtree(T),int).$/;-;/set_bbbtree__union_r/
set_ordlist	set_ordlist.m	/^:- type set_ordlist(T)		  ==	  list(T).$/;-;/set_ordlist/
set_ordlist__delete	set_ordlist.m	/^:- pred set_ordlist__delete(set_ordlist(T), T, set_ordlist(T)).$/;-;/set_ordlist__delete/
set_ordlist__delete_list	set_ordlist.m	/^:- pred set_ordlist__delete_list(set_ordlist(T), list(T), set_ordlist(T)).$/;-;/set_ordlist__delete_list/
set_ordlist__difference	set_ordlist.m	/^:- pred set_ordlist__difference(set_ordlist(T), set_ordlist(T),$/;-;/set_ordlist__difference/
set_ordlist__empty	set_ordlist.m	/^:- pred set_ordlist__empty(set_ordlist(_T)).$/;-;/set_ordlist__empty/
set_ordlist__equal	set_ordlist.m	/^:- pred set_ordlist__equal(set_ordlist(T), set_ordlist(T)).$/;-;/set_ordlist__equal/
set_ordlist__init	set_ordlist.m	/^:- pred set_ordlist__init(set_ordlist(_T)).$/;-;/set_ordlist__init/
set_ordlist__insert	set_ordlist.m	/^:- pred set_ordlist__insert(set_ordlist(T), T, set_ordlist(T)).$/;-;/set_ordlist__insert/
set_ordlist__insert_list	set_ordlist.m	/^:- pred set_ordlist__insert_list(set_ordlist(T), list(T), set_ordlist(T)).$/;-;/set_ordlist__insert_list/
set_ordlist__intersect	set_ordlist.m	/^:- pred set_ordlist__intersect(set_ordlist(T), set_ordlist(T),$/;-;/set_ordlist__intersect/
set_ordlist__is_member	set_ordlist.m	/^:- pred set_ordlist__is_member(T, set_ordlist(T), bool).$/;-;/set_ordlist__is_member/
set_ordlist__list_to_set	set_ordlist.m	/^:- pred set_ordlist__list_to_set(list(T), set_ordlist(T)).$/;-;/set_ordlist__list_to_set/
set_ordlist__member	set_ordlist.m	/^:- pred set_ordlist__member(T, set_ordlist(T)).$/;-;/set_ordlist__member/
set_ordlist__no_dups	set_ordlist.m	/^:- pred set_ordlist__no_dups(T::in, list(T)::in) is semidet.$/;-;/set_ordlist__no_dups/
set_ordlist__power_intersect	set_ordlist.m	/^:- pred set_ordlist__power_intersect(set_ordlist(set_ordlist(T)),$/;-;/set_ordlist__power_intersect/
set_ordlist__power_union	set_ordlist.m	/^:- pred set_ordlist__power_union(set_ordlist(set_ordlist(T)),$/;-;/set_ordlist__power_union/
set_ordlist__power_union_2	set_ordlist.m	/^:- pred set_ordlist__power_union_2(list(set_ordlist(T)), set_ordlist(T),$/;-;/set_ordlist__power_union_2/
set_ordlist__remove	set_ordlist.m	/^:- pred set_ordlist__remove(set_ordlist(T), T, set_ordlist(T)).$/;-;/set_ordlist__remove/
set_ordlist__remove_least	set_ordlist.m	/^:- pred set_ordlist__remove_least(set_ordlist(T), T, set_ordlist(T)).$/;-;/set_ordlist__remove_least/
set_ordlist__remove_list	set_ordlist.m	/^:- pred set_ordlist__remove_list(set_ordlist(T), list(T), set_ordlist(T)).$/;-;/set_ordlist__remove_list/
set_ordlist__singleton_set	set_ordlist.m	/^:- pred set_ordlist__singleton_set(set_ordlist(T), T).$/;-;/set_ordlist__singleton_set/
set_ordlist__sort_no_dups	set_ordlist.m	/^:- pred set_ordlist__sort_no_dups(list(T), set_ordlist(T)).$/;-;/set_ordlist__sort_no_dups/
set_ordlist__sorted_list_to_set	set_ordlist.m	/^:- pred set_ordlist__sorted_list_to_set(list(T), set_ordlist(T)).$/;-;/set_ordlist__sorted_list_to_set/
set_ordlist__subset	set_ordlist.m	/^:- pred set_ordlist__subset(set_ordlist(T), set_ordlist(T)).$/;-;/set_ordlist__subset/
set_ordlist__superset	set_ordlist.m	/^:- pred set_ordlist__superset(set_ordlist(T), set_ordlist(T)).$/;-;/set_ordlist__superset/
set_ordlist__to_sorted_list	set_ordlist.m	/^:- pred set_ordlist__to_sorted_list(set_ordlist(T), list(T)).$/;-;/set_ordlist__to_sorted_list/
set_ordlist__union	set_ordlist.m	/^:- pred set_ordlist__union(set_ordlist(T), set_ordlist(T),$/;-;/set_ordlist__union/
set_unordlist	set_unordlist.m	/^:- type set_unordlist(T)		  ==	  list(T).$/;-;/set_unordlist/
set_unordlist__delete	set_unordlist.m	/^:- pred set_unordlist__delete(set_unordlist(T), T, set_unordlist(T)).$/;-;/set_unordlist__delete/
set_unordlist__delete_list	set_unordlist.m	/^:- pred set_unordlist__delete_list(set_unordlist(T), list(T), set_unordlist(T)).$/;-;/set_unordlist__delete_list/
set_unordlist__difference	set_unordlist.m	/^:- pred set_unordlist__difference(set_unordlist(T), set_unordlist(T),$/;-;/set_unordlist__difference/
set_unordlist__difference_2	set_unordlist.m	/^:- pred set_unordlist__difference_2(set_unordlist(T), set_unordlist(T),$/;-;/set_unordlist__difference_2/
set_unordlist__empty	set_unordlist.m	/^:- pred set_unordlist__empty(set_unordlist(_T)).$/;-;/set_unordlist__empty/
set_unordlist__equal	set_unordlist.m	/^:- pred set_unordlist__equal(set_unordlist(T), set_unordlist(T)).$/;-;/set_unordlist__equal/
set_unordlist__init	set_unordlist.m	/^:- pred set_unordlist__init(set_unordlist(_T)).$/;-;/set_unordlist__init/
set_unordlist__insert	set_unordlist.m	/^:- pred set_unordlist__insert(set_unordlist(T), T, set_unordlist(T)).$/;-;/set_unordlist__insert/
set_unordlist__insert_list	set_unordlist.m	/^:- pred set_unordlist__insert_list(set_unordlist(T), list(T), set_unordlist(T)).$/;-;/set_unordlist__insert_list/
set_unordlist__intersect	set_unordlist.m	/^:- pred set_unordlist__intersect(set_unordlist(T), set_unordlist(T),$/;-;/set_unordlist__intersect/
set_unordlist__intersect_2	set_unordlist.m	/^:- pred set_unordlist__intersect_2(set_unordlist(T), set_unordlist(T),$/;-;/set_unordlist__intersect_2/
set_unordlist__is_member	set_unordlist.m	/^:- pred set_unordlist__is_member(T, set_unordlist(T), bool).$/;-;/set_unordlist__is_member/
set_unordlist__list_to_set	set_unordlist.m	/^:- pred set_unordlist__list_to_set(list(T), set_unordlist(T)).$/;-;/set_unordlist__list_to_set/
set_unordlist__member	set_unordlist.m	/^:- pred set_unordlist__member(T, set_unordlist(T)).$/;-;/set_unordlist__member/
set_unordlist__power_intersect	set_unordlist.m	/^:- pred set_unordlist__power_intersect(set_unordlist(set_unordlist(T)),$/;-;/set_unordlist__power_intersect/
set_unordlist__power_union	set_unordlist.m	/^:- pred set_unordlist__power_union(set_unordlist(set_unordlist(T)),$/;-;/set_unordlist__power_union/
set_unordlist__power_union_2	set_unordlist.m	/^:- pred set_unordlist__power_union_2(list(set_unordlist(T)), set_unordlist(T),$/;-;/set_unordlist__power_union_2/
set_unordlist__remove	set_unordlist.m	/^:- pred set_unordlist__remove(set_unordlist(T), T, set_unordlist(T)).$/;-;/set_unordlist__remove/
set_unordlist__remove_least	set_unordlist.m	/^:- pred set_unordlist__remove_least(set_unordlist(T), T, set_unordlist(T)).$/;-;/set_unordlist__remove_least/
set_unordlist__remove_list	set_unordlist.m	/^:- pred set_unordlist__remove_list(set_unordlist(T), list(T), set_unordlist(T)).$/;-;/set_unordlist__remove_list/
set_unordlist__singleton_set	set_unordlist.m	/^:- pred set_unordlist__singleton_set(set_unordlist(T), T).$/;-;/set_unordlist__singleton_set/
set_unordlist__sorted_list_to_set	set_unordlist.m	/^:- pred set_unordlist__sorted_list_to_set(list(T), set_unordlist(T)).$/;-;/set_unordlist__sorted_list_to_set/
set_unordlist__subset	set_unordlist.m	/^:- pred set_unordlist__subset(set_unordlist(T), set_unordlist(T)).$/;-;/set_unordlist__subset/
set_unordlist__superset	set_unordlist.m	/^:- pred set_unordlist__superset(set_unordlist(T), set_unordlist(T)).$/;-;/set_unordlist__superset/
set_unordlist__to_sorted_list	set_unordlist.m	/^:- pred set_unordlist__to_sorted_list(set_unordlist(T), list(T)).$/;-;/set_unordlist__to_sorted_list/
set_unordlist__union	set_unordlist.m	/^:- pred set_unordlist__union(set_unordlist(T), set_unordlist(T),$/;-;/set_unordlist__union/
solutions	std_util.m	/^:- pred solutions(pred(T), list(T)).$/;-;/solutions/
solutions_set	std_util.m	/^:- pred solutions_set(pred(T), set(T)).$/;-;/solutions_set/
special	getopt.m	/^	;	special$/;-;/special/
special_data	getopt.m	/^:- type special_data$/;-;/special_data/
stack	stack.m	/^:- type stack(T) == list(T).$/;-;/stack/
stack__depth	stack.m	/^:- pred stack__depth(stack(_T), int).$/;-;/stack__depth/
stack__init	stack.m	/^:- pred stack__init(stack(_T)).$/;-;/stack__init/
stack__is_empty	stack.m	/^:- pred stack__is_empty(stack(_T)).$/;-;/stack__is_empty/
stack__is_full	stack.m	/^:- pred stack__is_full(stack(_T)).$/;-;/stack__is_full/
stack__pop	stack.m	/^:- pred stack__pop(stack(T), T, stack(T)).$/;-;/stack__pop/
stack__pop_det	stack.m	/^:- pred stack__pop_det(stack(T), T, stack(T)).$/;-;/stack__pop_det/
stack__push	stack.m	/^:- pred stack__push(stack(T), T, stack(T)).$/;-;/stack__push/
stack__push_list	stack.m	/^:- pred stack__push_list(stack(T), list(T), stack(T)).$/;-;/stack__push_list/
stack__top	stack.m	/^:- pred stack__top(stack(T), T).$/;-;/stack__top/
store	store.m	/^:- type store(T)	--->	store(node_id(T), map(node_id(T), T)).$/;-;/store/
store__init	store.m	/^:- pred store__init(store(_T)).$/;-;/store__init/
store__lookup_node	store.m	/^:- pred store__lookup_node(store(T), node_id(T), T).$/;-;/store__lookup_node/
store__new_node	store.m	/^:- pred store__new_node(store(T), T, node_id(T), store(T)).$/;-;/store__new_node/
store__set_node	store.m	/^:- pred store__set_node(store(T), node_id(T), T, store(T)).$/;-;/store__set_node/
string	getopt.m	/^	;	string(string)$/;-;/string/
string__append	string.m	/^:- pred string__append(string, string, string).$/;-;/string__append/
string__append_list	string.m	/^:- pred string__append_list(list(string), string).$/;-;/string__append_list/
string__base_string_to_int	string.m	/^:- pred string__base_string_to_int(int, string, int).$/;-;/string__base_string_to_int/
string__base_string_to_int_2	string.m	/^:- pred string__base_string_to_int_2(int, string, int, int).$/;-;/string__base_string_to_int_2/
string__capitalize_first	string.m	/^:- pred string__capitalize_first(string, string).$/;-;/string__capitalize_first/
string__char_list_to_int_list	string.m	/^:- pred string__char_list_to_int_list(list(character), list(int)).$/;-;/string__char_list_to_int_list/
string__char_list_to_lower	string.m	/^:- pred string__char_list_to_lower(list(char), list(char)).$/;-;/string__char_list_to_lower/
string__char_list_to_upper	string.m	/^:- pred string__char_list_to_upper(list(char), list(char)).$/;-;/string__char_list_to_upper/
string__char_to_string	string.m	/^:- pred string__char_to_string(character, string).$/;-;/string__char_to_string/
string__combine_hash	string.m	/^:- pred string__combine_hash(int, int, int).$/;-;/string__combine_hash/
string__default_precision_and_width	string.m	/^:- pred string__default_precision_and_width(int).$/;-;/string__default_precision_and_width/
string__digit_to_char	string.m	/^:- pred string__digit_to_char(int, character).$/;-;/string__digit_to_char/
string__digit_to_char_det	string.m	/^:- pred string__digit_to_char_det(int, character).$/;-;/string__digit_to_char_det/
string__do_conversion_0	string.m	/^:- pred string__do_conversion_0(char, string__poly_type, string, maybe(int), $/;-;/string__do_conversion_0/
string__do_conversion_fail	string.m	/^:- pred string__do_conversion_fail(char).$/;-;/string__do_conversion_fail/
string__duplicate_char	string.m	/^:- pred string__duplicate_char(character, int, string).$/;-;/string__duplicate_char/
string__find_index	string.m	/^:- pred string__find_index(string, char, int).$/;-;/string__find_index/
string__find_index_2	string.m	/^:- pred string__find_index_2(list(char), char, int).$/;-;/string__find_index_2/
string__first_char	string.m	/^:- pred string__first_char(string, character, string).$/;-;/string__first_char/
string__float_to_f_string	string.m	/^:- pred string__float_to_f_string(float::in, string::out) is det.$/;-;/string__float_to_f_string/
string__float_to_string	string.m	/^:- pred string__float_to_string(float, string).$/;-;/string__float_to_string/
string__format	string.m	/^:- pred string__format(string, list(string__poly_type), string).$/;-;/string__format/
string__format_2	string.m	/^:- pred	string__format_2(list(char), list(string__poly_type), string).$/;-;/string__format_2/
string__format_add_sign	string.m	/^:- pred string__format_add_sign(string, list(char), string__poly_type,$/;-;/string__format_add_sign/
string__format_calc_exp	string.m	/^:- pred string__format_calc_exp(float, string, maybe(int), int).$/;-;/string__format_calc_exp/
string__format_calc_prec	string.m	/^:- pred string__format_calc_prec(string, string, maybe(int)).$/;-;/string__format_calc_prec/
string__format_do_conversion	string.m	/^:- pred string__format_do_conversion(char, string__poly_type, maybe(int), $/;-;/string__format_do_conversion/
string__format_do_mod_char	string.m	/^:- pred string__format_do_mod_char(char, char, char).$/;-;/string__format_do_mod_char/
string__format_get_optional_args	string.m	/^:- pred string__format_get_optional_args(list(char), list(char), int, int,$/;-;/string__format_get_optional_args/
string__format_int_from_char_list	string.m	/^:- pred string__format_int_from_char_list(list(char), int).$/;-;/string__format_int_from_char_list/
string__format_int_precision	string.m	/^:- pred string__format_int_precision(string, string, maybe(int), int).$/;-;/string__format_int_precision/
string__format_mod_conv_char	string.m	/^:- pred string__format_mod_conv_char(maybe(int), string__poly_type, char, $/;-;/string__format_mod_conv_char/
string__format_pad_width	string.m	/^:- pred string__format_pad_width(string, maybe(int), list(char), int,  string).$/;-;/string__format_pad_width/
string__format_read_star	string.m	/^:- pred string__format_read_star(list(string__poly_type), int, int,$/;-;/string__format_read_star/
string__format_string_to_ints	string.m	/^:- pred string__format_string_to_ints(list(char), list(char), list(char),$/;-;/string__format_string_to_ints/
string__format_takewhile1	string.m	/^:- pred string__format_takewhile1(list(char), list(char), list(char)).$/;-;/string__format_takewhile1/
string__format_top_convert_variable	string.m	/^:- pred string__format_top_convert_variable(list(char), $/;-;/string__format_top_convert_variable/
string__from_char_list	string.m	/^:- pred string__from_char_list(list(character), string).$/;-;/string__from_char_list/
string__hash	string.m	/^:- pred string__hash(string, int).$/;-;/string__hash/
string__hash_2	string.m	/^:- pred string__hash_2(list(int), int, int).$/;-;/string__hash_2/
string__index	string.m	/^:- pred string__index(string, int, character).$/;-;/string__index/
string__index_det	string.m	/^:- pred string__index_det(string, int, character).$/;-;/string__index_det/
string__int_list_to_char_list	string.m	/^:- pred string__int_list_to_char_list(list(int), list(character)).$/;-;/string__int_list_to_char_list/
string__int_to_base_string	string.m	/^:- pred string__int_to_base_string(int, int, string).$/;-;/string__int_to_base_string/
string__int_to_base_string_1	string.m	/^:- pred string__int_to_base_string_1(int, int, string).$/;-;/string__int_to_base_string_1/
string__int_to_base_string_2	string.m	/^:- pred string__int_to_base_string_2(int, int, string).$/;-;/string__int_to_base_string_2/
string__int_to_string	string.m	/^:- pred string__int_to_string(int, string).$/;-;/string__int_to_string/
string__is_alnum_or_underscore	string.m	/^:- pred string__is_alnum_or_underscore(string).$/;-;/string__is_alnum_or_underscore/
string__is_alpha	string.m	/^:- pred string__is_alpha(string).$/;-;/string__is_alpha/
string__is_alpha_or_underscore	string.m	/^:- pred string__is_alpha_or_underscore(string).$/;-;/string__is_alpha_or_underscore/
string__left	string.m	/^:- pred string__left(string, int, string).$/;-;/string__left/
string__length	string.m	/^:- pred string__length(string, int).$/;-;/string__length/
string__pad_left	string.m	/^:- pred string__pad_left(string, character, int, string).$/;-;/string__pad_left/
string__pad_right	string.m	/^:- pred string__pad_right(string, character, int, string).$/;-;/string__pad_right/
string__poly_type	string.m	/^:- type string__poly_type --->$/;-;/string__poly_type/
string__prefix	string.m	/^:- pred string__prefix(string, string).$/;-;/string__prefix/
string__remove_suffix	string.m	/^:- pred string__remove_suffix(string, string, string).$/;-;/string__remove_suffix/
string__replace	string.m	/^:- pred string__replace(string, string, string, string).$/;-;/string__replace/
string__replace_all	string.m	/^:- pred string__replace_all(string, string, string, string).$/;-;/string__replace_all/
string__right	string.m	/^:- pred string__right(string, int, string).$/;-;/string__right/
string__special_precision_and_width	string.m	/^:- pred string__special_precision_and_width(int).$/;-;/string__special_precision_and_width/
string__split	string.m	/^:- pred string__split(string, int, string, string).$/;-;/string__split/
string__sub_string_search	string.m	/^:- pred string__sub_string_search(string, string, int).$/;-;/string__sub_string_search/
string__sub_string_search2	string.m	/^:- pred string__sub_string_search2(string, string, int, int, int).$/;-;/string__sub_string_search2/
string__substring	string.m	/^:- pred string__substring(string, int, int, string).$/;-;/string__substring/
string__to_char_list	string.m	/^:- pred string__to_char_list(string, list(character)).$/;-;/string__to_char_list/
string__to_float	string.m	/^:- pred string__to_float(string, float).$/;-;/string__to_float/
string__to_int	string.m	/^:- pred string__to_int(string, int).$/;-;/string__to_int/
string__to_int_list	string.m	/^:- pred string__to_int_list(string, list(int)).$/;-;/string__to_int_list/
string__to_lower	string.m	/^:- pred string__to_lower(string, string).$/;-;/string__to_lower/
string__to_upper	string.m	/^:- pred string__to_upper(string, string).$/;-;/string__to_upper/
string__uncapitalize_first	string.m	/^:- pred string__uncapitalize_first(string, string).$/;-;/string__uncapitalize_first/
string_special	getopt.m	/^	;	string_special.$/;-;/string_special/
substitution	term.m	/^:- type substitution == map(var, term).$/;-;/substitution/
term	mercury_builtin.m	/^:- type term		--->	term__functor(const, list(term), term__context)$/;-;/term/
term__apply_rec_substitution	term.m	/^:- pred term__apply_rec_substitution(term, substitution, term).$/;-;/term__apply_rec_substitution/
term__apply_rec_substitution_to_list	term.m	/^:- pred term__apply_rec_substitution_to_list(list(term), substitution,$/;-;/term__apply_rec_substitution_to_list/
term__apply_substitution	term.m	/^:- pred term__apply_substitution(term, substitution, term).$/;-;/term__apply_substitution/
term__apply_substitution_to_list	term.m	/^:- pred term__apply_substitution_to_list(list(term), substitution, list(term)).$/;-;/term__apply_substitution_to_list/
term__apply_variable_renaming	term.m	/^:- pred term__apply_variable_renaming(term, map(var, var), term).$/;-;/term__apply_variable_renaming/
term__apply_variable_renaming_to_list	term.m	/^:- pred term__apply_variable_renaming_to_list(list(term), map(var, var),$/;-;/term__apply_variable_renaming_to_list/
term__atom	mercury_builtin.m	/^:- type const		--->	term__atom(string)$/;-;/term__atom/
term__compare	term.m	/^:- pred term__compare(comparison_result, term, term, substitution).$/;-;/term__compare/
term__contains_functor	term.m	/^:- pred term__contains_functor(term, const, list(term)).$/;-;/term__contains_functor/
term__contains_var	term.m	/^:- pred term__contains_var(term, var).$/;-;/term__contains_var/
term__contains_var_list	term.m	/^:- pred term__contains_var_list(list(term), var).$/;-;/term__contains_var_list/
term__context	mercury_builtin.m	/^:- type term__context	--->	term__context(string, int).$/;-;/term__context/
term__context_file	term.m	/^:- pred term__context_file(term__context, string).$/;-;/term__context_file/
term__context_init	mercury_builtin.m	/^:- pred term__context_init(term__context).$/;-;/term__context_init/
term__context_line	term.m	/^:- pred term__context_line(term__context, int).$/;-;/term__context_line/
term__create_var	mercury_builtin.m	/^:- pred term__create_var(var_supply, var, var_supply).$/;-;/term__create_var/
term__float	mercury_builtin.m	/^			;	term__float(float).$/;-;/term__float/
term__functor	mercury_builtin.m	/^:- type term		--->	term__functor(const, list(term), term__context)$/;-;/term__functor/
term__init_var_supply	mercury_builtin.m	/^:- pred term__init_var_supply(var_supply).$/;-;/term__init_var_supply/
term__integer	mercury_builtin.m	/^			;	term__integer(int)$/;-;/term__integer/
term__is_ground	term.m	/^:- pred term__is_ground(term, substitution).$/;-;/term__is_ground/
term__is_ground_2	term.m	/^:- pred term__is_ground_2(list(term), substitution).$/;-;/term__is_ground_2/
term__occurs	term.m	/^:- pred term__occurs(term, var, substitution).$/;-;/term__occurs/
term__occurs_list	term.m	/^:- pred term__occurs_list(list(term), var, substitution).$/;-;/term__occurs_list/
term__relabel_variable	term.m	/^:- pred term__relabel_variable(term, var, var, term).$/;-;/term__relabel_variable/
term__relabel_variables	term.m	/^:- pred term__relabel_variables(list(term), var, var, list(term)).$/;-;/term__relabel_variables/
term__string	mercury_builtin.m	/^			;	term__string(string)$/;-;/term__string/
term__substitute	term.m	/^:- pred term__substitute(term, var, term, term).$/;-;/term__substitute/
term__substitute_corresponding	term.m	/^:- pred term__substitute_corresponding(list(var), list(term), term, term).$/;-;/term__substitute_corresponding/
term__substitute_corresponding_2	term.m	/^:- pred term__substitute_corresponding_2(list(var), list(term),$/;-;/term__substitute_corresponding_2/
term__substitute_corresponding_list	term.m	/^:- pred term__substitute_corresponding_list(list(var), list(term), list(term),$/;-;/term__substitute_corresponding_list/
term__substitute_list	term.m	/^:- pred term__substitute_list(list(term), var, term, list(term)).$/;-;/term__substitute_list/
term__subterm	term.m	/^:- pred term__subterm(term, term).$/;-;/term__subterm/
term__term_list_to_var_list	term.m	/^:- pred term__term_list_to_var_list(list(term), list(var)).$/;-;/term__term_list_to_var_list/
term__unify	term.m	/^:- pred term__unify(term, term, substitution, substitution).$/;-;/term__unify/
term__unify_list	term.m	/^:- pred term__unify_list(list(term), list(term), substitution, substitution).$/;-;/term__unify_list/
term__var_list_to_term_list	term.m	/^:- pred term__var_list_to_term_list(list(var), list(term)).$/;-;/term__var_list_to_term_list/
term__var_to_int	mercury_builtin.m	/^:- pred term__var_to_int(var, int).$/;-;/term__var_to_int/
term__variable	mercury_builtin.m	/^			;	term__variable(var).$/;-;/term__variable/
term__vars	term.m	/^:- pred term__vars(term, list(var)).$/;-;/term__vars/
term__vars_2	term.m	/^:- pred term__vars_2(term, list(var), list(var)).$/;-;/term__vars_2/
term__vars_2_list	term.m	/^:- pred term__vars_2_list(list(term), list(var), list(var)).$/;-;/term__vars_2_list/
term__vars_list	term.m	/^:- pred term__vars_list(list(term), list(var)).$/;-;/term__vars_list/
term_io__current_ops	term_io.m	/^:- pred term_io__current_ops(list(op_details), io__state, io__state).$/;-;/term_io__current_ops/
term_io__op	term_io.m	/^:- pred term_io__op(int, op_type, string, io__state, io__state).$/;-;/term_io__op/
term_io__quote_atom	term_io.m	/^:- pred term_io__quote_atom(string, io__state, io__state).$/;-;/term_io__quote_atom/
term_io__quote_char	term_io.m	/^:- pred term_io__quote_char(character, io__state, io__state).$/;-;/term_io__quote_char/
term_io__quote_single_char	term_io.m	/^:- pred term_io__quote_single_char(character, io__state, io__state).$/;-;/term_io__quote_single_char/
term_io__quote_string	term_io.m	/^:- pred term_io__quote_string(string, io__state, io__state).$/;-;/term_io__quote_string/
term_io__read_term	term_io.m	/^:- pred term_io__read_term(read_term, io__state, io__state).$/;-;/term_io__read_term/
term_io__write_constant	term_io.m	/^:- pred term_io__write_constant(const, io__state, io__state).$/;-;/term_io__write_constant/
term_io__write_list_tail	term_io.m	/^:- pred term_io__write_list_tail(term, varset, int, varset, int,$/;-;/term_io__write_list_tail/
term_io__write_term	term_io.m	/^:- pred term_io__write_term(varset, term, io__state, io__state).$/;-;/term_io__write_term/
term_io__write_term_2	term_io.m	/^:- pred term_io__write_term_2(term, varset, int, varset, int,$/;-;/term_io__write_term_2/
term_io__write_term_args	term_io.m	/^:- pred term_io__write_term_args(list(term), varset, int, varset, int,$/;-;/term_io__write_term_args/
term_io__write_term_nl	term_io.m	/^:- pred term_io__write_term_nl(varset, term, io__state, io__state).$/;-;/term_io__write_term_nl/
term_io__write_variable	term_io.m	/^:- pred term_io__write_variable(var, varset, io__state, io__state).$/;-;/term_io__write_variable/
term_io__write_variable_2	term_io.m	/^:- pred term_io__write_variable_2(var, varset, int, varset, int,$/;-;/term_io__write_variable_2/
term_to_type	mercury_builtin.m	/^:- pred term_to_type(term :: in, T :: out) is semidet.$/;-;/term_to_type/
three	tree234.m	/^	;	three(K, V, K, V, tree234(K, V), tree234(K, V), tree234(K, V))$/;-;/three/
token	lexer.m	/^:- type	token$/;-;/token/
token_context	lexer.m	/^:- type token_context == int.	% line number$/;-;/token_context/
token_list	lexer.m	/^:- type token_list == list(pair(token, token_context)).$/;-;/token_list/
tree	bintree.m	/^				;	tree($/;-;/tree/
tree234	tree234.m	/^:- type tree234(K, V)	--->$/;-;/tree234/
tree234__assoc_list_to_tree234	tree234.m	/^:- pred tree234__assoc_list_to_tree234(assoc_list(K, V), tree234(K, V)).$/;-;/tree234__assoc_list_to_tree234/
tree234__assoc_list_to_tree234_2	tree234.m	/^:- pred tree234__assoc_list_to_tree234_2(assoc_list(K, V), tree234(K, V),$/;-;/tree234__assoc_list_to_tree234_2/
tree234__count	tree234.m	/^:- pred tree234__count(tree234(K, V), int).$/;-;/tree234__count/
tree234__delete	tree234.m	/^:- pred tree234__delete(tree234(K, V), K, tree234(K, V)).$/;-;/tree234__delete/
tree234__four	tree234.m	/^:- pred tree234__four(tree234(K, V), K, V, tree234(K, V), tree234(K, V)).$/;-;/tree234__four/
tree234__glue	tree234.m	/^:- pred tree234__glue(tree234(K, V), tree234(K, V), tree234(K, V)).$/;-;/tree234__glue/
tree234__init	tree234.m	/^:- pred tree234__init(tree234(K, V)).$/;-;/tree234__init/
tree234__insert	tree234.m	/^:- pred tree234__insert(tree234(K, V), K, V, tree234(K, V)).$/;-;/tree234__insert/
tree234__keys	tree234.m	/^:- pred tree234__keys(tree234(K, V), list(K)).$/;-;/tree234__keys/
tree234__keys_2	tree234.m	/^:- pred tree234__keys_2(tree234(K, V), list(K), list(K)).$/;-;/tree234__keys_2/
tree234__lookup	tree234.m	/^:- pred tree234__lookup(tree234(K, V), K, V).$/;-;/tree234__lookup/
tree234__member	tree234.m	/^:- pred tree234__member(tree234(K, V), K, V).$/;-;/tree234__member/
tree234__remove	tree234.m	/^:- pred tree234__remove(tree234(K, V), K, V, tree234(K, V)).$/;-;/tree234__remove/
tree234__remove_smallest	tree234.m	/^:- pred tree234__remove_smallest(tree234(K, V), K, V, tree234(K, V)).$/;-;/tree234__remove_smallest/
tree234__search	tree234.m	/^:- pred tree234__search(tree234(K, V), K, V).$/;-;/tree234__search/
tree234__set	tree234.m	/^:- pred tree234__set(tree234(K, V), K, V, tree234(K, V)).$/;-;/tree234__set/
tree234__tree234_to_assoc_list	tree234.m	/^:- pred tree234__tree234_to_assoc_list(tree234(K, V), assoc_list(K, V)).$/;-;/tree234__tree234_to_assoc_list/
tree234__tree234_to_assoc_list_2	tree234.m	/^:- pred tree234__tree234_to_assoc_list_2(tree234(K, V), assoc_list(K, V),$/;-;/tree234__tree234_to_assoc_list_2/
tree234__update	tree234.m	/^:- pred tree234__update(tree234(K, V), K, V, tree234(K, V)).$/;-;/tree234__update/
tree234__values	tree234.m	/^:- pred tree234__values(tree234(K, V), list(V)).$/;-;/tree234__values/
tree234__values_2	tree234.m	/^:- pred tree234__values_2(tree234(K, V), list(V), list(V)).$/;-;/tree234__values_2/
two	tree234.m	/^	;	two(K, V, tree234(K, V), tree234(K, V))$/;-;/two/
type_info	mercury_builtin.m	/^:- type type_info(T) ---> type_info(base_type_info(T) /*, ... */).$/;-;/type_info/
type_to_term	mercury_builtin.m	/^:- pred type_to_term(T :: in, term :: out) is det.$/;-;/type_to_term/
type_to_univ	std_util.m	/^:- pred type_to_univ(T, univ).$/;-;/type_to_univ/
ui	mercury_builtin.m	/^:- mode ui :: unique -> unique.$/;-;/ui/
unify	mercury_builtin.m	/^:- pred unify(T::in, T::in) is semidet.$/;-;/unify/
uniq_array	uniq_array.m	/^:- inst uniq_array(I) = bound(unique_array(I)).$/;-;/uniq_array/
uniq_array__bounds	uniq_array.m	/^:- pred uniq_array__bounds(uniq_array(_T), int, int).$/;-;/uniq_array__bounds/
uniq_array__bsearch	uniq_array.m	/^:- pred uniq_array__bsearch(uniq_array(T), T, pred(T, T, comparison_result),$/;-;/uniq_array__bsearch/
uniq_array__bsearch_2	uniq_array.m	/^:- pred uniq_array__bsearch_2(uniq_array(T), int, int, T,$/;-;/uniq_array__bsearch_2/
uniq_array__copy	uniq_array.m	/^:- pred uniq_array__copy(uniq_array(T), uniq_array(T)).$/;-;/uniq_array__copy/
uniq_array__fetch_items	uniq_array.m	/^:- pred uniq_array__fetch_items(uniq_array(T), int, int, list(T)).$/;-;/uniq_array__fetch_items/
uniq_array__from_list	uniq_array.m	/^:- pred uniq_array__from_list(list(T), uniq_array(T)).$/;-;/uniq_array__from_list/
uniq_array__in_bounds	uniq_array.m	/^:- pred uniq_array__in_bounds(uniq_array(_T), int).$/;-;/uniq_array__in_bounds/
uniq_array__init	uniq_array.m	/^:- pred uniq_array__init(int, T, uniq_array(T)).$/;-;/uniq_array__init/
uniq_array__insert_items	uniq_array.m	/^:- pred uniq_array__insert_items(list(T), int, uniq_array(T), uniq_array(T)).$/;-;/uniq_array__insert_items/
uniq_array__lookup	uniq_array.m	/^:- pred uniq_array__lookup(uniq_array(T), int, T).$/;-;/uniq_array__lookup/
uniq_array__make_empty_array	uniq_array.m	/^:- pred uniq_array__make_empty_array(uniq_array(T)).$/;-;/uniq_array__make_empty_array/
uniq_array__max	uniq_array.m	/^:- pred uniq_array__max(uniq_array(_T), int).$/;-;/uniq_array__max/
uniq_array__min	uniq_array.m	/^:- pred uniq_array__min(uniq_array(_T), int).$/;-;/uniq_array__min/
uniq_array__resize	uniq_array.m	/^:- pred uniq_array__resize(uniq_array(T), int, T, uniq_array(T)).$/;-;/uniq_array__resize/
uniq_array__semidet_lookup	uniq_array.m	/^:- pred uniq_array__semidet_lookup(uniq_array(T), int, T).$/;-;/uniq_array__semidet_lookup/
uniq_array__semidet_set	uniq_array.m	/^:- pred uniq_array__semidet_set(uniq_array(T), int, T, uniq_array(T)).$/;-;/uniq_array__semidet_set/
uniq_array__semidet_slow_set	uniq_array.m	/^:- pred uniq_array__semidet_slow_set(uniq_array(T), int, T, uniq_array(T)).$/;-;/uniq_array__semidet_slow_set/
uniq_array__set	uniq_array.m	/^:- pred uniq_array__set(uniq_array(T), int, T, uniq_array(T)).$/;-;/uniq_array__set/
uniq_array__size	uniq_array.m	/^:- pred uniq_array__size(uniq_array(_T), int).$/;-;/uniq_array__size/
uniq_array__slow_set	uniq_array.m	/^:- pred uniq_array__slow_set(uniq_array(T), int, T, uniq_array(T)).$/;-;/uniq_array__slow_set/
uniq_array__to_list	uniq_array.m	/^:- pred uniq_array__to_list(uniq_array(T), list(T)).$/;-;/uniq_array__to_list/
uniq_array_skel	uniq_array.m	/^:- inst uniq_array_skel == uniq_array(free).$/;-;/uniq_array_skel/
uniq_four	tree234.m	/^:- inst uniq_four(K, V, T) =$/;-;/uniq_four/
uniq_tree234	tree234.m	/^:- inst uniq_tree234(K,V) =$/;-;/uniq_tree234/
unit	std_util.m	/^:- type unit		--->	unit.$/;-;/unit/
univ_to_type	std_util.m	/^:- pred univ_to_type(univ, T).$/;-;/univ_to_type/
unsorted_solutions	std_util.m	/^:- pred unsorted_solutions(pred(T), list(T)).$/;-;/unsorted_solutions/
unused	mercury_builtin.m	/^:- mode unused :: (free -> free).$/;-;/unused/
uo	mercury_builtin.m	/^:- mode uo :: free -> unique.$/;-;/uo/
uo_tree234	tree234.m	/^:- mode uo_tree234(K, V) :: free -> uniq_tree234(K, V).$/;-;/uo_tree234/
var	mercury_builtin.m	/^:- type var == int.$/;-;/var/
var_supply	mercury_builtin.m	/^:- type var_supply == int.$/;-;/var_supply/
variable	lexer.m	/^	;	variable(string)$/;-;/variable/
varset	varset.m	/^:- type varset		--->	varset($/;-;/varset/
varset__bind_var	varset.m	/^:- pred varset__bind_var(varset, var, term, varset).$/;-;/varset__bind_var/
varset__bind_vars	varset.m	/^:- pred varset__bind_vars(varset, substitution, varset).$/;-;/varset__bind_vars/
varset__bind_vars_2	varset.m	/^:- pred varset__bind_vars_2(assoc_list(var, term), varset, varset).$/;-;/varset__bind_vars_2/
varset__create_name_var_map	varset.m	/^:- pred varset__create_name_var_map(varset, map(string, var)).$/;-;/varset__create_name_var_map/
varset__delete_var	varset.m	/^:- pred varset__delete_var(varset, var, varset).$/;-;/varset__delete_var/
varset__delete_vars	varset.m	/^:- pred varset__delete_vars(varset, list(var), varset).$/;-;/varset__delete_vars/
varset__ensure_unique_names	varset.m	/^:- pred varset__ensure_unique_names(list(var), string, varset, varset).$/;-;/varset__ensure_unique_names/
varset__ensure_unique_names_2	varset.m	/^:- pred varset__ensure_unique_names_2(list(var), string, set(string),$/;-;/varset__ensure_unique_names_2/
varset__ensure_unique_names_3	varset.m	/^:- pred varset__ensure_unique_names_3(string, string, set(string), string).$/;-;/varset__ensure_unique_names_3/
varset__get_bindings	varset.m	/^:- pred varset__get_bindings(varset, substitution).$/;-;/varset__get_bindings/
varset__init	varset.m	/^:- pred varset__init(varset).$/;-;/varset__init/
varset__is_empty	varset.m	/^:- pred varset__is_empty(varset).$/;-;/varset__is_empty/
varset__lookup_name	varset.m	/^:- pred varset__lookup_name(varset, var, string).$/;-;/varset__lookup_name/
varset__lookup_vars	varset.m	/^:- pred varset__lookup_vars(varset, substitution).$/;-;/varset__lookup_vars/
varset__merge	varset.m	/^:- pred varset__merge(varset, varset, list(term), varset, list(term)).$/;-;/varset__merge/
varset__merge_subst	varset.m	/^:- pred varset__merge_subst(varset, varset, varset, substitution).$/;-;/varset__merge_subst/
varset__merge_subst_2	varset.m	/^:- pred varset__merge_subst_2(var_supply, var_supply, map(var, string),$/;-;/varset__merge_subst_2/
varset__name_var	varset.m	/^:- pred varset__name_var(varset, var, string, varset).$/;-;/varset__name_var/
varset__new_var	varset.m	/^:- pred varset__new_var(varset, var, varset).$/;-;/varset__new_var/
varset__new_vars	varset.m	/^:- pred varset__new_vars(varset, int, list(var), varset).$/;-;/varset__new_vars/
varset__new_vars_2	varset.m	/^:- pred varset__new_vars_2(varset, int, list(var), list(var), varset).$/;-;/varset__new_vars_2/
varset__search_name	varset.m	/^:- pred varset__search_name(varset, var, string).$/;-;/varset__search_name/
varset__search_var	varset.m	/^:- pred varset__search_var(varset, var, term).$/;-;/varset__search_var/
varset__set_bindings	varset.m	/^:- pred varset__set_bindings(varset, substitution, varset).$/;-;/varset__set_bindings/
varset__var_name_list	varset.m	/^:- pred varset__var_name_list(varset, assoc_list(var, string)).$/;-;/varset__var_name_list/
varset__vars	varset.m	/^:- pred varset__vars(varset, list(var)).$/;-;/varset__vars/
varset__vars_2	varset.m	/^:- pred varset__vars_2(var_supply, var_supply, list(var),$/;-;/varset__vars_2/
x	ops.m	/^	--->	x ; y.$/;-;/x/
xf	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/xf/
xfx	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/xfx/
xfy	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/xfy/
y	ops.m	/^	--->	x ; y.$/;-;/y/
yes	bool.m	/^:- type bool ---> yes ; no.$/;-;/yes/
yf	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/yf/
yfx	ops.m	/^	--->	fx ; fy ; xf ; yf ; xfx ; yfx ; xfy ; fxx ; fxy ; fyx.$/;-;/yfx/
