:- module list.
:- interface.
:- import_module std_util.
:- inst ((list:list_skel(I))) = bound('.'(I, list:list_skel(I)) ; '[]').
:- inst ((list:list_skel)) = list:list_skel(free).
:- inst ((list:non_empty_list)) = bound('.'(ground, ground)).
:- mode ((list:in_list_skel)) :: (list:list_skel -> list:list_skel).
:- mode ((list:out_list_skel)) :: (free -> list:list_skel).
:- mode ((list:list_skel_out)) :: (list:list_skel -> ground).
:- mode ((list:input_list_skel)) :: list:in_list_skel.
:- mode ((list:output_list_skel)) :: list:out_list_skel.
:- mode ((list:list_skel_output)) :: list:list_skel_out.
:- mode ((list:list_skel_in(I))) :: (list:list_skel(I) -> list:list_skel(I)).
:- mode ((list:list_skel_out(I))) :: (free -> list:list_skel(I)).
