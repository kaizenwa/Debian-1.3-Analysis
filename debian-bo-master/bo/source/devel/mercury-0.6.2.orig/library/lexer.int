:- module lexer.
:- interface.
:- import_module char, string, int, float, list, std_util, io.
:- type (lexer:token)
	--->	name(string)
	;	variable(string)
	;	integer(int)
	;	float(float)
	;	string(string)
	;	open
	;	open_ct
	;	close
	;	open_list
	;	close_list
	;	open_curly
	;	close_curly
	;	ht_sep
	;	comma
	;	end
	;	junk(character)
	;	error(string)
	;	io_error((io:io__error))
	;	eof.
:- type (lexer:token_context) == int.
:- type (lexer:token_list) == (mercury_builtin:list((std_util:pair((lexer:token), (lexer:token_context))))).
:- pred lexer:lexer__get_token_list((lexer:token_list), (io:io__state), (io:io__state)).
:- mode lexer:lexer__get_token_list(mercury_builtin:out, mercury_builtin:di, mercury_builtin:uo) is det.
:- pred lexer:lexer__token_to_string((lexer:token), string).
:- mode lexer:lexer__token_to_string(mercury_builtin:in, mercury_builtin:out) is det.
