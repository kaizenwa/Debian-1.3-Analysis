# Makefile for the Netwide Assembler under 16-bit DOS
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.
#
# This Makefile is designed to build NASM using a 16-bit DOS C
# compiler such as Borland C, and has been tested with Borland C 2.3
# and Borland Make.

# CC = cl
# CCFLAGS = /c /O /AL
# LINK = cl
CC = bcc
CCFLAGS = -c -O -ml -A
LINK = tlink /c /Lc:\bc\lib
LINKFLAGS =
LIBRARIES =
EXE = .exe#
OBJ = obj#

.c.$(OBJ):
        $(CC) $(CCFLAGS) $*.c

NASMOBJS1 = nasm.$(OBJ) nasmlib.$(OBJ) float.$(OBJ) insnsa.$(OBJ)
NASMOBJS2 = assemble.$(OBJ) labels.$(OBJ) parser.$(OBJ) outform.$(OBJ)
NASMOBJS3 = outbin.$(OBJ) outaout.$(OBJ) outcoff.$(OBJ) outelf.$(OBJ)
NASMOBJS4 = outobj.$(OBJ) outas86.$(OBJ) outdbg.$(OBJ) outrdf.$(OBJ)

NASMOBJS = $(NASMOBJS1) $(NASMOBJS2) $(NASMOBJS3) $(NASMOBJS4)

NDISASMOBJS = ndisasm.$(OBJ) disasm.$(OBJ) sync.$(OBJ) nasmlib.$(OBJ) \
              insnsd.$(OBJ)

all : nasm$(EXE) ndisasm$(EXE)

# We have to have a horrible kludge here to get round the 128 character
# limit, as usual...
nasm$(EXE): $(NASMOBJS)
#       $(LINK) /Fenasm.exe a*.obj f*.obj insnsa.obj l*.obj na*.obj o*.obj p*.obj
        echo c0l.obj $(NASMOBJS1) +> nasmobjs.tmp
        echo $(NASMOBJS2) +>> nasmobjs.tmp
        echo $(NASMOBJS3) +>> nasmobjs.tmp
        echo $(NASMOBJS4),nasm.exe,,cl.lib, >> nasmobjs.tmp
        $(LINK) /Tde @nasmobjs.tmp

ndisasm$(EXE): $(NDISASMOBJS)
#       $(LINK) /Fendisasm.exe $(NDISASMOBJS)
        $(LINK) /Tde $(NDISASMOBJS),ndisasm.exe,,cl.lib,

assemble.$(OBJ): assemble.c nasm.h assemble.h insns.h
disasm.$(OBJ): disasm.c nasm.h disasm.h sync.h insns.h names.c
float.$(OBJ): float.c nasm.h
insnsa.$(OBJ): insnsa.c nasm.h insns.h
insnsd.$(OBJ): insnsd.c nasm.h insns.h
labels.$(OBJ): labels.c nasm.h nasmlib.h
nasm.$(OBJ): nasm.c nasm.h nasmlib.h parser.h assemble.h labels.h outform.h
nasmlib.$(OBJ): nasmlib.c nasm.h nasmlib.h
ndisasm.$(OBJ): ndisasm.c nasm.h sync.h disasm.h
outas86.$(OBJ): outas86.c nasm.h nasmlib.h
outaout.$(OBJ): outaout.c nasm.h nasmlib.h
outbin.$(OBJ): outbin.c nasm.h nasmlib.h
outcoff.$(OBJ): outcoff.c nasm.h nasmlib.h
outdbg.$(OBJ): outdbg.c nasm.h nasmlib.h
outelf.$(OBJ): outelf.c nasm.h nasmlib.h
outobj.$(OBJ): outobj.c nasm.h nasmlib.h
outrdf.$(OBJ): outrdf.c nasm.h nasmlib.h
outform.$(OBJ): outform.c outform.h nasm.h
parser.$(OBJ): parser.c nasm.h nasmlib.h parser.h float.h names.c
sync.$(OBJ): sync.c sync.h

clean :
        del *.obj
        del nasm$(EXE)
        del ndisasm$(EXE)
