	These are the tools that are used to generate DLL jumptable libraries.

	The stuff under doc is some documentation that describes it
all.  If you have groff, you can format this document in
postscript/dvi/ascii/whatever and get a nice printout.  If I feel like
uploading a large file, I may leave the postscript version in that
directory before packing the distribution.  The README.* files explain
how all of the tools work.  The postscript version should be current
with version 2.9 of the tools.  If you do not want to print out the
whole manual, you can see the file doc/table_description for the most
recent list of supported libraries.

	The stuff under example is a very simple example of how
sharable libraries work under linux.  You can just go down there and
type "make" to build the sharable library, and then you can type "make
testit" to generate a test program.  You must first compile and
install the tools before you can run this test.

	The stuff in the tools directory is the source code for the
various tools used to build the sharable libraries.  Please use the
"make install" target in the tools directory to properly install the
tools - they do not simply get copied to /usr/bin.

	With version 2.7, there is a call to ___main in the last slot
of the jump table which calls all of the constructors for global
objects that may be in the sharable library.  This should improve
operation with libraries that contain C++ code.

	NOTE: BINARIES LINKED TO STUB LIBRARIES GENERATED BY TOOLS 2.7
AND LATER WILL NOT RUN WITH SHARED IMAGES GENERATED BY TOOLS 2.6 AND
EARLIER.  THIS IS BECAUSE OF THE CALL TO __main IN THE JUMP TABLE TO
INITIALIZE THE CONSTRUCTORS.

	As of version 2.16, the tools have been moved to /usr/bin.
Earlier versions of the dll tools required users' Makefiles to reference
the /usr/dll directory; unless you don't think you will be encountering
any such older Makefiles, you should do "make install-compat" in the tools
directory to install a backwards-compatible set of symlinks in /usr/dll.
