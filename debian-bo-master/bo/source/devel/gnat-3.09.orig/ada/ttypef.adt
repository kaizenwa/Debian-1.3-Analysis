------------------------------------------------------------------------------
--                                                                          --
--                         GNAT COMPILER COMPONENTS                         --
--                                                                          --
--                               T T Y P E F                                --
--                                                                          --
--                             T e m p l a t e                              --
--                                                                          --
--                            $Revision: 1.14 $                             --
--                                                                          --
--        Copyright (C) 1992,1993,1994 Free Software Foundation, Inc.       --
--                                                                          --
-- GNAT is free software;  you can  redistribute it  and/or modify it under --
-- terms of the  GNU General Public License as published  by the Free Soft- --
-- ware  Foundation;  either version 2,  or (at your option) any later ver- --
-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --
-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --
-- for  more details.  You should have  received  a copy of the GNU General --
-- Public License  distributed with GNAT;  see file COPYING.  If not, write --
-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --
-- MA 02111-1307, USA.                                                      --
--                                                                          --
-- GNAT was originally developed  by the GNAT team at  New York University. --
-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --
--                                                                          --
------------------------------------------------------------------------------

--  This module contains values for the predefined floating-point attributes.
--  All references to these attribute values in a program being compiled must
--  use the values in this package, not the values returned by referencing
--  the corresponding attributes (since that would give host machine values).

--  The file containing the source for this package (file ttypef.ads) is
--  constructed from the template ttypef.adt (using the utility program
--  built by compiling file mkttypef.c)

--  For more information see ttypes.ads

package Ttypef is

   --------------------
   -- Insertion Keys --
   --------------------

   --  In the template, a sequence of a percent sign and three characters taa
   --  is replaced by the appropriate target specific value. The character t
   --  indicates the float type involved:

   --     F    Short_Float
   --     f    Float
   --     d    Long_Float
   --     D    Long_Long_Float

   --  The characters aa indicate the attribute involved

   --     DN   'Denorm
   --     EP   'Epsilon
   --     EX   'Emax
   --     FS   'First
   --     LG   'Large
   --     LS   'Last
   --     MA   'Mantissa
   --     MM   'Machine_Mantissa
   --     MN   'Machine_Emin
   --     MO   'Machine_Overflows
   --     MR   'Machine_Radix
   --     MX   'Machine_Emax
   --     OE   'Model_Epsilon
   --     OM   'Model_Mantissa
   --     ON   'Model_Emin
   --     OS   'Model_Small
   --     RN   'Machine_Rounds
   --     SF   'Safe_First
   --     SL   'Safe_Large
   --     SM   'Safe_Small
   --     SS   'Safe_Last
   --     SX   'Safe_Emax
   --     SZ   'Signed_Zeros

   --  The utility program mkttypef.c reads this template as input and
   --  replaces the above sequences with the proper values deduced from the
   --  appropriate GCC configuration files.

   ------------------------------
   -- Boolean Attribute Values --
   ------------------------------

   Short_Float_Attr_Denorm                  : constant Boolean := %FDN;
   Float_Attr_Denorm                        : constant Boolean := %fDN;
   Long_Float_Attr_Denorm                   : constant Boolean := %dDN;
   Long_Long_Float_Attr_Denorm              : constant Boolean := %DDN;

   Short_Float_Attr_Machine_Overflows       : constant Boolean := %FMO;
   Float_Attr_Machine_Overflows             : constant Boolean := %fMO;
   Long_Float_Attr_Machine_Overflows        : constant Boolean := %dMO;
   Long_Long_Float_Attr_Machine_Overflows   : constant Boolean := %DMO;

   Short_Float_Attr_Machine_Rounds          : constant Boolean := %FRN;
   Float_Attr_Machine_Rounds                : constant Boolean := %fRN;
   Long_Float_Attr_Machine_Rounds           : constant Boolean := %dRN;
   Long_Long_Float_Attr_Machine_Rounds      : constant Boolean := %DRN;

   Short_Float_Attr_Signed_Zeros            : constant Boolean := %FSZ;
   Float_Attr_Signed_Zeros                  : constant Boolean := %fSZ;
   Long_Float_Attr_Signed_Zeros             : constant Boolean := %dSZ;
   Long_Long_Float_Attr_Signed_Zeros        : constant Boolean := %DSZ;

   ----------------------------------
   -- Universal Integer Attributes --
   ----------------------------------

   Short_Float_Attr_Emax                    : constant := %FEX;
   Float_Attr_Emax                          : constant := %fEX;
   Long_Float_Attr_Emax                     : constant := %dEX;
   Long_Long_Float_Attr_Emax                : constant := %DEX;

   Short_Float_Attr_Machine_Emax            : constant := %FMX;
   Float_Attr_Machine_Emax                  : constant := %fMX;
   Long_Float_Attr_Machine_Emax             : constant := %dMX;
   Long_Long_Float_Attr_Machine_Emax        : constant := %DMX;

   Short_Float_Attr_Machine_Emin            : constant := %FMN;
   Float_Attr_Machine_Emin                  : constant := %fMN;
   Long_Float_Attr_Machine_Emin             : constant := %dMN;
   Long_Long_Float_Attr_Machine_Emin        : constant := %DMN;

   Short_Float_Attr_Machine_Mantissa        : constant := %FMM;
   Float_Attr_Machine_Mantissa              : constant := %fMM;
   Long_Float_Attr_Machine_Mantissa         : constant := %dMM;
   Long_Long_Float_Attr_Machine_Mantissa    : constant := %DMM;

   Short_Float_Attr_Machine_Radix           : constant := %FMR;
   Float_Attr_Machine_Radix                 : constant := %fMR;
   Long_Float_Attr_Machine_Radix            : constant := %dMR;
   Long_Long_Float_Attr_Machine_Radix       : constant := %DMR;

   Short_Float_Attr_Mantissa                : constant := %FMA;
   Float_Attr_Mantissa                      : constant := %fMA;
   Long_Float_Attr_Mantissa                 : constant := %dMA;
   Long_Long_Float_Attr_Mantissa            : constant := %DMA;

   Short_Float_Attr_Model_Emin              : constant := %FON;
   Float_Attr_Model_Emin                    : constant := %fON;
   Long_Float_Attr_Model_Emin               : constant := %dON;
   Long_Long_Float_Attr_Model_Emin          : constant := %DON;

   Short_Float_Attr_Model_Mantissa          : constant := %FOM;
   Float_Attr_Model_Mantissa                : constant := %fOM;
   Long_Float_Attr_Model_Mantissa           : constant := %dOM;
   Long_Long_Float_Attr_Model_Mantissa      : constant := %DOM;

   Short_Float_Attr_Safe_Emax               : constant := %FSX;
   Float_Attr_Safe_Emax                     : constant := %fSX;
   Long_Float_Attr_Safe_Emax                : constant := %dSX;
   Long_Long_Float_Attr_Safe_Emax           : constant := %DSX;

   -------------------------------
   -- Universal Real Attributes --
   -------------------------------

   Short_Float_Attr_Epsilon                 : constant :=
     %FEP;
   Float_Attr_Epsilon                       : constant :=
     %fEP;
   Long_Float_Attr_Epsilon                  : constant :=
     %dEP;
   Long_Long_Float_Attr_Epsilon             : constant :=
     %DEP;

   Short_Float_Attr_Large                   : constant :=
     %FLG;
   Float_Attr_Large                         : constant :=
     %fLG;
   Long_Float_Attr_Large                    : constant :=
     %dLG;
   Long_Long_Float_Attr_Large               : constant :=
     %DLG;

   Short_Float_Attr_Model_Epsilon           : constant :=
     %FOE;
   Float_Attr_Model_Epsilon                 : constant :=
     %fOE;
   Long_Float_Attr_Model_Epsilon            : constant :=
     %dOE;
   Long_Long_Float_Attr_Model_Epsilon       : constant :=
     %DOE;

   Short_Float_Attr_Model_Small             : constant :=
     %FOS;
   Float_Attr_Model_Small                   : constant :=
     %fOS;
   Long_Float_Attr_Model_Small              : constant :=
     %dOS;
   Long_Long_Float_Attr_Model_Small         : constant :=
     %DOS;

   Short_Float_Attr_Safe_First              : constant :=
     %FSF;
   Float_Attr_Safe_First                    : constant :=
     %fSF;
   Long_Float_Attr_Safe_First               : constant :=
     %dSF;
   Long_Long_Float_Attr_Safe_First          : constant :=
     %DSF;

   Short_Float_Attr_Safe_Large              : constant :=
     %FSL;
   Float_Attr_Safe_Large                    : constant :=
     %fSL;
   Long_Float_Attr_Safe_Large               : constant :=
     %dSL;
   Long_Long_Float_Attr_Safe_Large          : constant :=
     %DSL;

   Short_Float_Attr_Safe_Last               : constant :=
     %FSS;
   Float_Attr_Safe_Last                     : constant :=
     %fSS;
   Long_Float_Attr_Safe_Last                : constant :=
     %dSS;
   Long_Long_Float_Attr_Safe_Last           : constant :=
     %DSS;

   Short_Float_Attr_Safe_Small              : constant :=
     %FSM;
   Float_Attr_Safe_Small                    : constant :=
     %fSM;
   Long_Float_Attr_Safe_Small               : constant :=
     %dSM;
   Long_Long_Float_Attr_Safe_Small          : constant :=
     %DSM;

   ----------------------
   -- Typed Attributes --
   ----------------------

   --  The attributes First and Last are typed attributes in Ada, and yield
   --  values of the appropriate float type. However we still describe them
   --  as universal real values in this file, since we are talking about the
   --  target floating-point types, not the host floating-point types.

   Short_Float_Attr_First                   : constant :=
     %FFS;
   Float_Attr_First                         : constant :=
     %fFS;
   Long_Float_Attr_First                    : constant :=
     %dFS;
   Long_Long_Float_Attr_First               : constant :=
     %DFS;

   Short_Float_Attr_Last                    : constant :=
     %FLS;
   Float_Attr_Last                          : constant :=
     %fLS;
   Long_Float_Attr_Last                     : constant :=
     %dLS;
   Long_Long_Float_Attr_Last                : constant :=
     %DLS;

end Ttypef;
