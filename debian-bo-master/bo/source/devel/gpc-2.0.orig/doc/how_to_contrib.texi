@node How to Contribute
@chapter How @emph{you} can contribute to GNU Pascal

Below you can find a list of jobs which should be done for GNU Pascal.
In cases where somebody is already working on it, the name of that
person is written behind the job's description together with the status
of the project; e-mail addresses are given below.

If there is already a name behind a job, this does @emph{not} mean that
you shouldn't do that but just that you should get in contact with that
person if you would like to contribute to that field.

Don't forget to join the GPC mailing list, @code{gpc@@hut.fi}.  To
subscribe, write to
@smallexample
  gpc-request@@hut.fi
@end smallexample

Welcome to the GNU Pascal development team!

@section List of jobs

@example
Overall coordination                    Juki, Peter         works ;-)
Coordination with GCC developers         ?                   ?
Merge into GCC main distribution        JanJaap             planned

ISO 7185 Standard Pascal                Juki                Level 0 works
ISO 10206 Extended Pascal               Juki                90%
Object Pascal                            ?
Borland Pascal 7.0                      Peter               80%
Delphi                                   ?
Pascal-SC                               Peter               please help!
Compiler options to force one standard  Peter               planned

Win32 version                           JanJaap             works

Documentation                           JanJaap, Peter      existing ;-)

Type checking                           Juki                 ?
Automatic make                          Peter               works
Objects: C++ code compatibility         Peter               planned
Objects: multiple inheritance           Peter               planned
PXSC module syntax                      Peter               planned
Procedure overloading                   Peter               planned
Precompiled module interfaces           Peter               works

Run time system                         Juki                works
I/O error handling                       ?
Turbo compatible DOS, CRT, ...           ?                  ask Peter
Turbo compatible Graph                  Sven                70%
Turbo Vision compatible library          ?
POSIX library (replacement for DOS)     Berend              to be ported
Replacement for (parts of) CRT          Peter               beta (BO5)
Replacement for Graph                   Peter               planned (BO5)
Replacement for Turbo Vision            Peter               planned (BO5)

Adaption of the RHIDE IDE (for DOS)     Robert              beta
Adaption of the XWPE IDE (for UNIX)      ?
Pascal mode for GDB, the GNU Debugger   JanJaap             planned
@end example

@section List of done jobs :-)

@example
EMX version (DOS and OS/2)              Peter               works
DJ version (DOS)                        JanJaap             works
Cross compilers Linux -> others         JanJaap             works

Installation instructions               JanJaap, Peter      done
@end example

@section List of contributors (in alphabetical order)

@example
Berend              Berend de Boer, Nederlands
                    <berend@@pobox.com>

JanJaap             Jan-Jaap van der Heijden, Nederlands
                    <j.j.vanderheijden@@student.utwente.nl>

Juki                Jukka Virtanen, Finland
                    <jtv@@hut.fi>

Peter               Peter Gerwinski, Germany
                    <peter.gerwinski@@uni-essen.de>

Robert              Robert Hoehne, Germany
                    <robert.hoehne@@mathematik.tu-chemnitz.de>

Sven                Sven Hilscher, Germany
                    <sven@@rufus.central.de>
@end example

