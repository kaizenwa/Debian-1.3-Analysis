
*******************************************************************************
**************************  README FOR VMS SYSTEMS ****************************
*******************************************************************************
                                                                   May 12, 1994
                                                                   Rick Flower 
                                                    <flower@donald.sp.trw.com>
                                                    <flower@sdvax2.sp.trw.com>


This file documents the differences between C2MAN for Unix and C2MAN for VMS
systems.  The are some requirements that must be met in order to run C2MAN for
VMS that are listed below.  You **CAN** (or should be able to) run C2MAN on
VAX/AXP systems if you just install the GNU-CPP (see #1 below) since the
there is no GNU-CC that supports the AXP architecture yet.

	1) You must either install a full GCC distribution OR install just the
	   CPP that is part of the standard CPP program!  If you are unable to
           install the entire GCC system, the CPP program can be compiled and
           built very easily directly from the main GCC distribution on any
	   GNU Anonymous FTP site (such as prep.ai.mit.edu in /pub/gnu or
	   on gatekeeper.dec.com in /pub/GNU).  There is a command file that
           is part of the distribution that will make CPP.EXE using the 
           standard CC (Vax-C or DEC-C) that you have..

	2) You will need BISON and FLEX which are also standard GNU tools that
           can be made to run under VMS.  If I recall correctly, FLEX will
           once again compile right-out-of-the-box and can be retrieved from
           any GNU site (see #1 above for examples).  BISON on the other hand
           appears to have some problems being built as of a while back.. I 
           highly suggest that you look on one of the VMS fileserv's or any
           other VMS FTP site to find a copy of BISON for VMS..  The install
           procedure that is part of the standard GNU source distribution seems
           to be a bit broken.. I got my version of BISON from one of the 
           prebuilt GCC distributions available from DECUS (you might try on
           nic.switch.ch in /mirror/vms/DECUS/vms93a/gccvms if you can't find
           it elsewhere!).

	3) Once you've got the above requirements met, go into the [.vms]
           directory and edit the MAKE.COM and make any necessary changes to
           the CC,CFLAGS,LFLAGS, and the OPTFILE statement to indicate whether
           you are using GCC or plain VAX-C.. (DEC-C should work without too 
           much work!).  Once the changes are complete, make sure that you are
           in the [.C2MAN] directory and then invoke @[.VMS]MAKE to build it.
           You should end up with a C2MAN.EXE after a short period of time..  

	4) Before you invoke C2MAN, MAKE ABSOLUTELY SURE THAT YOU'VE GOT A 
           SYMBOL SETUP CALLED "CPP" THAT WILL INVOKE THE GNU-CPP PROGRAM!!! If
           you don't have a symbol setup, C2MAN will FAIL to run!  You can set
           a symbol for CPP using the following as an example :

		$ CPP == $GNU_CC:[000000]GCC-CPP.EXE

	   Just change the drive / directory specification to point to where 
           you've got your CPP located.  You can test whether or not CPP is
           working by invoking CPP at the "$" and press return.. You won't see
           anything happen until you press CTRL-Z and you get something like :

		$ CPP
		*EXIT*   (in reverse video!)
                # 1 ""
                $

	   If you don't get that then you've not defined your CPP correctly..

	5) When you go and use C2MAN options that are uppercase letters, you
           **MUST** quote them otherwise DCL will automatically change them
           into lowercase letters which will probably cause C2MAN to complain
           about unrecognized options being specified on the command line!!!
           In other words, the following two commands are *NOT* identical in
           function :

		$ C2MAN -V
                c2man: reading standard input

                and
                $ C2MAN -"V"
                c2man: Version 2, Patchlevel 27
                c2man: reading standard input
                c2man: running `cpp -"C" -"D__C2MAN__=2" "-"'
