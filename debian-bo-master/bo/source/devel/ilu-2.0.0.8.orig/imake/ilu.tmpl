/*
 Copyright (c) 1991-1995 Xerox Corporation.  All Rights Reserved.  
 Unlimited use, reproduction, and distribution of this software is
 permitted.  Any copy of this software must include both the above
 copyright notice of Xerox Corporation and this paragraph.  Any
 distribution of this software must comply with all applicable United
 States export control laws.  This software is made available AS IS,
 and XEROX CORPORATION DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED,
 INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY
 AND FITNESS FOR A PARTICULAR PURPOSE, AND NOTWITHSTANDING ANY OTHER
 PROVISION CONTAINED HEREIN, ANY LIABILITY FOR DAMAGES RESULTING FROM
 THE SOFTWARE OR ITS USE IS EXPRESSLY DISCLAIMED, WHETHER ARISING IN
 CONTRACT, TORT (INCLUDING NEGLIGENCE) OR STRICT LIABILITY, EVEN IF
 XEROX CORPORATION IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

 $Id: ilu.tmpl,v 1.12 1996/07/03 00:28:44 janssen Exp $
*/

#include "ilu.defs.new"

MACROFILE = MacroIncludeFile

.SUFFIXES: .PS .do .o .ih .eh .fwm .snf .rtx .c .s .spp .y .l .ch .mss .fdb .bdf .fb .pcf

#ifdef ConstructMFLAGS
MFLAGS = -$(MAKEFLAGS)
#endif /* ConstructMFLAGS */

ALL_INCLUDES = -I. $(LOCALINCLUDES) $(INCLUDES)
ALL_DEFINES = $(STD_DEFINES) $(DEFINES) $(BSDDEFINE) $(POSIXDEFINE)
CFLAGS = $(COMPILERFLAGS) $(CDEBUGFLAGS) $(ALL_INCLUDES) $(ALL_DEFINES)
TESTING_CFLAGS = -DTESTINGONLYTESTING $(CFLAGS)
CLASSFLAGS = $(CLASSINCLUDES)
LDFLAGS = $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)
INSTUIDFLAGS = -m 4755
#if hp9000s800
INSTLIBFLAGS = -m 0775
#else
INSTLIBFLAGS = -m 0664
#endif
INSTINCFLAGS = -m 0444
INSTMANFLAGS = -m 0444
INSTAPPFLAGS = -m 0444
INSTPROGFLAGS = -m 0555
INSTPROGRWFLAGS = -m 0755
INSTCLASSPROGFLAGS = $(INSTPROGFLAGS)

/* end changeable items */

M3FLAGS = -make -why -w1 $(M3DEBUGFLAGS) $(LOCALM3FLAGS)

CC = $(ANSI_C_COMPILER)

#ifdef WORK_IN_SOURCE_TREE

ILUCINCLUDES = -I../../runtime/c -I../../runtime/kernel $(SECURITYINCLUDES)
ILUCLIBS = ../../runtime/c/libilu-c.a ../../runtime/kernel/libilu.a $(SECURITYLIBS)

ILUCPLUSPLUSINCLUDES = -I../../runtime/cpp -I../../runtime/kernel $(SECURITYINCLUDES)
ILUCPLUSPLUSLIBS = ../../runtime/cpp/libilu-c++.a ../../runtime/kernel/libilu.a $(SECURITYLIBS)

CPLUSPLUS_STUBBER=../../stubbers/cpp/c++-stubber
C_STUBBER=../../stubbers/c/c-stubber
M3_STUBBER=../../stubbers/m3/m3-stubber
LISP_STUBBER=../../stubbers/lisp/lisp-stubber
PYTHON_STUBBER=../../stubbers/python/python-stubber
IDL2ISL=../../stubbers/idl2isl/idl2isl

#else

ILUCINCLUDES = -I$(ILUHOME)/include $(SECURITYINCLUDES)
ILUCLIBS = $(ILUHOME)/lib/libilu-c.a $(ILUHOME)/lib/libilu.a $(SECURITYLIBS)

ILUCPLUSPLUSINCLUDES = -I$(ILUHOME)/include $(SECURITYINCLUDES)
ILUCPLUSPLUSLIBS = $(ILUHOME)/lib/libilu-c++.a $(ILUHOME)/lib/libilu.a $(SECURITYLIBS)

CLASS_STUBBER=$(ILUHOME)/bin/class-stubber
CPLUSPLUS_STUBBER=$(ILUHOME)/bin/c++-stubber
FORTRAN_STUBBER=$(ILUHOME)/bin/fortran-stubber
C_STUBBER=$(ILUHOME)/bin/c-stubber
M3_STUBBER=$(ILUHOME)/bin/m3-stubber
LISP_STUBBER=$(ILUHOME)/bin/lisp-stubber
PYTHON_STUBBER=$(ILUHOME)/bin/python-stubber
IDL2ISL=$(ILUHOME)/bin/idl2isl

#endif /* def WORK_IN_SOURCE_TREE */

TEXINFO2PS = $(ILUHOME)/bin/texinfo2ps
TEXINFO2INFO = $(ILUHOME)/bin/texinfo2info
TIM = $(ILUHOME)/bin/tim

IMAKE_CMD = $(IMAKE) -Tilu.tmpl -I. -s Makefile
DOTDOTIMAKE_CMD = $(IMAKE) -Tilu.tmpl -I. -s Makefile

#include "ilu.rules"

All:: all
Doc:: doc
doc:: install.doc
Aliases:: aliases
aliases:: install.alias
Install:: install
install:: all install.time doc
system: Install
World:: world
world:: depend install aliases
Tidy:: tidy
Dist:: dist
Clean:: clean
clean:: tidy

dependInstall:: depend
	make DESTDIR=$(DESTDIR) install

dependAll:: depend
	make DESTDIR=$(DESTDIR) all

depend::
all::

dist::

dependInstallClean:: depend install clean

GenericCleanTarget()
MakefileTarget()
TagsTarget()

#include INCLUDE_IMAKEFILE

Makefiles:: Imakefile

#ifdef IHaveSubdirs

dependInstallClean::
	@case '$(MFLAGS)' in *[ik]*) set +e;; esac; \
 for i in $(SUBDIRS); \
 do \
 (cd $$i; echo "building (dependInstall) (`pwd`)"; \
 $(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' dependInstallClean) \
 done

DistSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
MakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
DependMakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
InstallSubdirs($(SUBDIRS))
InstallDocSubdirs($(SUBDIRS))
InstallAliasSubdirs($(SUBDIRS))
DependInstallSubdirs($(SUBDIRS))
WorldInstallSubdirs($(SUBDIRS))
CleanSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TidySubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TagSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
MakefileSubdirs($(SUBDIRS) $(EXTRASUBDIRS))

#endif /* IHaveSubdirs */

install.time::
	touch install.time

install.doc::
	touch install.doc

install.alias::
