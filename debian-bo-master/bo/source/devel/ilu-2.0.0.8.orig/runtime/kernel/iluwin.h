/* iluwin.h -- generated by hand for Windows (on UNIX use iluconf.h)
/* 
/* To be processed by Autoconf
/* 
/*/

#if (defined(WIN16) && !defined(M_I86LM))
#error "Windows ILU must used large memory model."
#endif

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define if your processor stores words with the most significant
   byte first (like Motorola and SPARC, unlike Intel and VAX).  */
/* #define WORDS_BIGENDIAN 1 */

/* The number of bytes in a char */
#define SIZEOF_CHAR 1

/* The number of bytes in a short */
#define SIZEOF_SHORT 2

/* The number of bytes in an int.  */
#if defined(WIN16)
#define SIZEOF_INT 2
#elif defined(WIN32)
#define SIZEOF_INT 4
#endif

/* The number of bytes in a long.  */
#define SIZEOF_LONG 4

/* The number of bytes in a void *.  */
#define SIZEOF_VOID_P 4

/* The number of bytes in a function pointer (void (*) (void)) */
#define SIZEOF_FN_P 4

/* The number of bytes in a long long.  */
#define SIZEOF_LONG_LONG 0

/* The number of bytes in a long double.  */
#define SIZEOF_LONG_DOUBLE 0 

/* The number of bytes in an enum.  */
#if defined(WIN32)
#define SIZEOF_ENUM 4
#elif defined(WIN16)
#define SIZEOF_ENUM 2
#endif

/* Whether there's a natural mapping for LONG CARDINAL */
/* #undef LONG_CARDINAL_TYPE */

/* Whether there's a natural mapping for LONG INTEGER */
/* #undef LONG_INTEGER_TYPE */

/* Whether there's a natural mapping for LONG REAL */
/* #define LONG_REAL_TYPE long double */

/* Define as the return type of signal handlers (int or void).  */
#define RETSIGTYPE void

/* Define this to be the appropriate type to use for places where "size_t" should really be used. */
#define SIZE_T size_t

/* Define this if you have alloca() in your libc */
#undef HAVE_ALLOCA

/* Define if you don't have vprintf but do have _doprnt.  */
/* #undef HAVE_DOPRNT */

/* Define if you have the vprintf function.  */
#define HAVE_VPRINTF 1

/* Define if you have the gettimeofday function.  */
/* #define HAVE_GETTIMEOFDAY 1 */

/* Define if you have the BSD-ish function `getwd' */
#define HAVE_GETWD 1

/* Define if you have the strdup function.  */
/* #define HAVE_STRDUP 1 */

/* Define if you have the popen function.  */
/* #undef HAVE_POPEN */

/* Define if you have the memmove function.  */
#define HAVE_MEMMOVE 1

/* Define if SIG_IGN is broken.  */
/* #undef SIG_IGN_BROKEN */

/* Define if the system automatically restarts a system call that is
     interrupted by a signal */
/* #define HAVE_RESTARTABLE_SYSCALLS 1 */

/* Define if the system is more or less POSIX-compliant */
/* #define _IS_POSIX 1 */

/* Define if the system has some BSD networking calls */
/* #define _IS_BSD 1 */

/* Define if the system has has a BSD-style socket library */
#define _HAS_SOCKETS 1

/* Define if you need to include sys/select.h to use select(2) */
/* #undef _NEEDS_SELECT_H */

/* Define this if your POSIX way of doing nonblocking I/O is broken the same
   way SunOS 4.1 is broken */
/* #define HAS_SOLARIS1_NONBLOCKING_BUG 1 */

/* Define ILU_WIN32_THREADS if we have threads */
#ifdef WIN32
#define ILU_WIN32_THREADS
#endif

/* Define this if you want debugging print statements included in the kernel */
#define ENABLE_DEBUGGING 1

/* Define this to be the value of the ILU registry directory */
/* #undef REGISTRY_LAST_RESORT */

/* Define this to be the value of the ILU root directory */
#define ILUHOME "\\project\\rpc\\current"

/* Define this to be the value of the ILU simple binding directory, if using shared files for simple binding */
#if !defined(ILU_BINDING_DIRECTORY)
#define ILU_BINDING_DIRECTORY "\\project\\rpc\\current\\lib\\binding"
#endif

/* Define this to be the host ip addr of the simple binding server, if using ILU service for simple binding */
/* #undef ILU_BINDING_HOST */

/* Define this to be the network port on the binding host, if using ILU service for simple binding */
/* #undef ILU_BINDING_PORT */

/* Define this to be the binding multicast address, if using multicast for simple binding */
/* #undef ILU_BINDING_MCASTADDR */

/* Define this if you are including support for Sun RPC protocol */
#define SUNRPC_PROTOCOL 1

/* Define this if you are including support for XNS Courier protocol */
#define COURIER_PROTOCOL 1

/* Define this if you are including support for CORBA GIOP protocol */
#define IIOP_PROTOCOL 1

/* Define this if you are including support for HTTP protocol */
#define HTTP_PROTOCOL 1

/* Define this if you are including support for TCP/IP transport via sockets */
#define TCPIP_TRANSPORT 1

/* Define this if you are including support for UDP/IP transport via sockets */
#define UDPSOCKET_TRANSPORT 1

/* Define this if you are including support for XNS/SPP transport via TLI */
/* #undef XNSSPP_TRANSPORT */

/* Define this if you are including support for the Sun RPC record marking transport filter */
#define SUNRPCRM_TRANSPORT 1

/* Define this if you are including support for the secure transport filter */
/* #define SECURE_TRANSPORT 1 */

/* Define this if you are including support for the RFC822 security namespace */
/* #define INCLUDE_RFC822_NAMESPACE 1 */

/* Define this if you are including support for the NIL security protocol */
/* #define INCLUDE_NIL_SECMECH 1 */

/* Define this if you are including support for the Sun RPC UNIX auth protocol */
/* #undef USE_SUNRPC_UNIX_AUTHENTICATION */

/* Define this is the Python libraries are installed (with libainstall) */
/* #define PYTHON_LIBRARIES_INSTALLED 1 */
