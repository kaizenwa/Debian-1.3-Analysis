#!PERL

#  Copyright (c) 1991, 1992, 1993 Xerox Corporation.  All Rights Reserved.  
#  
#  Unlimited use, reproduction, and distribution of this software is
#  permitted.  Any copy of this software must include both the above
#  copyright notice of Xerox Corporation and this paragraph.  Any
#  distribution of this software must comply with all applicable United
#  States export control laws.  This software is made available AS IS,
#  and XEROX CORPORATION DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED,
#  INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY
#  AND FITNESS FOR A PARTICULAR PURPOSE, AND NOTWITHSTANDING ANY OTHER
#  PROVISION CONTAINED HEREIN, ANY LIABILITY FOR DAMAGES RESULTING FROM
#  THE SOFTWARE OR ITS USE IS EXPRESSLY DISCLAIMED, WHETHER ARISING IN
#  CONTRACT, TORT (INCLUDING NEGLIGENCE) OR STRICT LIABILITY, EVEN IF
#  XEROX CORPORATION IS ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
#  
#  $Id: tim.dist,v 1.21 1996/01/29 20:39:34 janssen Exp $

sub random_filename {
  join ('', time, int(rand(65536)), getpgrp);
}

sub tim2texinfo {

  local($input, $inputfh) = @_;
  local($intermediate_filename, $included_filename);

  $inputfh++;
  unless (open ($inputfh, $input)) {
    print STDERR "Can't open input file $input.\n";
    return 1;
  };

  if ($level == 0)

#   standard boilerplate to allow encapsulated Postscript, and to define an italic typewriter font

    { print STDOUT "\\input texinfo \@c -*-texinfo-*-\n"; };

  while ( $_ = <$inputfh> ) {
    s/\@\@/hIgHlYuNlIkElYjUnK/g;
    s/\@var/\@code/g;
    s/\@metavar/\@var/g;
    s/\@C{/\@code{/g;
    s/\@C\+\+{/\@code{/g;
    s/\@command/\@code/g;
    s/\@constant/\@code/g;
    s/\@codeexample/\@example/g;
    s/\@end codeexample/\@end example/g;
    s/\@dfn\{([^\}]*)\}/\n@cindex \1\n@i\{\1\}/g;
    s/\@cl{/\@code{/g;
    s/\@class/\@code/g;
    s/\@exception/\@code/g;
    s/\@fn/\@code/g;
    s/\@interface/\@code/g;
    s/\@omgidl/\@code/g;
    s/\@isl/\@code/g;
    s/\@ilu/\@asis{ILU}/g;
    s/\@kwd/\@code/g;
    s/\@language/\@asis/g;
    s/\@m3{/\@code{/g;
    s/\@macro/\@code/g;
    s/\@message/\@code/g;
    s/\@method/\@code/g;
    s/\@module/\@code/g;
    s/\@parm/\@var/g;
    s/\@program/\@code/g;
    s/\@protocol/\@code/g;
    s/\@Python{/\@code{/g;
    s/\@symbol{/\@code{/g;
    s/\@system/\@asis/g;
    s/\@Smalltalk{/\@code{/g;
    s/\@switch{/\@i{/g;
    s/\@transcript/\@example/g;
    s/\@transport/\@code/g;
    s/\@end transcript/\@end example/g;
    s/\@type/\@code/g;
    s/\@url/\@code/g;
    s/\@userinput/\@ttitalic/g;
    s/\@question/\@item\n\@b/;
    s/hIgHlYuNlIkElYjUnK/\@\@/g;
    if ( /^\@include (.*).tim/ && ( $filename = $1 )) {
      print STDERR "Including $filename\n";
      $level++;
      &tim2texinfo ("$filename.tim", $inputfh);
      $level--;
    }
    else { print STDOUT ( $_ ); };
  };
  if ($level == 0) { print STDOUT "\@bye\n"; };
  return (0);
};

sub usage {
  print STDERR "Usage:  tim -x INPUTFILE.tim >OUTPUTFILE.texinfo\n";
  print STDERR "   or   tim -i INPUTFILE.tim >OUTPUTFILE.info\n";
  print STDERR "   or   tim -t INPUTFILE.tim >OUTPUTFILE.ps\n";
  print STDERR "   or   tim -w INPUTFILE.tim >OUTPUTFILE.html\n";
  print STDERR "   or   tim -t4050 INPUTFILE.tim >OUTPUTFILE.4050ps\n";
};

if ($#ARGV < 1) { &usage; exit 1; };

$processing_opt = $ARGV[0];
shift;

foreach $arg (@ARGV)
{
  open (SAVEOUT, ">&STDOUT");
  $intermediate_file = join ('-', "tim", &random_filename);
  if (!(open (STDOUT, ">$intermediate_file"))) {
    print STDERR "Can't open \"$intermediate_file\" for stdout.\n";
    exit 1;
  }
  $level = 0;
  if (&tim2texinfo($arg, "ifh00") == 0)
    {
      close (STDOUT);
      open(STDOUT, ">&SAVEOUT");      
      if (($processing_opt eq "-x" || $processing_opt eq "-texinfo") && open (INTERMEDIATE, $intermediate_file)) {
	while ( <INTERMEDIATE> ) { print; };
	close (INTERMEDIATE);
	unlink $intermediate_file;
      } elsif (($processing_opt eq "-t" || $processing_opt eq "-postscript") && (! (-z $intermediate_file))) {
	open (INTERMEDIATE, "texinfo2ps $intermediate_file |");
	while ( <INTERMEDIATE> ) { print; };
	close (INTERMEDIATE);
	unlink $intermediate_file;
      } elsif (($processing_opt eq "-t4050" || $processing_opt eq "-4050postscript") && (! (-z $intermediate_file))) {
	open (INTERMEDIATE, "texinfo24050ps $intermediate_file |");
	while ( <INTERMEDIATE> ) { print; };
	close (INTERMEDIATE);
	unlink $intermediate_file;
      } elsif (($processing_opt eq "-i" || $processing_opt eq "-info") && (! (-z $intermediate_file))) {
	open (INTERMEDIATE, "texinfo2info $intermediate_file |");
	while ( <INTERMEDIATE> ) { print; };
	close (INTERMEDIATE);
	unlink $intermediate_file;
      } elsif (($processing_opt eq "-w" || $processing_opt eq "-html") && (! (-z $intermediate_file))) {
	open (INTERMEDIATE, "texinfo2html $intermediate_file |");
	while ( <INTERMEDIATE> ) { print; };
	close (INTERMEDIATE);
	unlink $intermediate_file;
      } else {
	&usage;
	unlink $intermediate_file;
	exit 1;
      }
      exit 0;
    }
  else
    {
      print STDERR "Error processing file \"$arg\".\n";
      exit 1;
    }
};
