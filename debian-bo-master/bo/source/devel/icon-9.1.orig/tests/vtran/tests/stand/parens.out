
#line 9 "parens.icn"
global r,k,lp,rp

procedure main(a);
local string,i,s,bound,limit,varying;
(bound,(limit,10):=):=;
(lp,"("):=;
(rp,")"):=;
(i,0):=;
while (s,a[(i,1)+:=]):= do 
if (s[1],"-")== then 
case s of{
"-b":(bound,((a[(i,1)+:=])integer,()Usage)|):=;
"-n":(limit,((a[(i,1)+:=])integer,()Usage)|):=;
"-l":(lp,(a[(i,1)+:=],()Usage)|):=;
"-r":(rp,(a[(i,1)+:=],()Usage)|):=;
"-v":(varying,1):=;
default:()Usage
} 
else ()Usage;
every 1 to limit do {
if (varying)\ then (k,(2,(bound)?)*):= else (k,(2,bound)*):=;
(string,""):=;
(r,0):=;
while (k,r)~= do {
if (r,0)= then (string,()Open)||:= 
else if ((0)?,()probClose)< 
then (string,()Close)||:= else (string,()Open)||:=
};
while (k,0)> do (string,()Close)||:=;
(string)write
};
end

procedure Open();
(r,1)+:=;
(k,1)-:=;
return lp;
end

procedure Close();
(r,1)-:=;
(k,1)-:=;
return rp;
end

procedure probClose();
return ((((r,(((r,k)+,2)+))*),(((2.0,k)*,((r,1)+))*))/);
end

procedure Usage();
("usage: parens [-v -n i -b i -l s -r s]")stop;
end
