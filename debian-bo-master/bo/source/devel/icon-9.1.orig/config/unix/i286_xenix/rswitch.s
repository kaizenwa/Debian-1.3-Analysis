
;	Static Name Aliases
;

; code copied from assembler output generated by cc -- as doesn't like it
;
; DGROUP	GROUP	CONST,	_BSS,	_DATA
;	ASSUME	CS: _TEXT, DS: DGROUP, SS: DGROUP, ES: DGROUP

DGROUP	GROUP	_DATA
ASSUME CS: _TEXT, DS: _DATA, SS: _DATA, ES: _DATA

PUBLIC	_coswitch
EXTRN	_syserr:FAR
EXTRN   _new_context:FAR

_DATA	SEGMENT WORD PUBLIC	'DATA'
$1	DB	'new_context() returned in coswitch', 00H
	EVEN
_DATA	ENDS

_TEXT	SEGMENT WORD PUBLIC	'CODE'

	PUBLIC	_coswitch
_coswitch	PROC NEAR
			; coswitch(old_cs, new_cs, first)
			; int *old_cs, *new_cs;
			; int first;
 	push bp
	mov bp,sp
	push di
	push si

	les bx,6[bp]
	mov ax,sp
	mov dx,ss
	mov es:[bx],ax
	mov es:2[bx],dx

	les bx, 10[bp]
			; if (first == 0) set up a new stack
	cmp WORD PTR 14[bp], 0
	jne not_first


	mov ax,es:[bx]
	mov dx,es:2[bx]
	mov ss,dx
	mov sp,ax

	sub ax,ax
	push ax
	push ax
	push ax
	call FAR PTR _new_context
	add sp,6
	mov ax, offset DGROUP:$1
	push ds
	push ax
;	push "new_context() returned in costart"
	call FAR PTR _syserr
	add sp,4

not_first:
	mov ax,es:[bx]
	mov dx,es:2[bx]
	mov ss,dx
	mov sp,ax

	pop si
	pop di
	pop bp
	ret
_coswitch	ENDP

PUBLIC __chkstk

__chkstk:
	mov bx,sp
	sub bx,ax
	add bx,4
	pop dx
	pop ax
	mov sp,bx
	push ax
	push dx
	db 0cbh		; reti

_TEXT	ENDS
END

