############################################################################
#
#	File:     limatch.icn
#
#	Subject:  Procedure for matching according to items in a list
#
#	Author:   David A. Gamey
#
#	Date:     January 10, 1995
#
#############################################################################
#
#     Subject:    This matching function illustrates how every can be 
#                 used in string scanning.   
#
#                 1. Each element of the list argument is matched in 
#                    succession. 
#                 2. Leading characters in the subject are skipped over
#                    to match the first element.
#                 3. The strings listed may be seperated by other characters
#                    provided they are specified in a cset of characters to 
#                    be ignored.
#
#                 It could be used to find things in text that have varying
#                 representations, for example: "i.e.", "e.g.", "P.O.", etc.
#
#  limatch(l,i)
#  
#        l  list of strings to be found
#        i  cset containing characters to be ignored between each string
#
#        returns the last cursor position scanned to, or fails
#
#############################################################################

procedure limatch(l,i)

local s, f, p

p := &pos
every ( s := !l ) | ( return p ) do
{
   if /f := 1 then tab(find(s))        #  startup - position at first string
   tab(match(s)) | fail                #  fail if not matched
   tab(many(i) | &pos)                 #  skip ignore chars. if any
   p := &pos                           #  remember last position
}
end
