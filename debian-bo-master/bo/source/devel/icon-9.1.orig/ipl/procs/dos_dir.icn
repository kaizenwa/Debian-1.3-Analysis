#############################################################################
#
#       File:     dos_dir.icn
#
#       Subject:  Procedures for obtaining MS-DOS directory listings
#
#       Author:   David A. Gamey
#
#       Date:     August 1993
#
#############################################################################
#
#       Version:  1.0
#
#############################################################################
#
#  dosdir( diropts )
#
#     Called as a generator returning a record of type dirinfo for each file 
#     found in the directory, failing when no more files are available.
#     For example,
#
#        every dirent := dosdir("*.*") do .... 
#
#  Known problems:
#
#     When used to traverse directories and sub-directories in nested every 
#     loops it doesn't work as expected - requires further investigation.
#     Bypass by building lists of the subdirectories to be traversed. 
#
#
#  dosdirlist( dpath, dpart2, infotab )
#
#     Returns a list containing the qualified file names for files in dpath
#     and matching file patterns and/or options specified in dpart2.
#     For example, 
#
#        dirlist := dosdirlist( "..", "*.* /o:n /a:r-d" )
#
#     This would return a list of all read-only-non-directory files in the 
#     parent directory on a MS-DOS compatible system
#
#     If the optional infotab is specified, 
#     (1)   it must be a table or a run time error will result 
#     (2)   the contents of the table will be updated as follows   
#           a dirinfo record will be created for each filename
#     (3)   the filename will be the key to the table
#
#     For example,
#
#        t := table()
#        dirlist := dosdirlist( "..", "*.* /o:n /a:r-d", t )
#        maxsize := 0  ;  every maxsize <:= t[!dirlist].size
#
#     Will calculate the maximum size of the files 
#
#############################################################################
#
#  Change History:
#
#  14Apr94 - D.Gamey - for MS-DOS 6.2
#  04May94 - D.Gamey - forced names to return in lowercase
#  21Jul94 - D.Gamey - added dosdirlist(path,part2)
#  01Aug94 - D.Gamey - modified dosdirlist for info table
#  
############################################################################
#
#  Requires:  MS-DOS compatible operating system
#
############################################################################

link tempname

record dirinfo( name, ext, size, date, time )

procedure dosdir( diropts )

local de, line 

static tempfn, tempf, dosdir_ver

initial {

   close(open(tempfn := tempname(),"w"))
   
   system("ver > " || tempfn)
   
   (tempf := open(tempfn,"r")) | 
       stop("Unable to open ",tempfn," from dosdir.")
   
   while line := read(tempf) do 

      if find("MS-DOS",line) then
         if find("6.20",line) then
            dosdir_ver := dosdir_62
         else 
            dosdir_ver := dosdir_xx

   close(tempf)
   system("erase " || tempfn)
   }

close(open(tempfn := tempname(),"w"))                   # ensure useable file

system("dir " || diropts || " > " || tempfn)                # get dir

tempf := open(tempfn,"r")                               # open file

while line := map(read(tempf)) do {
   line ? 
      if de := dosdir_ver() then
         suspend de
      else 
         next
   }

close(tempf)
system("erase " || tempfn)
end


procedure dosdir_62()

static  nb
local de

initial nb := ~' '

if *&subject = 43  & (tab(any(nb)), move(-1)) then {
   de := dirinfo()
   (de.name := trim(move(8)), move(1), 
   de.ext  := trim(move(3)), move(1),
   de.size := move(13), move(1),
   de.date := move(8), move(2),
   de.time := tab(0))
   every de.size ?:= 1(tab(upto(',')),move(1)) || tab(0)
   return de
   }
end

procedure dosdir_xx()

static  nb
local de

initial nb := ~' '

if *&subject = 39  & (tab(any(nb)), move(-1)) then {
   de := dirinfo()
   (de.name := trim(move(8)), move(1), 
   de.ext  := trim(move(3)), move(1),
   de.size := integer(move(9)), move(1),
   de.date := move(8), move(2),
   de.time := tab(0))
   return de
   }
end

procedure dosdirlist( dpath, dpart2, infotab )
local dl, di, fn

if type(\infotab) ~== "table" then
   runerr( 124, infotab )

dpath ||:= dpath[-1] ~== "\\"
/dpart2 := "*.*"

dl := []
every di := dosdir( dpath || dpart2 ) do        
   if not ( di.name == ("." | "..") ) then {
      put( dl, fn := ( dpath || di.name || "." || trim(di.ext) ) )
      (\infotab)[fn] := di
      }

return dl
end
