############################################################################
#
#	File:     pathfind.icn
#
#	Subject:  Procedures to find files on a Unix path
#
#	Author:   Gregg M. Townsend
#
#	Date:     September 11, 1995
#
############################################################################
#
#  pathfind(fname, path)
#	returns the full path of fname if found along the space-separated
#	list of directories "path", else fails.  If no path is given,
#	getenv("DPATH") is the default.  As is customary in Icon path
#       searching, "." is prepended to the path.
#
#  pathload(fname, entry)
#	calls loadfunc to load entry from the file fname found on the
#	function path.  If the file or entry point cannot be found, the
#	program is aborted.  The function path consists of the current
#	directory, then getenv("FPATH"), and finally any additional
#	directories configured in the code.
#
############################################################################
#
#  Requires:	loadfunc() under Unix
#
############################################################################


# default path configuration to try after getenv("FPATH")
$define FUNCPATH "/usr/local/lib/icon"


procedure pathload(fname, entry)	#: load C function $FPATH
   local path, found

   path := (getenv("FPATH") | "") || " " || FUNCPATH
   found := pathfind(fname, path)

   if /found then
      stop ("cannot find \"", fname, "\" on path \". ", path, "\"")

   return loadfunc(found, entry)	# aborts if unsuccessful
end


procedure pathfind(fname, path)		#: find file on path
   local f, dir, fullname

   fname ? {
      if ="/" & close(open(fname)) then
         return fname			# full absolute path works
      while tab(upto('/') + 1)
      fname := tab(0)			# get final component of path
      }

   /path := getenv("DPATH")
   /path := ""
   path := ". " || path
   path ? while not pos(0) do {
      dir := tab(upto(' ') | 0)
      fullname := trim(dir, '/') || "/" || fname
      if close(open(fullname)) then
         return fullname
      tab(many(' '))
      }
   fail
end
