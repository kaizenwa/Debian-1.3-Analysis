############################################################################
#
#	File:     random.icn
#
#	Subject:  Procedures for random number generation
#
#	Author:   Ralph E. Griswold
#
#	Date:     December 5, 1994
#
############################################################################
#
#  rand_num() is a linear congruential pseudo-random number generator.
#  Each time it is called, it produces another number in the sequence
#  and also assigns it to the global variable random.  With no arguments,
#  rand_num() produces the same sequence(s) as Icon's built-in random-
#  number generator.  Arguments can be used to get different sequences.
#
#  The global variable random serves the same role that &random does
#  for Icon's built-in random number generator.
#
#  rand_int(i) produces a randomly selected integer in the range 1 to i.
#  It models ?i for positive i.
#
############################################################################

global random

procedure rand_num(a_, c_, m_)
   static random_last, a, c, m

   initial {
      /random := 0
      a := \a_ | 1103515245
      c := \c_ | 453816694
      m := (\m_ | 2 ^ 31)
      }

    return random := (a * random + c) % m
     
end

procedure rand_int(i)
   static scale
	
   initial scale := 1.0 / (2 ^ 31 - 1)

   (i := (0 < integer(i))) | runerr(205, i)

   return integer(i * rand_num() * scale) + 1

end
