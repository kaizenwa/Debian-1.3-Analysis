############################################################################
#
#	File:     filepart.icn
#
#	Subject:  Procedures to break down file names into components
#
#	Author:   David A. Gamey
#
#	Date:     December 29, 1994
#
############################################################################
#
#	Notes: Currently only MS-DOS style file names are supported
#
#              Demo_DOS_FileParts() - demonstrates the operation
#           
#              DOS_FileParts(s) - takes a DOS file name and returns
#              a record containing various representations of the
#              file name and its components.  The name given will be
#              returned in the fullname field.  Fields that cannot be 
#              determined will be returned as null-strings.
#
############################################################################

record    _DOS_FileParts_(fullname,devpath,device,path,name,extension)

procedure DOS_FileParts(filename)

local dev, path, name, ext, p, d

filename   ? { 
               dev := 1( tab( upto(':') ), move(1) ) | ""
               d := &pos - 1
               tab(0) 
         } ? {
               p := 1 
               path := tab( ( every p := upto('\\') + 1 ) |  p ) 
               tab(0)
         } ? {
               name := 1( tab( upto('.') ), move(1) ) | tab(0)
               ext := tab(0) 
         }


return _DOS_FileParts_(filename,filename[1:d + p],dev,path,name,ext)
end

procedure Demo_DOS_FileParts()

local line,file
repeat
{
   writes("\nEnter file specifcation:")
   if not ( line := read() ) | ( *line = 0 ) then return

   file := DOS_FileParts(line)
   write("\nfull      = ", image(file.fullname),
         "\ndevpath   = ", image(file.devpath),
         "\ndevice    = ", image(file.device),
         "\npath      = ", image(file.path),
         "\nname      = ", image(file.name),
         "\nextension = ", image(file.extension) )
}
end

