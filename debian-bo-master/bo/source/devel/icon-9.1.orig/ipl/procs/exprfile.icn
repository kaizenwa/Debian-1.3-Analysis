############################################################################
#
#	File:     exprfile.icn
#
#	Subject:  Procedures to produce programs on the fly
#
#	Author:   Ralph E. Griswold
#
#	Date:     July 15, 1995
#
############################################################################
#
#  exprfile(exp, link, ...) produces a pipe to a program that writes
#  all the results generated by exp.  The trailing arguments name link
#  files needed for the expression.
#
#  If exprfile() is called with a null first argument, it deletes the
#  executable file it created and closes the pipe it opened.
#  Otherwise, it is the user's responsibility to close the pipe.
#
#  ucode(file) produces a ucode file from the Icon program in file.
#
############################################################################
#
#  Requires:  system(), pipes, /tmp
#
############################################################################

link tempfile

procedure exprfile(exp, links[])	#: pipe that produces results of Icon expression
   local output
   static name, input

   if /exp then {
      remove(\name)			# remove executable if asked
      close(\input)			# and close pipe
      return
      }

   output := tempfile("expr", ".icn", "/tmp")

   image(output) ? {
      ="file("
      name := tab(find(".icn"))
      }

   write(output, "invocable all")
   every write(output, "link ", image(!links)) 
   write(output, "procedure main(args)")
   write(output, "   every write(", exp, ")")
   write(output, "end")

   close(output)

   if system("icont -o " || name || " -s " || name ||
      " >/dev/null 2>/dev/null") ~= 0 then fail

   remove(name || ".icn")		# remove source code file

   #  Return a pipe for the executable.  Error messages are trashed.

   return input := open(name || " 2>/dev/null", "p")
   
end

procedure ucode(file)

   if system("icont -s -c " || file) ~= 0 then fail

   return

end
