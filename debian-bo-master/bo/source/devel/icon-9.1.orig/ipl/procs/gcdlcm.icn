############################################################################
#
#	File:     gcdlcm.icn
#
#	Subject:  Procedures to compute gcds and lcms
#
#	Author:   Ralph E. Griswold
#
#	Date:     December 13, 1994
#
############################################################################
#
#     gcd(i, j) computes the greatest common divisor of i and j.
#
#     gcdl(L) computes the greatest common divisor of the integers in the
#  list L.
#
#     lcm(i, j) computes the least common multiple of i and j.
#
#     lcml(L) computes the least common multiple of the integers in the
#  list L.
#
############################################################################

procedure gcd(i,j)
   local r

   if i = j = 0 then fail
   if i = 0 then return j
   if j = 0 then return i

   i := abs(i)
   j := abs(j)

   repeat {
      r := i % j
      if r = 0 then return j
      i := j
      j := r
      }

end

procedure lcm(i, j)

   if i = j = 0 then fail

   return abs(i * j) / gcd(i, j)

end

procedure gcdl(L[])
   local i, j

   i := get(L) | fail

   while j := get(L) do
      i := gcd(i, j)

   return i

end

procedure lcml(L[])
   local i, j

   i := get(L) | fail

   while j := get(L) do
      i := lcm(i, j)

   return i

end
