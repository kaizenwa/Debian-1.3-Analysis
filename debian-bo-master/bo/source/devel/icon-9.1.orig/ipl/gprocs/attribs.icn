############################################################################
#
#	File:     attribs.icn
#
#	Subject:  Procedure to set attributes via dialog
#
#	Author:   Ralph E. Griswold
#
#	Date:     November 3, 1995
#
############################################################################
#
#  This procedure produces a dialog in which the user can change
#  the most commonly used graphics attributes.
#
#  Problems:  If a text-entry field is not long enough to hold the current
#  value for an attribute, the attribute has to be edited.  Also, a
#  slider is not the best way of changing the gamma attribute -- it's
#  not possible to set a precise value.  A slider was used mostly for
#  demonstration purposes.
#
############################################################################
#
#  Requires:  Version 9 graphics
#
############################################################################
#
#  Links:  dsetup
#
############################################################################

link dsetup				# dialog setup

procedure attribs(win)		#: set graphics attributes via dialog
   static atts

   initial atts := table()		# table of vidget IDs

   /win := &window

   # Assign values from current attributes.

   atts["1_fg"] := Fg(win)
   atts["2_bg"] := Bg(win)
   atts["3_font"] := Font(win)
   atts["4_linewidth"] := WAttrib(win, "linewidth")
   atts["5_pattern"] := WAttrib(win, "pattern")
   atts["linestyle"] := WAttrib(win, "linestyle")
   atts["fillstyle"] := WAttrib(win, "fillstyle")
   atts["gamma"] := WAttrib(win, "gamma")

   # Call up the dialog.

      repeat{
   
      attributes(win, atts) == "Okay" | fail

      # Set attributes from table.
   
      Fg(win, atts["1_fg"]) | {
         Notice("Invalid foreground color")
         next
         }
      Bg(win, atts["2_bg"]) | {
         Notice("Invalid background color")
         next
         }
      Font(win, atts["3_font"]) | {
         Notice("Invalid font")
         next
         }
      WAttrib(win, "linewidth=" || (0 <= integer(atts["4_linewidth"]))) | {
         Notice("Invalid linewidth")
         next
         }
      WAttrib(win, "pattern=" || atts["5_pattern"]) | {
         Notice("Invalid pattern")
         next
         }
      WAttrib(win, "linestyle=" || atts["linestyle"])
      WAttrib(win, "fillstyle=" || atts["fillstyle"])
      WAttrib(win, "gamma=" || atts["gamma"])

      return

      }

end

#===<<vib:begin>>===	modify using vib; do not remove this marker line
procedure attributes(win, deftbl)
static dstate
initial dstate := dsetup(win,
   ["attributes:Sizer::1:0,0,600,375:attributes",],
   ["0.5:Label:::530,52,35,13:0.5 -",],
   ["1.0:Label:::530,83,35,13:1.0 -",],
   ["1_fg:Text::50:20,22,486,19:foreground color: \\=",],
   ["2.0:Label:::530,148,35,13:2.0 -",],
   ["2_bg:Text::50:20,50,486,19:background color: \\=",],
   ["3.0:Label:::530,212,35,13:3.0 -",],
   ["3_font:Text::50:20,80,486,19:font:             \\=",],
   ["4.0:Label:::530,276,35,13:4.0 -",],
   ["4_linewidth:Text::3:20,110,157,19:line width:       \\=",],
   ["5_pattern:Text::50:20,140,486,19:pattern:          \\=",],
   ["button1:Button:regular::254,306,60,30:Cancel",],
   ["fill label:Label:::249,182,70,13:fill style",],
   ["fillstyle:Choice::3:243,205,85,63:",,
      ["solid","masked","textured"]],
   ["gamma:Slider:v:1:565,46,15,250:0.5,4.0,1.0",],
   ["glabel:Label:::555,21,35,13:gamma",],
   ["line label:Label:::119,182,70,13:line style",],
   ["linestyle:Choice::3:115,205,78,63:",,
      ["solid","dashed","striped"]],
   ["okay:Button:regular:-1:124,305,60,30:Okay",],
   )
return dpopup(win, deftbl, dstate)
end
#===<<vib:end>>===	end of section maintained by vib
