# GCC testsuite that uses the `dg.exp' driver.

# Load support procs.
load_lib gcc-dg.exp

# Utility for scanning compiler result, invoked via dg-final.
# Call pass if pattern is present, otherwise fail.
proc scan-assembler { testcase pattern } {
    global subdir

    set fd [open [file rootname $testcase].s r]
    set text [read $fd]
    close $fd

    if [regexp -- $pattern $text] {
	pass "$subdir/$testcase scan-assembler"
    } else {
	fail "$subdir/$testcase scan-assembler"
    }
}

# Call pass if pattern is not present, otherwise fail.
proc scan-assembler-not { testcase pattern } {
    global subdir

    set fd [open [file rootname $testcase].s r]
    set text [read $fd]
    close $fd

    if ![regexp -- $pattern $text] {
	pass "$subdir/$testcase scan-assembler-not"
    } else {
	fail "$subdir/$testcase scan-assembler-not"
    }
}

# If a testcase doesn't have special options, use these.
global DEFAULT_CFLAGS
if ![info exists DEFAULT_CFLAGS] then {
    set DEFAULT_CFLAGS " -ansi -pedantic-errors"
}

# Initialize `dg'.
dg-init

# Main loop.
dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] "" $DEFAULT_CFLAGS

# All done.
dg-finish
