# Copyright (C) 1993, 1994, 1996 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gcc@prep.ai.mit.edu

load_lib ${tool}.exp

#
# ${tool}_version -- extract and print the version number of gcc/g++
#

proc ${tool}_version {} {
    global tool
    default_${tool}_version
}

#
# ${tool}_start -- compile a program
#

proc ${tool}_start { prog } {
    global tool
    default_${tool}_start $prog
}

#
# ${tool}_load -- load the program and execute it
#
# See default.exp for explanation of arguments and results.
#

proc ${tool}_load { prog } {
    global exec_output
    global SIM SIM_TIME_LIMIT

    if ![file exists [lindex $SIM 0]] {
	verbose -log "Simulator [lindex $SIM 0] missing." 3
	return "untested"
    }

    if ![file exists $prog] then {
	perror "$prog does not exist."
	verbose -log "$prog does not exist." 3
	return "untested"
    }

    if ![info exists SIM_TIME_LIMIT] {
	set SIM_TIME_LIMIT 240
    }

    verbose "Executing $SIM $prog" 2

    # Run the program with a limited amount of cpu.
    # Since expect doesn't allow us to portably set it for our children,
    # we use bash for now.
    if { [which bash] != 0 } {
	set status [catch "exec bash -c {ulimit -t $SIM_TIME_LIMIT ; $SIM $prog}" exec_output]
    } else {
	set status [catch "exec $SIM $prog" exec_output]
    }

    # FIXME: Do we need to examine $status?

    verbose "Return status was: $status" 2
    if { $status == 0 } {
	return "pass"
    } else {
	return "fail"
    }
}

#
# ${tool}_exit -- just a stub
#

proc ${tool}_exit { } {
}

if ![info exists SIM] {
    perror "SIM not defined"
    exit 1
}

if ![file exists [lindex $SIM 0]] {
    warning "Simulator [lindex $SIM 0] missing."
}
