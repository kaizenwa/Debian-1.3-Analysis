# Copyright (C) 1994, 1996 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gcc@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

load_lib ${tool}.exp
load_lib remote.exp
load_lib bug.exp

set shell_prompt "\[0-9\]+Bug>"

#
# ${tool}_version -- extract and print the version number of gcc/g++
#

proc ${tool}_version {} {
    global tool
    default_${tool}_version
}

#
# ${tool}_start -- compile a program
# ??? This needs work.
#

proc ${tool}_start { prog } {
    global CC tool
    #
    # fudge the names of the compiler
    #
    set tmp ""
    foreach i [split $CC "-"] {
	if [string match "*bug" $i] then {
	    continue
	}
	set CC [append $tmp "$i-"]
    }
    set CC [string trimright $CC "-"]
    warning "Converted compiler name"
    
    default_${tool}_start $prog
}

#
# ${tool}_load -- load the program and execute it
#
# See default.exp for explanation of arguments and results.
#

proc ${tool}_load { prog } {

    if ![file exists $prog] then {
	verbose -log "$prog does not exist." 3
	return "untested"
    }

    set shell_id [remote_open]
    if $shell_id<0 then {
	verbose -log "$prog not executed, couldn't connect to target." 3
	return "untested"
    }

    if [bug_load $shell_id $prog]<0 then {
	verbose -log "$prog not executed, download failed." 3
	remote_close $shell_id
	return "unresolved"
    }

    if [bug_execute $shell_id "00005000"]<0 then {
	remote_close $shell_id
	return "fail"
    }

    remote_close $shell_id
    return "pass"
}

#
# ${tool}_exit -- shutdown the connection
#

proc ${tool}_exit {} {
}
