# Copyright (C) 1994, 1996 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gcc@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

#
# load support libraries
#
load_lib vrtx.exp
load_lib ${tool}.exp
load_lib remote.exp

set shell_prompt "> "

#
# ${tool}_version -- extract and print the version number of gcc/g++
#

proc ${tool}_version {} {
    global tool
    default_${tool}_version
}

#
# ${tool}_start -- compile a program
#

proc ${tool}_start { prog } {
    global tool CFLAGS
    set orig_cflags $CFLAGS
    append CFLAGS " -r" ;# FIXME: Won't work if PROG is two elements.
    default_${tool}_start $prog
    set CFLAGS $orig_cflags
}

#
# ${tool}_load -- load the program and execute it
#
# See default.exp for explanation of arguments and results.
#

proc ${tool}_load { prog } {
    switch -- [xsh_load $prog] {
	0 { return "pass" }
	1 { return "fail" }
	-1 {
	    # FIXME: This needs work (as does xsh_load).
	    verbose -log "Unable to run $prog, internal spectra error." 3
	    return "unresolved"
	}
    }
}

#
# ${tool}_exit -- shutdown the connection
#

proc ${tool}_exit {} {
    global shell_id

#    close -i $shell_id
    xsh_exit $shell_id
}

#
# start the remote shell
# `shell_id' is local to this file.
# FIXME: Dejagnu' vrtx.exp doesn't think so, but most targets use `shell_id'
# this way.
#
global connectmode
set shell_id  [eval $connectmode "$targetname"]
