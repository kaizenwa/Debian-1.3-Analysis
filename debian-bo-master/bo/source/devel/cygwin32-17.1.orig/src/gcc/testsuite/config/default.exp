# Copyright (C) 1994, 1996 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gcc@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@cygnus.com)

#
# load support libraries
#
load_lib ${tool}.exp

#
# ${tool}_version -- extract and print the version number of gcc/g++
#

proc ${tool}_version {} {
    global tool
    default_${tool}_version
}

#
# ${tool}_start -- compile a program using gcc
#

proc ${tool}_start { prog } {
    global tool
    default_${tool}_start $prog
}

#
# ${tool}_load -- load the program and execute it
#
# PROG is a full pathname to the file to load, no arguments.
#
# Result is one of:
#
# pass        - executed successfully
# fail        - execution failed (eg: program aborted)
# unsupported - testcase is not supported on this target
#               (not sure this can ever occur but it's here for completeness)
# unresolved  - status is unknown
# untested    - testcase couldn't be tested for some reason
#
# A detailed reason of why something passed/failed/whatever, if desired,
# is recorded by us in the log with `verbose -log "..." 3'.
#
# The caller should then call the appropriate routine to record the status.
#

proc ${tool}_load { prog } {
    global exec_output
    set exec_output ""
    verbose -log "Can't run $prog, unknown target." 3
    return "untested"
}

#
# ${tool}_exit -- just a stub
#

proc ${tool}_exit {} {
}

# Print a warning so viewers of the test results will know not to expect
# anything to have executed successfully.

warning "No target hardware present."
