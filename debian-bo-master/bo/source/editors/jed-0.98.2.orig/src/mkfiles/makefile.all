!ifndef DJGPP BCC MSWIN WIN32 OS2EMX WIN95 DJGPP_V1
# -*- mode: sh; mode: fold -*- 
# This file has been folded.

#{{{ MACRO descriptions

This is a master makefile that from which DOS/Windows/OS2 makefiles
may be derived.  A makefile for a particular system may be derived by
passing this through the standalone DOS executable 'mkmake' which
should be present in this directory.  For example, to produce a makefile
suitable for OS2 using the EMX compiler use:

    makepp OS2EMX < makefile.all > Makefile

Currently supported environments include:

   DJGPP BCC MSWIN WIN32 OS2EMX WIN95 DJGPP_V1
   
Features include (also edit features.h!)

   FOLD

More will be added in the future.

Each section must define the following macros:

 CC             : The C compiler
 CFLAGS		: Compiler flags
 P		: Path separator used by make/compiler
 O		: Object file extension
 SRCDIR		: SRC location (.)
 OBJDIR		: Directory where objects are placed
 COMPILE_CMD	: Command used to produce object from .c file
 LINK_CMD       : Command used to produce executable
 LIBDEPS	: Other dependencies library depends upon
 TARGET		: Primary target name
 SLANGLIB       : Location of slang library
 SLANGINC       : Location of slang.h
 TARGET_DEPS    : Misc stuff to build
 COMPILE_DEPS   : Dependencies associated with COMPILE_CMD

Other macros include:

 RSPFILE	: Name of response file
 RSP_PREFIX	: Prefix for response file line (See its usage)
 RSP_POSTFIX	: Postfix for response file line (See its usage)
 DEF_FILE       : *.def file

Special notes:

 The P macro could be problematic when its value is a backslash (\).  Some
 make programs may require it to be doubled, i.e., \\.  Whatever its value is,
 it should expand to something that does not include whitespace.  Usually
 this requires that it be followed by a '#' character; however, this may
 result in the '#' character being quoted, or, escaped if the value of P is
 a backslash.

#}}}
!else   #rest of file
# Note:
# This makefile was automatically generated from the master makefile.all.
!ifdef DJGPP DJGPP_V1 #{{{
CC = gcc
CFLAGS = -O2 -fno-strength-reduce -Wall #-DFLOAT_TYPE
P = /# path sep
O = o # Object extension
SRCDIR = .# Location of sources
OBJDIR = djgobjs# Location of objects
TARGET = $(OBJDIR)/jed386.exe
RSPFILE = djgpp.rsp
RSP_PREFIX =
RSP_POSTFIX =
SLANGINC = ../../slang/src
SLANGLIB = $(SLANGINC)/$(OBJDIR)
COMPILE_CMD = $(CC) -c $(CFLAGS) -I$(SLANGINC) -o #
!ifndef DJGPP_V1
LINK_CMD = $(CC) -s -L$(SLANGLIB) -o $(TARGET) @$(RSPFILE) -lslang
!else
GO32 = G:/djgpp/bin/go32.exe
!endif
COMPILE_DEPS =
TARGET_DEPS =
!endif #}}}
!ifdef BCC #{{{
CC = bcc
CFLAGS = -G- -H -N -O1 -w -ml -Dmsdos -DJED
P = \\
O = obj
SRCDIR = .
OBJDIR = bccobjs
TARGET = $(OBJDIR)\jed.exe
RSPFILE = bcc.rsp
RSP_PREFIX =
RSP_POSTFIX =
SLANGINC = ..\..\slang\src
SLANGLIB = $(SLANGINC)\$(OBJDIR)
COMPILE_CMD = $(CC) -c $(CFLAGS) -I$(SLANGINC) -o#  <-- no tailing space
LINK_CMD = $(CC) -ml -L$(SLANGLIB) -e$(TARGET) /P=4096 @$(RSPFILE) slang.lib
COMPILE_DEPS =
TARGET_DEPS =
!endif #}}}
!ifdef MSWIN #{{{
CC = bcc
CFLAGS = -G- -H -N -w -ml -DJED -Dmsdos -DMSWINDOWS -W
#CFLAGS = -N -v  -H -w -ml -Dmsdos -DMSWINDOWS -DJED -WS
OBJDIR = mswobjs# Location of objects
TARGET = $(OBJDIR)\wjed.exe
BCCLIB = C:\BCC31\LIB
O = obj # Object extension
P = \\
SRCDIR = .# Location of sources
SLANGINC = ..\..\slang\src
SLANGLIB = $(SLANGINC)\$(OBJDIR)
RSPFILE = mswin.rsp
RSP_PREFIX =
RSP_POSTFIX = +
COMPILE_CMD = $(CC) -c $(CFLAGS) -I$(SLANGINC) -o#
LINK_CMD = tlink /Twe/m/v/c/P/i/s $(BCCLIB)\c0wl @$(RSPFILE)
MSWSHELL_EXE = ..\bin\mswshell.exe
DEF_FILE = $(OBJDIR)\wjed.def
TARGET_DEPS = $(MSWSHELL_EXE) $(DEF_FILE)
COMPILE_DEPS =
!endif #}}}
!ifdef WIN32 #{{{
CC = bcc32
CFLAGS = -G- -H -N -w -ml -Dmsdos -DMSWINDOWS -W# -DFLOAT_TYPE
OBJDIR = w32objs# Location of objects
TARGET = $(OBJDIR)\wjed32.exe
BCCLIB = C:\BC45\LIB
O = obj # Object extension
P = \\
SRCDIR = .# Location of sources
RSPFILE = mswin32.rsp
RSP_PREFIX =
RSP_POSTFIX = +
COMPILE_CMD = $(CC) -c $(CFLAGS) -I$(SLANGINC) -o#
LINK_CMD = tlink32 /Tpe /aa /c /x $(BCCLIB)\c0w32 $(PROCESS_O) @$(RSPFILE)
MSWSHELL_EXE = ..\bin\mswshell.exe
DEF_FILE = $(OBJDIR)\wjed.def
TARGET_DEPS = $(MSWSHELL_EXE) $(DEF_FILE)
COMPILE_DEPS =
!endif #}}}
!ifdef OS2EMX #{{{
CC = gcc -Zmtd
CFLAGS = -DOS2 -D__os2__ -DJED -DFLOAT_TYPE
P = /
O = o # Object extension
SRCDIR = .# Location of sources
OBJDIR = emxobjs# Location of objects
SLANGINC = ../../slang/src
SLANGLIB = ../../slang/src/$(OBJDIR)
TARGET = $(OBJDIR)/os2jed.exe
COMPILE_CMD = $(CC) -c $(CFLAGS) -I$(SLANGINC) -o #
DEF_FILE = $(OBJDIR)/os2jed.def
LINK_CMD = $(CC) -o $(TARGET) $(OBJS) -L$(SLANGLIB) $(DEF_FILE) -lslang -lvideo
TARGET_DEPS = $(DEF_FILE)
COMPILE_DEPS =
!endif #}}}
!ifdef WIN95 #{{{
# Makefile for slang as Win32 GUI using nmake under Visual C.
CC = cl
CFLAGS = #-DFLOAT_TYPE
P = \\
O = obj # Object extension
SRCDIR = .# Location of sources
OBJDIR = w95objs# Location of objects
TARGET = $(OBJDIR)\w95jed.exe
SLANGINC = ..\..\slang\src
SLANGLIB = ..\..\slang\src\$(OBJDIR)
RSPFILE = w95link.rsp
RSP_PREFIX =
RSP_POSTFIX =
COMPILE_CMD = $(CC) /c @w95comp.rsp /Fo # /Fo specifies object file name
COMPILE_RSP = w95comp.rsp
TARGET_DEPS = 
COMPILE_DEPS = $(COMPILE_RSP)
LINK_CMD = link -out:$(TARGET) @w95link.rsp
# This needs changing for Windows NT on non-Intel processors
CPU = _X86_
!endif #}}}

# End of compiler specific section

CONFIG_H = config.h
SYSDEP_O_DEPS = $(SRCDIR)$(P)sysdep.c \
    $(SRCDIR)$(P)dos_os2.c \
    $(SRCDIR)$(P)pcscan.c \
    $(SRCDIR)$(P)ibmpc.c \
    $(SRCDIR)$(P)os2.c \
    $(SRCDIR)$(P)mswin.c \
    $(SRCDIR)$(P)i386.c
#
#{{{ OBJS =

OBJS = $(OBJDIR)$(P)buffer.$(O) \
       $(OBJDIR)$(P)cmds.$(O) \
       $(OBJDIR)$(P)misc.$(O) \
       $(OBJDIR)$(P)file.$(O) \
       $(OBJDIR)$(P)main.$(O) \
!ifndef MSWIN WIN32 WIN95
       $(OBJDIR)$(P)display.$(O) \
!endif
       $(OBJDIR)$(P)ins.$(O) \
       $(OBJDIR)$(P)sysdep.$(O) \
       $(OBJDIR)$(P)screen.$(O) \
       $(OBJDIR)$(P)paste.$(O) \
       $(OBJDIR)$(P)ledit.$(O) \
       $(OBJDIR)$(P)line.$(O) \
       $(OBJDIR)$(P)vterm.$(O) \
       $(OBJDIR)$(P)keymap.$(O) \
       $(OBJDIR)$(P)replace.$(O) \
       $(OBJDIR)$(P)window.$(O) \
       $(OBJDIR)$(P)search.$(O) \
       $(OBJDIR)$(P)text.$(O) \
       $(OBJDIR)$(P)undo.$(O) \
       $(OBJDIR)$(P)vfile.$(O) \
       $(OBJDIR)$(P)intrin.$(O) \
       $(OBJDIR)$(P)syntax.$(O) \
       $(OBJDIR)$(P)abbrev.$(O) \
       $(OBJDIR)$(P)mouse.$(O) \
!ifdef FOLD
       $(OBJDIR)$(P)blocal.$(O) \
       $(OBJDIR)$(P)lineattr.$(O) \
!endif
       $(OBJDIR)$(P)indent.$(O)
#}}}

$(TARGET): $(OBJDIR) $(CONFIG_H) $(RSPFILE) $(OBJS) $(TARGET_DEPS)
!ifndef DJGPP_V1
	$(LINK_CMD)
!else
	$(CC) -s @$(RSPFILE) -L$(SLANGLIB) -lslang -lpc -o $(OBJDIR)/jed386.386
	strip $(OBJDIR)/jed386.386
	coff2exe -s $(GO32) $(OBJDIR)/jed386.386
!endif
$(OBJDIR) :
	-mkdir $(OBJDIR)
$(CONFIG_H): jedconf.h
	copy jedconf.h $(CONFIG_H)
	touch $(CONFIG_H)
!ifdef MSWIN WIN32
$(MSWSHELL_EXE): mswshell.c
	bcc -ml -I. -e$(MSWSHELL_EXE) mswshell.c
!endif

!ifdef WIN95
$(COMPILE_RSP) :
	echo /nologo /W3 /YX /O2 /D "NDEBUG" /D $(CPU) > $(COMPILE_RSP)
	echo /D "_WINDOWS" /D "__WIN32__" /D "mswindows" >> $(COMPILE_RSP)
	echo /D "msdos" /D "VC32" /D "MSWINDOWS" /D "pc_system" >> $(COMPILE_RSP)
	echo /I "." /I $(SLANGINC) /D "FLOAT_TYPE" /ML >> $(COMPILE_RSP)
!endif

!ifndef OS2EMX
#{{{ $(RSPFILE)
$(RSPFILE) :
	echo Creating response file $(RSPFILE)
!ifdef WIN95
	@echo /NOLOGO /SUBSYSTEM:windows user32.lib gdi32.lib > $(RSPFILE)
	@echo winspool.lib comdlg32.lib advapi32.lib shell32.lib >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)indent.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
!else
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)indent.$(O) $(RSP_POSTFIX) > $(RSPFILE)
!endif
!ifdef FOLD
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)blocal.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)lineattr.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
!endif
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)mouse.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)abbrev.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)syntax.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)intrin.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)vfile.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)undo.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)text.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)search.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)window.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)replace.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)keymap.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)vterm.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)line.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)ledit.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)paste.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)screen.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)sysdep.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)ins.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)main.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)file.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)misc.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
!ifndef MSWIN WIN32 WIN95
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)display.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
!endif
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)cmds.$(O) $(RSP_POSTFIX) >> $(RSPFILE)
	@echo $(RSP_PREFIX)$(OBJDIR)$(P)buffer.$(O) >> $(RSPFILE)
!ifdef MSWIN
	@echo $(TARGET) >> $(RSPFILE)
	@echo wjed.map >> $(RSPFILE)
	@echo $(SLANGLIB)\wslang+ >> $(RSPFILE)
	@echo $(BCCLIB)\import+ >> $(RSPFILE)
	@echo $(BCCLIB)\mathwl+ >> $(RSPFILE)
	@echo $(BCCLIB)\cwl >> $(RSPFILE)
	@echo $(DEF_FILE) >> $(RSPFILE)
!endif
!ifdef WIN32
	@echo $(TARGET) >> $(RSPFILE)
	@echo wjed32.map >> $(RSPFILE)
	@echo $(SLANGLIB)\wslang32+ >> $(RSPFILE)
	@echo $(BCCLIB)\import32+ >> $(RSPFILE)
	@echo $(BCCLIB)\cw32 >> $(RSPFILE)
	@echo $(DEF_FILE) >> $(RSPFILE)
!endif
!ifdef WIN95
	@echo $(SLANGLIB)\WSLANG32.LIB >> $(RSPFILE)
!endif
#}}}
!endif  #NOT OS2EMX

!ifdef WIN32 MSWIN OS2EMX
#{{{ $(DEF_FILE)

$(DEF_FILE) :
	@echo creating $(DEF_FILE)
! ifdef WIN32 MSWIN
	@echo NAME      WJED > $(DEF_FILE)
	@echo EXETYPE   WINDOWS >> $(DEF_FILE)
	@echo CODE PRELOAD MOVEABLE DISCARDABLE >> $(DEF_FILE)
	@echo DATA PRELOAD MOVEABLE >> $(DEF_FILE)
	@echo HEAPSIZE 100 >> $(DEF_FILE)
	@echo STACKSIZE 16384 >> $(DEF_FILE)
! endif
! ifdef OS2EMX
	@echo NAME JED WINDOWCOMPAT > $(DEF_FILE)
	@echo DESCRIPTION 'JED for OS/2' >> $(DEF_FILE)
	@echo STACKSIZE 150000 >> $(DEF_FILE)
! endif

#}}}
!endif

$(OBJDIR)$(P)indent.$(O) : $(SRCDIR)$(P)indent.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)indent.$(O) $(SRCDIR)$(P)indent.c

$(OBJDIR)$(P)mouse.$(O) : $(SRCDIR)$(P)mouse.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)mouse.$(O) $(SRCDIR)$(P)mouse.c

$(OBJDIR)$(P)abbrev.$(O) : $(SRCDIR)$(P)abbrev.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)abbrev.$(O) $(SRCDIR)$(P)abbrev.c

$(OBJDIR)$(P)syntax.$(O) : $(SRCDIR)$(P)syntax.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)syntax.$(O) $(SRCDIR)$(P)syntax.c

$(OBJDIR)$(P)intrin.$(O) : $(SRCDIR)$(P)intrin.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)intrin.$(O) $(SRCDIR)$(P)intrin.c

$(OBJDIR)$(P)vfile.$(O) : $(SRCDIR)$(P)vfile.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)vfile.$(O) $(SRCDIR)$(P)vfile.c

$(OBJDIR)$(P)undo.$(O) : $(SRCDIR)$(P)undo.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)undo.$(O) $(SRCDIR)$(P)undo.c

$(OBJDIR)$(P)text.$(O) : $(SRCDIR)$(P)text.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)text.$(O) $(SRCDIR)$(P)text.c

$(OBJDIR)$(P)search.$(O) : $(SRCDIR)$(P)search.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)search.$(O) $(SRCDIR)$(P)search.c

$(OBJDIR)$(P)window.$(O) : $(SRCDIR)$(P)window.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)window.$(O) $(SRCDIR)$(P)window.c

$(OBJDIR)$(P)replace.$(O) : $(SRCDIR)$(P)replace.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)replace.$(O) $(SRCDIR)$(P)replace.c

$(OBJDIR)$(P)keymap.$(O) : $(SRCDIR)$(P)keymap.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)keymap.$(O) $(SRCDIR)$(P)keymap.c

$(OBJDIR)$(P)vterm.$(O) : $(SRCDIR)$(P)vterm.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)vterm.$(O) $(SRCDIR)$(P)vterm.c

$(OBJDIR)$(P)line.$(O) : $(SRCDIR)$(P)line.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)line.$(O) $(SRCDIR)$(P)line.c

$(OBJDIR)$(P)ledit.$(O) : $(SRCDIR)$(P)ledit.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)ledit.$(O) $(SRCDIR)$(P)ledit.c

$(OBJDIR)$(P)paste.$(O) : $(SRCDIR)$(P)paste.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)paste.$(O) $(SRCDIR)$(P)paste.c

$(OBJDIR)$(P)screen.$(O) : $(SRCDIR)$(P)screen.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)screen.$(O) $(SRCDIR)$(P)screen.c

$(OBJDIR)$(P)sysdep.$(O) : $(SYSDEP_O_DEPS) $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)sysdep.$(O) $(SRCDIR)$(P)sysdep.c

$(OBJDIR)$(P)ins.$(O) : $(SRCDIR)$(P)ins.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)ins.$(O) $(SRCDIR)$(P)ins.c

$(OBJDIR)$(P)main.$(O) : $(SRCDIR)$(P)main.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)main.$(O) $(SRCDIR)$(P)main.c

$(OBJDIR)$(P)file.$(O) : $(SRCDIR)$(P)file.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)file.$(O) $(SRCDIR)$(P)file.c

$(OBJDIR)$(P)misc.$(O) : $(SRCDIR)$(P)misc.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)misc.$(O) $(SRCDIR)$(P)misc.c

$(OBJDIR)$(P)cmds.$(O) : $(SRCDIR)$(P)cmds.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)cmds.$(O) $(SRCDIR)$(P)cmds.c

$(OBJDIR)$(P)buffer.$(O) : $(SRCDIR)$(P)buffer.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)buffer.$(O) $(SRCDIR)$(P)buffer.c
#
!ifdef FOLD
$(OBJDIR)$(P)lineattr.$(O) : $(SRCDIR)$(P)lineattr.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)lineattr.$(O) $(SRCDIR)$(P)lineattr.c
$(OBJDIR)$(P)blocal.$(O) : $(SRCDIR)$(P)blocal.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)blocal.$(O) $(SRCDIR)$(P)blocal.c
!endif
!ifndef MSWIN WIN32 WIN95
$(OBJDIR)$(P)display.$(O) : $(SRCDIR)$(P)display.c $(CONFIG_H) $(COMPILE_DEPS)
	$(COMPILE_CMD)$(OBJDIR)$(P)display.$(O) $(SRCDIR)$(P)display.c
!endif

!ifdef MSWIN WIN95
$(SRCDIR)$(P)sysdep.c : $(SRCDIR)$(P)mswin.c
	touch $(SRCDIR)$(P)sysdep.c
!endif
!endif   #NOT HELP
