		      Building and Installing Emacs
		      on Windows NT and Windows 95

You need a compiler package to build and install Emacs on NT or Win95.
If you don't have one, precompiled versions are available in
ftp://ftp.cs.washington.edu/pub/ntemacs/<version>.

Configuring:

(1) In previous versions, you needed to edit makefile.def
    to reflect the compiler package that you are using.  You should no
    longer have to do this if you have defined the INCLUDE and LIB 
    environment variables, as is customary for use with Windows compilers.
    (Unless you are using MSVCNT 1.1, in which case you will need
    to set MSVCNT11 to be a non-zero value at the top of makefile.def.)

(2) Choose the directory into which Emacs will be installed, and
    edit makefile.def to define INSTALL_DIR to be this directory.  
    (Alternatively, if you have INSTALL_DIR set as an environment
    variable, the build process will ignore the value in makefile.def
    and use the value of the environment variable instead.)  Note 
    that if it is not installed in the directory in which it is built,
    the ~16 MB of lisp files will be copied into the installation directory.

    Also, makefile.def is sometimes unpacked read-only; use
   
    > attrib -r makefile.def

    to make it writable.

(3) You may need to edit nt/paths.h to specify some other device
    instead of `C:'.

Building:

(4) The target to compile the sources is "all", and is recursive starting 
    one directory up.  The makefiles for the NT port are in files named 
    "makefile.nt".  To get things started, type in this directory:

    > nmake -f makefile.nt all

    or use the ebuild.bat file.

    When the files are compiled, you will see some warning messages declaring
    that some functions don't return a value, or that some data conversions
    will be lossy, etc.  You can safely ignore these messages.  The warnings
    may be fixed in the main FSF source at some point, but until then we
    will just live with them.

    NOTE: You should not have to edit src\paths.h to get Emacs to run
    correctly.  All of the variables in src\paths.h are configured
    during start up using the nt\emacs.bat file (which gets installed 
    as bin\emacs.bat -- see below).

Installing:

(5) Currently, Emacs requires a number of environment variables to be set
    for it to run correctly.  A batch file, emacs.bat, is provided that 
    sets these variables appropriately and then runs the executable
    (emacs.bat is generated using the definition of INSTALL_DIR in
    nt\makefile.def and the contents of nt\emacs.bat.in).

(6) The install process will install the files necessary to run Emacs in 
    INSTALL_DIR (which may be the directory in which it was built), 
    and create a program manager/folder icon in a folder called GNU Emacs.
    From this directory, type:

    > nmake -f makefile.nt install

    or use the install.bat file.

(7) Create the Emacs startup file.  Under Unix, this file is .emacs;
    under NT and Win95, this files is _emacs.  (If you would like to
    use a .emacs file that, for example, you share with a Unix version
    of Emacs, you can invoke Emacs with the -l option to specify the
    .emacs file that you would like to load.)  Note that Emacs requires 
    the environment variable HOME to be set in order for it to locate the 
    _emacs file.  Ideally, HOME should not be set in the emacs.bat file 
    as it will be different for each user.  (HOME could be set, 
    for example, in the System panel of the Control Panel).

(8) Either click on the icon, or run the emacs.bat file, and away you go.

    If you would like to resize the command window that Emacs uses,
    or change the font or colors, click on the program manager icon
    to start Emacs.  Change the settings using the "-" menu in the upper
    left hand corner of the window, making sure to select the "Save"
    options in the dialog boxes as you do so.  Exit Emacs and restart.
