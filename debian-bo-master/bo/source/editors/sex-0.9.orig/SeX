*file_button.translations: #override <Btn2Down>,<Btn2Up>: file(loadselection) \n\
	<Btn3Down>,<Btn3Up>: file(saveall)
*search_button.translations: #override <Btn2Down>,<Btn2Up>: find(selection)
*goto_button.translations: #override <Btn2Down>,<Btn2Up>: move(selection)
*window_button.translations: #override <Btn2Down>,<Btn2Up>: win(clone)
*buf_button.translations: #override \
	<BtnDown>: build_buf_menu() PopupMenu()

*text_window.translations: \
	<ConfigureNotify>: resize() \n\
	<Expose>: redraw() \n\
	\
	Button1<Motion>: continue_selection() \n\
	!Button3<Motion>: extend_selection() \n\
	<Btn1Down>: start_selection() \n\
	None<Btn2Down>,None<Btn2Up>: cut_or_paste() \n\
	Shift<Btn1Up>: extend(togglecolumnar) \n\
	Shift<Btn2Down>,Shift<Btn2Up>: edit(copy) \n\
	None<Btn3Down>: extend_selection() \n\
	\
	Ctrl Meta<Key>0: extend(mark0) \n\
	Ctrl Meta<Key>1: extend(mark1) \n\
	Ctrl Meta<Key>2: extend(mark2) \n\
	Ctrl Meta<Key>3: extend(mark3) \n\
	Ctrl Meta<Key>4: extend(mark4) \n\
	Ctrl Meta<Key>5: extend(mark5) \n\
	Ctrl Meta<Key>6: extend(mark6) \n\
	Ctrl Meta<Key>7: extend(mark7) \n\
	Ctrl Meta<Key>8: extend(mark8) \n\
	Ctrl Meta<Key>9: extend(mark9) \n\
	Shift Meta<Key>0: move(setmark0) \n\
	Shift Meta<Key>1: move(setmark1) \n\
	Shift Meta<Key>2: move(setmark2) \n\
	Shift Meta<Key>3: move(setmark3) \n\
	Shift Meta<Key>4: move(setmark4) \n\
	Shift Meta<Key>5: move(setmark5) \n\
	Shift Meta<Key>6: move(setmark6) \n\
	Shift Meta<Key>7: move(setmark7) \n\
	Shift Meta<Key>8: move(setmark8) \n\
	Shift Meta<Key>9: move(setmark9) \n\
	Shift Meta<Key>N: move(nextpara) \n\
	Shift Meta<Key>P: move(prevpara) \n\
	Meta<Key>0: move(mark0) \n\
	Meta<Key>1: move(mark1) \n\
	Meta<Key>2: move(mark2) \n\
	Meta<Key>3: move(mark3) \n\
	Meta<Key>4: move(mark4) \n\
	Meta<Key>5: move(mark5) \n\
	Meta<Key>6: move(mark6) \n\
	Meta<Key>7: move(mark7) \n\
	Meta<Key>8: move(mark8) \n\
	Meta<Key>9: move(mark9) \n\
	\
	Ctrl<Key>X,<Key>0: win(close) \n\
	Ctrl<Key>X,<Key>1: win(closeothers) \n\
	Ctrl<Key>X,<Key>2: win(clone) \n\
	Ctrl<Key>X,<Key>3: win(openall) \n\
	Ctrl<Key>X,<Key>I: file(insert) \n\
	Ctrl<Key>X,Ctrl<Key>K: file(kill) \n\
	Ctrl<Key>X,Ctrl<Key>C: quit(asksave) \n\
	Ctrl<Key>X,Ctrl<Key>D: file(save) \n\
	Ctrl<Key>X,Ctrl<Key>F: file(load) \n\
	Ctrl<Key>X,Ctrl<Key>S: file(save) \n\
	\
	Ctrl<Key>A: move(boln) \n\
	Ctrl<Key>B: move(prevchar) \n\
	Ctrl<Key>D: edit(cutnext) \n\
	Ctrl<Key>E: move(eoln) \n\
	Ctrl<Key>F: move(nextchar) \n\
	Ctrl<Key>H: edit(cutprev) \n\
	Ctrl<Key>J: newline() \n\
	Ctrl<Key>K: edit(cuteoln) \n\
	Ctrl<Key>L: move(scrollcenter) \n\
	Ctrl<Key>M: newline() \n\
	Ctrl<Key>N: move(nextline) \n\
	Ctrl<Key>O: newline() move(prevchar) \n\
	Ctrl<Key>P: move(prevline) \n\
	Ctrl<Key>S: find(next) \n\
	Ctrl<Key>V: move(nextpage) \n\
	Ctrl<Key>W: edit(cut) \n\
	Ctrl<Key>Y: edit(yank) \n\
	Ctrl<Key>Z: move(prevpage) \n\
	\
	Meta<Key>B: move(prevword) \n\
	Meta<Key>C: extend(togglecolumnar) \n\
	Meta<Key>D: edit(cutnextword) \n\
	Meta<Key>F: move(nextword) \n\
	Meta<Key>L: select_para() \n\
	Meta<Key>N: file(next) \n\
	Meta<Key>P: file(prev) \n\
	Meta<Key>Q: edit(format) \n\
	Meta<Key>S: find(popup) \n\
	Meta<Key>V: move(prevpage) \n\
	Meta<Key>W: edit(copy) \n\
	Meta<Key>Y: edit(yankprev) \n\
	Meta<Key>Z: quit(autosave) \n\
	Meta<Key>BackSpace: edit(cutprevword) \n\
	Meta<Key>Delete: edit(cutnextword) \n\
	: Meta <Key>less: move(bof) \n\
	: Meta <Key>greater: move(eof) \n\
	\
	<Key>Escape,<Key>[: move(prevpara) \n\
	<Key>Escape,<Key>]: move(nextpara) \n\
	<Key>Escape,<Key>~: file(unmark) \n\
	<Key>Escape,<Key>B: move(prevword) \n\
	<Key>Escape,<Key>C: extend(togglecolumnar) \n\
	<Key>Escape,<Key>D: edit(cutnextword) \n\
	<Key>Escape,<Key>F: move(nextword) \n\
	<Key>Escape,<Key>N: extend(nextpara) \n\
	<Key>Escape,<Key>Q: edit(format) \n\
	<Key>Escape,<Key>P: extend(prevpara) \n\
	<Key>Escape,<Key>S: find(popup) \n\
	<Key>Escape,<Key>Y: edit(yankprev) \n\
	<Key>Escape,<Key>Z: quit(autosave) \n\
	<Key>Escape,None<Key>less: move(bof) \n\
	<Key>Escape,<Key>greater: move(eof) \n\
	\
	Shift Ctrl<Key>Tab: edit(undent) \n\
	Ctrl<Key>Tab: edit(indent) \n\
	Shift Ctrl<Key>space: edit(undentspace) \n\
	Ctrl<Key>space: edit(indentspace) \n\
	\
	Ctrl Shift<Key>Insert: edit(yankprevcol) \n\
	Ctrl Shift<Key>Home: extend(top) \n\
	Ctrl Shift<Key>End: extend(bottom) \n\
	Ctrl Shift<Key>Next: extend(eof) \n\
	Ctrl Shift<Key>Prior: extend(bof) \n\
	\
	Ctrl<Key>BackSpace: edit(cutprevword) \n\
	Ctrl<Key>Insert: edit(yankprev) \n\
	Ctrl<Key>Delete: edit(cutnextword) \n\
	Ctrl<Key>Home: move(top) \n\
	Ctrl<Key>End: move(bottom) \n\
	Ctrl<Key>Next: move(eof) \n\
	Ctrl<Key>Prior: move(bof) \n\
	\
	Shift<Key>Insert: edit(yankcol) \n\
	Shift<Key>Delete: edit(copy) \n\
	Shift<Key>Home: extend(boln) \n\
	Shift<Key>End: extend(eoln) \n\
	Shift<Key>Next: extend(nextpage) \n\
	Shift<Key>Prior: extend(prevpage) \n\
	\
	<Key>BackSpace: edit(cutprev) \n\
	<Key>Insert: edit(yank) \n\
	<Key>Delete: edit(cutnext) \n\
	<Key>Home: move(boln) \n\
	<Key>End: move(eoln) \n\
	<Key>Next: move(nextpage) \n\
	<Key>Prior: move(prevpage) \n\
	\
	Ctrl Shift<Key>Right: extend(nextword) \n\
	Ctrl Shift<Key>Left: extend(prevword) \n\
	\
	Ctrl<Key>Left: move(prevword) \n\
	Ctrl<Key>Right: move(nextword) \n\
	\
	Shift<Key>Up: extend(prevline) \n\
	Shift<Key>Down: extend(nextline) \n\
	Shift<Key>Left: extend(prevchar) \n\
	Shift<Key>Right: extend(nextchar) \n\
	\
	<Key>Up: move(prevline) \n\
	<Key>Down: move(nextline) \n\
	<Key>Left: move(prevchar) \n\
	<Key>Right: move(nextchar) \n\
	\
	<Key>Return: newline() edit(indentline) \n\
	\
	<Key>[: insert() \n\
	<Key>]: insert() \n\
	<Key>~: insert() \n\
	<Key>0: insert() edit(undentcurly) \n\
	<Key>1: insert() \n\
	<Key>2: insert() \n\
	<Key>3: insert() \n\
	<Key>4: insert() \n\
	<Key>5: insert() \n\
	<Key>6: insert() \n\
	<Key>7: insert() \n\
	<Key>8: insert() \n\
	<Key>9: insert() \n\
	<Key>A: insert() \n\
	<Key>B: insert() \n\
	<Key>C: insert() \n\
	<Key>D: insert() \n\
	<Key>E: insert() \n\
	<Key>F: insert() \n\
	<Key>G: insert() \n\
	<Key>H: insert() \n\
	<Key>I: insert() \n\
	<Key>J: insert() \n\
	<Key>K: insert() \n\
	<Key>L: insert() \n\
	<Key>M: insert() \n\
	<Key>N: insert() \n\
	<Key>O: insert() \n\
	<Key>P: insert() \n\
	<Key>Q: insert() \n\
	<Key>R: insert() \n\
	<Key>S: insert() \n\
	<Key>T: insert() \n\
	<Key>U: insert() \n\
	<Key>V: insert() \n\
	<Key>W: insert() \n\
	<Key>X: insert() \n\
	<Key>Y: insert() \n\
	<Key>Z: insert() \n\
	<Key>space: insert() \n\
	None<Key>less: insert() \n\
	<Key>greater: insert() \n\
	<Key>Tab: insert() \n\
	<Key>: insert() \n
