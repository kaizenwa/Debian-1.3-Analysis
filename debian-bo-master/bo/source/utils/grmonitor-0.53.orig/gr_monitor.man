


gr_monitor(1)                                       gr_monitor(1)


NNAAMMEE
       gr_monitor - Graphical Process Monitor V0.53

SSYYNNOOPPSSIISS
       ggrr__mmoonniittoorr  [-host h] [-sleep n] [-noskip] [-stdin] [-per-
       row n] [-gap x] [-witdh n] [-height n] [-geometry] [-angle
       n]  [-dolly  n]  [-zoom  x] [-zhorz x] [-zvert x] [-color]
       [-nolight] [-fog] [-onebuf] [-rotate] [-verbose] [-v]

       ggrr__ggaatthheerr [-sleep n]

DDEESSCCRRIIPPTTIIOONN
       GGrr__MMoonniittoorr displays information about  processes  resident
       on  a  UNIX system.  For each process it displays a 3D bar
       graph of CPU consumed, memory consumed, resident set size,
       and  elapsed  time.  The  processes are group by username.
       Each username grouping sits on its own little plinth.

       This program is also quite useful for hogging CPU.

       There are controls  for  translating,  rotating,  scaling,
       lighting and fog effects.

       Gr_monitor  consists  of  two  components:  ggrr__mmoonniittoorr and
       ggrr__ggaatthheerr..  Gr_gather gathers data from the Linux  process
       file system.  Gr_monitor receives this info via a pipe and
       displays in in a X11 Mesa or X11 OpenGL window.

       Gr_monitor may optionally use rsh to run  gr_gather  on  a
       remote host.

       The  gr_monitor input data format is easily understood and
       could be used to display other kinds of data  without  any
       modification.

       Gr_monitor  is  something  I hacked together to learn more
       about OpenGL, SGI's open standard for 2D/3D graphics.  The
       whole  thing  was  developed  under  Linux  using the Mesa
       OpenGL look-a-like library.


   OOPPTTIIOONNSS
       _-_h_o_s_t _h_o_s_t_n_a_m_e
              Gr_monitor will use rsh to  fire  up  gr_gather  on
              another host.  Data will be piped back to the local
              host for display.

       _-_s_l_e_e_p _s_e_c_o_n_d_s
              Time to sleep between updates.  The  default  is  5
              seconds  (if  you  manually  invoke gr_gather, it's
              default is one second).  A sleep of 0  (zero)  will
              cause  gr_monitor to start up halted (the space bar
              will single step the display).




MH                          Gr_Monitor                          1





gr_monitor(1)                                       gr_monitor(1)


       _-_n_o_s_k_i_p
              Normally data will be skipped if the renderer can't
              keep  up  with  it.  When playing back pre-recorded
              data via the -stdin option, you may need to  switch
              off skipping.

       _-_s_t_d_i_n Take  data in gr_gather format from standard input.

       _-_p_e_r_r_o_w _n
              If a row exceeds this many  processes,  a  new  row
              will be started.

       _-_g_a_p _x Space between plinths (a real number).

       _-_w_i_d_t_h _n
              Display width in pixels.

       _-_h_e_i_g_h_t
              Display height in pixels.

       _-_g_e_o_m_e_t_r_y
              Normal X11 geometry spec.

       _-_a_n_g_l_e _n
              Tilt on X axis in degrees.

       _-_d_o_l_l_y _n
              Distant  to translate in the z axis (dolly the cam-
              era).

       _-_z_o_o_m _x
              Projection zoom factor.

       _-_z_h_o_r_z _x
              Horizontal zoom factor.

       _-_z_v_e_r_t _n
              Vertical zoom factor.

       _-_c_o_l_o_r Use own color map.  Colors will look better.  Worth
              a look.

       _-_n_o_l_i_g_h_t
              Turn off lighting effects.

       _-_f_o_g   Turn on fog effects.

       _-_o_n_e_b_u_f
              Use single buffering of the display image.

       _-_r_o_t_a_t_e
              Start up rotating.





MH                          Gr_Monitor                          2





gr_monitor(1)                                       gr_monitor(1)


       _-_v_e_r_b_o_s_e
              or  _-_v  Provides  some feedback to stderr.  Maximum
              output is generated by -verbose.  Alternatively the
              -v option will only report skipped data sets due to
              the monitor not being able  to  keep  up  with  the
              gatherer,  which  is useful when trying to select a
              good -sleep value.


GGRR__MMOONNIITTOORR WWIINNDDOOWW
       The following controls are  available  in  the  gr_monitor
       window.   The  middle  mouse  button will bring a keyboard
       quick reference.  The right mouse  button  will  bring  up
       another  small menu duplicating some of the keyboard func-
       tions.  When pressing keys beware of excessive type-a-head
       (count your key presses).

       Here is a summary of the keys and what they do:


       _E_S_C    Exits gr_monitor.


       _?      Dump a key summary on stdout.


       _p_/_P    Increase or decrease the items per row guideline by
              one (default 12).  Handy if you don't like the lay-
              out.


       _a_/_A    Zoom in or out.


       _x_/_X _y_/_Y _z_/_Z
              Rotation  about  the specified axis.  Lowercase +ve
              rotation.  Uppercase -ve rotation.


       _i_/_I _j_/_J _k_/_K
              Translation along the specified axis (i,j,k implies
              x,y,z).


       _r      Toggles rotation.


       _0 _1 _2 _3 _4 _5 _6 _7 _8 _9
              Selects a bar type.  Can only select from the first
              10 bar types.


       _s_/_S    Scale selected bar type up or  down.   Lowercase  =
              up. Uppercase = down.



MH                          Gr_Monitor                          3





gr_monitor(1)                                       gr_monitor(1)


       _n _o_r _N Scale  selected bar type by 1.0 (i.e. reset scale).


       _o _o_r _O Turn off selected bar type.


       _l _o_r _L Toggle lighting.


       _f _o_r _F Toggle fog effects.


       _h _o_r _H Halt the display.


       _S_P_A_C_E  Step one frame through a halted display.


EENNVVIIRROONNMMEENNTT
       GGRR__GGAATTHHEERR__CCOOMMMMAANNDD can contain an  alternative  command  to
       run instead of gr_gather.


DDAATTAA FFOORRMMAATT
       The  pipe will contain data sets one after the other, each
       data set will contain:
          a title line
          nitems nvalues valuename1 valuename2 valuename3 ...
          item ID
          group ID
          value1 value2 value3 ...

       For example:
          Selected processes on sputnik3
          4 3 CPU RSS MEM
          100
          michael
          0.000000 0.043189 0.000000
          196
          root
          0.166667 0.559287 0.178711
          250
          michael
          2.083333 1.768806 0.609375
          275
          michael
          0.000000 0.054172 0.021484


SSEEEE AALLSSOO
       ttoopp(1) ppss(1)






MH                          Gr_Monitor                          4





gr_monitor(1)                                       gr_monitor(1)


BBUUGGSS AANNDD LLIIMMIITTAATTIIOONNSS
       Please send any bug reports to michael@actrix.gen.nz.

       This program is an absolute hog.  Gr_Monitor is very  slow
       on  a  typical 486 with a non-accelerated graphics card (I
       don't know if an accelerated card would help).  But it  is
       fun  to  watch, especially on a machine where processes or
       users are coming and going. It is very useful for spotting
       hogs and uninhibited growth.

       For  some  reason,  in  the  standard color map mode under
       Mesa-Linux, the background  clears  to  white  instead  of
       black.

       If  I knew more about OpenGL it would probably be a better
       utility.


AAUUTTHHOORR
       Michael Hamilton (michael@actrix.gen.nz)


AACCKKNNOOWWLLEEDDGGEEMMEENNTTSS
       Brian Paul (brianp@ssec.wisc.edu) is the author of the The
       Mesa 3-D graphics library.

       Linux   gr_gather   is  based  on  pprrooccppss  ttoopp  by  Branko
       Lankester, Roger Binns, by Michael K. Johnson.

       Gr_monitor is  based  on  a  cut  up  of  the  GLUT  exam-
       ple/scube.c  which  rotates  a  cube above a checker board
       with shadows, lighting etc.  Thanks to GLUT author Mark J.
       Kilgard (mjk@sgi.com), scube author David G Yu.

       Thanks  are  also  due  to  all those people who have made
       Linux so great.


LLIICCEENNCCEE
       (c) Copyright 1995, Michael Hamilton.

       I don't really know whether I  have  any  rights  on  this
       work,  but your rights are restricted by the copyrights on
       the work on which it is based (so what ever they say  goes
       for me too):

       Gr_gather  is  covered  by the same licence as pprrooccppss:: the
       GNU GENERAL PUBLIC LICENCE.

       For gr_monitor you have the same rights as stated  in  the
       original SGI copyright:

       (c) Copyright 1993, 1994, Silicon Graphics, Inc.




MH                          Gr_Monitor                          5





gr_monitor(1)                                       gr_monitor(1)


       ALL RIGHTS RESERVED

       Permission to use, copy, modify, and distribute this soft-
       ware for any purpose and without fee  is  hereby  granted,
       provided  that  the  above  copyright notice appear in all
       copies and that both the copyright notice and this permis-
       sion  notice  appear in supporting documentation, and that
       the name of Silicon Graphics, Inc. not be used  in  adver-
       tising  or  publicity  pertaining  to  distribution of the
       software without specific, written prior permission.

       THE MATERIAL EMBODIED ON THIS SOFTWARE IS PROVIDED TO  YOU
       "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, EXPRESS, IMPLIED
       OR OTHERWISE, INCLUDING WITHOUT LIMITATION,  ANY  WARRANTY
       OF  MERCHANTABILITY  OR  FITNESS FOR A PARTICULAR PURPOSE.
       IN NO EVENT SHALL SILICON GRAPHICS, INC.  BE LIABLE TO YOU
       OR  ANYONE ELSE FOR ANY DIRECT, SPECIAL, INCIDENTAL, INDI-
       RECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY  DAMAGES
       WHATSOEVER,  INCLUDING WITHOUT LIMITATION, LOSS OF PROFIT,
       LOSS OF USE, SAVINGS OR REVENUE, OR THE  CLAIMS  OF  THIRD
       PARTIES,  WHETHER  OR NOT SILICON GRAPHICS, INC.  HAS BEEN
       ADVISED OF THE POSSIBILITY OF SUCH  LOSS,  HOWEVER  CAUSED
       AND  ON ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CON-
       NECTION WITH THE POSSESSION, USE OR  PERFORMANCE  OF  THIS
       SOFTWARE.

       US Government Users Restricted Rights Use, duplication, or
       disclosure by the Government is  subject  to  restrictions
       set   forth   in   FAR   52.227.19(c)(2)  or  subparagraph
       (c)(1)(ii) of the Rights in Technical  Data  and  Computer
       Software clause at DFARS 252.227-7013 and/or in similar or
       successor clauses in the FAR or the DOD or NASA  FAR  Sup-
       plement.   Unpublished--  rights  reserved under the copy-
       right laws of the United States.   Contractor/manufacturer
       is Silicon Graphics, Inc., 2011 N.  Shoreline Blvd., Moun-
       tain View, CA 94039-7311.

       OpenGL(TM) is a trademark of Silicon Graphics, Inc.



















MH                          Gr_Monitor                          6


