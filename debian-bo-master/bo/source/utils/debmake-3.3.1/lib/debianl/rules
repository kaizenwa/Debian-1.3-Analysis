#!/usr/bin/make -f
# Made with the aid of debmake, by Christoph Lameter,
# based on the sample debian/rules file for GNU hello by Ian Jackson.

package=#PACKAGE#

version=$(shell expr `pwd` : '.*-\([0-9.]*\)')
version_major=$(shell expr `pwd` : '.*-\([0-9]*\).[0-9.]*')

build:
	$(checkdir)
	#CONFIGURE#

	-mkdir shared static
	#
	# First build the shared library
	#
	cd shared ; \
	    $(MAKE) -f ../Makefile VPATH=".." srcdir=".." \
	        CFLAGS="-O2 -fPIC -pipe" ; \
	    gcc -shared -Wl,-soname,$(package).so.$(version_major) -o $(package).so.$(version) `ls *.o`
	#
	# Build the static library (it does not need Position Independent Code,
	# which reserves one register; thus, without -fPIC we get more efficient
	# code).
	#
	cd static ; \
	     $(MAKE) -f ../Makefile VPATH=".." srcdir=".." \
	          CFLAGS="-O2 -pipe" LDFLAGS="-s" progs
	touch build

clean:
	$(checkdir)
	-rm -rf static shared
	-rm -f build
	-#CLEAN#
	-rm -f `find . -name "*~"`
	-rm -rf debian/tmp `find debian/* -type d` debian/files* core
	-rm -f debian/*substvars
binary-indep:	checkroot build
	$(checkdir)
# There are no architecture-independent files to be uploaded
# generated by this package.  If there were any they would be
# made here.

binary-arch:	checkroot build
	$(checkdir)
	-rm -rf debian/tmp `find debian/* -type d`
	install -d debian/tmp
	cd debian/tmp && install -d `cat ../dirs`
	install -m644 static/$(package).a debian/tmp/usr/lib/
	install -m644 static/gdbm.h dbm.h ndbm.h debian/tmp/usr/include/
	install -m644 gdbm.3 debian/tmp/usr/man/man3/gdbm.3gdbm

	install -m644 shared/$(package).so.$(version) debian/tmp/usr/lib

	#INSTALL#
	debstd -m #DOCS#
	dpkg-gencontrol -p#PACKAGE#1-dev
	chown -R root.root debian/tmp
	chmod -R go=rX debian/tmp
	dpkg --build debian/tmp ..

define checkdir
	test -f debian/rules
endef

# Below here is fairly generic really

binary:		binary-indep binary-arch

checkroot:
	$(checkdir)
	test root = "`whoami`"

.PHONY: binary binary-arch binary-indep clean checkroot
