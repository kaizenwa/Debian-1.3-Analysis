
From sacampbe@watdragon.uwaterloo.ca Fri Jan 17 12:47:28 1997
Date: Fri, 17 Jan 1997 11:41:11 -0500 (EST)
From: Sue Campbell <sacampbe@watdragon.uwaterloo.ca>
To: clameter@debian.org
Subject: debmake documentation

Christoph,
  I found your README.debian a bit curt for the first time packager.
Also, some of the wording in the manuals is a bit confusing if you
don't already know what you're doing.
Here are some notes, modified from yours, to help the first time
packager get through the process using debmake.
I thought you might want to put this into a HOWTO.first_time in the debmake
doc directory.

###############
This is intended to be a quick howto on packaging a simple program
for Debian using debmake. It is not very thorough, so should only be
used for very simple packages, i.e. a program that that generates at
most a few binaries that will be shipped as a single Debian package.
On the other hand, it has some tips and pointers that aren't covered
in the manuals.

After becoming comfortable with this, you can then go to work on libraries
and programs providing multiple debian packages. You will need to
become more familiar with the programmers and policy manuals at
that stage, since things can get more complicated.

In any case, whereever this doesn't agree with the programmer or policy
manual they take precedence.

0.1 It is currently necessary to do certain steps in the packaging
process as root. You can choose to do this one of 2 ways:
become root or set up one of the programs that will let selected
users execute commands as root. sudo is one such program and many
have found it to work very well (any security issues aside).

0.2 You should also have a pgp key. If you choose to use a program
like sudo, then this is easy, as your personal key will be used.
If you work from root, there are a few methods (kludges) people use
which you can work out for yourself.

1. Put the uncompressed program into a directory. The name of this directory
should be the package name followed by '-' and the version number.
       <package_name>-<upstream_version>
The package name can not use capital letters. The upstream version can
only use [1-9][a-z]+.-:
cd into the source directory and type deb-make.

2. Customize the files in debian. For your first package, I would recommend
staying away from anything that needs to use the .ex files or
pre- and post- install and pre- and post- rm.
Read the manuals on configuring the files in debian/.
They can be found in /usr/doc/dpkg/policy.html/index.html  and
                     /usr/doc/dpkg/programmer.html/index.html
Simply open them in your favorite web browser.

3. Make any modifications to get the program to compile. If the makefile
is set up to install in DESTDIR, then you will only
need to make minor changes to debian/rules (DESTDIR is set
in debian/rules to make sure things go into the right place).

4. Run debian/rules. If things don't work, go back to 3.

5. build package with "build". If you use sudo, then use "build -rsudo".

6. Check if package contents are ok with "debc"

7. Testinstall the package with "debi" and test the
   functionality it should provide.

8. If all is ok, release it by executing "release".

MAINTENANCE

a. Edit files (make sure the upstream and/or debian version gets changed).

b. Log the changes with: dch "I changed this"

c. Continue with #4 above.

