$Id: README.UNIX,v 1.3 1997/01/16 04:14:18 dfs Exp $
REMIND version 3.0 for UNIX

REMIND is a sophisticated alarm/calendar program.  Details are given
in the man page, "remind.1".

1 - Read the file COPYRIGHT.

2-  Before compiling the software, check to see if it includes patches.
    These are files called patch.xx.  If there are patches, apply them all
    by typing:

       cat patch.* | patch

3 - Examine the Makefile and change any parameters which need to be
    changed for your system.  As it stands, the Makefile is set up for a
    Linux system.

4 - Examine the file config.h and adjust parameters as needed

5 - Examine lang.h and choose the language you want Remind to use.
    (You can do this on the "make" command-line -- see "OTHER
    LANGUAE SUPPORT.)

6 - Type 'make'

7 - Type 'sh test-rem' or 'make test' to run the acceptance test.  Note
    that the test script works only for the English version of Remind.

8 - Type 'make install' to install Remind, kall, rem and the man
    pages.

The subdirectory "www" contains scripts for making a nice calendar
web server.  See the files README and Makefile in that directory.

Two shell scripts, "remind-all.csh" and "remind-all.sh" are provided.
These allow automatic mailing of reminders to all users who create a
$HOME/.reminders file.  These two scripts are equivalent; one is a
"sh" script and the other is a "csh" script.  Pick the one you want to
use, and follow the instructions in the opening comments of the
script.

*** NOTE *** Please be aware that "remind-all.csh" and "remind-all.sh"
have been changed since version 03.00.05 of Remind.  If you install
the new remind executable, make sure you switch over to the new
"remind-all" scripts.

A shell script called "rem" is provided for those who like to have
'remind' assume a default reminders file.  A man page for this script
is provided.  You should examine the script to ensure that the defaults
are correct.

Many people have asked me why I supply the "rem" script instead of
having Remind assume a default file.  The answer is: That's how I like
it!  My personal preference is for a program which normally takes
parameters to display usage information when invoked with no
parameters.  I like that behaviour so I can quickly get an idea of
what a program does without poring through the man page.  And I think
I'll keep Remind that way.  Sorry to all who dislike it. :-)

A shell script called "kall" is provided so you can kill your background
remind processes when you log out.  See the man page.  Note that kall
depends on the output of "ps", and may not be portable.

The file "defs.rem" has some sample Remind definitions and commands,
as well as U.S. and Jewish holidays.

OTHER LANGUAGE SUPPORT

Remind has support for languages other than English.  See the file
"lang.h" for details.  The language support may vary - you can change
only the substitution filter, or you can translate all of the usage
instructions and error messages as well.  See "french.h" for an
example of the latter.

To compile Remind for a non-english language, look at the constants
defined in "lang.h".  Then, to compile Remind for Italian (as an
example), type:

	make "CDEFS=-DLANG=ITALIAN"

If you add support for a non-English language, Remind will accept both the
English and non-English names of months and weekdays in an input script.
However, you should not rely on this feature if you want to write portable
Remind scripts.

At a minimum, you should support month and day names in the foreign
language, and should modify the substitution filter appropriately.
If you are truly diligent, you can translate usage and error messages
too.

Take a look at the files "english.h" and "german.h" if you want to add
support for your favourite language.  If you do add another language
to Remind, please let me know!  Here are the basic guidelines:

- Your language file should be called "lxxx.h", where lxxx is the first 8
  characters of the ENGLISH name of your language.

- Your language file should define L_LANGNAME to be the full English
  name of your language, with the first letter capitalized and the rest
  lower-case.

RELEASE NOTES -- miscellaneous info that couldn't go anywhere else!

1. POPUP REMINDERS

If you're running under X-Windows and you have the TCL tools,
you can create simple pop-up reminders by creating the following
TCL script called 'popup'.  It pops a message on to the screen and
waits for you to press the 'OK' button.  If you don't press the OK button
within 15 seconds, it exits anyway.  To use it, you can use the '-k' option
for Remind as follows:

	remind "-kpopup '%s'&" .reminders

Or use the following in your Remind script:

	REM AT 17:00 RUN popup 'Time to go home.' &

This TCL script is a slightly modified version of one submitted by
Norman Walsh.  TCL is available via FTP at ftp.uu.net in /languages/tcl.

-------------- Cut Here ---------- Cut Here ---------- Cut Here -------------
#!/usr/local/bin/wish -f

wm withdraw .

if { [ llength $argv ] == 1 } {
  eval set msg $argv
} else {
  eval set msg [ list $argv ]
}

after 15000 { destroy . ; exit }

tk_dialog .d { Message } $msg warning 0 { OK } 

destroy .

exit
-------------- Cut Here ---------- Cut Here ---------- Cut Here -------------


--
David F. Skoll <dfs@doe.carleton.ca>
986 Eiffel Avenue
Ottawa, Ontario K2C 0J2
CANADA

Tel. (613) 225-8687
