dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which tries to guess your system
dnl	configuration so that no manual editing of the Makefile should be
dnl	necessary
dnl
dnl $Id: configure.in,v 1.16 1996/09/29 18:24:08 fp Exp $
dnl

AC_INIT(uudeview.lsm)
AC_PREREQ(2.9)
AC_CONFIG_HEADER(config.h)

#
# package revision
#
VERSION=0.5
PATCH=9

AC_ARG_ENABLE(tcl,     [  --enable-tcl=dir        looks for TCL files files below this directory],have_tcl=$enableval,have_tcl="yes")
AC_ARG_ENABLE(tk,      [  --enable-tk=dir         looks for TK files below this directory],have_tk=$enableval,have_tk="yes")
AC_ARG_ENABLE(minews,  [  --disable-minews        don't build the mini-inews],have_minews=$enableval,have_minews=yes)
AC_ARG_ENABLE(optimize,[  --disable-optimize      compile for debugging],optimize=$enableval,optimize=yes)
AC_ARG_ENABLE(posting, [  --enable-posting=server if using minews, sets the default name of your news
                          server (will fall back to NNTPSERVER)],newsserver=$enableval,newsserver="")
AC_ARG_ENABLE(domain,  [  --enable-domain=domain  if using minews, and autoconf cannot figure out
                          your domain name, use this option to set it.
                          Otherwise, a bogus domainname is used (causing
                          the reply address of your postings to be invalid)],domainname=$enableval,domainname="")
AC_ARG_ENABLE(sendmail,[  --enable-sendmail=prog  Use prog to mail a file with recipients on
                          the command line and the mail via stdin],have_sendmail=$enableval,have_sendmail=yes)
AC_ARG_ENABLE(inews,   [  --enable-inews=prog     Use prog to post a file. -h is given on
                          the command line, the article is piped through
                          standard input],have_inews=$enableval,have_inews=yes)
AC_ARG_ENABLE(manuals, [  --disable-manuals       disables installation of the manual pages],have_manuals=$enableval,have_manuals=yes)

if test "x$have_tcl" = "x" ; then
	have_tcl="yes"
fi
if test "x$have_tk" = "x" ; then
	have_tk="yes"
fi

if test "$have_tcl" != "yes" ; then
if test "$have_tcl" != "no" ; then
	if test "$have_tk" = "yes" ; then
		TK_FILES=$have_tcl
	fi
	TCL_FILES=$have_tcl
	have_tcl=yes
fi
fi
if test "$have_tk" != "yes" ; then
if test "$have_tk" != "no" ; then
	if test "$have_tcl" = "yes" ; then
	if test "x$TCL_FILES" = "x" ; then
		TCL_FILES=$have_tk
	fi
	fi
	TK_FILES=$have_tk
	have_tk=yes
fi
fi

if test "$have_tcl" = "no" ; then
	have_tk=no
fi

AC_PROG_CC
AC_PROG_CPP
AC_C_CROSS
wi_CFLAGS
wi_PROTOTYPES
AC_PROG_MAKE_SET
dnl AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LN_S

#
# When optimization is enabled, remove -g from CFLAGS and add -O
#

AC_MSG_CHECKING([compiler flags])
if test "$optimize" = "yes" ; then
CFLAGS=`echo $CFLAGS | sed 's/-g//g'`
case $CFLAGS in
	*"-O"*)
		;;
	*)
		CFLAGS="$CFLAGS -O"
		;;
esac
else
CFLAGS=`echo $CFLAGS | sed 's/-O[[0-9]]*//g'`
case $CFLAGS in
	*"-g"*)
		;;
	*)
		CFLAGS="$CFLAGS -g"
		;;
esac
fi
AC_MSG_RESULT($CFLAGS)

if test "$wi_cv_prototypes" = no ; then
	AC_WARN([Your compiler does not support function prototyping and])
	AC_WARN([is not able to properly compile this package. What a pity.])
        AC_WARN([Get gcc, or any compiler that supports function prototypes.])
	exit 1
fi

#
# check for X
#

if test "$have_tk" = "yes" ; then
AC_PATH_X
if test "x$no_x" = "xyes" ; then
	AC_WARN([You don't appear to have X. Pity. TK Frontend disabled])
	have_tk=no
else
	if test "x$x_includes" != "x" ; then
		wi_EXTRA_IDIR($x_includes)
	fi
	if test "x$x_libraries" != "x" ; then
		wi_EXTRA_LDIR($x_libraries)
	fi
fi
fi

#
# extra library and include directories
#

wi_EXTRA_DIRS(no, $TCL_FILES $TK_FILES /usr/local /local /user/local /usr/share)

#
# look for tcl and tk includes
#

if test "$have_tcl" = "yes" ; then
AC_CHECK_HEADER(tcl.h,have_tcl_h=yes,have_tcl_h=no)
if test "$have_tcl_h" = "no" ; then
	AC_WARN([You don't appear to have TCL installed. What a pity.])
	AC_WARN([TCL support disabled.])
	have_tcl=no
	have_tk=no
fi
fi

if test "$have_tk" = "yes" ; then
AC_CHECK_HEADER(tk.h,have_tk_h=yes,have_tk_h=no)
if test "$have_tk_h" = "no" ; then
	AC_WARN([You don't appear to have TK installed. What a pity.])
	AC_WARN([Install TK or you won't see the user-friendly frontend.])
	have_tk=no
fi
fi

#
# get tcl version number
#

if test "$have_tcl" = "yes" ; then 
AC_MSG_CHECKING([tcl version])
cat > conftest.$ac_ext <<EOF
#include <tcl.h>
__FP__ : TCL_MAJOR_VERSION : TCL_MINOR_VERSION :
EOF
vstring=`(eval $ac_cpp conftest.$ac_ext) | grep '^__FP__' 2> /dev/null`
if test "x$vstring" = "x" ; then
	tcl_major=0
	tcl_minor=0
	tcl_version=none
else
	#
	# note: parameter to sed is <space><tab>
	#
	tcl_major=`echo $vstring | cut -d: -f2 | tr -d ' 	'`
	tcl_minor=`echo $vstring | cut -d: -f3 | tr -d ' 	'`
	if test "x$tcl_major" = "x" || test "x$tcl_minor" = "x" ; then
		tcl_major=0
		tcl_minor=0
		tcl_version=none
	else
		tcl_version=$tcl_major.$tcl_minor
	fi
fi
rm conftest.$ac_ext
AC_MSG_RESULT($tcl_version)

if test "$tcl_major" -gt 7 ; then
	tcl_ok=yes
else
if test "$tcl_major" -eq 7 ; then
	if test "$tcl_minor" -ge 5 ; then
		tcl_ok=yes
	else
		tcl_ok=no
	fi
else
	tcl_ok=no
fi
fi

if test "$tcl_ok" = "no" ; then
	AC_WARN([You are running an old version of TCL. This package])
	AC_WARN([requires at least TCL 7.5. Support for TCL disabled.])
	have_tcl=no
	have_tk=no
fi
fi

#
# same for tk
#

if test "$have_tk" = "yes" ; then
AC_MSG_CHECKING([tk version])
cat > conftest.$ac_ext <<EOF
#include <tk.h>
__FP__ : TK_MAJOR_VERSION : TK_MINOR_VERSION :
EOF
vstring=`(eval $ac_cpp conftest.$ac_ext) | grep "^__FP__" 2>/dev/null`
if test "x$vstring" = "x" ; then
	tk_major=0
	tk_minor=0
	tk_version=none
else
	#
	# note: parameter to tr is <space><tab>
	#
	tk_major=`echo $vstring | cut -d: -f2 | tr -d ' 	'`
	tk_minor=`echo $vstring | cut -d: -f3 | tr -d ' 	'`
	if test "x$tk_major" = "x" || test "x$tk_minor" = "x" ; then
		tk_major=0
		tk_minor=0
		tk_version=none
	else
		tk_version=$tk_major.$tk_minor
	fi
fi
rm conftest.$ac_ext
AC_MSG_RESULT($tk_version)

if test "$tk_major" -gt 4 ; then
	tk_ok=yes
else
if test "$tk_major" -eq 4 ; then
	if test "$tk_minor" -ge 1 ; then
		tk_ok=yes
	else
		tk_ok=no
	fi
else
	tk_ok=no
fi
fi

if test "$tk_ok" = "no" ; then
	AC_WARN([You are running an old version of TK. This package])
	AC_WARN([requires at least TK 4.1. Upgrade to a newer version])
	AC_WARN([or you'll never see the user-friendly frontend.])
	have_tk=no
fi
fi

#
# we might need various libraries if we decide to go for TCL/TK
#

if test "$have_tcl" = "yes" ; then
AC_CHECK_FUNC(sin,, LIBS="-lm $LIBS")
fi

#
# these libs are needed for both TK and minews (from tk's configure.in)
# and in some cases -lsocket features gettimeofday, needed for TCL
#

tk_checkBoth=0
AC_CHECK_FUNC(connect, tk_checkSocket=0, tk_checkSocket=1)
if test "$tk_checkSocket" = 1; then
    AC_CHECK_LIB(socket, connect, LIBS="$LIBS -lsocket", tk_checkBoth=1)
fi
if test "$tk_checkBoth" = 1; then
    tk_oldLibs=$LIBS
    LIBS="$LIBS -lsocket -lnsl"
    AC_CHECK_FUNC(accept, tk_checkNsl=0, [LIBS=$tk_oldLibs])
fi
AC_CHECK_FUNC(gethostbyname, , AC_CHECK_LIB(nsl, gethostbyname, [LIBS="$LIBS -lnsl"]))

#
# dynamic linking library, needed on some platforms
#

AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(dld,shl_load)

#
# while looking for the tcl/tk libraries, we need Tcl_AppInit. Let's make it.
#

if test "$have_tcl" = "yes" ; then
AC_MSG_CHECKING([build of stub Tcl_AppInit])
cat > conftest.$ac_ext <<EOF
int Tcl_AppInit() { return -1; }
EOF
if eval $ac_compile && test -f conftest.o ; then
	mv conftest.o cfAppInit.o
	rm -f conftest*
	AC_MSG_RESULT([ok])
else
	AC_MSG_RESULT([error])
	AC_WARN([Couldn't make stub Tcl_AppInit file. TCL/TK disabled.])
	have_tcl=no
	have_tk=no
fi
fi

#
# look for appropriate tcl library
#

if test "$have_tcl" = "yes" ; then
AC_CHECK_LIB(tcl$tcl_major.$tcl_minor,Tcl_Main,have_tcl_lib="-ltcl$tcl_major.$tcl_minor",have_tcl_lib=no,cfAppInit.o)
if test "$have_tcl_lib" = "no" ; then
AC_CHECK_LIB(tcl$tcl_major$tcl_minor,Tcl_Main,have_tcl_lib="-ltcl$tcl_major$tcl_minor",have_tcl_lib=no,cfAppInit.o)
fi
if test "$have_tcl_lib" = "no" ; then
AC_CHECK_LIB(tcl,Tcl_Main,have_tcl_lib="-ltcl",have_tcl_lib=no,cfAppInit.o)
fi
if test "$have_tcl_lib" = "no" ; then
	AC_WARN([Couln't find your TCL library. TCL/TK disabled.])
	have_tcl=no
	have_tk=no
else
	LIBS="$have_tcl_lib $LIBS"
fi
fi

#
# X11 library needed for TK
#

save_cppflags=$CPPFLAGS
save_ldflags=$LDFLAGS

if test "$have_tk" = "yes" ; then
AC_CHECK_LIB(X11,XOpenDisplay,[have_libx11=yes
LIBS="-lX11 $LIBS"],have_libx11="no")

if test "$have_libx11" = "no" ; then
	AC_WARN([Oops. Couldn't find your X11 libraries. Use --x-libraries.])
	AC_WARN([This is weird. Tk disabled for now])
	CPPFLAGS=$save_cppflags
	LDFLAGS=$save_ldflags
	have_tk=no
fi
fi


#
# look for appropriate tk library
#

if test "$have_tk" = "yes" ; then
AC_CHECK_LIB(tk$tk_major.$tk_minor,Tk_Main,have_tk_lib="-ltk$tk_major.$tk_minor",have_tk_lib=no,cfAppInit.o)
if test "$have_tk_lib" = "no" ; then
AC_CHECK_LIB(tk$tk_major$tk_minor,Tk_Main,have_tk_lib="-ltk$tk_major$tk_minor",have_tk_lib=no,cfAppInit.o)
fi
if test "$have_tk_lib" = "no" ; then
AC_CHECK_LIB(tk,Tk_Main,have_tk_lib="-ltk",have_tk_lib=no,cfAppInit.o)
fi
if test "$have_tk_lib" = "no" ; then
	AC_WARN([Couln't find your Tk library. Tk disabled.])
	have_tk=no
else
	LIBS="$have_tk_lib $LIBS"
fi
fi

#
# Finalizing TCL/TK checks
#

if test "$have_tcl" = "yes" ; then
	AC_DEFINE(HAVE_TCL)
	if test "$have_tk" = "yes" ; then
		AC_DEFINE(HAVE_TK)
	fi
fi

#
# check whether we can include our Photo hook
#

if test "$have_tk" = "yes" ; then
AC_CHECK_FUNC(Tk_CreatePhotoImageFormat,AC_DEFINE(TK_PHOTO))
fi

#
# don't need test program from above any more
#

rm -f cfAppInit*

#
# Trying to figure out number of Parameters to Tcl_Main or Tk_Main
#
# three parameters is on the safe side (extra arguments would be
# ignored), but some compilers refuse to compile if they've seen
# a prototype with two parameters
#

if test "$have_tk" = "yes" ; then
AC_MSG_CHECKING([whether Tk_Main accepts three parameters])
AC_TRY_COMPILE([
#include <tk.h>
int Tcl_AppInit(Tcl_Interp *interp) { return 0; }
int Testing (int argc, char *argv)
{
  Tk_Main(argc,argv,Tcl_AppInit);
  return 0;
}
],,need_three=yes,need_three=no)
AC_MSG_RESULT($need_three)
else
if test "$have_tcl" = "yes" ; then
AC_MSG_CHECKING([whether Tcl_Main accepts three parameters])
AC_TRY_COMPILE([
#include <tcl.h>
int Tcl_AppInit(Tcl_Interp *interp) { return 0; }
int Testing (int argc, char *argv[])
{
  Tcl_Main(argc,argv,Tcl_AppInit);
  return 0;
}
],,need_three=yes,need_three=no)
AC_MSG_RESULT($need_three)
fi
fi

if test "x$need_three" = "xyes" ; then
	AC_DEFINE(TMAIN_THREE)
fi

#
# Look for a mailing program to be used by uuenview
#

case "x$have_sendmail" in
xno*)
	MAILER=""
	;;
x|xyes*)
	AC_PATH_PROG(MAILER,sendmail,,$PATH:/sbin:/usr/lib:/usr/sbin:/usr/etc)
	if test "x$MAILER" = "x" ; then
	AC_PATH_PROG(MAILER,mailx,,$PATH:/sbin:/usr/lib:/usr/sbin:/usr/etc)
	if test "x$MAILER" != "x" ; then
		AC_DEFINE(MAILER_NEEDS_SUBJECT)	# mailx wants -s "subject"
	else
	AC_PATH_PROG(MAILER,elm,,$PATH)
	if test "x$MAILER" != "x" ; then
		AC_DEFINE(MAILER_NEEDS_SUBJECT)	# elm wants -s "subject"
	else
	AC_PATH_PROG(MAILER,mail,,$PATH:/sbin:/usr/lib:/usr/sbin:/usr/etc)
	if test "x$MAILER" = "x" ; then
		AC_WARN([I haven't found a suitable mail program. You will not be])
		AC_WARN([able to mail files directly from uuenview.])
	fi
	fi
	fi
	fi
	;;
*)
	AC_MSG_CHECKING([for suitable mailer])
	AC_MSG_RESULT($have_sendmail)
	if test ! -x $have_sendmail ; then
		AC_WARN([Cannot execute $have_sendmail])
		AC_WARN([Make sure this prog exists when running uuenview])
	fi
	MAILER="$have_sendmail"
	;;
esac

if test "x$MAILER" != "x" ; then
	AC_DEFINE_UNQUOTED(PROG_MAILER,"$MAILER")
fi

#
# Look for inews. If it is there, there's no need to make our own
#

case "x$have_inews" in
xno*)
	INEWS=""
	have_minews=no
	newsserver="not_configured"
	domainname="not_configured"
	;;
x|xyes*)
	AC_PATH_PROG(INEWS,inews,,$PATH:/usr/bin:/usr/news:/usr/news/bin:/usr/local/bin:/usr/local/news:/usr/local/news/bin:/usr/share/news:/usr/share/news/bin)

	if test "x$INEWS" != "x" ; then
		AC_DEFINE(HAVE_NEWS)
		AC_DEFINE_UNQUOTED(PROG_INEWS,"$INEWS -h")
		have_minews=no
		newsserver="not_needed"
		domainname="not_needed"
	else
	if test "$have_minews" = "yes" ; then
		AC_DEFINE(HAVE_NEWS)

		#
		# we must cheat here to find the final location of minews. 
		# ./configure defines the final values too late. This mimics
		# what autoconf 2.7 does.
		#

		eval "our_prefix=$prefix"
		eval "our_exec_prefix=$exec_prefix"
		eval "our_bindir=$bindir"

		if test "x$our_prefix" = "xNONE" ; then
			eval "our_prefix=$ac_default_prefix"
		fi
		if test "x$our_exec_prefix" = "xNONE" ; then
			eval "our_exec_prefix=$our_prefix"
		fi
		if test "x$our_bindir" = "xNONE/bin" ; then
			eval "our_bindir=$our_exec_prefix/bin"
		fi

		AC_DEFINE_UNQUOTED(PROG_INEWS,"${our_bindir}/minews -h")
	else
		AC_WARN([Couldn't find inews and you didn't want minews.])
		AC_WARN([You won't be able to post files directly from uuenview])
		have_minews=no
		newsserver="not_configured"
		domainname="not_configured"
	fi
	fi
	;;
*)
	AC_MSG_CHECKING([for suitable inews])
	AC_MSG_RESULT([$have_inews])
	if test ! -x $have_inews ; then
		AC_WARN([Cannot execute $have_inews])
		AC_WARN([Make sure this prog exists when running uuenvew])
	fi
	AC_DEFINE(HAVE_NEWS)
	AC_DEFINE_UNQUOTED(PROG_INEWS,"$have_inews -h")
	have_minews=no
	newsserver="not_needed"
	domainname="not_needed"
	;;
esac

#
# check for NNTPSERVER or NNTP_SERVER
#

if test "$have_minews" = "yes" ; then
AC_MSG_CHECKING([for news server])
if test "x$newsserver" = "x" ; then
if test "x$NNTPSERVER" != "x" ; then
	newsserver=$NNTPSERVER
else
if test "x$NNTP_SRVER" != "x" ; then
	newsserver=$NNTP_SERVER
fi
fi
fi
if test "x$newsserver" = "x" ; then
	AC_MSG_RESULT([not found])
	AC_DEFINE(NEED_NNTPSERVER)
else
	AC_MSG_RESULT($newsserver)
	AC_DEFINE_UNQUOTED(NNTPSERVER,"$newsserver")
fi
fi

#
# If we compile and use minews, we want to know our domain name
#

if test "$have_minews" = "yes" ; then
AC_PATH_PROG(HOSTNAME,hostname,,$PATH:/sbin:/usr/sbin)
AC_MSG_CHECKING([domain name])

#
# try /etc/resolv.conf
#

if test "x$domainname" = "x" ; then
if test -f /etc/resolv.conf ; then
	#
	# note: Parameter for tr is <space><tab>
	#
	domainname=`grep '^domain' /etc/resolv.conf | tr -d ' 	' | sed 's/domain//'`
fi
fi

#
# on some systems, hostname returns the FQN
#

if test "x$domainname" = "x" ; then
if test "x$HOSTNAME" != "x" ; then
	if test "x`$HOSTNAME | grep "\\."`" != "x" ; then
		domainname=`$HOSTNAME | sed 's/[[a-zA-Z0-9]]*\.//'`
	fi
fi
fi

if test "x$domainname" = "x" ; then
	AC_MSG_RESULT([unknown])
	AC_WARN([Couldn't figure out your domain name. Configuring bogus])
	AC_WARN([domain. If you intend to post directly from uuenview,])
	AC_WARN([rerun configure and use --enable-domain=your-domainname])
	AC_WARN([with your real domain name.])
	domainname="i.dont.know.where.i.am"
else
	AC_MSG_RESULT($domainname)
fi

AC_DEFINE_UNQUOTED(DOMAINNAME,"$domainname")

fi

#
# Check the directory separator. Because this is probably a Unix-like
# system, just set it statically to "/". On other systems, change it
# in config.h
#

AC_MSG_CHECKING([directory separator])
dirseparator="/"
AC_MSG_RESULT($dirseparator)
AC_DEFINE_UNQUOTED(DIRSEPARATOR,"$dirseparator")

#
# Checks for header files and library functions
#

AC_TYPE_SIZE_T
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(fcntl.h unistd.h memory.h malloc.h errno.h direct.h)
AC_CHECK_HEADERS(io.h sys/time.h)
AC_CHECK_FUNCS(getcwd popen gettimeofday isatty)

AC_CHECK_FUNC(tempnam,,AC_DEFINE(tempnam,_FP_tempnam))

#
# strerror might be internally defined. this would cause a
# CHECK_FUNCS(strerror) to fail because it'd be called with
# zero arguments. So use our own code.
#
AC_MSG_CHECKING([for strerror])
AC_TRY_LINK([
char *blubb() { return (char *) strerror (42); }
],[
(void) blubb();
],have_strerror=yes,AC_DEFINE(strerror,_FP_strerror)
have_strerror=no)
AC_MSG_RESULT($have_strerror)

AC_MSG_CHECKING([for stdin])
AC_TRY_LINK([
#include <stdio.h>
char *blubb() { FILE *in, *out; in=stdin; out=stdout; return (char*)0; }
],[
(void) blubb();
],have_stdio=yes,AC_DEFINE(HAVE_STDIO)
have_stdio=no)
AC_MSG_RESULT($have_stdio)

if test "$ac_cv_header_stdc" = "no" ; then
	AC_CHECK_HEADERS(stdarg.h varargs.h)
	if test "$ac_cv_header_stdarg_h" = "no" ; then
	if test "$ac_cv_header_varargs_h" = "no" ; then
		AC_MSG_ERROR([neither stdarg.h nor varargs.h present])
	fi
	fi
fi

if test "$have_minews" = "yes" ; then
	AC_CHECK_HEADERS(pwd.h)
fi

#
# Check whether this is a DOS-Based system. Another bogus test.
# Don't even bother to print a message. This code is needed so
# that autoheader includes the #undef into the final config.h
# and we can change the definition by hand on a really DOS
# system (where ./configure doesn't work anyway ...)
#

if false ; then
	AC_DEFINE(SYSTEM_DOS)
	AC_DEFINE(SYSTEM_QUICKWIN)
	AC_DEFINE(SYSTEM_WINDLL)
	AC_DEFINE(SYSTEM_OS2)
fi

#
# On some systems (so far, OS2 and WINDOWS), functions that are exported
# from a DLL must be declared specifically.
#

AC_DEFINE_UNQUOTED(UUEXPORT,)
AC_DEFINE_UNQUOTED(UUTCLEXPORT,)
AC_DEFINE_UNQUOTED(TOOLEXPORT,)
AC_DEFINE_UNQUOTED(UUTCLFUNC,)

#
# decide which programs and libraries to build
#

PROGS="uudeview"
DOINST="install-uudeview"
MPAGES="uudeview.1 uuenview.1"

if test "x$have_minews" = "xyes" ; then
	PROGS="$PROGS minews"
	DOINST="$DOINST install-minews"
fi
if test "x$have_tk" = "xyes" ; then
	PROGS="$PROGS xdeview"
	MPAGES="$MPAGES xdeview.1"
	DOINST="$DOINST install-tcl"
fi

if test "x$have_manuals" = "xno" ; then
	MPAGES=""
fi

AC_SUBST(DOINST)
AC_SUBST(PROGS)
AC_SUBST(MPAGES)

#
# set version number
#
AC_MSG_CHECKING([version number])
version_number="$VERSION"pl"$PATCH"
AC_MSG_RESULT($version_number)
AC_SUBST(VERSION)
AC_SUBST(PATCH)

#
# done
#

AC_OUTPUT(Makefile tcl/Makefile unix/Makefile uulib/Makefile)

#
# copy config.h into our subdirectories
#
#echo copying tcl/config.h
#cp config.h tcl
#echo copying unix/config.h
#cp config.h unix
#echo copying uulib/config.h
#cp config.h uulib
#
#
# goodbye
#
