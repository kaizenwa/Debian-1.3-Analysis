.\" $Id: uuenview.1,v 1.7 1996/09/25 17:55:49 fp Exp $ "
.TH UUENVIEW 1 "July 1996"
.SH NAME
uuenview \- a powerful encoder for binary files
.SH SYNOPSIS
.B "uuenview [-v] [-a] [-u|-x|-b] [-\fIlines\fP] [-o] [-od \fIpath\fP]"
.br
.B "         [-m \fIemail\fP] [-p \fInewsgroup\fP] [-s \fIsubject\fP]"
.br
.B "         [\fIfile(s)\fP]"
.br
.SH DESCRIPTION
.B uuenview
encodes a binary file into ASCII text for sending over non-8-bit
electronic data channels, such as email or the usenet.
.B uuenview
is a superset of and fully backwards compatible with the standard
.BR uuencode (1)
command, featuring more comfort and more flexibility.
.PP
Files encoded with
.B uuenview
are compatible with virtually all decoders, as long as the encoding
method (see below) is supported by the remote side. If the remote
side uses
.BR uudeview (1),
there shouldn't be any problems at all.
.PP
If properly configured,
.B uuenview
can directly send the encoded data by email or to the usenet. These
messages are wrapped into a proper MIME envelope, which is handy if
the recipient uses MIME-compliant mail or news software.
.SH OPTIONS
.TP
.B -v
Verbosely prints everything the program's trying to do.
.TP
.B -u
Chooses the
.I uuencoding
method. This is the default for compatibility with
.BR uuencode (1).
This encoding scheme is to date widely accepted as being the standard.
.TP
.B -b
Chooses the
.I Base64
encoding method as specified by the
.I MIME
standard. This scheme is expected to become the future standard.
Use if the recipient uses MIME-compliant software (see note below).
.TP
.B -x
Chooses the now obsolete
.I xxencoding
method.
.PP
The -u, -b, -x options are mutually exclusive.
.TP
.B -lines
Substituting
.I lines
with a number,
sets the maximum number of encoded lines per part. The encoded data
is automatically split into as many parts as required. Line counts
less than 200 are ignored. The uuencoding and xxencoding methods
encode 45k, and Base64 encodes 57k of data in 1000 lines. If this
option is not specified, the default is unlimited lines per part,
resulting in exactly one part.
.TP
.B -o
Specifies that output shall be written into files. These files will
have the same base name as the source file and an extension of
.B .001, .002
etc, depending on the number of parts required by the
.B \-lines
option. The encoded files are written to the current directory.
.TP
.BI -od " path"
Same as '-o', but the encoded files are written to the given
directory instead.
.TP
.BI -m " email"
Mails the encoded file(s), each one probably split into multiple parts,
to the given email address. Multiple recipients can be given as a 
quoted, comma-separated list.
.TP
.BI -p " newsgroup"
Posts the encoded file(s), each one probably split into multiple parts,
to the given newsgroup. Multiple newsgroups can be given as a quoted,
comma-separated list. The
.BR inews (1)
program is invoked for posting. You may have to set the
.I NNTPSERVER
enviroment variable to your news server.
.TP
.BI -s " subject"
This subject will be used when mailing or posting the file. Be careful
to quote subjects of more than one word. The file name and part number
is automatically appended to the subject line.
.TP
.B -a
Attaches files. This feature is expected to be used from shell scripts
and the like. It causes an email message (or usenet posting) to be read
from standard input. The files given on the command line are then
"attached" to the message, which is converted to proper MIME multipart
format. The result is written to the standard output except if either
the \-m or \-p parameter is used (potentially overriding the Newsgroup
or To selection from the message headers). Use Base64 when encoding
attachments.
.TP
.B file(s)
One or more filenames to be processed. Each file is encoded and then
stored in a file, mailed and/or posted according to the \-o, \-m and
\-p options. If none of these options is given, the encoded file is
sent to standard output. To encode a file from the standard input, use
a single hyphen '\-' and give a filename to be used by the
encoded file as the next parameter.
.SH NOTES
Reading from standard input and writing to standard output enforces
certain limitations.
.TP
.B 1.
Files read from standard input can only be used once, meaning that
either none or exactly one of the \-o, \-m, \-p options may be given.
.TP
.B 2.
Output written to standard output cannot be split into multiple parts.
In this case, the
.B -lines
option is ignored.
.PP
.B uuenview
must be correctly configured at compile time in order to make automated
mailing and posting work. If it doesn't, consult your system administrator.
The program used for posting a file can be set at runtime using the
.I INEWS
environment variable. This setting overrides the compile-time configuration.
.PP
Base64 is not MIME. Base64 is the encoding specified by the MIME standard,
but in order for a message to become a proper MIME message, a number of
headers are required.
.B uuenview
produces these headers when mailing or posting, but not when writing to
a local file, since in this case, the program does not have the necessary
control over the headers. If you plainly include Base64 output into your
messages, they are
.B not
MIME-compliant! Therefore, use uuencoding in this case. 
.PP
If you rename, copy or link the program to
.BR uuencode ,
it may act as a smart replacement for the standard, accepting the same
command-line syntax. This has not been well-tested yet.
.SH EXAMPLES
.TP
.B uuenview -m 'root,fred@somewhere.com' uudeview.tgz
Encodes the file
.I uudeview.tgz
and mails it to both your local system administrator and to your friend
Fred at the Somewhere company.
.PP
If you give more than one filename on the command line, each file is
usually handled separately. A workaround is to send them all as
attachment to a single (or empty) mail:
.TP
.B uuenview -m root -b -a file1 file2 < /dev/null
Creates an empty mail and attaches the two given files, encoded in
Base64 format, and mails the result to your system administrator.
.SH "SEE ALSO"
.BR uudeview (1),
.BR uuencode (1),
.BR uudecode (1),
.BR mail (1),
.BR inews (1).
.PD 0
.PP
The
.B uudeview
homepage on the Web, 
.PD 0
.PP
http://www.uni-frankfurt.de/~fp/uudeview/
.PD
.SH BUGS
.PP
The program cannot detect error conditions when mailing or posting.
.PP
Attaching only works reliably if certain headers of the input message
(for example
.I Content-Type
)
are not folded and shorter than 1024 characters.
.PP
It is not yet possible to encode into BinHex.
