#!/usr/bin/wish -f
# Copyright 1993 Yggdrasil Computing, Incorporated
# You may copy this file according to the terms and conditions of version 2
# of the GNU General Public License as published by the Free Software
# Foundation.

frame .h
label .h.info -bitmap info -bg pink
message .h.message -width 400 -bg pink -text \
	{Scsi Notch Page configuration.}

pack .h.info .h.message -padx 10 -side left
pack .h -pady 10

source /usr/lib/scsi/generic


# Here we set the bits that depend upon the menu we are in
set button_list {notched logical }
set text_list {nnotch activenotch startbound endbound pagenotched}
set text_descriptions {"Number of Notches " "Active Notch" "Starting Boundary " "Ending Boundary " "Mode Pages Notched" }
set switch {-n}
set label_width 21
set text_width 10

generate_textboxes

.pagenotched.text configure -width 20

frame .err_buttons
checkbutton .notched -text "Notched Drive" 
checkbutton .logical -text "Logical Notch" 

pack .notched .logical -in .err_buttons -side left -padx 3m
pack .err_buttons

pack .nnotch .activenotch .startbound .endbound .pagenotched -pady 10 -anchor w

read_page $argv "-X"
read_modifiable $argv

#New settings are needed since even unchangeable fields may change when the notch is changed.

proc enable_texts {} {
    global text_list

    foreach x $text_list {
      .$x.text configure -state normal
    }
}

.buttons1.default configure -command {
	enable_texts
        read_page $argv "-M"
	read_modifiable $argv
}
.buttons1.saved configure -command {
	enable_texts
        read_page $argv "-S"
	read_modifiable $argv
}
.buttons1.current configure -command {
	enable_texts
        read_page $argv "-X"
	read_modifiable $argv
}
.buttons.apply configure -command {
        write_page $argv "-X"
	enable_texts
        read_page $argv "-X"
	read_modifiable $argv
}

