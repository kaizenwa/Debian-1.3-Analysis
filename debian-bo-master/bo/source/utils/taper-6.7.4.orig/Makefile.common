#
#   Time-stamp: <96/07/19 20:20:28 yusuf>
#
#   $Id: Makefile.common,v 1.14 1996/08/05 19:58:01 yusuf Exp $	


#If you have -DTRIPLE_BUFFER defined, then taper will triple buffer
#all data to the tape drive. This option requires that your kernel
#supports SYSV_IPC calls. If your kernel doesn't, you can't use
#triple buffering unless you reconfigure & recompile your kernel
#
#Triple buffering can improve backup performance considerably especially
#with slower tape drives.
#
#If you have a very fast tape drive, then Triple buffering can actually
#slow down your performance so if you find your backup performance
#is poor, try turning triple buffering off.
#

# I use a.out for development because it's quicker to compile 
DEVELOPMENT = FALSE
#AOUT = FALSE

DEFINES0 = -DLINUX -D_GNU_SOURCE -Dlint	# gcc acts like a lint with -Wall
DEFINES1 = -DTRIPLE_BUFFER      # see above 
#DEFINES2 = -DTAPER_BIG_ENDIAN  # uncomment if using big endian machine
DEFINES3 = 			# Add any special ones you want

ifeq ($(DEVELOPMENT), TRUE)
  DEBUG = -g
endif

GCC = gcc
CC = gcc

ifeq ($(AOUT), TRUE)
	CFLAGS= -O2 -Wall -pipe -bi486-linuxaout $(DEBUG)
else
	CFLAGS= -O2 -Wall -pipe $(DEBUG)
endif

CFLAGS_NOLNK = -ansi


INCLUDE = 

LIBPATH = 
ifeq ($(AOUT), TRUE)
	LIBPATH = -L/usr/lib/aout
endif

BINDIR=/sbin
MANDIR=/usr/man/cat8
COMPRESS_DIR=compress
COMPRESS_LIB=comp_lib
COMMON_LIB=common_lib

LINKLIB =
CURSES = ncurses
FORM = form

#------------- Shouldn't need to change anything below this ------------------
DEFINES = $(DEFINES0) $(DEFINES1) $(DEFINES2) $(DEFINES3)

ifeq ($(DEVELOPMENT), TRUE)
   EFENCE_SRCS = ../EF/print.c ../EF/page.c ../EF/efence.c
endif

COMPRESS_SRCS = zip.c unzip.c bits.c trees.c deflate.c inflate.c \
		util.c lzrw3.c 
COMPRESS_OBJS = $(COMPRESS_SRCS:.c=.o)

COMMON_SRCS = memory.c select_box.c bg_common.c bg_vars.c
COMMON_OBJS = $(COMMON_SRCS:.c=.o)

TAPER_SRCS =  vars.c common.c endianize.c tapeio.c  \
              sel_backup.c backup.c sel_restore.c restore.c \
	      utils.c mkinfo.c taper.c $(EFENCE_SRCS)
TAPER_OBJS = $(TAPER_SRCS:.c=.o)

BG_BACKUP_SRCS = bg_backup.c $(EFENCE_SRCS)
BG_BACKUP_OBJS = $(BG_BACKUP_SRCS:.c=.o) 

BG_RESTORE_SRCS = bg_restore.c $(EFENCE_SRCS)
BG_RESTORE_OBJS = $(BG_RESTORE_SRCS:.c=.o) 
