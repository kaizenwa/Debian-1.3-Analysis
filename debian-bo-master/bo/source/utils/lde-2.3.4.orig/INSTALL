
	Before recompiling lde, you should edit the makefile to
reflect your ncurses installation.  I have tested lde with ncurses
1.9.9e and cannot guarantee that it will work with any other
version. If you don't have ncurses, get it.  Check your favorite Linux
archive site or ftp://ftp.netcom.com/pub/zm/zmbenhal/ncurses/ for the
full ncurses distribution.  If you still don't have ncurses or only
have access to an old version of ncurses, you will need to install
some terminfo files to run lde; I have included vt100, linux (console
has been renamed to linux), and xterm (xterm seems kind of flaky,
I've found it more useful to define TERM=vt100 and run lde as a vt100
application from within an xterm or rxvt).

	There are some other define (-DXXX) flags listed in the
makefile.  Their effects are documented briefly there.  To activate
any of these, include the appropriate -D in the CFLAGS definition.

	You can also set the owner, group, and destination directory
for the installed files in the makefile. 

	After you have adjusted the makefile you can:

 make (or make lde)
	will compile lde to the current directory

 make install
	installs lde in /sbin and changes its ownership to root.system
        with permission 500 (root can read and exec it).  You can
        change the default owner and group at the top of the Makefile.

 make install.terminfo
	installs the terminfo files in /usr/lib/terminfo - don't do
        this if you have a recent version of ncurses installed on your
        system (see important note below).

 make install.man
	installs the man page in /usr/man/man8

	After you try lde, you can change the default header and
trailer window sizes by changing HEADER_SIZE and TRAILER_SIZE in
nc_fsck.c.  Values of zero are allowed, the minimum I recommend is
HEADER_SIZE 1 and TRAILER_SIZE 0, but warnings go to the TRAILER, so
you will not get any error messages.

=======================================================================
Trouble Shooting:
=======================================================================

Bitops.c:
	Sometimes there are problems with the kernel bitop routines
that I swipe from the kernel.  If you get compiler errors (not
warnings) regarding set_bit, clear_bit, or anything else in bitops.c,
try adding -DNO_KERNEL_BITOPS to the CFLAGS definition in the
Makefile.

Ncurses:
	MAKE SURE NCURSES IS INSTALLED CORRECTLY SOMEWHERE!!!!!!!!!

	Even if you want to use the static binary I've included, you
still need to have terminfo files installed somewhere (see
make.terminfo above and important note below).  This is the number one
thing I get mail about -- lde won't work because of terminal problems
-- it's probably my fault for not explaining the process, but now it's
explained all over this document, so please make sure there are
terminfo files available for lde.

	I have included a script "run_lde_here" which will set the
TERMINFO variable and launch lde if you want to test it without
installing anything.

	The xterm support from ncurses is a little flaky.  I've found
that lde works more reliably if you define your terminal type to be
vt100 (TERM=vt100) from your shell, then run lde.  You lose color
support, but the window won't get messed up.
 
=======================================================================
=  NOTE * NOTE * NOTE * NOTE * IMPORTANT * NOTE * NOTE * NOTE * NOTE  =
=======================================================================
	You should have already installed ncurses (correctly) if you
wish to use lde's advanced features.  Ncurses relies on terminfo files
which are similar to /etc/termcap (but not compatible with it) that
usually reside in /usr/lib/terminfo.  I have included a few terminfo
files with this distribution and they will work with the static binary
I've included, but you must install them somewhere.

	You have two choices.  Run make install.terminfo to install
the terminfo files in /usr/lib/terminfo.  If you already have terminfo
files installed they will be overwritten.  This may break some of your
curses programs which expect an older/newer terminfo file.  A better
choice might be to manipulate the TERMINFO variable to point to the
directory containing the terminfo files which I have included.

bash:
	export TERMINFO=./terminfo

csh:
	setenv TERMINFO ./terminfo

Make sure you export the variable if you are using a bash-like shell.
The examples above will work if you are running the statically linked
lde binary from its default directory.  You can of course move the
terminfo directory (don't get rid of the a, x, l, v subdirectories) to
another location and adjust the TERMINFO variable accordingly.

	I have included a script "run_lde_here" which will set the
TERMINFO variable and launch lde if you want to test it without
installing anything.

	If you are keeping lde on your root partition, you might want
to stash a few terminfo files there too, so that they will be available
when your /usr partition goes down.
=======================================================================
=  NOTE * NOTE * NOTE * NOTE * IMPORTANT * NOTE * NOTE * NOTE * NOTE  =
=======================================================================
