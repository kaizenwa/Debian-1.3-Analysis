--*-text-*--

			GNU Interactive Tools
			*********************


This file documents the install steps that are specific to the GIT
package, as well as some configuration hints:


1. The GIT package uses the 'configure' script to guess your system
features.  The 'configure' script was generated from the file
configure.in (available in the package) using the autoconf utility.
To install the GIT package just type:

	./configure
	make
	make info	// don't bother if it fails
	make install

If you want to install striped binaries (smaller), type
	make install-strip
instead of
	make install

The configure script first checks for the termcap library.  If the
termcap library is not found, some terminfo libraries will be
searched: ncurses, curses, termlib, tinfo, terminfo.  If you want to
change this default behavior and search for terminfo libraries before
searching the termcap library, run

	./configure --with-terminfo

instead of

	./configure

Note that it is best to use terminfo instead of termcap under HP-UX.

For more information about the 'configure' script please read the
INSTALL file in this directory.

2. There are many configuration files in GIT:

a. .gitrc.generic	- generic configuration file
b. .gitrc.linux		- Linux console configuration file
c. .gitrc.vt100		- vt100 configuration file
d. .gitrc.vt102		- vt102 configuration file (same as vt100)
e. .gitrc.xterm		- xterm configuration file
f. .gitrc.xterm-color	- xterm configuration file
g. .gitrc.hpterm	- hpterm configuration file
h. .gitrc.aixterm	- aixterm configuration file
i. .gitrc.hft		- hft configuration file
j. .gitrc.thix		- thix configuration file
k. .gitrc.ansi		- ansi configuration file
l. .gitrc.minix		- minix configuration file
m. .gitrc.mach		- mach configuration file (for the GNU Hurd)
.....
etc.

When git/gitps/gitview are started, they search a file named
.gitrc.TERM first in the home directory and then in the $(prefix)/lib
directory (usually /usr/local/lib) (see INSTALL).

TERM is the value of your 'TERM' environment variable, e.g. vt102; if
TERM=vt102, your configuration file should be .gitrc.vt102.  The
package contains many predefined configuration files but, if you are
using a different terminal type, then you can easily create a
configuration file for it copying and modifying one of them.

Put a suitable configuration file in your home directory if you want
to overwrite the default configuration file.  If you don't have a
configuration file for your terminal, .gitrc.generic will be used.

If your terminal supports standard ANSI color sequences, set
AnsiColors to ON in the [Setup] section of .gitrc.TERM.  Otherwise,
AnsiColors should be OFF.

3. Create the directories /mnt/fd0 and /mnt/fd1 (for mounting floppy
disks with gitmount (an auto-mount script). This works for Linux, on
other systems it might be different.

4. Read the .gitrc.TERM files to find out how to configure GIT's
colors, keys ...

5.  If you are using termcap and your system has a huge termcap
database, copy the descriptions of your terminal(s) in a file and put
that file into your home directory. After that, set your TERMCAP
environment variable to point to it. If your login name is mike and
the file you have just created is .termcap, you must append something
like this to your .profile :

	TERMCAP=/home/mike/.termcap

This will speed up GIT at startup.  If you are using terminfo, don't
bother.

6. In order to be able to read the Info documentation you should
append the git.dir file (found in the package) to the file
/usr/info/dir (this works for Linux; on other systems the main Info
directory could be different). This is *NOT* done by 'make install'.

7. Read the info documentation.  The man pages are obsolete.  They are
provided only for those people that don't have info, and just to give
them an idea about what git is.

8. If you want to take full advantage of all git's features, it is
highly recommended that you install the GNU gzip program.  You can
download it from prep.ai.mit.edu (/pub/gnu).

9. It might be a good idee to install the GNU termcap library too. On
some systems it might make a difference.

10. For SCO Unix users: please use -lmalloc when linking git.  See the
PROBLEMS file for more details.

11. For Linux users: you might want to create the special devices for
reading/writing the virtual console memory.  Use the mkvcs script
provided with git.  Be aware that current Linux systems do not change
the owner of these devices at login time as it is usually done for
ttys.  Therefore, mkvcs creates /dev/vcs?[0-8] with mode 0666.  This
is a major security hole on multiuser systems!  It is recommended that
you create these devices only on systems on which security is not
important.  Maybe future releases of the Linux login program will
change the owner of these devices...

12. In order to use per directory .gitaction scripts you should copy
the .gitaction example in the target directories and then modify it.

13. If git appears to be slow, please consider setting TypeSensitivity
to OFF in the configuration files.

14. If your terminal or terminal emulator supports ANSI colors
(color_xterm & rxvt under Linux, aixterm under AIX, xterm under
ULTRIX) you might want to set AnsiColors to ON in the appropriate
configuration file (.gitrc.xterm).  If your terminal emulator does not
support ANSI color sequences, it is best to set AnsiColors to OFF.
Don't use color_xterm under Linux, it has bugs in the color handling
mechanism.  Please see the file PROBLEMS for more details.


Good luck!
Tudor & Andi

----------------------------------------------------------------------
Please send bug reports to tudor@cs.unh.edu
