.TH DPKG-CROSS 1 
.SH NAME
/etc/dpkg/cross-compile \- configuration for dpkg-cross and relatives
.SH "DESCRIPTION"
This file defines some settings for dpkg-cross, and the
multi-architecture extensions of dpkg-buildpackage and dpkg-shlibdeps,
also provided by the dpkg-cross package.
.PP
Comments start with a '#' and continue to the end of the line. They
are allowed only on their own lines, not after variable definitions.
Variable definitions have the general form
.PP
.RS
varname = value
.RE
.PP
Values on the right side can contain references to other variables or
to environment variables (with lower precedence) in the form
``$(VARIABLE)''. The referred name must be all uppercase, whereas
names in definitions are all lowercase. Recursive references are not
allowed. ``$(ARCH)'' can always be used, and is set automatically to
the architecture for which compiling is done.
.PP
In the first package-independent part of the file, the following
variables can be defined:
.IP "\fBcrossbase\fR (default: /usr/local)" 2
This is the path prefix for all other cross compiling paths below. It
is used in their default definition, but a user definition need not
necessarily use it.
.IP "\fBcrossdir\fR (default: $(CROSSBASE)/$(ARCH)-linux)" 2
This is the base directory for a specific architecture.
.IP "\fBcrossbin\fR (default: $(CROSSDIR)/bin)" 2
This directory contains binaries for cross compiling (gcc, as, ld,
...). It's mainly intended for refering to, but dpkg-shlibdeps also
uses it as one alternative to locate a objdump that can parse objects
of the architecture in question.
.IP "\fBcrosslib\fR (default: $(CROSSDIR)/lib)" 2
This directory contains libraries and other linker support files (e.g.
crt1.o) for cross compiling. The setting is used by dpkg-cross as
place where to install files from usual /usr/lib, /lib, and
/usr/X11R6/lib.
.IP "\fBcrossinc\fR (default: $(CROSSDIR)/include)" 2
This directory contains headers for cross compiling. The setting is
used by dpkg-cross as place where to install files from usual
/usr/include and /usr/X11R6/include.
.IP "\fBcrossinfo\fR (default: $(CROSSLIB)/dpkg-cross-info)" 2
In this directory dpkg-cross installs its auxiliary .list and .shlibs
files. It's similar to /var/lib/dpkg/info for the native system.
.IP "\fBcrossprefix\fR (default: $(ARCH)-linux-)" 2
This is the prefix for cross compiling binaries, like gcc. The default
naming is GNU convention, e.g. you could have m68k-linux-gcc in your
PATH. It is mainly intended for refering to, but dpkg-shlibdeps also
uses it as one alternative to locate a objdump that can parse objects
of the architecture in question (it tries ``$(CROSSPREFIX)objdump'').
.PP
Lines with a colon after an identifier start a package-specific
section. In such a section, you can define additional environment
variables to be defined during a cross compile run with
dpkg-buildpackage. E.g. the lines
.PP
.RS
amd:
    SYSCC = $(ARCH)-linux-gcc
.RE
.PP
tell dpkg-buildpackage to also define $SYSCC if it's building the
package ``amd'', since amd's Makefile insists on compiling some
sources with $(SYSCC).
.PP
This feature is meant for your convenience: Packages can refer to
unusual Makefile variables for the tools to use, and with a
package-specific section you can tell dpkg-buildpackage about those
variables, so that you don't need to set them manually each time.
.SH "SEE ALSO"
.BR dpkg-cross (1) ,
.br
.BR /usr/doc/dpkg-cross/README.Debian
.SH AUTHOR
Roman Hodek <Roman.Hodek@informatik.uni-erlangen.de>
