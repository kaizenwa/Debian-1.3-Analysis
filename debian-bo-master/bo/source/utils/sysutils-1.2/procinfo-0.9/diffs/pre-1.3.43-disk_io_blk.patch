--- linux/fs/proc/array.c.~1~	Tue Nov 14 14:09:11 1995
+++ linux/fs/proc/array.c	Sun Nov 19 20:58:16 1995
@@ -198,6 +198,10 @@
 	len = sprintf(buffer,
 		"cpu  %u %u %u %lu\n"
 		"disk %u %u %u %u\n"
+		"disk_rio %u %u %u %u\n"
+		"disk_wio %u %u %u %u\n"
+		"disk_rblk %u %u %u %u\n"
+		"disk_wblk %u %u %u %u\n"
 		"page %u %u\n"
 		"swap %u %u\n"
 		"intr %u",
@@ -205,10 +209,16 @@
 		kstat.cpu_nice,
 		kstat.cpu_system,
 		jiffies - (kstat.cpu_user + kstat.cpu_nice + kstat.cpu_system),
-		kstat.dk_drive[0],
-		kstat.dk_drive[1],
-		kstat.dk_drive[2],
-		kstat.dk_drive[3],
+		kstat.dk_drive[0], kstat.dk_drive[1],
+		kstat.dk_drive[2], kstat.dk_drive[3],
+		kstat.dk_drive_rio[0], kstat.dk_drive_rio[1],
+		kstat.dk_drive_rio[2], kstat.dk_drive_rio[3],
+		kstat.dk_drive_wio[0], kstat.dk_drive_wio[1],
+		kstat.dk_drive_wio[2], kstat.dk_drive_wio[3],
+		kstat.dk_drive_rblk[0], kstat.dk_drive_rblk[1],
+		kstat.dk_drive_rblk[2], kstat.dk_drive_rblk[3],
+		kstat.dk_drive_wblk[0], kstat.dk_drive_wblk[1],
+		kstat.dk_drive_wblk[2], kstat.dk_drive_wblk[3],
 		kstat.pgpgin,
 		kstat.pgpgout,
 		kstat.pswpin,
--- linux/include/linux/kernel_stat.h.~1~	Tue Nov 14 14:32:43 1995
+++ linux/include/linux/kernel_stat.h	Sun Nov 19 18:45:02 1995
@@ -14,6 +14,10 @@
 struct kernel_stat {
 	unsigned int cpu_user, cpu_nice, cpu_system;
 	unsigned int dk_drive[DK_NDRIVE];
+	unsigned int dk_drive_rio[DK_NDRIVE];
+	unsigned int dk_drive_wio[DK_NDRIVE];
+	unsigned int dk_drive_rblk[DK_NDRIVE];
+	unsigned int dk_drive_wblk[DK_NDRIVE];
 	unsigned int pgpgin, pgpgout;
 	unsigned int pswpin, pswpout;
 	unsigned int interrupts[NR_IRQS];
--- linux/drivers/block/ll_rw_blk.c.~1~	Thu Nov 16 14:29:55 1995
+++ linux/drivers/block/ll_rw_blk.c	Sun Nov 19 20:56:04 1995
@@ -229,6 +229,19 @@
 	else ro_bits[major][minor >> 5] &= ~(1 << (minor & 31));
 }
 
+static inline void drive_stat_acct(int cmd, unsigned long nr_sectors, short disk_index)
+{
+	kstat.dk_drive[disk_index]++;
+	if (cmd == READ || cmd == READA) {
+		kstat.dk_drive_rio[disk_index]++;
+		kstat.dk_drive_rblk[disk_index] += nr_sectors;
+	}
+	else if (cmd == WRITE || cmd == WRITEA) {
+		kstat.dk_drive_wio[disk_index]++;
+		kstat.dk_drive_wblk[disk_index] += nr_sectors;
+	}
+}
+
 /*
  * add-request adds a request to the linked list.
  * It disables interrupts so that it can muck with the
@@ -243,16 +256,16 @@
 		case SCSI_DISK_MAJOR:
 			disk_index = (MINOR(req->rq_dev) & 0x0070) >> 4;
 			if (disk_index < 4)
-				kstat.dk_drive[disk_index]++;
+				drive_stat_acct(req->cmd, req->nr_sectors, disk_index);
 			break;
 		case IDE0_MAJOR:	/* same as HD_MAJOR */
 		case XT_DISK_MAJOR:
 			disk_index = (MINOR(req->rq_dev) & 0x0040) >> 6;
-			kstat.dk_drive[disk_index]++;
+			drive_stat_acct(req->cmd, req->nr_sectors, disk_index);
 			break;
 		case IDE1_MAJOR:
 			disk_index = ((MINOR(req->rq_dev) & 0x0040) >> 6) + 2;
-			kstat.dk_drive[disk_index]++;
+			drive_stat_acct(req->cmd, req->nr_sectors, disk_index);
 		default:
 			break;
 	}
