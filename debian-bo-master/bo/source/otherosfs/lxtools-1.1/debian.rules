#! /usr/bin/make -f
#
# This file was created 11 Dec 95 by Joe Kirby <kirby@utk.edu> and is 
# little more than selective copying from Makefiles created by Bruce 
# Perens <bruce@pixar.com> and Ian Murdock. Bruce and Ian should recieve 
# credit as the original authors. Any errors are entirely mine.
#
# Since this is the first time I have ever created a debian.rules file, I 
# am adding a lot of comments. I hope they might help somebody else who 
# who may be using this file as a start. At the very least, I need them to 
# remember what I was doing.
#
# Tweaked a little more by kirby 14Dec95 to accomodate improved makefile
# distributed with package.
#
# Modified for my own packages 22-Dec-1994 by Bruce Perens
#	<Bruce@Pixar.com>
#
# Last updated: Sat Dec 17 10:52:20 EST 1994 by imurdock.
#
# To make the binary distribution package, the ``Debianized'' source 
# package and the context diff to the original package, type 
# `./debian.rules dist'. Make sure that `debian.rules' is executable 
# before the final distribution is made.
#
# Invoke each target with `./debian.rules <target>'. All targets should 
# be invoked with the package root as the current directory.
#
# The `binary' target must be run as root, as it needs to install files 
# with specific ownerships. The `diff' target assumes that you have the 
# original source package available, unpacked, in ../$(p)-$(v).orig, or 
# that you have the previous revision of the ``Debinaized'' source 
# package and context diff in the parent directory.

CC = gcc
CFLAGS = -O2
LDFLAGS = -s

# The name of the package (for example, `emacs').
p = lxtools
# The version of the package (for example, `19.28').
v = 1.1
# The Debian revision of the package (for example, `2').
d = 1

T = debian-tmp
DIRECTORIES = $T/DEBIAN \
	$T $T/usr/bin $T/usr/man/man1 $T/usr/doc/copyright

build:
# Builds the binary package.
	make CC="$(CC)" CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)"
	touch stamp-build

clean:
# Undoes the effect of `make -f debian.rules build'.
	make reallyclean
	rm -f stamp-build
	rm -rf $T

binary: $(DIRECTORIES)
# Makes a binary package. I will clean this up after I learn more make :)
	test -f stamp-build || make -f debian.rules build 
	install -o root -g root -m 755 lxdir $T/usr/bin
	install -o root -g root -m 755 lxcopy $T/usr/bin
	install -o root -g root -m 755 lxdel $T/usr/bin
	install -o root -g root -m 755 lxmkdir $T/usr/bin
	install -o root -g root -m 755 lxrmdir $T/usr/bin
	install -o root -g root -m 644 lxtools.1 $T/usr/man/man1/lxtools.1
	install -o root -g root -m 644 debian.README \
	  $T/usr/doc/copyright/$(p)
	sed -e 's/=V/$(v)/' -e 's/=D/$(d)/' debian.control \
	  > $T/DEBIAN/control
	chmod 644 $T/DEBIAN/control
	dpkg --build $T
	mv $T.deb ../$(p)-$(v)-$(d).deb

source:
# Makes a source package
	-test -f stamp-build && make -f debian.rules clean
	( cd .. && tar cf - $(p)-$(v) | gzip -9f > $(p)-$(v)-$(d).tar.gz )

diff:
# Makes a context diff.
	-test -f stamp-build && make -f debian.rules clean
	-test -d ../$(p)-$(v).orig -o -f ../$(p)-$(v)-`expr $(d) -1`.diff.gz \
	  || (echo "Original source package is not available." ; false )
	-test -d ../$(p)-$(v).orig || make -f debian.rules orig
	( cd .. && diff -cNr $(p)-$(v).orig $(p)-$(v) | gzip -9f \
	  > $(p)-$(v)-$(d).diff.gz )
	-test -f stamp-orig \
	  && rm -rf ../$(p)-$(v).orig && rm -f stamp.orig

dist: binary source diff
# Prepares the package for distribution.

orig:
# Prepares the original package from the previous
# Debian revision source package and context diff.
	( cd .. \
	  && mkdir $(p).orig \
	  && cd $(p).orig \
	  && tar xzf ../$(p)-$(v)-`expr $(d) - 1`.tar.gz \
	  && cd $(p)-$(v) \
	  && ( zcat ../../$(p)-$(v)-`expr $(d) -1`.diff.gz \
	    | patch -sER -p1 ) \
	  && find . -name "*.orig" -exec rm -f {} \; \
	  && cd .. \
	  && mv $(p)-$(v) ../$(p)-$(v).orig \
	  && cd .. \
	  && rmdir $(p).orig )
	touch stamp-orig

$(DIRECTORIES):
	install -d -o root -g root -m 755 $@
	chmod g-s $@
