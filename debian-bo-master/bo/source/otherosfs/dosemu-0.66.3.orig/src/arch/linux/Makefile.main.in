# Makefile for Linux DOSEMU
#
# $Date: 1995/05/06 16:24:53 $
# $Source: /usr/src/dosemu0.60/RCS/Makefile,v $
# $Revision: 2.41 $
# $State: Exp $
#
# You should do a "make" to compile and a "make install" as root to
# install DOSEMU.

# This gets defined even if we chose via ./include/config.h NOT to 
# use the debugger
DEBUGGER=@DEBUGGER@
@X_SUPPORT@
@X_GRAPHICS@
X11LIBDIR=@x_libraries@
USE_MHPDBG=@USE_MHPDBG@


#Change the following line to point to your loadable modules directory
BOOTDIR = /boot/modules

PICOBJS = libpic.a
export PICOBJS

# enable this target to make a different way
# do_DEBUG=true
ifdef ELF
#export CC         = gcc # -elf I use gcc-specific features (var-arg macros, fr'instance)
export CC = @CC@ #-elf
else
#export CC         = gcc # I use gcc-specific features (var-arg macros, fr'instance)
# export CC         = gcc -b i486-linuxaout # I use gcc-specific features (var-arg macros, fr'instance)
export CC = @CC@ #-b i486-linuxaout
endif

export LD=$(CC)
OBJS	= dos.o
DEPENDS = version dos.d emu.d


# dosemu version
LIBDOSEMU = $(BINPATH)/bin/libdosemu

ENDOFDOSMEM = 0x110000     # 1024+64 Kilobytes

CFILES=emu.c dos.c @X2CFILES@ base/data.c dosstatic.c

export USING_NET = -DUSING_NET
ifdef USING_NET
export NET=dosext/net/net
endif

#
# This is defined when the SB Emulation is required. You should re-configure,
# rather than just change this.
#
export USE_SBEMU = @USE_SBEMU@
ifdef USE_SBEMU
export SBEMU=arch/linux/dosext/sound dosext/sound
endif

# SYNC_ALOT
#   uncomment this if the emulator is crashing your machine and some debug info 
#   isn't being sync'd to the debug file (stdout). shouldn't happen. :-) 
#SYNC_ALOT = -DSYNC_ALOT=1

OPTIONALSUBDIRS = @OPTIONALSUBDIRS@

LIBSUBDIRS=env/video base/async arch/linux/async base/misc base/dev/misc\
	emu-i386 env\
	base/dev/pic dosext/dpmi dosext/mfs dosext/misc\
	base/init base/serial base/keyboard base/mouse\
	base/dev/dma \
	$(DEBUGGER) $(NET) $(IPX) $(SBEMU) dosext/drivers base/bios

REQUIRED=@REQUIRED@

# call all libraries the name of the directory
LIBS=$(LIBSUBDIRS)

LIBS_ := $(subst /,_,$(LIBS))

DOCS= $(REALTOPDIR)/doc


# Relevant to src
OFILES= Makefile Makefile.common ../ChangeLog ../QuickStart \
	../etc/BOGUS-Notes arch/linux/Makefile.main arch/netbsd/Makefile.main \
	../etc/vga.pcf ../etc/vga.bdf ../etc/xtermdos.sh ../etc/xinstallvgafont.sh \
	Configure ../load_module.sh ../unload_module.sh ../install-for-modprobe.sh

BFILES=

F_DOC=dosemu.texinfo Makefile dos.1 wp50
F_DRIVERS=emufs.S emufs.sys
F_COMMANDS=exitemu.S exitemu.com vgaon.S vgaon.com vgaoff.S vgaoff.com \
           lredir.com lredir.c makefile.mak dosdbg.com dosdbg.c
F_EXAMPLES=config.dist
F_PERIPH=debugobj.S getrom hdinfo.c mkhdimage.c mkpartition putrom.c


###################################################################

LIBPATH=lib


OPTIONAL   = # -DDANGEROUS_CMOS=1
CONFIGS    = $(CONFIG_FILE) $(DOSEMU_USERS_FILE)
DEBUG      = $(SYNC_ALOT)

TOPDIR=@TOPDIR@
export TOPDIR

INCDIR=@INCDIR@
export INCDIR
 
CFLAGS = @CFLAGS@

# set to use a simpler fork for unix command
# CFLAGS+=-DSIMPLE_FORK
# set to debug fork with environment
# CFLAGS+=-DFORK_DEBUG

# We need to use the C_RUN_IRQS with -fno-inline (TBD why)
# this is in pic/pic.c
#CFLAGS+=-DC_RUN_IRQS

# use fd3 for soft errors, stderr for hard error, don't ope
# stderr to /dev/null
# CFLAGS+=-DUSE_FD3_FOR_ERRORS

export CFLAGS

#LDFLAGS    = $(LNKOPTS) # exclude symbol information
LDFLAGS=@LDFLAGS@
AS86 = @AS86@
#LD86 = ld86 -s -0
LD86 = @LD86@ -0

DISTBASE=/tmp
DISTNAME=dosemu-$(VERSION).$(SUBLEVEL).$(PATCHLEVEL)
DISTPATH=$(DISTBASE)/$(DISTNAME)
ifdef RELEASE
DISTFILE=$(DISTBASE)/$(DISTNAME).tgz
else
DISTFILE=$(DISTBASE)/pre$(VERSION).$(SUBLEVEL).$(PATCHLEVEL).tgz
endif
export DISTBASE DISTNAME DISTPATH DISTFILE


ifdef do_DEBUG
# first target for debugging build
ifneq (include/config.h,$(wildcard include/config.h))
firstsimple:	version dep simple
endif

ifdef ELF
simple:	version dossubdirs $(BINPATH)/bin/dos
else
simple:	version dossubdirs dosstatic # libdosemu dos
endif
endif

# The assumption is that most new users will only type 'make'
# if they have not read the documentation, so therefore a 
# keypress pause is a good idea and is included here.

default: warning2 pausekey version doslibnew \
	../etc/xtermdos ../etc/xinstallvgafont

warning2: 
	@echo ""; \
	 echo "Starting DOSEMU "$(EMUVER)" compile..."; \
	 echo ""; \
	 echo "-> IMPORTANT!"; \
	 echo "    - Please read 'QuickStart' file before compiling DOSEMU!"; \
	 echo "    - Location and format of DOSEMU files have changed since 0.50pl1!"; \
	 echo ""; \
	 echo "-> REQUIREMENTS for DOSEMU:"; \
	 echo "    - gcc 2.7.2"; \
	 echo "    - libc 5.2.18"; \
	 echo '    - Linux >= 2.0.28, 2.1.x >= 2.1.15'; \
	 echo "    - 16 megabytes total memory+swap"; \
	 echo ""; \
	 if [ "" != "$(REQUIRES_VM86PLUS)" ]; then \
	 	echo "    - Full feature dosemu, compiled with vm86plus"; \
	 else \
		echo "    - Low feature dosemu compiled, will use old vm86 interface"; \
	 fi; \
	 echo ""; \

ifeq ($(WAIT),yes)
pausekey:
	@echo "====> Press Enter to continue, or hit Ctrl-C to abort <===="
	@read
else
pausekey:
	@echo "====> Compile begins <====="
endif

pausedelay:
	@echo "====> HIT CTRL-C NOW to abort if you forgot something! <===="
	@sleep 10

warning3:
	@echo ""; \
	 echo "Be patient...Some of this code may take a while to complete."; \
	 echo "Hopefully you have at least 16MB swap+RAM available during this compile."; \
	 echo ""

doeverything: warning2 pausedelay dep $(DOCS) @X2CEXE@ installnew

most: warning2 pausedelay dep installnew

itall: warning2 pausedelay dep optionalsubdirs $(DOCS) installnew

all:	dosemu

debug:
	rm $(BINPATH)/bin/dos
	$(MAKE) $(BINPATH)/bin/dos

dos.o: include/config.h

x2dos.o: include/config.h x2dos.c
	$(CC) $(CFLAGS) -I/usr/openwin/include -c x2dos.c

DOSSTATICFILES = dosstatic.c emu.o data.o base/bios/bios.o env/video/vesabios.o

dosstatic:	$(DOSSTATICFILES) ${addsuffix .a,${addprefix lib/lib,$(LIBS_)}}
	$(LD) $(LDFLAGS) -o $@ $(DOSSTATICFILES) \
		$(addprefix -L,$(LIBPATH)) \
		-L. $(addprefix -l, $(LIBS_)) \
		@SLANGLIB@ @XLIBSW@

x2dos: x2dos.o
	@echo "Including x2dos.o "
	$(CC) $(LDFLAGS) \
	  -o $@ $< -L$(X11LIBDIR) -lXaw -lXt -lX11

../etc/xtermdos:	../etc/xtermdos.sh
	@echo "#!/bin/sh" > ../etc/xtermdos
	@echo >> ../etc/xtermdos
	@echo X11ROOTDIR=$(X11ROOTDIR) >> ../etc/xtermdos
	@echo >> ../etc/xtermdos
	@cat ../etc/xtermdos.sh >> ../etc/xtermdos

../etc/xinstallvgafont:	../etc/xinstallvgafont.sh
	@echo "#!/bin/sh" > ../etc/xinstallvgafont
	@echo >> ../etc/xinstallvgafont
	@echo X11ROOTDIR=$(X11ROOTDIR) >> ../etc/xinstallvgafont
	@echo >> ../etc/xinstallvgafont
	@cat ../etc/xinstallvgafont.sh >> ../etc/xinstallvgafont

# NOTE:                                                             
# Due to heavy moving around the stuff, we will not get resolved/linked
# all modules out of the *.a libs, if we do not put them twice on the
# linker commandline. 
# Therefore: $(addprefix -l, $(LIBS_)) $(addprefix -l, $(LIBS_))
#           is NOT a typo !!!
# (Hans Lermen, at state of 0.63.0.1)
# the -Wl,-b commands are there to correct a bug in binutils 2.7.0.9,
# but they can be left just to make clear that a couple of files are
# actually a.out hacks made by tools86 - AV

ifdef ELF
$(BINPATH)/bin/dos: 	emu.o base/data.o dossubdirs
	$(LD) $(LDFLAGS) -o $@ \
	   emu.o base/data.o $(addprefix -L,$(LIBPATH)) -L. $(SHLIBS) \
	    $(addprefix -l, $(LIBS_)) $(addprefix -l, $(LIBS_)) \
	    -Wl,-b,a.out-i386-linux base/bios/bios.o env/video/vesabios.o \
	    -Wl,-b,elf32-i386 \
	    @XLIBSW@ @SLANGLIB@ -lc 
	@nm $(BINPATH)/bin/dos | grep -v '\(compiled\)\|\(\.o$$\)\|\( a \)' | \
		sort > $(BINPATH)/bin/dosemu.map
ifdef X_SUPPORT
	@ln -sf dos $(BINPATH)/bin/xdos
endif

dosemu: $(BINPATH)/bin/dos
else
$(BINPATH)/bin/dos:	dos.o
	$(LD) $(LDFLAGS) -N -o $@ $^ $(addprefix -L,$(LIBPATH)) -L. \
		@SLANGLIB@ @XLIBSW@

$(LIBDOSEMU): 	emu.o base/data.o ${addsuffix .a,${addprefix lib/lib,$(LIBS_)}} # dossubdirs
	$(LD) $(LDFLAGS) $(MAGIC) -Wl,-Ttext -Wl,$(LIBSTART) -o $(LIBDOSEMU) \
	   -nostartfiles -nostdlib $^ $(addprefix -L,$(LIBPATH)) -L. $(SHLIBS) \
	    $(addprefix -l, $(LIBS_)) $(addprefix -l, $(LIBS_)) base/bios/bios.o env/video/vesabios.o \
            @XLIBSW@ @SLANGLIB@ -lc 
ifdef X_SUPPORT
	@ln -sf dos $(BINPATH)/bin/xdos
endif

libdosemu:	dossubdirs $(LIBDOSEMU)
	@nm $(LIBDOSEMU) | grep -v '\(compiled\)\|\(\.o$$\)\|\( a \)' | \
		sort > $(BINPATH)/bin/dosemu.map

dosemu: $(BINPATH)/bin/dos libdosemu
endif

.PHONY:	dossubdirs optionalsubdirs docsubdirs
.PHONY: $(LIBSUBDIRS) $(OPTIONALSUBDIRS) $(DOCS) $(REQUIRED)

# ?
dossubdirs:	$(LIBSUBDIRS)
	-rm -f $(LIBDOSEMU)

optionalsubdirs:	$(OPTIONALSUBDIRS)

docsubdirs:	$(DOCS)

$(DOCS) $(OPTIONALSUBDIRS) $(LIBSUBDIRS) $(REQUIRED):
	@(cd @REALTOPDIR@/src/; $(MAKE) -C $@)

version:	versetup

versetup:
	@mkdir -p $(BINPATH)/bin
	@mkdir -p $(BINPATH)/commands
	@cp -p commands/precompiled/* $(BINPATH)/commands
	@rm -f ../bin ../commands
	@ln -sf $(BINPATH)/bin ../bin
	@ln -sf $(BINPATH)/commands ../commands


doslibnew: 
	$(MAKE) doslib

doslib: $(REQUIRED) all
	@echo ""
	@echo "---------------------------------DONE compiling-------------------------------"
	@echo ""
	@echo " Now you must install DOSEMU. Make sure you are root and:"
	@echo " make install"
	@echo ""
	@echo ""

installnew: doslib
	$(MAKE) install

install:
	@install -d /var/lib/dosemu
	@install -d /var/run
	@if [ -f /lib/libemu ]; then rm -f /lib/libemu ; fi
	@install -c -o root -m 04755 $(BINPATH)/bin/dos /usr/bin
ifdef  USE_MHPDBG
	@install -c -o root -m 0755 $(BINPATH)/bin/dosdebug /usr/bin
endif
ifndef ELF
	@install -m 0644 $(LIBDOSEMU) /usr/lib/libdosemu-$(THISVERSION)
	@(cd /usr/lib; ln -sf libdosemu-$(THISVERSION) libdosemu)
endif
	@if [ -f /usr/bin/xdosemu ]; then \
		install -m 0700 /usr/bin/xdosemu /tmp; \
		rm -f /usr/bin/xdosemu; \
	fi
ifdef X_SUPPORT
	@install -m 0755 ../etc/xtermdos /usr/bin
	@if [ ! -e /usr/bin/xdos ]; then ln -s dos /usr/bin/xdos; fi
	@echo ""
	@if [ -w $(X11LIBDIR)/X11/fonts/misc ] && \
	    [ -d $(X11LIBDIR)/X11/fonts/misc ] && \
	    [ ! -e $(X11LIBDIR)/X11/fonts/misc/vga.pcf ] && \
	    [ ! -e $(X11LIBDIR)/X11/fonts/misc/vga.pcf.Z ]; then \
		echo "-> Main DOSEMU files installation done. Installing the Xwindows PC-8 font..."; \
		install -m 0644 ../etc/vga.pcf $(X11LIBDIR)/X11/fonts/misc; \
		cd $(X11LIBDIR)/X11/fonts/misc; \
		mkfontdir; \
	fi
endif
	@echo ""; \
	 echo "---------------------------------DONE Installing-------------------------------"; \
	 echo ""; \
	 echo "  - You need to configure DOSEMU. Read 'etc/config.dist'."; \
	 echo "  - Update your /etc/dosemu.conf by editing a copy of './etc/config.dist'"; \
	 echo "  - After configuring DOSEMU, you can type 'dos' to run DOSEMU."
ifdef X_SUPPORT
	@echo "  - Use 'xdos' instead of 'dos' to cause DOSEMU to open its own Xwindow."; \
	 echo "  - Type 'xset fp rehash' before running 'xdos' for the first time ever."; \
	 echo "  - To make your backspace and delete key work properly in 'xdos', type:"; \
	 echo "		xmodmap -e \"keycode 107 = 0xffff\""; \
	 echo "		xmodmap -e \"keycode 22 = 0xff08\""; \
	 echo "		xmodmap -e \"key 108 = 0xff0d\"  [Return = 0xff0d]"; \
	 echo ""
endif
	@echo "  - Try ./commands/emumouse.com -r if your INTERNAL mouse won't work"; \
	 echo "  - Try ./commands/unix.com to run a Unix command under DOSEMU"; \
	 echo ""
ifdef REQUIRES_VM86PLUS
	@echo "  - You compiled with VM86PLUS support, make sure you have booted"; \
	 echo '    a kernel >= 2.0.28 or 2.1.x >= 2.1.15 before using dosemu'; \
	 echo ""
else
	@echo "  - WARNING: You compiled without VM86PLUS support, however,"; \
	 echo "    it is  recommended that the VM86PLUS support be used."; \
	 echo "    (some DOS applications, especially DPMI-based ones may not run )"; \
	 echo ""
endif


converthd: hdimage
	mv hdimage hdimage.preconvert
	periph/mkhdimage -h 4 -s 17 -c 40 | cat - hdimage.preconvert > hdimage
	@echo "Your hdimage is now converted and ready to use with 0.52 and above!"

newhd:  tools/periph/bootsect
	tools/periph/mkhdimage -h 4 -s 17 -c 40 | cat - tools/periph/bootsect > newhd
	@echo "You now have a hdimage file called 'newhd'"

include @REALTOPDIR@/src/Makefile.common

checkin::
	-ci -l -M $(CFILES) $(HFILES) $(SFILES) $(OFILES)
	@for i in $(LIBS) ; do (cd $$i && echo $$i && $(MAKE) checkin) || exit; done

checkout::
	-co -M -l $(CFILES) $(HFILES) $(SFILES) $(OFILES)
	@for i in $(LIBS) ; do (cd $$i && echo $$i && $(MAKE) checkout) || exit; done

dist:: $(CFILES) $(HFILES) $(SFILES) $(OFILES) $(BFILES) include/config.h
	install -d $(DISTPATH)
	install -d $(DISTPATH)/lib
	cp -a dosemu.xpm libslang.a $(CFILES) $(HFILES) $(SFILES) $(OFILES) $(BFILES) $(DISTPATH)
	cp -a hdimages/hdimage.dist $(DISTPATH)/hdimage.dist
	cp -a hddummy $(DISTPATH)/hddummy
	@for i in $(REQUIRED) $(LIBS) $(DOCS) ipxutils $(OPTIONALSUBDIRS); do \
	    (cd $$i && echo $$i && $(MAKE) dist) || exit; \
	done
	(cd $(DISTBASE); tar cf - $(DISTNAME) | gzip -9 >$(DISTFILE))
	rm -rf $(DISTPATH)
	@echo "FINAL .tgz FILE:"
	@ls -l $(DISTFILE)

local_clean:
	-rm -f $(OBJS) @X2CEXE@ x2dos.o $(BINPATH)/bin/dos $(BINPATH)/bin/xdos $(BINPATH)/bin/libdosemu *.s core \
	  dosstatic *.tmp $(BINPATH)/bin/dosemu.map *.o $(BINPATH)/bin/dosdebug base/data.o

local_realclean:
	-rm -f tools/tools86 .depend

clean::	local_clean

realclean::   local_realclean local_clean

DIRLIST=$(REQUIRED) $(DOCS) $(LIBS) $(OPTIONALSUBDIRS)
CLEANDIRS=$(addsuffix .clean, $(DIRLIST))
REALCLEANDIRS=$(addsuffix .realclean, $(DIRLIST))

clean:: $(CLEANDIRS)

realclean:: $(REALCLEANDIRS)

.PHONY: $(CLEANDIRS)
$(CLEANDIRS):
	-@$(MAKE) -C $(subst .clean,,$@) clean CLEANING=true

.PHONY: $(REALCLEANDIRS)
$(REALCLEANDIRS):
	-@$(MAKE) -C $(subst .realclean,,$@) realclean CLEANING=true



pristine:	realclean
	-mv lib/libarch_*slang*.a .
	-rm -f lib/*
	-mv libarch_*slang*.a lib
	-rm -rf $(BINPATH) ../bin ../commands

# DEPENDS=dos.d emu.d 
# this is to do make subdir.depend to make a dependency
DEPENDDIRS=$(addsuffix .depend, $(LIBSUBDIRS) )

depend_local:	$(DEPENDS)

depend dep:  version $(DEPENDDIRS) depend_local
	$(CPP) -MM $(CFLAGS) $(CFILES) > .depend

.PHONY:       size
size:
	size ./dosstatic  >>size
	ls -l dosstatic  >>size

.PHONY: $(DEPENDDIRS)

$(DEPENDDIRS):
	$(MAKE) -C $(subst .depend,,$@) depend


.PHONY: help
help:
	@echo "The following targets will do make depends:"; \
	 echo "     $(DEPENDDIRS)"; \
	 echo "Each .c file has a corresponding .d file (the dependencies)"; \
	 echo ""; \
	 echo ""; \
	 echo "'make dossubdirs' will make the follow targets:"; \
	 echo "     $(LIBSUBDIRS)"; \
	 echo ""; \
	 echo "To clean a directory, do make -C <dirname> clean|realclean"

echo::
	@echo LIBS_=$(LIBS_)
	for i in $(LIBSUBDIRS); do \
		$(MAKE) -C $$i $@  || exit 1; \
	done

#
# include a dependency file if one exists
#
ifeq (.depend,$(wildcard .depend))
include .depend
endif
