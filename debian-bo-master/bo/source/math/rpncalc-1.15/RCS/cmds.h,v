head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	97.01.19.18.50.45;	author david;	state Rel;
branches;
next	1.3;

1.3
date	96.10.26.15.15.26;	author david;	state Rel;
branches;
next	1.2;

1.2
date	96.09.13.20.21.29;	author david;	state Rel;
branches;
next	1.1;

1.1
date	96.07.13.20.49.35;	author david;	state Rel;
branches;
next	1.0;

1.0
date	95.12.31.18.16.22;	author david;	state Rel;
branches;
next	;


desc
@Simple rpn calculator, tries to emulate a HP28.
@


1.4
log
@Declarations for cmds.c
@
text
@/************************************************************************
 * cmds.h -- part of rpncalc.c						*
 *									*
 * Refer to rpncalc.c for copyrights and license permissions.           *
 ************************************************************************/

/* $Id: cmds.h,v 1.4 1997/01/19 18:19:23 david Exp david $
 * $Log: cmds.h,v $
 * Revision 1.4  1997/01/19 18:19:23  david
 * Provided all declarations.
 *
 * Revision 1.2  1996/09/13 20:21:29  david
 * lclint additions
 *
 * Revision 1.1  1996/07/13 20:49:35  david
 * Cleanup and renaming due to linting of the source.
 *
 * Revision 1.0  1995/12/31 18:16:22  david
 * Initial revision
 * */

enum BASE { DEC, HEX, OCT, CHAR };	/* current base (dec,oct..) */

extern enum BASE base;
extern int digits;			/* accuracy, number of digits */

double showstack(void);
double pick(double elm);
double depth(void);

double pi(void);
double e(void);

#ifndef linux
double pow10(double y);
double pow2(double y);
#endif

double chs(double f);
double sqr(double f);
double inv(double f);
double log2(double f);
double fact(double d);
double prec(double p);
double not(double l);

double plus(double s1, double s2);
double minus(double s, double m);
double multiply(double f1, double f2);
double divide(double n, double d);

double idiv(double dn, double dd);

double mod(double dn, double dd);
long int stein(double d1, double d2);
double gcd(double dn, double dd);
double and(double l1, double l2);
double or(double l1, double l2);
double xor(double l1, double l2);

double sum(void);
double prod(void);
@


1.3
log
@Changes in order to make rpncalc compile under SunOs 5.5
@
text
@d4 1
a4 19
 * A little RPN (Reverse Polish Notation) calculator,                   *
 * rudimentary emulating a HP 28S. 					*
 * 								        *
 * rpncalc is (c) David Frey, 1993, 1994, 1995				*
 *								        * 
 * This program is free software; you can redistribute it and/or modify *
 * it under the terms of the GNU General Public License as published by *
 * the Free Software Foundation; either version 2 of the License, or    *
 * (at your option) any later version.                                  *
 *									* 
 * This program is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of       *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *
 * GNU General Public License for more details.                         *
 *									* 
 * You should have received a copy of the GNU General Public License    *
 * along with this program; if not, write to the Free Software          *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.            *
 *									* 
d7 1
a7 1
/* $Id: cmds.h,v 1.2 1996/09/13 20:21:29 david Rel $
d9 3
d22 1
a22 1
enum BASE { DEC, HEX, OCT };	/* current base (dec,oct..) */
d30 33
@


1.2
log
@lclint additions
@
text
@d25 1
a25 1
/* $Id: cmds.h,v 1.1 1996/07/13 20:49:35 david Rel david $
d27 3
@


1.1
log
@Cleanup and renaming due to linting of the source.
@
text
@d25 1
a25 1
/* $Id: cmds.h,v 1.0 1995/12/31 18:16:22 david Rel david $
d27 3
a33 3
#define FALSE 0
#define TRUE  1

a35 1
extern int pushtostack;
@


1.0
log
@Initial revision
@
text
@d25 5
a29 2
/* $Id$
 * $Log$ */
a33 2
#define STACKSIZE     128

a35 2
extern double stack[STACKSIZE];
extern short int tos;			/* top of stack */
a41 1
double pickcmd(double elm);
@
