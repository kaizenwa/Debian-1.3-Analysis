SEESAT MODIFICATIONS 
-------------------- 
 
SELECTION CONDITIONS - VISMAG, SUNELEVSAT, MINELEV, MAXELEV, SUNELEVOBS, 
                       MINPHASE, MAXRANGE, MINRANGE 
 
   These selection conditions are used to filter the data so that only 
   high and bright satellites are printed. Note that the selection conditions 
   are used to select whether or not the current passes data will be 
   printed. If it is printed, then the complete pass data is printed. ie. 
   all data from when the satellite comes over the horizon until it goes 
   below. 
 
   For lines that satisfied ALL the selection conditions, a "+" sign is 
   printed as the first character. 
 
   Detailed explaination of the selection conditions follows:- 
 
   VISMAG <number> 
 
       This selects data where the MAGNITUDE is less or equal to 
       the supplied value. 
 
       Example:   VISMAG 1.0 
 
       means the calculated magnitude must be less or equal to 1.0. 
       This lets you select bright satellites only. 
 
   SUNELEVSAT <number> 
 
       This selects data where the calculated SUN's elevation at 
       the satellite is greater or equal than the entered value. 
 
       Example:   SUNVAL 0 
 
       means that only positive SUN values will be selected. 
       This lets you select data when the sun is shining on the satellite. 
 
   MINELEV <number> 
 
       This selects data where the calculated elevation is greater or 
       equal to the entered value. 
 
       Example:   MINELEV 15 
 
       means that only elevation values of 15 or more will be selected. 
       Only satellites that get to 15 or more degrees in elevation will 
       be selected. 
 
   MAXELEV <number> 
 
       This selects data where the calculated elevation is less or 
       equal to the entered value. 
 
       Example:   MAXELEV 70 
 
       means that only elevation values of 70 or less will be selected. 
       Only satellites that are at 70 or less degrees in elevation will 
       be selected. 
 
   SUNELEVOBS <number> 
 
       This selects data where the calculated SUN's elevation at 
       the observers location is less or equal the entered value. 
 
       Example:  SUNELEV 0 
 
       means select data when the sun is at or below the horizon. This 
       will let you filter out satellite's that pass over in daylight. 
 
   MINPHASE <number> 
 
       This selects data where the calculated phase angle (the angle 
       between the sun and the satellite as seen by the observer), is 
       greater or equal the entered value. 
 
   MINRANGE and MAXRANGE <number> 
 
       This selects data where the range of the satellite is within these 
       limits. The number denotes either miles or kilometers depending upon 
       whether you set the MILES or KILOMETERS option. If the satellite 
       never gets between the MINRANGE and MAXRANGE values at your location, 
       then no data is printed for it. The default values for MINRANGE and 
       MAXRANGE is zero and 65535 respectively. 
 
OTHER COMMANDS 
 
 
PREDICT 
 
   This will run the current parameters and conditions for each satellite 
   in the TLE file, and display results whenever a satellites data passes 
   the selection conditions. It then increments the time by 1 minute and 
   re-runs the prediction again. This will continue forever or until a 
   key is prssed. 
 
   The START command must be done first to setup the date and time at 
   which the prediction starts at. 
   This is the raw data generator for the realtime graphical display and 
   also gives you in time order, the satellites you may be able to see. 
 
SEO column on printout 
 
   The printout shows both the sun's elevations at the satellite (SES) 
   and the sun's elevation at the observer (SEO, this was called the SUN 
   column in SEESAT4). From these values you can easily find which 
   satellites are in sunlight at the same time that you are not in sunlight. 
 
RUNALL 
 
   This command is almost a combination of OPEN, NEXT , RUN and REPEAT. 
   It takes no parameter values or filenames. It will reposition the 
   current TLE files pointer to BOF, read thru each two line element set, 
   do the RUN command on it and repeat until all elements in the file 
   have been read. 
   The difference between this command and the commands it replaces, 
   is that it carries on processing the next input command after all two 
   line elements have been processed. The NEXT RUN REPEAT commands 
   unfortunately stops the entire run as soon as it reaches the end of 
   the elements file. 
   I use this to generate a list of all satellites that I can see each 
   day for the whole of the month! 
 
   Example : open my.tle 
	     start 1993 oct 01 1900 span 720 runall 
	     . 
	     . 
	     start 1993 oct 18 1900 span 720 runall 
	     . 
	     . 
	     start 1993 oct 31 1900 span 720 runall 
	     exit 
 
 
NULL 
 
   This command is useful if you want to specify year, month day and time 
   for the start/stop/span commands but don't want to do the RUN command 
   automatically. It can save specifying repeated information on every 
   line of your parameters. 
 
   Example : open my.tle span 720 null 
	     start 1993 oct 01 1900 runall 
	     start 1993 oct 02 1900 runall 
	     exit 
 
TODAY 
 
   This commands automatically sets up todays (dos system) date as the 
   default START date. The command must be followed by a number indicating 
   how many days you want to add to the system date as the START value. 
   This number may be zero or an integer number of days. 
 
   Example : OPEN NASA.TLE 
	     TODAY +0 1700 STOP 2300 RUNALL 
	     TODAY +1 0400 STOP 0800 RUNALL 
 
   would give me tonight and tomorrow mornings satellite viewing data. This 
   command was implemented because it saves me changing my SEESAT.BAT every 
   day to run my nightly and morning predictions. 
   You can set up the similar parameters as the example above, depending on 
   when you do your regular/daily prediction run. 
 
SET and RESET 
 
   These commands are used to set and reset conditions and options. 
   They are as follows : 
 
        SET SHOWTLE 
        SET SHOWNORAD 
        etc. 
 
   is is useful when you want to see all the data 
   using the ALL command. If you don't reset the selection conditions, 
   the program does not print any lines because the conditions are not 
   satisfied. The values for SHOWTLE, VISMAG, SUNELEVSAT, SUNELEVOBS, 
   MINELEV, MINRANGE, MAXRANGE and SHOWAGE can be reset. 
 
   SHOWTLE 
 
   This disables or enables (1) the printing of the Keplerian 
   elements when a LOAD or NEXT is done. 
 
   SHOWAGE 
 
   If this option is set, the age (in days) of the elements will be 
   displayed. This is the age of the elements at the time for which the 
   satellite data is being printed. Also note that this value is UTC relative. 
   For example, if you do a whole weeks run with the same satellite elements 
   and the satellite is visible every day, then the TleAge value will be 1 
   day greater each days printout. 
 
   SHOWNORAD 
 
   Show the satellite NORAD number on the printout. 
 
   VISMAG 
 
   SUNELEVSAT 
 
   SUNELEVOBS 
 
   MINELEV 
 
   MINRANGE 
 
   The lower limit of the range. 
 
   MAXRANGE 
 
   The upper limit of the range. 
 
OPENSDF 
 
   This command requires a file name parameter that will open a STANDARD 
   DELIMITED FILE with that name. The file format is as follows: 
 
   1st. record 
   "satellite","date","time", ... 
 
   2nd. record thru EOF 
	satellite name 
	date 
	time 
	. 
	. 
	. 
 
APPENDSDF 
 
   This command require a file name parameter. This is the same as the 
   OPENSDF command except the file is opened for extend. If the file named 
   does not exist, it will be created. 
 
SDFCLOSE 
 
   This command requires NO parameter, it just close the last opened 
   SDF file. 
 
DOS Command line arguments 
 
   The program will now take in DOS command line parameters. These parameters 
   will be treated like commands. They are executed just once when the 
   program would have asked for keyboard input for the first time. 
   I use this to open a different TLE file from the command line. I put into 
   my SEESAT.BAT file a RET command that forces the DOS command line 
   parameters to be executed. I make sure that I put a RET as the last DOS 
   commamd line parameter to make the program continue processing my 
   SEESAT.BAT file commands. 
 
   Example 
	DOS command 
	    SEESAT46 OPEN C:\NASA\NEW.TLE RET 
 
	SEESAT.BAT file 
	    PRECESS 2000 JAN 1 1200 
	    LENGTH 16 HEIGHT .030 LAT 30.4450 LON -84.2817 ZONE -500 
	    SHOWTLE 0 VISMAG 1.0 SUNELEVSAT 0 MINELEV 5 SUNELEVOBS -6 
	    RET 
	    TODAY +0 1700 STOP 2359 RUNALL 
	    TODAY +1 0400 STOP 0800 RUNALL 
	    EXIT 
 
   The printed output is also slightly changed because of the above feature. 
   Command lines that were read from the SEESAT.BAT file will be printed with 
   a preceding } character, Dos commamd line parameters with a ] and the 
   keyboard entered commands remain with a preceding >. 
 
LABEL 
 
   This command requires a parameter that is a label that you want to GOTO 
   later. The maximum label length is 30 characters and it must be the 
   FIRST command on the line. More commands are allowed after the label 
   name if you want, but I found it more readable to have the command on a 
   single line. 
 
   Example 
	LABEL DAILY-RUN 
 
   I use these to keep my run parameters for different situations in a 
   single SEESAT.BAT file and can select which ones to process using the 
   GOTO command (Described below). 
 
GO or GOTO 
 
   Requires a label name to go to, and starts processing there. The GOTO 
   command is probably going to be most useful from the DOS command line 
   to let you jump into a particular SEESAT.BAT file section of your 
   choice. Obviously, any commands following the GOTO will not be processed. 
   When you specify a GOTO command, the program begins searching the 
   SEESAT.BAT file from the beginning and looks for the LABEL <labelname> 
   line. If one is not found, the message END OF BATCH FILE is displayed 
   and the program goes into keyboard command mode. If you have duplicate 
   labels, the first one will be processed. No checking is done to prevent 
   you from making the program loop continously, so be careful. Also, if 
   you use EX'ed files, the GOTO will only goto labels in the current 
   file that is open. 
 
Comments 
 
   If you want to put comments inside your SEESAT.BAT file, just type in a 
   forward slash (/) anywhere you want. When the slash is at the start of a 
   line the entire is treated as a comment. When it is in the middle of a 
   line, everthing after the slash up to the end of the line is treated as 
   a comment. 
 
REPORT 
 
   This command is used to suppress printing of lines that come from the 
   SEESAT.BAT file. It requires a 0 or 1 as a parameter. The default is 
   to suppress (value 0). If you want to see all command lines and messages 
   printed, set the report option to 1. 
   Messages like "complete; nn satellites found" are suppressed. More 
   message may be suppressed by this command in the furure as I find them. 
   This just helps to 'clean' the output to just the interesting satellite 
   data. 
   Also did other minor changes to do with carriage returns for consistent 
   spacing and printing out a line of = signs when the EXIT command is 
   processed. 
 
SUMMARY 
 
   This command show selected summary data about the last TLE file that you 
   OPENed. At present it shows the satellites that have the earliest and 
   latest epoch dates. 
 
BLOCK 
 
   This command is used to customize the skyline that you view from. It has 
   the format BLOCK begin-azimuth end-azimuth elevation. The azimuth values 
   are integers between 0 and 359 and the elevation 0 and 90 degrees. 
   You can use this to accurately define your view of the sky. You can enter 
   up to 30 block commands, each one defines a block from a starting azimuth, 
   ending azimuth and an elevation. If a satellite never gets out from behind 
   the blocks you define then its data will not be printed. If at any time 
   (be careful with time steps here), the satellite is visible, then its data 
   is printed and the data where it is behind a block will be printed with a 
   'b' next to the Az and El values. This lets you know that at that 
   particular time you will not be able to see the satellite although it is 
   above the horizon. 
   I first put in the MINELEV command, which is OK for someone who lives in 
   a place where the skyline is perfectly constant all the way around the 
   horizon. For the rest of us, once you have set up your own skyline's BLOCK 
   commands, we should be able to determine from the printout whether we will 
   see a satellite or not. For city folk, I think this may be extremely 
   valuable i.e. If you can only see in a certain direction or between the 
   skyscrapers in your neighborhood, this command is for you. 
   Added column heading 'B' for the 'b' (blocked) and R for the * that 
   denotes a relative magnitude. The 'B' heading is only printed if you have 
   defined at least one block. 
 
RUNTIME 
 
   This runs prediction in time order. This produces the exact same output 
   data as the RUN command except it is in time order. It does however take 
   a little longer to run. The processing involved in this command is to 
   run through every satellite looking for a satellite that is above the 
   horizon at a particalur instance. The instances starts at the start time 
   and continues until the stop time is exceeded with an increment of the 
   step. 
   When a satellite is found that is above the horizon and it also 
   satifies the selection conditions, its data is printed until it dips 
   below the horizon. At that time the printing stops and the next satellite 
   in the input TLE file is processed. 
   For Geo Stationary satellites the parameter PRINTLIMIT comes into play. 
   This allows you to stop the printing of data when a certain number of 
   lines have been printed. If this command was not present, the data print 
   would print forever for if a geo-stationary satellite ever passed all the 
   selection conditions. 
 
PRINTLIMIT 
 
   This command is used to limit the number lines printed per satellite 
   prediction when running in the RUNTIME mode. The reason you may want 
   limit the lines printed is because of very slow moving or stationery 
   satellites. The RUNTIME mode normally prints prediction data until the 
   satellite dips below the horizon. Of course, some satellites never dip 
   below the horizon so end up with either a lot of prediction data or the 
   program just keeps printing the data forever. I had coded a default value 
   for the printlimit of 60 lines. This default if fine for most regular 
   runs, but for some special purpose runs you may want to change it. 
 
ORBITMINS 
 
   This a value that has a default of 60 minutes. This is used in the 
   RUNTIME mode to determine how long to keep a satellites above horizon 
   values in memory before they are deemed un-useable. The way the RUNTIME 
   mode works is that it does a prediction for a satellite. If that satellite 
   is above the horizon at a particular time, that time is saved in memory. 
   When the satellites other attributes (elevation, magnitude etc) are 
   checked and they pass the conditions, the stored time values are used to 
   start printing the prediction run. If the satellite never satisfied the 
   selection conditions, then after 60 minutes has passed, the stored time 
   values are reset. This prevents misleading prediction data being printed. 
 
   I dont know if this value will ever need to be changed, but if it does, 
   then this command can do it. 
 
 
LINEFEED 
 
	I added this command for Stephen. Stephen runs his predictions on a 
   8088 machine. I didnt know those things were still around. Anyway, a 
   typical run takes hours on his PC. What he does is to start the prediction 
   run with the output redirected to the printer. This has two purposes, 
   1. to print out the data, and 
   2. to serve as an alarm. 
	I know you are thinking how does this serve as an alarm. Well, he 
   starts the prediction run and goes about his other weekend business 
   (He cant run this mode on weekdays unless he takes a day off work!). 
   Eventually, when the program finds a satellite that he may be able to 
   see, it starts printing the data. When the printer starts the printing, 
   Stephen hears the printer clicking away (its not a laser printer) and 
   waits until it stops. He then comes into his computer room and tears away 
   that printed prediction data and goes out looking for that satellite. 
	This command prints a selected number of linefeeds after a 
   satellites data so that Stephen can tear off the current satellites data 
   without having to move forward and backwards the linefeed knob on his 
   printer!. And you know, that as soon as he move the linefeed knob, the 
   program will start printing something. 
 
SET MILES 
SET KILOMETERS 
 
    This command is used to toggle all distance to be printed in miles or 
kilometers. Sorry, but I just can't mentally visualize distances in 
kilometers. 
 
PRINTOUT CHANGES 
 
     The printout know shows moon data and sun phase angle. The mood data is 
     first shown on the satellite name line. If at the time the first 
     prediction line is printed, the moon is above the horizon, the moons 
     azimuth, elevation and illumination are shown. Then on the prediction 
     data lines, the MAD column (Moon's Anglur Distance) show the angle 
     between the moon and the satellite. This is useful data for two 
     reasons. 1. Let you know if the moon is too bright and too close to 
     interfere with you satellite pass 
     and 2. Let you know if a satellite will pass over the moon. 
 
LOAD# 
 
   This is just like the original LOAD command except you must supply 
   the Norad Satellite number. This is most usefull when you have TLE 
   files from different source and the satellite names are not consistent. 
 
   LOAD# 23028       / SEDS 2 
   LOAD# 5580        / PROSPERO 
 
DBS and DBS# 
 
   To select satellites you want to run predictions on. You can maintain 
   the list inside the seesat.bat file, together with comments. You may load 
   the satellite either by name or by Norad Satellite Number. 
 
   DBS "HST ARRAY"              / Last seen 2/3/94, dim, blinks 
   DBS HST                      / Last seen with shuttle 
   DBS "OKEAN 1"                / Fast 
   DBS MIR                      / Must see soon 
   DBS 23028                    / SEDS 2 
   DBS# 16609                    / Its MIR again 
 
   After selecting your favourite satellites, ypu want to run the prediction 
   using the RUNDBS command. 
   RUNDBS is like RUNTIME except runs just satellites that in your database. 
   You can still do RUNALL or RUNTIME any time to run all the satellites 
   loaded with your last OPEN. 
   If you want to select another set of DBS satellites, you can either OPEN 
   a new TLE file (that resets all the DBS entries to false), or more 
   efficiently (if you want to keep the current TLE file open), do the 
   RESET DBS command. 
 
STOPDAY (and STARTDAY) 
 
   This command requires an integer and a time. The integer is when you want 
   to stop the prediction in number of days from today. ie. +0 is today, +1 
   is tomorrow, +30 is thirty days from today. 
   This is the followed by a time that you want to stop. This is just like 
   the time value in any other start/stop command. This STOPDAY command is 
   useful if you set up runs where you don't want to code in a fixed date. 
   Before this command if you wanted to run say MIR for a week, you either 
   did the today +0 , today +1 ...etc... for 7 days worth or you just ran 
   it for today and a fixed stop (or both fixed start and stop dates). With 
   this command you should not have to code fixed dates in your commands. 
   Just for consistency, the TODAY command can now also be specified as 
   STARTDAY. 
 
The initialization and parameter file name has been changed to SEESAT49.INI 
because the .BAT extension is normally used for DOS batch files. On many an 
occasion I have typed in 'SEESAT' by mistake and ended up wit a whole lot 
of 'BAD COMMAND OR FILENAME' error messages and the name of my C drive 
changed to TONIGHT. TONIGHT was a label inside my seesat.bat file! 
 
============================================================================== 
STEP
START
STOP
SPAN
CENTER
RUN
RUNTIME
RUNDBS
LOAD
LOAD
DBS
DBS
OPEN
INDEX
NEXT
SUN
MOON
PARA
PRINT?
REPEAT
SKIP
EX
RET
SUMMARY
MAG
MAGBIAS
MINELEV
MAXELEV
MINPHASE
OFFSET
LAT
LON
HEIGHT
VISMAG
SUNELEVSAT
SUNELEVOBS
ZONE
PRECESS
LENGTH
MERIDIAN
ALL
HELP
EXIT
BYE
RUNALL
NULL
TODAY
STARTDAY
STOPDAY
LABEL
GOTO
GO
CMDLINE
BLOCK
ORBITMINS
PRINTLIMIT
LINEFEED
SET
RESET
MAXRANGE
MINRANGE
AOP
B
E
EPOCH
I
MA
MM
MMDOT
MMDOTDOT
NAME
RAAN
ACTUAL
NOMINAL
SEESAT4.DOC
SEESAT earth satellite tracking program - documentation
Paul Hirose - 1992 Jan 5


Introduction

SEESAT is an earth satellite orbit prediction program for visual
observers.  It computes the information needed to plot a satellite
in a star atlas and observe it with binoculars.

SEESAT uses the SGP4 orbit prediction model, which is the primary
NORAD model for near-earth satellites.  (I can provide the SGP and
SGP8 models on request.)  SEESAT is compatible with the NORAD 2-Line
element set format.

SEESAT is written in the C language.  For maximum portability, it
assumes only a teleprinter terminal.  Since it is a text-only,
command-driven program, SEESAT can be ported to any system with a C
compiler.  All source code is public domain without restrictions.  You
are welcome to use my code in your own projects, compile and
distribute SEESAT executables, create custom versions of SEESAT, etc. 
I distribute SEESAT as C source code only, relying on others to create
the executables.

Primary distribution points for SEESAT are the Celestial BBS in Dayton
(513-427-0674) and the CSS BBS in Toronto (416-458-5907).  Both
systems are open 24 hours.  These are also good places to reach me if
you have questions about SEESAT.



Warnings

Users of former SEESAT versions should be aware of some changes.

The program no longer prompts for observer's position at startup. 
Height, latitude, longitude, and time zone must be entered via
commands.  The program will NOT warn if you've forgotten to set any of
these values!

Observer's height is now measured in KILOMETERS, not feet.

Time zone is entered in the same format used to enter time in the rest
of the program, instead of the former decimal hours.  In addition, the
sign has reversed, so negative (west) longitudes now have negative
time zones.

These changes should not cause any inconvenience, since SEESAT now
provides for an automatic initialization file.



New Features

These are all new with this release:

A command to select display of all predictions, not just the ones
above the horizon. 

A command to select display of satellite longitude with respect to
your meridian instead of Greenwich.

Satellite longitude and latitude are displayed to the nearest .1
degree.

The prediction table has a new column for estimated magnitude, which
is computed from absolute magnitude, range, and phase angle.  Absolute
magnitude input is automatic if SEESAT senses a Molczan-format element
set, or it may be entered with a command.

Latitude, longitude, height, and time zone are input by commands
instead of by answering questions at startup.  This lets you change
them without exiting the program.

A new command, NEXT, loads the next satellite in the elements file.

You can tell SEESAT how many characters to use from the name line in
the orbital element file.  This can prevent it from taking Molczan's
size data as part of the satellite name.

The + character in element sets has a checksum value of 0, in
accordance with the latest NORAD policy.

All orbital elements may be entered manually.  The old SEESAT didn't
provide for satellite name or epoch

Automatic adjustment of a prelaunch element set, if you input the
assumed and actual launch times.

RUN executes a prediction run.  (Old SEESAT didn't have an explicit
run command.)

A prediction run may be specified in terms of START and SPAN, in
addition to the old START/STOP and CENTER/SPAN modes.

I have added provision to interrupt a prediction run and return
control to the keyboard.  Routines are included for the Laser C (Atari
ST) and Turbo C (IBM clone) compilers.

SEESAT is now bilingual:  CENTER and CENTRE are equivalent commands.

Commands REPEAT, PRINT?, and SKIP allow you to create an iterating
command line.

A new command, EX <filename>, will execute the specified batch file. 
This causes the command interpreter to get its lines from the file
instead of the keyboard.

RET transfers control from batch file to keyboard or vice versa.

At startup, SEESAT looks for file SEESAT.BAT.  If present, it will be
executed as a batch file.  You may have this file set SEESAT to your
location and perform any other initialization tasks.



Sample Session

This is from an actual SEESAT session.  It may be used as a quick
check for proper functioning of your program.

A>seesat4
SEESAT (SGP4) 1992 Jan 4 by Paul Hirose
>lat 34.915 lon -117.933 height .73 zone -800
>open b:noaa9.ele
complete; 1 satellites found
>load "noaa 9"
NOAA 9     
1 15427U 84123  A 91289.49913910  .00000538  00000-0  30856-3 0  8532
2 15427  99.1650 305.9266 0016081  84.5452 275.7530 14.13148923352652
>start 1991 oct 27 1750 span 136 step 12
NOAA 9        1991 OCT 27
  time   az el   R.A.    dec    range sun   mag    alt  lat    lon
1850:00 286 38  17h 7m  31 50'   1265  13 * 1.2    841 36.6N 127.5W
>center 1850 span 18 step 4
NOAA 9        1991 OCT 27
  time   az el   R.A.    dec    range sun   mag    alt  lat    lon
1842:00 185  2  20h43m -53  0'   3181  12 * 2.6    848  8.7N 120.0W
1846:00 203 22  19h39m -29  0'   1755  12 * 1.5    845 22.6N 123.5W
1850:00 286 38  17h 7m  31 50'   1265  13 * 1.2    841 36.6N 127.5W
1854:00 330 11  13h11m  53 20'   2399  15 * 2.4    839 50.4N 132.9W
>para 1850
parallactic angle = 68
>sun 1850
az=270 el=-23
>moon 1850
az=44 el=-16
75% illuminated
>exit



Entering Commands

SEESAT asks no questions and has no menus.  It is a command-driven
program.  You enter a command at the > prompt and press RETURN. 
SEESAT executes the command, possibly generating output, then returns
to the > prompt.

Multiple commands may be entered on one line.  They will be executed
from left to right.  Use one or more spaces to separate items on the
command line.  E.g., to load satellite "Mir" from file 929.ELE, you
could do:
     OPEN 929.ELE
     LOAD MIR
or enter both commands on one line:
     OPEN 929.ELE LOAD MIR

Up to 80 characters may be typed on a single line.  Backspacing is
allowed to correct mistakes.  SEESAT does not erase characters from
the screen as you backspace over them, but they ARE erased inside the
program.  SEESAT will only execute the characters up to (but not
including) the cursor.

You may use lower or upper case.  SEESAT converts the command line to
all upper case before executing it.  I will use upper case in this
documentation.



Command Arguments

In the description of SEESAT commands, you'll see that most commands
must be followed by an "argument", i.e., an item for the command to
act on.  The three most common types of argument are:
     <number>
     <time>
     <date time>
I will now describe the format of these arguments.


The <number> argument is a just a single number.  The following
examples should all be safe formats to use for <number>:
     .001  13.78299201  35.  35  3.5e1  .256e-3
For example, the LAT command sets your latitude:
     LAT 34.915


A <time> argument is in terms of minutes.  If more than 2 digits are
present, it is considered hours and minutes.  If a colon is present,
anything on the right of the colon is considered seconds.  Leading
zeros are allowed but not required.  E.g.:

1811:15    = 18h 11m 15s
1811:15.65 = 18h 11m 15.65s  (decimal seconds are allowed)
1811       = 18h 11m  0s     (seconds are optional)
0300       =  3h  0m  0s
300        =  3h  0m  0s     (leading zeros are optional)
59:50      =  0h 59m 50s
30         =  0h 30m  0s
5          =  0h  5m  0s
:10        =  0h  0m 10s
:01        =  0h  0m  1s
:1         =  0h  0m  1s     (leading zeros are optional)
:00.1      =  0h  0m  .1s
:.1        =  0h  0m  .1s    (leading zeros are optional)
0          =  0h  0m  0s

The fields in a <time> are allowed to exceed "normal" bounds.  Any
number up to 99 is legal for hours, minutes, or seconds.  In addition,
seconds may have as many decimal places as desired.  E.g., 460 (4h
60m) is a legal <time>.  It is identical to 500.  A more extreme
example is 9999:99, which is 99h 99m 99s.

The STEP command is an example of a command which requires a <time>
argument.  For example,
     STEP 12
sets the prediction run time step to 12 minutes.


Other SEESAT commands require a <date time> argument, which is
composed of year, month, day, and time.  All digits of the year must
be given.  Use the first 3 letters of the month name.  The time part
of <date time> follows the same format as the <time> argument
described earlier.

The MOON command is an example of a command which takes a <date time>
argument.  E.g.,
     MOON 1991 DEC 28 1730
will cause SEESAT to display the moon's azimuth and elevation at the
given time.

The day part of a <date time> may be ANY integer.  E.g.,
     MOON 1991 JAN 0 1200
     MOON 1990 DEC 31 1200
will give identical results, as will these commands:
     MOON 1991 JAN 33 1200
     MOON 1991 FEB 2 1200

You may omit year, year/month, or year/month/day, e.g.,
     MOON 1991 JUN 12 1800
     MOON JUN 12 1800
     MOON 12 1800
     MOON 1800
are all legal commands.  The omitted part of the date will default
to the last value(s) you entered in a <date time>.  All commands share
the same default date.  For example, if you enter the commands
     MOON JUN 11 2200
     SUN 12 2200
     MOON 2200
you will get the moon's position on June 11 at 2200, the sun's
position on June 12 at 2200, and the moon's position on June 12 at
2200.  Since the year has not been specified, in all three cases it
will default to the last year you entered.

Note that you may omit the entire date from <date time>, but you
must always include the time!

There is no default date at program startup, so your first <date time>
must include the complete date.  Remember to use the full year, not
just the last two digits.



Setup Commands

LAT <number>          [degrees; negative if south]
LON <number>          [degrees; negative if west]
HEIGHT <number>       [kilometers; negative if below sea level]
     These commands set SEESAT to your location.
     At 1000 km (a typical viewing distance), a 10 mile error in your
position (16 km or .14 deg) causes a 1 deg error in the satellite
position predicted by SEESAT.  That is for worst-case geometry, i.e.,
the error is at right angles to your line of sight.  Therefore, it is
safe to omit the HEIGHT command if you're unsure of the correct value. 
(The default value at program startup is zero.)  There will be an
appreciable error only if you're at an unusually high altitude.  Note
that height is KILOMETERS, not meters!


ZONE <time>
     <time> argument equals (local time) - UTC.  A negative sign is
permitted.  E.g., for Pacific Standard Time:
     ZONE -800  or
     ZONE -0800
The ZONE value need not be an integral number of hours, e.g.,
Newfoundland standard time is 3h 30m behind UTC:
     ZONE -330
Default ZONE at program startup is Greenwich time.


PRECESS <date time>
     Controls the correction of Right Ascension and declination for
precession.  PRECESS sets the final epoch.  The epoch of the elements
is always used as the initial epoch.  For 1950.0 or 2000.0
coordinates, respectively:
     PRECESS 1950 JAN 0 2210
     PRECESS 2000 JAN 1 1200
These are Greenwich times, so, strictly speaking, the PRECESS command
should be given before setting ZONE.  But for all practical purposes
it doesn't matter.  Precession is so slow there will be virtually no
error even if you miss by a full year.  Over several decades, though,
it will build up to a significant level.  For example, if your atlas
is 1950.0 and you neglect the PRECESS command, an error of up to 42
arc minutes can occur in your plot of a satellite's track.  This is
perhaps four or five times worse than SEESAT's prediction accuracy
under good conditions!
     The PRECESS value remains until you change it or exit SEESAT. 
Default setting is 2000.0 at program startup.


MERIDIAN
     The satellite longitudes in the prediction table may be computed
with respect to either Greenwich or your local meridian.  MERIDIAN
toggles this mode, and informs you of the current mode.  Default is
Greenwich.


ALL
     Toggles SEESAT between normal mode (predictions below horizon
suppressed) and a mode which displays all predictions.


Element Set Loading Commands


OPEN <filename>
     Opens the orbital element file.  If an element file is already
open, that file will be closed first.
     OPEN builds an index of the satellites in the file, using linked
blocks in RAM.  Each block holds 50 satellites.  Storage is requested
as needed at run time, so the size of the element file is limited only
by available memory.  Assuming your system uses 4-byte longs and
2-byte pointers, each 50-satellite block uses 1352 bytes.
    The index only contains the name of the satellite and its location
in the file.  The elements are not read from the disk until you issue
the LOAD or NEXT command.


INDEX
     Lists the satellites in the currently open file.  If there is
more than one screenful, it will pause with a "more>" prompt.  At this
prompt you may either press RETURN to continue the listing, or enter a
command (or commands) just as you would at the normal command prompt. 
In that case, the listing is aborted and your commands are executed.


LOAD <name>
     Loads the named satellite from the file you opened with the OPEN
command.  If the name has spaces, enclose the name in quotes.  A
closing quote is not required if the name is the last item on the
line, e.g., you can do
     LOAD "COSMOS 1383"  or
     LOAD "COSMOS 1383
If the elements fail checksum, you'll get a warning but SEESAT will
let you use the elements.



Setting Run Parameters


START <date time>
STOP <date time>
SPAN <time>
CENTER <date time>
CENTRE <date time>
     Set the parameters of the prediction run.  CENTRE is identical to
CENTER.  Any of these commands begins a prediction run automatically
if it's the last one on the command line.


STEP <time>
     Controls size of time steps in the prediction run.  A run begins
automatically if STEP is the last command on the line.



There are three modes for setting the time limits of a prediction run:
     1.  a start time and stop time
     2.  a start time and time span
     3.  a center time and time span

For example, these command lines generate indentical prediction runs:
     START 1900 STOP 2100 STEP 10
     START 1900 SPAN 200 STEP 10
     CENTER 2000 SPAN 200 STEP 10

The order of the commands in the line doesn't matter.  E.g.,
     STEP 10 STOP 2100 START 1900
     START 1900 STOP 2100 STEP 10
have the same effect.

You don't have to re-issue a command if its value hasn't changed.  For
example, suppose you enter:
     CENTER 2000 STEP 2 SPAN 8
and decide that the resulting table is satisfactory except that the
span should have been 12 minutes  Enter:
     SPAN 12
and a run will occur with the same CENTER and STEP values as before. 

To change modes you must give both commands associated with the new
mode.  For example, you do a run with these commands:
     START 1730 STOP 1900 STEP 10
Then suppose you want a run starting at 1730, of 12-minute span, with
2-minute time steps.  Enter:
     START 1730 SPAN 12 STEP 2
You did START 1730 for the first run, so why do it again for the
second?  Because you are changing modes.  The first run was in
start/stop mode.  You are changing to start/span for the second run,
so you must give both START and SPAN.  If you had said:
     SPAN 12 STEP 2
the program would have remained in start/stop mode.  (Again, the order
of the commands on the line doesn't matter, as long as the required
commands are present.)

In center/span mode, the first prediction is always 1/2 SPAN before
the CENTER time, and of course the remaining predictions are spaced at
the STEP value you specified.  This can cause unexpected results if
SPAN is not an even multiple of STEP.  E.g., for
     CENTER 1800 SPAN 5 STEP 1
the predictions will be for 1757:30, 1758:30, etc.

Since decimal seconds are allowed in <time> or <date time>, it is
possible to specify the time parameters of a run as finely as you
desire.  I discuss SEESAT's time reckoning accuracy in the section
describing the prediction table.


Some Additional Orbital Element Commands


NEXT
     Load the next satellite in the file, i.e., the one following the
satellite currently loaded.  If you haven't yet loaded a satellite
from the open file, NEXT will load the first one.  The file must be
opened with the OPEN command before NEXT can access it.


LENGTH <integer>
     Sets maximum number of characters the OPEN command will consider
significant in the satellite name when building the index.  The LENGTH
command must therefore be issued before OPEN, to have any effect.  Any
number from 1 - 22 is allowed.  Default is 22, and may be left alone
unless you're using a file such as Molczan's N2L series.  In that
case, you'll want to reduce LENGTH to 15 to prevent SEESAT from using
the extra data as part of the satellite name.  LENGTH is set to 22 if
you enter a number larger than 22.


AOP <number>
B <number>
E <number>
I <number>
MA <number>
MM <number>
MMDOT <number>
MMDOTDOT <number>
NAME <satellite name>
RAAN <number>
     Allow you to manually enter orbital elements or modify elements
already loaded.  Respectivly:  argument of the perigee, BSTAR,
eccentricity, inclination, mean anomaly, mean motion, mean motion dot,
mean motion dot dot, name, Right Ascension of the ascending node.
     Mean Motion dot and mean motion dot dot are used only by the SGP
model.  The newer SGP4 model is the one I include with the standard
SEESAT package, so normally the MMDOT and MMDOTDOT commands have no
effect.


EPOCH <epoch>
     Manually enter epoch of the orbital elements.  Must be in NORAD
format:  YYDDD.DDD... (use any number of decimal places).  Unused
digits in the integer part of day number must be padded with spaces or
zeros.  If spaces are used for padding, the number must be enclosed in
quotes.  E.g.,
     EPOCH 91003.52029891    or
     EPOCH "91  3.52029891"


NOMINAL <date time>
ACTUAL <date time>
     These commands adjust the epoch and RAAN of the currently
loaded elements for the difference between the nominal and actual
launch times.  They are useful for correcting a prelaunch element
set.  E.g.,
     NOMINAL 19 1851 ACTUAL 1918
tells SEESAT that the currently loaded elements assume a launch on the
19th at 1851, but the launch actually occurred at 1918.
     You can't use NOMINAL or ACTUAL by itself!  If you use one, you
must also use the other or you'll get crazy results.  The order of the
commands does not matter, and they don't have to be on the same line. 
Just be sure that both commands have been given before starting a
prediction run.
     The entered values are remembered.  So you may, for example,
use NOMINAL just once, then experiment with different ACTUAL values.
     Loading an element set (even reloading the same one) disables the
effect of NOMINAL and ACTUAL.  Their values are still remembered,
however, so you may re-enable the adjustment by giving one or both
commands. 
     The NOMINAL and ACTUAL arguments may be for any time zone, as
SEESAT cares only about their time difference.


MAG <number>
     For entering the absolute magnitude of a satellite.  It will be
adjusted for range and illumination angle to generate the "mag" value
in the prediction table.  Absolute magnitude is its magnitude at 1000
km and 50% illuminated (i.e., 90 degree phase angle).
     Absolute magnitude input can be automatic during loading of the
elements from the file.  If the first line of the element set (the
satellite name line) is longer than 32 characters, SEESAT assumes it's
a Molczan format line, and reads the magnitude.  You can use the MAG
command to override the value if necessary.


MAGBIAS <number>
     Bias to be applied to SEESAT's computed magnitude before display. 
A negative sign is allowed.  The default is zero.
     If your absolute magnitudes assume a different range and/or
illumination than 1000 km and 50%, the MAGBIAS command will bring your
scale into coincidence with SEESAT's.  If r and k are your assumed
standard conditions (in km and percent, respectively), set MAGBIAS to:
     2.5 * log10 ((1000/r)^2 * k/50)
For example, if your absolute magnitude is for 1000 km range and 100%
illuminated, enter:
     MAGBIAS .8


OFFSET <time>
     Applies an offset to the epoch of the satellite elements, thereby
making the satellite come early or late in the predictions.  Useful
for putting a satellite ahead of or behind schedule, to evaluate the
resulting track drift with respect to the stars.  Also can be
used to adjust for any discrepancy noted between predicted and actual
times of passes.  A negative sign is allowed on <time>.  A negative
<time> will make the effective epoch EARLIER, and make the satellite
come EARLIER in your predictions.
     If OFFSET is nonzero, an advisory of its value is printed at the
top of each prediction table.
     OFFSET is reset to zero when an element set is loaded.



Flow Control Commands

The next three commands only work within the same command line.


PRINT?
     If the last prediction run resulted in a line of data being
printed, execute the command to the right of PRINT?.  Otherwise,
skip it.  There must be at least one command after PRINT?.


REPEAT
     Jump back to beginning of command line.


SKIP
     Skip the command to the immediate right of SKIP.  To be used
following PRINT?, to reverse the test.  There must be at least one
command after SKIP.



Other Commands


SUN <date time>
MOON <date time>
     Print the azimuth & elevation of the body at the given time.  For
the moon, percentage of illumination is also given.


PARA <date time>
     Print the parallactic angle at the predicted position of the
satellite for the given time.  Parallactic angle is the direction of
celestial north, as seen in a binocular field of view.  E.g., 0 =
straight up, 90 = 3 o'clock.  This command allows you to examine your
star atlas plot and visualize the star field orientation you'll see
when you go outside.


RUN
     Begin a prediction run, using the current time parameters.  The
START, STOP, CENTER, SPAN, or STEP command automatically begins a
run if it is at the end of the command line.  That is the normal way
to get a run.  The RUN command is convenient if, for example, you load
a new element set and want a run without changing time parameters.


EX <filename>
     Execute a batch file of commands.  Any SEESAT command may appear
in a batch file.  Multiple commands per line are allowed, just as if
you were entering the command line manually.  EX itself may be in a
batch file.  If encountered, it will close the current batch file and
begin executing the specified file.  Control will not return to the
preceding file.  I.e., you can chain batch files but not nest them.


RET
     If encountered in a batch file, returns control to user.  If
entered manually, resumes execution of the batch file.


HELP
     Displays a help screen.


EXIT
     Exit from SEESAT.


I have two final points to explain about the command interpreter. 
First, it is legal to give the same command more than once in a line. 
If you have entered a long command line, it is sometimes easier to
repeat a command than to backspace to correct an incorrect argument.

Second, your copy of SEESAT may have the ability to abort a prediction
run or execution of a batch file.  I say "may" because there is no
portable way to implement this feature.  There is provision to install
it in the program, and I've supplied routines for Turbo C (for IBM
clones) and Laser C (for the Atari ST).  If your SEESAT was created
with either of these compilers, you can press any key during a
prediction run, execution of a command line (even an iterating one),
or execution of a batch file, and get the > prompt back.


Prediction Table

A table of predicted satellite positions is the main output of SEESAT:

NOAA 9        1991 OCT 27
  time   az el   R.A.    dec    range sun   mag    alt  lat    lon
1845:00 196 15  19h59m -37 20'   2081  12 * 1.8    846 19.1N 122.6W
1846:00 203 22  19h39m -29  0'   1755  12 * 1.5    845 22.6N 123.5W
1847:00 215 29  19h14m -17 50'   1476  12 * 1.2    844 26.1N 124.4W


Time is the time of the prediction.  The table value is rounded to the
nearest second but, internally, time is maintained to full precision. 
For an IEEE double precision value (53-bit significand), this is about
30 microsecond precision in the context of SEESAT.  Therefore, it's
practical to use split-second time steps in the table if you can keep
track of what entry goes with what time.

To reduce cumulative error, the time variable that is incremented
during prediction runs is based on the epoch of the element set, not
on 4713 BC as is the rest of SEESAT's time reckoning.  This variable
would typically have a (IEEE double) precision of .2 or .3 nanosec.

Azimuth and elevation are rounded to the nearest degree.  There is no
adjustment of elevation for refraction.

Right Ascension is rounded to the nearest minute, declination to the
nearest multiple of 10 minutes.  Both are adjusted for precession.

Range is the straight-line distance in kilometers.  It is truncated to
an integer.  (Truncation drops the fractional part, thereby creating
an error of up to 1 in the last place.  On the other hand, rounding
guarantees an error of 1/2 the rounding precision or less.)

"Sun" is the elevation of the sun above the satellite's geometrical
horizon (i.e., the horizon adjusted for dip due to satellite height
but not for refraction), rounded to the nearest degree.  A positive
number indicates that the satellite is in sunlight.  Since the horizon
dip in low earth orbit may be 30 degrees or more, the "sun" value can
considerably exceed 90 degrees.

The magnitude is an estimate based on the satellite absolute
magnitude, the phase (illumination) angle, and range.  If SEESAT
senses a Molczan-format element file, it automatically extracts the
absolute magnitude.  Otherwise, you may enter it via the MAG command. 
If no absolute magnitude has been input, the displayed magnitude is
prefixed with a *, indicating that this is a "relative magnitude" with
respect to the standard conditions of 1000 km range and 90 degrees
phase angle.  E.g., "* -.6" means that the satellite will be about .6
mag brighter than it would be at 1000 km and 90 degrees phase angle. 
You can change the range and phase angle corresponding to relative
magnitude 0.  Use the MAGBIAS command and the formula in its
description.  But note that the MAGBIAS value will still be in effect
if you enter an absolute magnitude.

Altitude is in km, truncated to an integer.  It assumes a spherical
earth 6371 km in diameter.

Latitude and longitude are rounded to the nearest .1 degree.  Latitude
is the geocentric latitude.  Longitude may be made to read with
respect to Greenwich or your local meridian, toggled with the
MERIDIAN command.


8.  Batch Files

A batch file is an ASCII file containing commands for SEESAT.  Lines
may be up to 80 characters long.  Any command which is legal to enter
at the > prompt may be placed in a batch file.  The file may be any
length.  A batch file is executed by typing EX <filename>.

If SEESAT finds EX in a batch file, any remaining commands on the
line are executed normally, the current batch file is closed, the new
one is opened, and it begins execution.  Control will NOT return to
the old batch file.

At startup, SEESAT looks for file SEESAT.BAT.  If present, it is
executed automatically as a normal batch file.  For example, my
SEESAT.BAT contains:

height .73 lat 34.915 lon -117.933 zone -800
start 1992 jan 1 0 length 15
meridian

This begins by setting my location and time zone.  Then the START
command establishes a default year and month.  (Any command that
requires a <date time> argument would do the same.)  The day and time
(1st of month at midnight) are dummy values; I only have them there
because it's illegal to omit them.  They could be any value.  To
prevent START from triggering a prediction run, I follow it with a
command to set the max name length to 15.  Finally, I prefer to have
satellite longitudes with respect to my local meridian, so "meridian"
toggles SEESAT to the correct mode.


This version of SEESAT introduces the PRINT?, REPEAT, and SKIP
commands for controlled iteration.  For example, the following
commands will step through a file, returning control to you if 1) a
prediction above the horizon occurs, or 2) end of element file is
reached.

     START 1991 OCT 20 1900 SPAN 200 STEP 8 OPEN 897.ELE
     NEXT RUN PRINT? SKIP REPEAT

The first line sets up our prediction run parameters.  Since any of
the parameter-setting commands will trigger a run if it is at the end
of the line, I place the OPEN command there.  The second line does the
iterating.  It uses NEXT to load the next element set, performs a
prediction run, then executes PRINT?.  PRINT? checks if a line of data
has been printed.  If true, the next command executes.  If false,
execution jumps over the next command.

Iterating command lines may also be placed in batch files.  For
example, you could check a file for visible satellites with the
following batch file:
     NEXT START 1900 SPAN 200 STEP 8 RUN PRINT? RETURN REPEAT
Suppose that line is a batch file named A. You'd invoke it as follows:
     START 1991 OCT 20 0 OPEN 897.ELE EX A
The START command on this line is just to set up the default date. 
That allows you to omit date from the batch file so you can use the
same one day after day.  The batch file will keep loading and running
predictions until something comes over the horizon.  It then does a
RETURN, at which point you can manually explore the pass in more
detail.  To resume checking the file just type EX A.  (You can't
use RET, since the single line in the batch file has already been
executed.)


A batch file can also check a specific list of satellites.  For
example,
     LOAD "NADEZHDA 1"
     START 1900 STOP 2100 STEP 10 RUN PRINT? RETURN
     LOAD "NADEZHDA 2"
     START 1900 STOP 2100 STEP 10 RUN PRINT? RETURN
     LOAD "NADEZHDA 3"
     START 1900 STOP 2100 STEP 10 RUN PRINT? RETURN
will, with proper lead-in commands, check the evening for passes of
these satellites.  In this case, you'd use RET to go back to the
batch file after exploring each visible pass.



Element File Format

Each orbital element set comprises three lines in the following format.  (The
fourth line here is a ruler to help you count characters and is not present
in an actual element set.)  A file may contain any number of these element
sets.  Blank lines are allowed, but any other extraneous lines (titles,
comments, etc.) are NOT PERMITTED!

CCCCCCCCCCCCCCCCCCCCCC         -N.N
1                 NNNNN.NNNNNNNN -.NNNNNNNN          -NNNNN-N       N
2       NNN.NNNN NNN.NNNN NNNNNNN NNN.NNNN NNN.NNNN NN.NNNNNNNN     N
123456789 123456789 123456789 123456789 123456789 123456789 123456789

C can be any character
N is any digit.
- represents either a hyphen or a space.

The first line is the name of the satellite.  The line may any length,
but only the first 22 characters are recognized as the name.  (22 is
the default; it may be changed to anything from 1 to 22 via the LENGTH
command.)  Trailing spaces are removed from the name and it is
converted to upper case before it is placed in the index.

During loading of an element set, SEESAT checks the length of the name
line.  If it is longer than 31 characters, it is assumed to be a
Molczan-format name line, and the field beginning at character 31 must
contain the satellite absolute magnitude.  See the diagram above.

The second and third lines are the standard Two-Line Orbital Element Set
Format used by NASA and NORAD.  The format description is:

Line 2
Column		Description

1		Must be digit 1
19 - 20		Epoch Year (Last two digits of year)
21 - 32		Epoch (Julian Day and fractional portion of the day)
34 - 43		First Time Derivative of the Mean Motion
54 - 59		BSTAR drag term (decimal point assumed before 54)
60 - 61		power of 10 to multiply BSTAR by
69		Check Sum (Modulo 10)

Line 3

1		Must be digit 2
9 - 16		Inclination [Degrees]
18 - 25		Right Ascension of the Ascending Node [Degrees]
27 - 33		Eccentricity (decimal point assumed before 27)
35 - 42		Argument of Perigee [Degrees]
44 - 51		Mean Anomaly [Degrees]
53 - 63		Mean Motion [Revs per day]
69		Check Sum (Modulo 10)

	The NORAD 2-Line element sets contain other fields, but the
above are the only ones used by SEESAT.  First derivative of mean
motion is not used if BSTAR is present.   Except for BSTAR, leading
and trailing zeros are not required.



Compiling SEESAT

The source code is in seven files:
SEESAT.H
SEESAT.C (only 2 lines)
DRIVER.C
UTIL.C
SGP4.C
ASTRO.C
READEL.C

Check the "Misc Dependencies" section in SEESAT.H.  You may have to
make changes.  Every C file has a #include for SEESAT.H; you may have
change my driver specifier so your compiler will find SEESAT.H.



References

Robert M. L. Baker, Jr. and Maud W. Makemson, "An Introduction to
Astrodynamics", Academic Press Inc., New York, 1960

W. Gellert, H. Kustner, M. Hellwich, H. Kastner, "The VNR Concise
Encyclopedia of Mathematics", Van Nostrand Reinhold Co., 1975

Robin M. Green, "Spherical Astronomy", Cambridge University Press, 1985

Jean Meeus, "Astronomical Formulae for Calculators", 3rd ed.,
Willmann-Bell Inc, Richmond, Va., 1985

"American Practical Navigator", Vol. I & II, Defense Mapping Agency
Hydrographic/Topographic Center, Washington, D.C., 1984, 1981 respectively

Felix R. Hoots and Ronald L. Roehrich, "Spacetrack Report No. 3", Office of
Astrodynamics, Peterson AFB, 1980

U.S. Naval Observatory, "Nautical Almanac 1992", Washington, D.C., 1991


Finally, thanks to the people who contributed suggestions, reference
materials, and testing time to SEESAT:

Rocky Harper
TS Kelso
Ted Molczan
Rick Welch
John Williams
Walt Witherspoon
o your compiler will find SEESAT.H.In this MS-DOS executable, I have changed the output to include a 
column called PHS. This is the sun phase angle which is simply the 
angle between the sun and the satellite as seen by the observer and 
defined as 180 degrees being "full" and 0 degrees being "new".  

The SUN column is the angle between the sun and the Earth's horizon 
as seen from the satellite, so if this number is negative, the 
satellite is in the Earth's shadow. 

These two columns will tell you if the satellite is in sunlight or 
the Earth's shadow and give you an idea of the proportion of the 
satellite's visible surface that is lit by the sun. 
                                                     -Rick Welch


ERBS   1992 JAN 6
  time   az el   R.A.    dec    range sun  phs    mag    alt  lat    lon
0549:00 309 13   5h55m  40 10'   1721  -8  156    4.5    586 37.7N 109.1W
0550:00 303 20   6h43m  38 20'   1359  -5  163    3.9    586 34.9N 106.2W
0551:00 292 31   7h48m  32 20'   1039  -2  166    3.3    587 32.1N 103.6W
0552:00 267 43   9h13m  18  0'    814   1  150    2.9    587 29.2N 101.1W
0553:00 222 47  10h44m  -4 50'    774   4  120    3.0    588 26.3N  98.7W
0554:00 188 35  12h 4m -24 40'    941   7   93    3.8    588 23.3N  96.5W
0555:00 174 23  13h 4m -36 30'   1235  10   77    4.7    589 20.2N  94.4W
0556:00 166 15  13h49m -43 20'   1585  13   67    5.5    589 17.2N  92.4W
0557:00 162  9  14h24m -47 40'   1961  16   60    6.2    589 14.1N  90.4W
>sun 553
az=106 el=-18
>

SEESAT MODIFICATIONS
--------------------

SELECTION CONDITIONS - VISMAG, SUNELEVSAT, MINELEV, MAXELEV, SUNELEVOBS,
                       MINPHASE, MAXRANGE, MINRANGE

   These selection conditions are used to filter the data so that only
   high and bright satellites are printed. Note that the selection conditions
   are used to select whether or not the current passes data will be
   printed. If it is printed, then the complete pass data is printed. ie.
   all data from when the satellite comes over the horizon until it goes
   below.

   For lines that satisfied ALL the selection conditions, a "+" sign is
   printed as the first character.

   Detailed explaination of the selection conditions follows:-

   VISMAG <number>

       This selects data where the MAGNITUDE is less or equal to
       the supplied value.

       Example:   VISMAG 1.0

       means the calculated magnitude must be less or equal to 1.0.
       This lets you select bright satellites only.

   SUNELEVSAT <number>

       This selects data where the calculated SUN's elevation at
       the satellite is greater or equal than the entered value.

       Example:   SUNVAL 0

       means that only positive SUN values will be selected.
       This lets you select data when the sun is shining on the satellite.

   MINELEV <number>

       This selects data where the calculated elevation is greater or
       equal to the entered value.

       Example:   MINELEV 15

       means that only elevation values of 15 or more will be selected.
       Only satellites that get to 15 or more degrees in elevation will
       be selected.

   MAXELEV <number>

       This selects data where the calculated elevation is less or
       equal to the entered value.

       Example:   MAXELEV 70

       means that only elevation values of 70 or less will be selected.
       Only satellites that are at 70 or less degrees in elevation will
       be selected.

   SUNELEVOBS <number>

       This selects data where the calculated SUN's elevation at
       the observers location is less or equal the entered value.

       Example:  SUNELEV 0

       means select data when the sun is at or below the horizon. This
       will let you filter out satellite's that pass over in daylight.

   MINPHASE <number>

       This selects data where the calculated phase angle (the angle
       between the sun and the satellite as seen by the observer), is
       greater or equal the entered value.

   MINRANGE and MAXRANGE <number>

       This selects data where the range of the satellite is within these
       limits. The number denotes either miles or kilometers depending upon
       whether you set the MILES or KILOMETERS option. If the satellite
       never gets between the MINRANGE and MAXRANGE values at your location,
       then no data is printed for it. The default values for MINRANGE and
       MAXRANGE is zero and 65535 respectively.

OTHER COMMANDS


PREDICT

   This will run the current parameters and conditions for each satellite
   in the TLE file, and display results whenever a satellites data passes
   the selection conditions. It then increments the time by 1 minute and
   re-runs the prediction again. This will continue forever or until a
   key is prssed.

   The START command must be done first to setup the date and time at
   which the prediction starts at.
   This is the raw data generator for the realtime graphical display and
   also gives you in time order, the satellites you may be able to see.

SEO column on printout

   The printout shows both the sun's elevations at the satellite (SES)
   and the sun's elevation at the observer (SEO, this was called the SUN
   column in SEESAT4). From these values you can easily find which
   satellites are in sunlight at the same time that you are not in sunlight.

RUNALL

   This command is almost a combination of OPEN, NEXT , RUN and REPEAT.
   It takes no parameter values or filenames. It will reposition the
   current TLE files pointer to BOF, read thru each two line element set,
   do the RUN command on it and repeat until all elements in the file
   have been read.
   The difference between this command and the commands it replaces,
   is that it carries on processing the next input command after all two
   line elements have been processed. The NEXT RUN REPEAT commands
   unfortunately stops the entire run as soon as it reaches the end of
   the elements file.
   I use this to generate a list of all satellites that I can see each
   day for the whole of the month!

   Example : open my.tle
	     start 1993 oct 01 1900 span 720 runall
	     .
	     .
	     start 1993 oct 18 1900 span 720 runall
	     .
	     .
	     start 1993 oct 31 1900 span 720 runall
	     exit


NULL

   This command is useful if you want to specify year, month day and time
   for the start/stop/span commands but don't want to do the RUN command
   automatically. It can save specifying repeated information on every
   line of your parameters.

   Example : open my.tle span 720 null
	     start 1993 oct 01 1900 runall
	     start 1993 oct 02 1900 runall
	     exit

TODAY

   This commands automatically sets up todays (dos system) date as the
   default START date. The command must be followed by a number indicating
   how many days you want to add to the system date as the START value.
   This number may be zero or an integer number of days.

   Example : OPEN NASA.TLE
	     TODAY +0 1700 STOP 2300 RUNALL
	     TODAY +1 0400 STOP 0800 RUNALL

   would give me tonight and tomorrow mornings satellite viewing data. This
   command was implemented because it saves me changing my SEESAT.BAT every
   day to run my nightly and morning predictions.
   You can set up the similar parameters as the example above, depending on
   when you do your regular/daily prediction run.

SET and RESET

   These commands are used to set and reset conditions and options.
   They are as follows :

        SET SHOWTLE
        SET SHOWNORAD
        etc.

   is is useful when you want to see all the data
   using the ALL command. If you don't reset the selection conditions,
   the program does not print any lines because the conditions are not
   satisfied. The values for SHOWTLE, VISMAG, SUNELEVSAT, SUNELEVOBS,
   MINELEV, MINRANGE, MAXRANGE and SHOWAGE can be reset.

   SHOWTLE

   This disables or enables (1) the printing of the Keplerian
   elements when a LOAD or NEXT is done.

   SHOWAGE

   If this option is set, the age (in days) of the elements will be
   displayed. This is the age of the elements at the time for which the
   satellite data is being printed. Also note that this value is UTC relative.
   For example, if you do a whole weeks run with the same satellite elements
   and the satellite is visible every day, then the TleAge value will be 1
   day greater each days printout.

   SHOWNORAD

   Show the satellite NORAD number on the printout.

   VISMAG

   SUNELEVSAT

   SUNELEVOBS

   MINELEV

   MINRANGE

   The lower limit of the range.

   MAXRANGE

   The upper limit of the range.

OPENSDF

   This command requires a file name parameter that will open a STANDARD
   DELIMITED FILE with that name. The file format is as follows:

   1st. record
   "satellite","date","time", ...

   2nd. record thru EOF
	satellite name
	date
	time
	.
	.
	.

APPENDSDF

   This command require a file name parameter. This is the same as the
   OPENSDF command except the file is opened for extend. If the file named
   does not exist, it will be created.

SDFCLOSE

   This command requires NO parameter, it just close the last opened
   SDF file.

DOS Command line arguments

   The program will now take in DOS command line parameters. These parameters
   will be treated like commands. They are executed just once when the
   program would have asked for keyboard input for the first time.
   I use this to open a different TLE file from the command line. I put into
   my SEESAT.BAT file a RET command that forces the DOS command line
   parameters to be executed. I make sure that I put a RET as the last DOS
   commamd line parameter to make the program continue processing my
   SEESAT.BAT file commands.

   Example
	DOS command
	    SEESAT46 OPEN C:\NASA\NEW.TLE RET

	SEESAT.BAT file
	    PRECESS 2000 JAN 1 1200
	    LENGTH 16 HEIGHT .030 LAT 30.4450 LON -84.2817 ZONE -500
	    SHOWTLE 0 VISMAG 1.0 SUNELEVSAT 0 MINELEV 5 SUNELEVOBS -6
	    RET
	    TODAY +0 1700 STOP 2359 RUNALL
	    TODAY +1 0400 STOP 0800 RUNALL
	    EXIT

   The printed output is also slightly changed because of the above feature.
   Command lines that were read from the SEESAT.BAT file will be printed with
   a preceding } character, Dos commamd line parameters with a ] and the
   keyboard entered commands remain with a preceding >.

LABEL

   This command requires a parameter that is a label that you want to GOTO
   later. The maximum label length is 30 characters and it must be the
   FIRST command on the line. More commands are allowed after the label
   name if you want, but I found it more readable to have the command on a
   single line.

   Example
	LABEL DAILY-RUN

   I use these to keep my run parameters for different situations in a
   single SEESAT.BAT file and can select which ones to process using the
   GOTO command (Described below).

GO or GOTO

   Requires a label name to go to, and starts processing there. The GOTO
   command is probably going to be most useful from the DOS command line
   to let you jump into a particular SEESAT.BAT file section of your
   choice. Obviously, any commands following the GOTO will not be processed.
   When you specify a GOTO command, the program begins searching the
   SEESAT.BAT file from the beginning and looks for the LABEL <labelname>
   line. If one is not found, the message END OF BATCH FILE is displayed
   and the program goes into keyboard command mode. If you have duplicate
   labels, the first one will be processed. No checking is done to prevent
   you from making the program loop continously, so be careful. Also, if
   you use EX'ed files, the GOTO will only goto labels in the current
   file that is open.

Comments

   If you want to put comments inside your SEESAT.BAT file, just type in a
   forward slash (/) anywhere you want. When the slash is at the start of a
   line the entire is treated as a comment. When it is in the middle of a
   line, everthing after the slash up to the end of the line is treated as
   a comment.

REPORT

   This command is used to suppress printing of lines that come from the
   SEESAT.BAT file. It requires a 0 or 1 as a parameter. The default is
   to suppress (value 0). If you want to see all command lines and messages
   printed, set the report option to 1.
   Messages like "complete; nn satellites found" are suppressed. More
   message may be suppressed by this command in the furure as I find them.
   This just helps to 'clean' the output to just the interesting satellite
   data.
   Also did other minor changes to do with carriage returns for consistent
   spacing and printing out a line of = signs when the EXIT command is
   processed.

SUMMARY

   This command show selected summary data about the last TLE file that you
   OPENed. At present it shows the satellites that have the earliest and
   latest epoch dates.

BLOCK

   This command is used to customize the skyline that you view from. It has
   the format BLOCK begin-azimuth end-azimuth elevation. The azimuth values
   are integers between 0 and 359 and the elevation 0 and 90 degrees.
   You can use this to accurately define your view of the sky. You can enter
   up to 30 block commands, each one defines a block from a starting azimuth,
   ending azimuth and an elevation. If a satellite never gets out from behind
   the blocks you define then its data will not be printed. If at any time
   (be careful with time steps here), the satellite is visible, then its data
   is printed and the data where it is behind a block will be printed with a
   'b' next to the Az and El values. This lets you know that at that
   particular time you will not be able to see the satellite although it is
   above the horizon.
   I first put in the MINELEV command, which is OK for someone who lives in
   a place where the skyline is perfectly constant all the way around the
   horizon. For the rest of us, once you have set up your own skyline's BLOCK
   commands, we should be able to determine from the printout whether we will
   see a satellite or not. For city folk, I think this may be extremely
   valuable i.e. If you can only see in a certain direction or between the
   skyscrapers in your neighborhood, this command is for you.
   Added column heading 'B' for the 'b' (blocked) and R for the * that
   denotes a relative magnitude. The 'B' heading is only printed if you have
   defined at least one block.

RUNTIME

   This runs prediction in time order. This produces the exact same output
   data as the RUN command except it is in time order. It does however take
   a little longer to run. The processing involved in this command is to
   run through every satellite looking for a satellite that is above the
   horizon at a particalur instance. The instances starts at the start time
   and continues until the stop time is exceeded with an increment of the
   step.
   When a satellite is found that is above the horizon and it also
   satifies the selection conditions, its data is printed until it dips
   below the horizon. At that time the printing stops and the next satellite
   in the input TLE file is processed.
   For Geo Stationary satellites the parameter PRINTLIMIT comes into play.
   This allows you to stop the printing of data when a certain number of
   lines have been printed. If this command was not present, the data print
   would print forever for if a geo-stationary satellite ever passed all the
   selection conditions.

PRINTLIMIT

   This command is used to limit the number lines printed per satellite
   prediction when running in the RUNTIME mode. The reason you may want
   limit the lines printed is because of very slow moving or stationery
   satellites. The RUNTIME mode normally prints prediction data until the
   satellite dips below the horizon. Of course, some satellites never dip
   below the horizon so end up with either a lot of prediction data or the
   program just keeps printing the data forever. I had coded a default value
   for the printlimit of 60 lines. This default if fine for most regular
   runs, but for some special purpose runs you may want to change it.

ORBITMINS

   This a value that has a default of 60 minutes. This is used in the
   RUNTIME mode to determine how long to keep a satellites above horizon
   values in memory before they are deemed un-useable. The way the RUNTIME
   mode works is that it does a prediction for a satellite. If that satellite
   is above the horizon at a particular time, that time is saved in memory.
   When the satellites other attributes (elevation, magnitude etc) are
   checked and they pass the conditions, the stored time values are used to
   start printing the prediction run. If the satellite never satisfied the
   selection conditions, then after 60 minutes has passed, the stored time
   values are reset. This prevents misleading prediction data being printed.

   I dont know if this value will ever need to be changed, but if it does,
   then this command can do it.


LINEFEED

	I added this command for Stephen. Stephen runs his predictions on a
   8088 machine. I didnt know those things were still around. Anyway, a
   typical run takes hours on his PC. What he does is to start the prediction
   run with the output redirected to the printer. This has two purposes,
   1. to print out the data, and
   2. to serve as an alarm.
	I know you are thinking how does this serve as an alarm. Well, he
   starts the prediction run and goes about his other weekend business
   (He cant run this mode on weekdays unless he takes a day off work!).
   Eventually, when the program finds a satellite that he may be able to
   see, it starts printing the data. When the printer starts the printing,
   Stephen hears the printer clicking away (its not a laser printer) and
   waits until it stops. He then comes into his computer room and tears away
   that printed prediction data and goes out looking for that satellite.
	This command prints a selected number of linefeeds after a
   satellites data so that Stephen can tear off the current satellites data
   without having to move forward and backwards the linefeed knob on his
   printer!. And you know, that as soon as he move the linefeed knob, the
   program will start printing something.

SET MILES
SET KILOMETERS

    This command is used to toggle all distance to be printed in miles or
kilometers. Sorry, but I just can't mentally visualize distances in
kilometers.

PRINTOUT CHANGES

     The printout know shows moon data and sun phase angle. The mood data is
     first shown on the satellite name line. If at the time the first
     prediction line is printed, the moon is above the horizon, the moons
     azimuth, elevation and illumination are shown. Then on the prediction
     data lines, the MAD column (Moon's Anglur Distance) show the angle
     between the moon and the satellite. This is useful data for two
     reasons. 1. Let you know if the moon is too bright and too close to
     interfere with you satellite pass
     and 2. Let you know if a satellite will pass over the moon.

LOAD#

   This is just like the original LOAD command except you must supply
   the Norad Satellite number. This is most usefull when you have TLE
   files from different source and the satellite names are not consistent.

   LOAD# 23028       / SEDS 2
   LOAD# 5580        / PROSPERO

DBS and DBS#

   To select satellites you want to run predictions on. You can maintain
   the list inside the seesat.bat file, together with comments. You may load
   the satellite either by name or by Norad Satellite Number.

   DBS "HST ARRAY"              / Last seen 2/3/94, dim, blinks
   DBS HST                      / Last seen with shuttle
   DBS "OKEAN 1"                / Fast
   DBS MIR                      / Must see soon
   DBS 23028                    / SEDS 2
   DBS# 16609                    / Its MIR again

   After selecting your favourite satellites, ypu want to run the prediction
   using the RUNDBS command.
   RUNDBS is like RUNTIME except runs just satellites that in your database.
   You can still do RUNALL or RUNTIME any time to run all the satellites
   loaded with your last OPEN.
   If you want to select another set of DBS satellites, you can either OPEN
   a new TLE file (that resets all the DBS entries to false), or more
   efficiently (if you want to keep the current TLE file open), do the
   RESET DBS command.

STOPDAY (and STARTDAY)

   This command requires an integer and a time. The integer is when you want
   to stop the prediction in number of days from today. ie. +0 is today, +1
   is tomorrow, +30 is thirty days from today.
   This is the followed by a time that you want to stop. This is just like
   the time value in any other start/stop command. This STOPDAY command is
   useful if you set up runs where you don't want to code in a fixed date.
   Before this command if you wanted to run say MIR for a week, you either
   did the today +0 , today +1 ...etc... for 7 days worth or you just ran
   it for today and a fixed stop (or both fixed start and stop dates). With
   this command you should not have to code fixed dates in your commands.
   Just for consistency, the TODAY command can now also be specified as
   STARTDAY.

The initialization and parameter file name has been changed to SEESAT49.INI
because the .BAT extension is normally used for DOS batch files. On many an
occasion I have typed in 'SEESAT' by mistake and ended up wit a whole lot
of 'BAD COMMAND OR FILENAME' error messages and the name of my C drive
changed to TONIGHT. TONIGHT was a label inside my seesat.bat file!

==============================================================================
As a service to the satellite user community, the following description of the
NORAD two-line orbital element set format is uploaded to sci.space.news and
rec.radio.amateur.space on a monthly basis.  The most current orbital elements
from the NORAD two-line element sets are carried on the Celestial BBS, *(205)
409-9280*, and are updated several times weekly.  Documentation and tracking
software are also available on this system.  The Celestial BBS may be accessed
24 hours/day at 300, 1200, 2400, 4800, or 9600 bps using 8 data bits, 1 stop
bit, no parity.  In addition, element sets (updated weekly) and some
documentation and software are also available via anonymous ftp from
archive.afit.af.mil (129.92.1.66) in the directory pub/space.

==============================================================================

Data for each satellite consists of three lines in the following format:

AAAAAAAAAAAAAAAAAAAAAA
1 NNNNNU NNNNNAAA NNNNN.NNNNNNNN +.NNNNNNNN +NNNNN-N +NNNNN-N N NNNNN
2 NNNNN NNN.NNNN NNN.NNNN NNNNNNN NNN.NNNN NNN.NNNN NN.NNNNNNNNNNNNNN

Line 0 is a twenty-two-character name (this change is being made to be
consistent with the name length in the NORAD SATCAT).

Lines 1 and 2 are the standard Two-Line Orbital Element Set Format identical
to that used by NORAD and NASA.  The format description is:

Line 1
Column     Description
 01-01     Line Number of Element Data
 03-07     Satellite Number
 10-11     International Designator (Last two digits of launch year)
 12-14     International Designator (Launch number of the year)
 15-17     International Designator (Piece of launch)
 19-20     Epoch Year (Last two digits of year)
 21-32     Epoch (Julian Day and fractional portion of the day)
 34-43     First Time Derivative of the Mean Motion
        or Ballistic Coefficient (Depending on ephemeris type)
 45-52     Second Time Derivative of Mean Motion (decimal point assumed;
           blank if N/A)
 54-61     BSTAR drag term if GP4 general perturbation theory was used.
           Otherwise, radiation pressure coefficient.  (Decimal point assumed)
 63-63     Ephemeris type
 65-68     Element number
 69-69     Check Sum (Modulo 10)
           (Letters, blanks, periods, plus signs = 0; minus signs = 1)

Line 2
Column     Description
 01-01     Line Number of Element Data
 03-07     Satellite Number
 09-16     Inclination [Degrees]
 18-25     Right Ascension of the Ascending Node [Degrees]
 27-33     Eccentricity (decimal point assumed)
 35-42     Argument of Perigee [Degrees]
 44-51     Mean Anomaly [Degrees]
 53-63     Mean Motion [Revs per day]
 64-68     Revolution number at epoch [Revs]
 69-69     Check Sum (Modulo 10)

All other columns are blank or fixed.

Example:

NOAA 6                
1 11416U          86 50.28438588 0.00000140           67960-4 0  5293
2 11416  98.5105  69.3305 0012788  63.2828 296.9658 14.24899292346978
                            THE TWO-LINE FORMAT

Actual Oscar 10 Element Set:

OSCAR 10
1 14129U 83 58  B 91312.44187316 -.00000072  00000-0  99998-4 0  7762
2 14129  25.9057 115.4097 6067273 291.5986  16.1497  2.05882356 35213

The KEY

name
1 CCCCCU YYNNN  Q TTTTT.TTTTTTTT  .DDDDDDDD  VVVVV-V  GGGGG-G 0  SSSZ
2 CCCCC III.IIII RRR.RRRR EEEEEEE PPP.PPPP AAA.AAAA MM.MMMMMMMMOOOOOZ

KEY:

name - the ASCII name designation of the satellite

Line 1
C-catalog Number
Y-Year of launch (not used in tracking)
N-Number of launch (not used in tracking)
Q-seQuence of payload deployment (not used in tracking)
T-epoch Time
D-Decay or Drag
V-second time deriVative of mean motion
G-draG term
0-(zero)ephemeris type
S-element Set number
Z-checksum

Line 2
I-Inclination
R-Right ascension of ascending node
E-Eccentricity
P-argument of Perigee
A-mean Anomaly
M-mean Motion
O-(letter "O" oh!)epoch Orbit number
Z-CheckSum

What they Mean
Line 1

C-the Catalog number
  Each time a satellite is launched NORAD assigns a number to that
satellite. Vanguard 1 is the earliest satellite I can currently find
element sets for (all earlier birds must have reentered by now). It was
launched on 3/17/58 and carries "00005" as a NORAD Catalog number.

Y-Year of launch
  In most 2-line sets now available the year the satellite was launched is
indicated by this two digit number. In the above Oscar 10 element set the
year 1983 is indicated. This number is for reference only and is not used
by tracking programs for predictions. Thus it may be omitted.

N-Number of launch
  This number indicates the number of the launch for that year. In Oscar
10's case, it was the 58th launch of the year. This number does not give
any indication as to when during the year the bird went up just it's
ranking among it's fellow launches for that year. This number is for
reference only and is not used by tracking programs for predictions. Thus it
may be omitted.

Q-seQuence of deployment.
  On many launches there are more than one payload. In the case of Oscar
10, that amateur radio satellite was the second item deployed from the
launcher. If you examine the element sets for the MicroSats (Catalog
numbers 20437 - 20442) you will see that each of the 6 satellites were
deployed from the same rocket booster (along with the primary mission
payload, SPOT 2). This number is for reference only and is not used by
tracking programs for predictions. Thus it may be omitted.

T-epoch Time
  The epoch time of an element set is the time when each of the various
parameters in that set were measured. The first two digits of the epoch
time are the year. In Oscar 10's case 1991. The next three digits are the
epoch day number. In Oscar 10's case the 312th day of the year 1991. The
decimal number that follows is the time during the 312th day (for Oscar 10)
that the element set was taken.  If this decimal were .5 it would be noon
UTC. If it were .75 it would be 18:00 UTC. In Oscar 10's Epoch time the
entire time breaks down to 11/09/91 at 10:36:17 UTC.Remember that all epoch
times are in UTC (GMT) time. As you will see, Element Manager translates
this number into an "English" format as above for easier comprehension.

D-Decay or Drag
  This number usually refers to atmospheric drag on a satellite. However,
at times satellites are strongly affected by the gravitational pull of
bodies other than the Earth (ie: Sun and Moon). While it seems unlikely,
drag can actually be a negative number thus indicating an increase in
orbital energy rather than a decrease. This happens when the Sun and Moon
combine to pull the satellite's apogee to a higher altitude. At least
that's the way I understand it. So, if you see a negative drag, it's ok.
However, this condition of negative drag is only valid for as long as the
gravitational situation warrants it. So, some folks like to zero out
negative drag factors for smoother orbital calculations (see note at the
end of this section).

V-second time deriVative of mean motion
  I'm unfamiliar with Astrodynamics and so can't explain this term. But,
some texts are listed at the end of this section that may lead you to
information that will help you to understand them. Regardless of my
inability to explain this term, I can say that some satellite prediction
programs will take advantage of it. Graf Trak II does so in one of it's
orbital prediction algorithms.

G-draG term
  As with the term above, I'm not fully familiar with this one either.
However, once again, Graf Trak will use it if it is present.

0-Ephemeris type
  Once again, as with the terms above, I don't know for sure what this term
refers to, so I just list it here for your information. Inside Element
Manager, this term is ignored.

Element Manager will copy files with these three terms intact. However, I
was afraid that editing the "conventional" drag and mean motion parameters
and leaving these without modification would introduce problems. So, if you
do edit an element set the values of terms are "zero"ed out.

S-element Set number
  Each time a satellite's orbit is determined and an element set created
the element set is assigned a number. In a 2-Line element set this number
is restricted to 1 through 999. So, if the satellite in question has had
more element sets generated than that, the figure rolls over to 000.

Z-Checksum
  The last number in each of the 2 lines of an element set is a checksum.
This number is calculated by assigning the following values to each
character on the line. A number carries it's own value, a minus (-) sign
carries a value of one (1), and letters, blanks and periods (decimal points
(.)) carry a value of zero (0).

  In the Oscar 10 element set above the checksum calculation would start
out like this for line one of the set. In column one is the number one (1).
So, so far the checksum is one (1). In column two is a blank space. That
carries a value of zero (0), so the checksum remains one (1). In column
three is the number one (1). Add this to the accumulated checksum so far
and the new checksum value is two (2). In column four is the number four
(4). Add four to the checksum value and the new value is six (6). If you
continue along through the entire line you will end up with a value of 172.
Only the last digit of this number is used. So the checksum of this line is
two "2". DO NOT ADD the last figure in column 69 as that is the actual
checksum. When programs verify Checksums they preform the above
calculations. If the value of the calculated checksum disagrees with the
very last (69th column) number then the element set fails the checksum test
and is considered a bad element set.

Line 2

I-Inclination
  The inclination of a satellite refers to the angle formed by the
orbit and the equator. The inclination must be a positive number of degrees
between 0 and 180. A zero angle of inclination indicates a satellite moving
from west to east directly over the equator. An inclination of 28 degrees
(most shuttle launches) would form an angle of 28 degrees between the
equator and the orbit of the satellite. Also, that satellite will travel
only as far north and south as +- 28 degrees latitude. On it's ascending
orbital crossing (moving from south to north) of the equator, the satellite
will be moving from southwest to northeast. An inclination of 90 degrees
would mean that the satellite is moving directly from south to north and
will cross directly over the north and south poles. Any satellite with an
inclination greater than 90 degrees is said to be in retrograde orbit. This
means the satellite is moving in a direction opposite the rotation of the
earth. A satellite with an inclination of 152 degrees will be moving from
southeast to northwest as it cross the equator from south to north. This is
opposite the rotation of the Earth. This satellite will move as far north
and south of the equator as 28 degrees latitude and be in an orbital
direction exactly opposite a satellite with an inclination of 28 degrees.

R-Right ascension of ascending node (RAAN or RA of Node)
  In order to fix the position of an orbit in space it is necessary to
refer to a coordinate system outside the earth coordinate system. Because
the Earth rotates latitude and longitude coordinates do not indicate an
absolute frame of reference. Therefore it was decided to use astronomical
conventions to fix orbits relative to the celestial sphere which is
delineated in degrees of Right Ascension and declination. Right ascension is
similar to longitude and Declination is similar to latitude. When an
element set is taken Right Ascension of the ascending Node is computed in
the following manner. As a satellite moves about the center of the earth it
crosses the equator twice. It is either in ascending node, moving from
south to north or descending node moving from north to south. The RAAN is
taken from the point at which the orbit crosses the equator moving from
south to north. If you were to stand at the center of the planet and look
directly at the location where the satellite crossed the equator you would
be pointing to the ascending node. To give this line a value the angle is
measured between this line and 0 degrees right ascension (RA). Again
standing at the center of the earth 0 degrees RA will always point to the
same location on the celestial sphere. I know this is a lousy explanation
of RAAN but it gives the idea. If you are familiar with RA/DEC in astronomy
you've probably figured out what I'm trying to say. Otherwise, refer to the
references at the bottom of this section for pointers to more knowledgeable
folks who can explain this properly.

E-Eccentricity
  All orbits are eccentric. That is, they are not perfectly circular but
are ellipses. Eccentricity denotes just how elliptical the orbit is. Oh, boy,
here we go again. Hypothetically an eccentricity of zero (0) would denote a
perfectly circular orbit. An eccentricity of .9 indicates an orbit of an
elongated ellipse. This orbit would pass relatively close to the earth on
perigee (closest point of the orbit to the earth. And it would reach an
apogee (farthest point of the orbit to earth) at a much greater distance.
In the case of Oscar 10 above, the eccentricity is ".6067273". This is a
very elliptical orbit. A satellite in this type of orbit spends little time
near the earth and much of it's time around the apogee of it's orbit.
Satellites travel faster at perigee, slower at apogee. It's a good orbit
for amateur radio work as it places the satellite in a slow moving orbit
high over the earth thus offering a large area of communications coverage
without the need to have fancy antenna tracking systems to follow it's
movements.

P-Argument of Perigee
  Since "all" satellites are in elliptical orbits their orbits have a
Perigee and an Apogee (defined above). Satellites move faster at perigee
than apogee and so to accurately calculate their orbits, this information
is necessary. The Argument of perigee is the angle as measured from the
center of the Earth between the ascending node and the perigee along the
plane of the orbit (inclination). If the Argument of perigee is zero (0)
then the lowest point of the orbit of that satellite would be at the same
location as the point where it crossed the equator in it's ascending node.
If the argument of perigee is 180 then the lowest point of the orbit would
be on the equator on the opposite side of the earth from the ascending
node.

A-Mean Anomaly (MA)
  The mean anomaly fixes the position of the satellite in the orbit as
described above. So far we have only talked about the shape and location of
the orbit of the satellite. We haven't placed the satellite along that path
and given it an exact location. That's what Mean Anomaly does. Mean Anomaly
is measured from the point of perigee. In the Argument of perigee example
above it was stated that an Arg of Perigee of zero would place perigee at
the same location as the Ascending node. If in this case the MA were also
zero then the satellite's position as of the taking of the element set
would also located directly over the equator at the ascending node. If the
Arg of Perigee was 0 degrees and the MA was 180 degrees then the
satellite's position would have been on the other side of the earth just
over the equator as it was headed from north to south.

M-Mean Motion (MM)
  At last an easy one. The mean motion of a satellite is simply the number
of orbits the satellite makes in one solar day (regular day, common day, 24
hours, 1440 minutes, 86400 seconds etc.). This number also generally
indicates the orbit altitude. For your enlightenment, Element Manager
computes the Perigee and Apogee altitudes above the surface of the earth in
kilometers or statute miles or nautical miles.

O-Epoch Orbit Number
  Another easy one. Theoretically, this number equals the number of orbits
the satellite has completed since it's launch. However, once again, there
is a slight problem here. The 2-line format only allows for a maximum of
99,999 orbits to be counted before this figure has to roll over. In the
case of many old satellites, this number is inaccurate as the object has
orbited more than 100,000 times. Also some satellites have incorrect epoch
orbit numbers. Oscar 10 is just such a case. However, this number is
provided more for reference purposes than orbital calculation. And so, its
accuracy or lack thereof doesn't affect the accuracy of a prediction.

Z-CheckSum
  As with line one, this number is provided to check the accuracy of the
element set. It's calculation is described above.

NOTE: Perhaps you've noticed the inordinate hedging of bets I've placed
throughout the above descriptions. I would have loved to steal Franklin
Antonio's descriptions from his Instant Track DOC file but, couldn't bring
myself to it. So, I read it and then tried to bring it to this document in
my own words. I think I made a good stab at it but, his explanations were
ever so much clearer. But I did want to try and give Element Manager's
users some idea of just what they were playing around with. If you are
really interested in this stuff, then check out the following:

IT.DOC - The doc file for Instant Track. Antonio describes these parameters
in concise terms easily understandable to all.

"The Satellite Experimenter's Handbook" by Martin Davidoff. Available from
the Amateur Radio Relay League, 225 Main St, Newington, Connecticut 06111
and probably most stores that sell amateur radio gear.

If you want to learn something about orbital mechanics the Handbook above
is a good start and also for a reasonable price you can get:

"Fundamentals of Astrodynamics" by Roger Bate, Donald Mueller, and Jerry
White. Publisher: Dover Publications, NYC, NY Copyright 1971.





TLE(5)                                                     TLE(5)


NNAAMMEE
       tle  -  extension  for  files  containing  NORAD  two-line
       orbital element sets.


DDEESSCCRRIIPPTTIIOONN
       The file extension ".tle" commonly designates  a  list  of
       elements  of orbiting satellites in the two-line format of
       NORAD.

       The positions and velocities  of  satellites  are  updated
       periodically by NORAD, and provided to users through their
       bulletin boards and anonymous ftp  sites.   A  variety  of
       models  may  be  applied to these element sets in order to
       predict the future position and velocity of  a  particular
       satellite.   However,  it  is  important  to note that the
       NORAD output data are mean values, i.e., periodic  pertur-
       bations  have  been  removed.   Thus, any predictive model
       must be compatible with the NORAD  models,  in  the  sense
       that  the  same terms must be canceled.  There are several
       models which accomplish this goal.


       Data for each satellite consists of  three  lines  in  the
       following format:

000000000111111111122222222223333333333444444444455555555556666666666
123456789012345678901234567890123456789012345678901234567890123456789

AAAAAAAAAAAAAAAAAAAAAA
1 NNNNNU NNNNNAAA NNNNN.NNNNNNNN +.NNNNNNNN +NNNNN-N +NNNNN-N N NNNNN
2 NNNNN NNN.NNNN NNN.NNNN NNNNNNN NNN.NNNN NNN.NNNN NN.NNNNNNNNNNNNNN

       These lines are encoded as follows:

   LLIINNEE 00
       A  line containing a single 22-character ASCII string giv-
       ing the name of the satellite.


   LLIINNEE 11
       _C_o_l_u_m_n _D_e_s_c_r_i_p_t_i_o_n

       01-01  Line Number of Element Data, in this case, 1.

       03-07  Satellite  Number.   Each  time  a   satellite   is
              launched  NORAD assigns a number to that satellite.
              Vanguard 1 is the earliest satellite whose elements
              can currently be found (all earlier birds must have
              reentered by now). It was launched on  3/17/58  and
              carries "00005" as a NORAD Catalog number.

       10-11  International  Designator--the  last  two digits of
              the year the satellite was launched.   This  number



Debian GNU Linux          16 January 96                         1





TLE(5)                                                     TLE(5)


              is  for  reference only and is not used by tracking
              programs for predictions. Thus it may be omitted in
              some element sets.

       12-14  International  Designator--the number of the launch
              for that year.  This number does not give any indi-
              cation  as to when during the year the bird went up
              just its ranking among its fellow launches for that
              year.  This number is for reference only and is not
              used by tracking programs for predictions. Thus  it
              may be omitted in some element sets.

       15-17  International Designator--piece of launch.  On many
              launches there are more  than  one  payload.   This
              number  is  for  reference  only and is not used by
              tracking programs for predictions. Thus it  may  be
              omitted in some element sets.

       19-20  Epoch  Year--The  last  two digits of the year when
              the element set was measured.

       21-32  Epoch Day--The Julian Day and fractional portion of
              the day when the element set was measured.

       34-43  First Time Derivative of the Mean Motion or Ballis-
              tic Coefficient-- depending on ephemeris type.

       45-52  Second Time  Derivative  of  Mean  Motion  (decimal
              point assumed; blank if N/A)

       54-61  BSTAR  drag term if GP4 general perturbation theory
              was used.  Otherwise,  radiation  pressure  coeffi-
              cient.   (Decimal point assumed.)  This number usu-
              ally refers to atmospheric  drag  on  a  satellite.
              However,  at times satellites are strongly affected
              by the gravitational pull of bodies other than  the
              Earth  (ie: Sun and Moon). While it seems unlikely,
              drag can actually be a negative number  thus  indi-
              cating  an increase in orbital energy rather than a
              decrease. This happens when the Sun and  Moon  com-
              bine  to  pull  the  satellite's apogee to a higher
              altitude.  However, this condition of negative drag
              is only valid for as long as the gravitational sit-
              uation warrants it. So, some folks like to zero out
              negative drag factors for smoother orbital calcula-
              tions.

       63-63  Ephemeris type.  This code indicates  the  type  of
              model  used  to  generate the element set.  Allowed
              values and their corresponding models are:
              1 = SGP
              2 = SGP4
              3 = SDP4
              4 = SGP8



Debian GNU Linux          16 January 96                         2





TLE(5)                                                     TLE(5)


              5 = SDP8
       The models designated "SG*" are used for near-earth satel-
       lites  (i.e.,  those  with periods less than 225 minutes),
       and the models designated "SD*" are  used  for  deep-space
       satellites  (those  with  periods equal to or greater than
       225 minutes).  Atmospheric  drag  is  more  important  for
       near-earth  satellites,  while  tidal effects from the sun
       and moon are more important for the deep-space satellites.

       65-68  Element  number  (modulo 1000).  Each time a satel-
              lite's orbit is determined and an element set  cre-
              ated the element set is assigned a number.

       69-69  Checksum  (Modulo  10).   Letters, blanks, periods,
              plus signs = 0; minus signs =1.  The last number in
              each  of  the 2 lines of an element set is a check-
              sum.  This number is calculated  by  assigning  the
              following  values  to each character on the line. A
              number carries it's own value,  a  minus  (-)  sign
              carries a value of one (1), and letters, blanks and
              periods (decimal points (.)) carry a value of  zero
              (0).


   LLIINNEE 22
       01-01  Line Number of Element Data, in this case, 2.

       03-07  Satellite Number.

       09-16  Inclination (in degrees), i.e., the angle formed by
              the orbit to the equator. The inclination must be a
              positive  number  of  degrees  between 0 and 180. A
              zero angle of  inclination  indicates  a  satellite
              moving from west to east directly over the equator.
              An  inclination  of  28   degrees   (most   shuttle
              launches) would form an angle of 28 degrees between
              the equator and the orbit of the  satellite.  Also,
              that  satellite  will  travel only as far north and
              south as +- 28 degrees latitude. On it's  ascending
              orbital  crossing  (moving  from south to north) of
              the equator, the  satellite  will  be  moving  from
              southwest   to  northeast.  An  inclination  of  90
              degrees would mean that  the  satellite  is  moving
              directly   from  south  to  north  and  will  cross
              directly over the north and south poles. Any satel-
              lite with an inclination greater than 90 degrees is
              said to be in  retrograde  orbit.  This  means  the
              satellite  is  moving  in  a direction opposite the
              rotation of the earth. A satellite with an inclina-
              tion  of  152 degrees will be moving from southeast
              to northwest as it cross the equator from south  to
              north.  This is opposite the rotation of the Earth.
              This satellite will move as far north and south  of
              the  equator  as  28  degrees latitude and be in an



Debian GNU Linux          16 January 96                         3





TLE(5)                                                     TLE(5)


              orbital direction exactly opposite a satellite with
              an inclination of 28 degrees.

       18-25  Right  ascension  of  ascending node (RAAN or RA of
              Node).  In order to fix the position of an orbit in
              space it is necessary to refer to a coordinate sys-
              tem outside the earth  coordinate  system.  Because
              the  Earth  rotates  latitude and longitude coordi-
              nates do not indicate an absolute frame  of  refer-
              ence.  Therefore it was decided to use astronomical
              conventions to fix orbits relative to the celestial
              sphere  which  is  delineated  in  degrees of Right
              Ascension and declination. Right ascension is simi-
              lar to longitude and Declination is similar to lat-
              itude. When an element set is taken Right Ascension
              of  the ascending Node is computed in the following
              manner. As a satellite moves about  the  center  of
              the  earth  it  crosses  the  equator  twice. It is
              either in ascending  node,  moving  from  south  to
              north  or  descending  node  moving  from  north to
              south. The RAAN is taken from the  point  at  which
              the  orbit crosses the equator moving from south to
              north. If you were to stand at the  center  of  the
              planet  and look directly at the location where the
              satellite crossed the equator you would be pointing
              to  the  ascending  node. To give this line a value
              the angle is  measured  between  this  line  and  0
              degrees right ascension (RA). Again standing at the
              center of the earth 0 degrees RA will always  point
              to the same location on the celestial sphere.

       27-33  Eccentricity.    In   general,  satellites  execute
              elliptical orbits about the Earth.  The  center  of
              the  ellipse  is  at  one  of  the  two foci of the
              ellipse.  The eccentricity  of  the  orbit  is  the
              ratio of the distance between the foci to the major
              axis of the ellipse, i.e., the longest line between
              any  two  points.   Thus the ellipticity is 0 for a
              perfectly circular orbit  and  approaches  1.0  for
              orbits which are highly elongated.

       35-42  Argument  of  Perigee (degrees).  The orbital posi-
              tion corresponding to closest approach of a  satel-
              lite  to the Earth is called perigee.  The argument
              of perigee is the angle measured from the center of
              the  Earth  between  the  ascending  node  and  the
              perigee along the plane of the orbit (inclination).
              If  the  Argument  of  perigee is zero (0) then the
              lowest point of the orbit of that  satellite  would
              be  at  the  same  location  as  the point where it
              crossed the equator in it's ascending node.  If the
              argument of perigee is 180 then the lowest point of
              the orbit would be on the equator on  the  opposite
              side of the earth from the ascending node.



Debian GNU Linux          16 January 96                         4





TLE(5)                                                     TLE(5)


       44-51  Mean Anomaly (degrees).  The mean anomaly fixes the
              position of the satellite in the orbit as described
              above.  So  far we have only talked about the shape
              and location of the  orbit  of  the  satellite.  We
              haven't  placed  the  satellite along that path and
              given  it  an  exact  location.  That's  what  Mean
              Anomaly  does.  Mean  Anomaly  is measured from the
              point of perigee. In the Argument of perigee  exam-
              ple  above  it was stated that an Arg of Perigee of
              zero would place perigee at the  same  location  as
              the  Ascending  node.  If  in this case the MA were
              also zero then the satellite's position as  of  the
              taking  of  the  element  set  would  also  located
              directly over the equator at the ascending node. If
              the Arg of Perigee was 0 degrees and the MA was 180
              degrees then the satellite's  position  would  have
              been  on  the other side of the earth just over the
              equator as it was headed from north to south.

       53-63  Mean Motion (revolutions per day).  The mean motion
              of  a  satellite is simply the number of orbits the
              satellite makes in one solar day (regular day, com-
              mon  day,  24  hours,  1440  minutes, 86400 seconds
              etc.). This number  also  generally  indicates  the
              orbit altitude.

       64-68  Revolution  number at epoch (revs).  Theoretically,
              this number equals the number of orbits the  satel-
              lite   has  completed  since  it's  launch,  modulo
              100,000.   Some  satellites  have  incorrect  epoch
              orbit  numbers.  Oscar 10 is just such a case. How-
              ever, this number is provided  more  for  reference
              purposes  than  orbital  calculation.  And  so, its
              accuracy or lack thereof doesn't affect  the  accu-
              racy of a prediction.

       69-69  Check Sum (modulo 10).  As with Line 1, this number
              is provided to check the accuracy  of  the  element
              set. It's calculation is described above.

EEXXAAMMPPLLEESS
       This  is  an example using an element set for the Oscar 10
       amateur radio satellite:

000000000111111111122222222223333333333444444444455555555556666666666
123456789012345678901234567890123456789012345678901234567890123456789

OSCAR 10
1 14129U 83 58  B 91312.44187316 -.00000072  00000-0  99998-4 0  7762
2 14129  25.9057 115.4097 6067273 291.5986  16.1497  2.05882356 35213


       Oscar 10 has the catalog number 14129, and  was  the  58th
       satellite  launched  in 1983.  The element set given above



Debian GNU Linux          16 January 96                         5





TLE(5)                                                     TLE(5)


       corresponds to the second ('B')  item  deployed  from  the
       launcher.  It was measured in 1991 on the 312th day of the
       year. The decimal portion of the number reflects the frac-
       tion  of  the day since midnight.  If this decimal were .5
       it would be noon UTC. If it were  10:36:17  UTC.  Remember
       that all epoch times are in UTC (GMT) time.

       {Does that do it for you?}

       [Need more explanation here.]{about?}

       In the Oscar 10 element set above the checksum calculation
       would start out like this for line one of the set. In col-
       umn one is the number one (1).  So, so far the checksum is
       one (1). In column two is a blank space.  That  carries  a
       value  of  zero  (0),  so the checksum remains one (1). In
       column three is the number one (1). Add this to the  accu-
       mulated  checksum so far and the new checksum value is two
       (2). In column four is the number four (4).  Add  four  to
       the  checksum  value  and the new value is six (6). If you
       continue along through the entire line  you  will  end  up
       with  a  value of 172.  Only the last digit of this number
       is used. So the checksum of this line is two "2".  DO  NOT
       ADD  the  last  figure  in column 69 as that is the actual
       checksum. When programs verify Checksums they perform  the
       above  calculations. If the value of the calculated check-
       sum disagrees with the very last (69th column) number then
       the  element set fails the checksum test and is considered
       a bad element set.



SSEEEE AALLSSOO
       seesat5(1)

NNOOTTEESS
       AAvvaaiillaabbiilliittyy

       NORAD two-line orbital element sets are available from:

BBS  Celestial BBS *(205) 904-9280*   updated several times weekly.
FTP  archive.afit.af.mil (129.92.1.66) pub/space    updated weekly.
FTP  spacelink.msfc.nasa.gov various paths good source for shuttle tle.

       AAddddiittiioonnaall IInnffoorrmmaattiioonn

IT.DOC - The doc file for Instant Track. Antonio describes these parameters
in concise terms easily understandable to all.

"The Satellite Experimenter's Handbook" by Martin Davidoff. Available from
the Amateur Radio Relay League, 225 Main St, Newington, Connecticut 06111
and probably most stores that sell amateur radio gear.

"Fundamentals of Astrodynamics" by Roger Bate, Donald Mueller, and Jerry



Debian GNU Linux          16 January 96                         6





TLE(5)                                                     TLE(5)


White. Publisher: Dover Publications, NYC, NY Copyright 1971.
























































Debian GNU Linux          16 January 96                         7


