#
# $Id: makefile.os2,v 1.24 1997/01/05 22:02:19 drd Exp $
#
# Makefile for use with emx and nmake
# for compiling for OS/2 2.0 and above
#
# Authors: Roger Fearick, Rolf Niepraschk and Alexander Mai
#
# release: 19961228
#
# todo:
#    build doc2*.exe in $(D) ?
#    create a makefile for use with GNUMake ??
#

default:
 @echo "Enter $(MAKE) -f makefile.os2 target defines"
 @echo "where target is one of:"
 @echo "   all runtime docs demo (executables infomin clean veryclean)"
 @echo "   possible defines are GD= PNG="
 @echo "   (GD includes the GD-library for gif support, PNG the PNG-library)"
 @echo     (to enable these terminals you have to change term.h !)"
 @echo "   other defines: DEBUG="

# the definitions are used by makefile.all
SL=\ # <-- don't remove
T=term$(SL)
D=docs$(SL)
L=$(D)latex$(SL)
M=demo$(SL)

# Definitions valid for every target on OS/2
# directory where os2 driver is
OS2 = os2
# possible targets:
# it should be quite obvious what they stand for ...
all: runtime demo docs
docs: gnuplot.gih gnuplot.inf gnuplot.html gnuplot.info gnuplot.dvi
runtime: executables infomin gnuplot.inf
executables: gnuplot.exe gnupmdrv.exe
infomin: gnupmdrv.hlp gnuplot.gih
demo: $(M)binary1 $(M)binary2 $(M)binary3

# 3 sets of variables are defined and used to create
#  (1): files for gnuplot.exe
#   2 : files for gnupmdrv.exe (the PM-driver executable) 
#   3 : utilities (doc2*.exe, bf_test, ?)

CC=gcc
CC2=gcc
CC3=gcc
O=o
O2=obj
# utilities are built in a single step (we don't need the object format)
O3=o 

# Flags for compiler and linker
OS2FLAGS = -DOS2
# flags for compiling with EMX/GCC
EMXSPECIFIC = -DGETCWD -DREADLINE -DHAVE_STRNICMP -DPIPES -DHAVE_STRERROR -DNOGAMMA

! IFDEF DEBUG
CFLAGS = $(OS2FLAGS) -g
LFLAGS =
CFLAGS2 = $(OS2FLAGS) -Zomf -Zsys -Zmt -g
LFLAGS2 = -Zomf -Zmt -Zsys -Zlinker /debug
CFLAGS3 = $(OS2FLAGS) $(EMXSPECIFIC) -g
LFLAGS3 = 
! ELSE
CFLAGS = $(OS2FLAGS) -O2
LFLAGS = -s
CFLAGS2 = $(OS2FLAGS) -Zomf -Zsys -Zmt -O2 
LFLAGS2 = -Zomf -Zmt -Zsys -s
CFLAGS3 = $(OS2FLAGS) $(EMXSPECIFIC) -O2
LFLAGS3 = -s
! ENDIF

# necessary libraries (not terminal related)
LIBS = 
# see other terminal defines in term.h
# (currently terminals are en/disabled in term.h)
TERMFLAGS = -I. -I$(T) -DEMXVESA
TERMLIBS = -ljmgraph -lvesa
! IFDEF GD
# GIF-support
TERMLIBS = $(TERMLIBS) -lgd
! ENDIF
! IFDEF PNG
# PNG-support
TERMLIBS = $(TERMLIBS) -lpng -lz
! ENDIF

# default rules
.c.$(O):
  $(CC) $(CFLAGS) $(TERMFLAGS) $(EMXSPECIFIC) -o $*.$(O) -c $*.c
# the second rule matches the PM-driver (only)
.c.obj:
  $(CC2) $(CFLAGS2) -o $*.obj -c $*.c

# dependencies valid for all platforms are included from makefile.all
! INCLUDE makefile.all

# special rule to build graphics.o ( -O2 does not work properly here)
graphics.o: graphics.c
  $(CC) $(OS2FLAGS) $(EMXSPECIFIC) -O1 -o graphics.o -c graphics.c

OBJS = $(COREOBJS) version.$(O)
gnuplot.exe: $(OBJS)
  $(CC) -o gnuplot.exe $(OBJS) $(TERMLIBS) $(LIBS) $(LFLAGS)

#os/2 driver obj files
OS2OBJ = $(OS2)\gnupmdrv.$(O2) $(OS2)\gclient.$(O2) $(OS2)\print.$(O2) \
         $(OS2)\dialogs.$(O2)

# we need a better way to specify the dependence of the included terminals ...
OS2TERMS= $(T)\pm.trm $(T)\emxvga.trm
term.$(O): $(OS2TERMS) term.h

# building the PM-driver
gnupmdrv.exe: $(OS2OBJ) $(OS2)\gnupmdrv.res $(OS2)\gnupmdrv.def 
  $(CC2) $(LFLAGS2) -o gnupmdrv.exe $(OS2OBJ) $(OS2)\gnupmdrv.res \
                    $(OS2)\gnupmdrv.def
$(OS2)\gnupmdrv.$(O2): $(OS2)\gnupmdrv.c
$(OS2)\gclient.$(O2):  $(OS2)\gclient.c
$(OS2)\dialogs.$(O2):  $(OS2)\dialogs.c
$(OS2)\print.$(O2):    $(OS2)\print.c
$(OS2)\gnupmdrv.res :  $(OS2)\gnupmdrv.rc $(OS2)\gnuplot.ico $(OS2)\dialogs.h
  "cd $(OS2) && rc -r gnupmdrv.rc && cd $(MAKEDIR)"

gnupmdrv.hlp: $(OS2)\gnupmdrv.ipf
  ipfc $(OS2)\gnupmdrv.ipf
  move $(OS2)\gnupmdrv.hlp .

# the documentation in various formats
gnuplot.dvi: gnuplot.tex
# you might have to change the call to LaTeX if the following does not work
  cd docs
  latex2e gnuplot.tex
  move gnuplot.dvi ..
  cd $(MAKEDIR)
gnuplot.tex:  $(D)gnuplot.doc doc2tex.exe
  doc2tex $(D)gnuplot.doc $(D)gnuplot.tex
gnuplot.inf:  doc2ipf.exe $(D)gnuplot.doc
  doc2ipf $(D)gnuplot.doc $(D)gnuplot.ipf
  ipfc -i $(D)gnuplot.ipf gnuplot.inf
gnuplot.gih:  $(D)gnuplot.doc doc2gih.exe 
  doc2gih $(D)gnuplot.doc gnuplot.gih
gnuplot.html: $(D)gnuplot.doc doc2html.exe
  doc2html $(D)gnuplot.doc gnuplot.html
gnuplot.info: $(D)gnuplot.doc doc2info.exe
  doc2info <$(D)gnuplot.doc >gnuplot.info
gnuplot.texi: $(D)gnuplot.doc $(D)doc2texi.pl
  perl $(D)doc2texi.pl $(D)gnuplot.doc >$(D)gnuplot.texi

# executables that convert from gnuplot.doc
doc2gih.exe doc2ipf.exe doc2html.exe doc2info.exe doc2tex.exe : $(D)xref.c term.h
# do we need all terminal documentations in our docs ?
# => just uncomment the line below to include documentation of *all* terminals
# doc2gih.exe doc2ipf.exe doc2html.exe doc2info.exe doc2tex.exe : $(D)xref.c $(D)allterm.h
$(D)allterm.h: $(CORETERM)
  TYPE NUL > $@
  TYPE $(T)*.trm >> $@
doc2gih.exe: $(D)doc2gih.c $(OS2TERMS)
  $(CC3) $(CFLAGS3) $(TERMFLAGS) -o $@  $(D)doc2gih.c
doc2ipf.exe: $(D)doc2ipf.c $(OS2TERMS)
  $(CC3) $(CFLAGS3) $(TERMFLAGS) -o $@  $(D)doc2ipf.c
doc2tex.exe: $(D)doc2tex.c $(OS2TERMS)
  $(CC3) $(CFLAGS3) $(TERMFLAGS) -o $@  $(D)doc2tex.c
doc2html.exe: $(D)doc2html.c $(OS2TERMS)
  $(CC3) $(CFLAGS3) $(TERMFLAGS) -o $@  $(D)doc2html.c
doc2info.exe: $(D)doc2info.c $(OS2TERMS)
  $(CC3) $(CFLAGS3) $(TERMFLAGS) -o $@  $(D)doc2info.c

# create binary demo files
$(M)binary1 $(M)binary2 $(M)binary3: $(M)bf_test.exe
  "cd $(M). && bf_test && cd $(MAKEDIR)"
$(M)bf_test.exe : bf_test.c binary.$(O) alloc.$(O)
  $(CC3) $(CFLAGS3) -o $@ bf_test.c binary.$(O) alloc.$(O)

# clean up temporary files
clean:
  IF EXIST *.$(O)          DEL *.$(O)
  IF EXIST *.$(O2)         DEL *.$(O2)
  IF EXIST $(OS2)\*.$(O2)  DEL $(OS2)\*.$(O2)
  IF EXIST $(M)bf_test.exe DEL $(M)bf_test.exe
  IF EXIST doc2gih.exe     DEL doc2gih.exe
  IF EXIST doc2ipf.exe     DEL doc2ipf.exe
  IF EXIST doc2tex.exe     DEL doc2tex.exe
  IF EXIST doc2html.exe    DEL doc2html.exe
  IF EXIST doc2info.exe    DEL doc2info.exe
  IF EXIST gnuplot.ipf     DEL gnuplot.ipf
  IF EXIST $(D)allterm.h   DEL $(D)allterm.h
	
#clean up all files that were not part of the source distribution
veryclean: clean
  IF EXIST gnuplot.exe   DEL gnuplot.exe
  IF EXIST gnupmdrv.exe  DEL gnupmdrv.exe
  IF EXIST gnupmdrv.hlp  DEL gnupmdrv.hlp
  IF EXIST $(M)binary1   DEL $(M)binary1
  IF EXIST $(M)binary2   DEL $(M)binary2
  IF EXIST $(M)binary3   DEL $(M)binary3
  IF EXIST gnuplot.gih   DEL gnuplot.gih
  IF EXIST gnuplot.inf   DEL gnuplot.inf
  IF EXIST gnuplot.dvi   DEL gnuplot.dvi
  IF EXIST gnuplot.htm   DEL gnuplot.htm
  IF EXIST gnuplot.tex   DEL gnuplot.tex
  IF EXIST gnuplot.texi  DEL gnuplot.texi
  IF EXIST gnuplot.info  DEL gnuplot.info
