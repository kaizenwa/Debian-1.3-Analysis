				RLTERM
	    A simple terminal emulator using GNU readline

DESCRIPTION
-----------

The RLTERM program provides a GNU readline shell for programs which
do *not* themselves call GNU readline.  If you would normally start
a program with the command line:

     % program arg1 arg2 arg3 ...

you can add the RLTERM shell by starting it like this:

     % rlterm program arg1 arg2 arg3 ...

Line oriented programs can use the GNU readline package to recall and
edit previous input lines, complete partially typed filenames, and
provide other terminal emulation functions.  Documentation that comes
with readline explains all these features in more detail.  The home
FTP site for readline and all GNU software is prep.ai.mit.edu, in the
pub/gnu directory.  The readline package, and therefore RLTERM, falls
under the legal umbrella of the GNU Public License (GPL) and copyleft,
which you should consult.  Basically it says that neither I nor the
Free Software Foundation is responsible for any damages resulting from
your use or non-use of this software, which is distributed free of
charge.  You should read the GPL when you build readline, which you
must do before you can build RLTERM.

RLTERM opens a pipe to your program's standard input, through which it
feeds the completed lines you type into its own standard input.
However, RLTERM interprets non-printing characters in its own standard
way.  For example, typing up arrow recalls your previous input lines,
which you can then edit using the arrow and delete keys and many other
editing functions.  Typing TAB completes the filename you have started
to type.  The full range of functions is described in the readline man
page or info document; the keymap and other features can be customized
by means of a ~/.inputrc file.  Again, if you are not familiar with
GNU readline, read its documentation.

One minor caution: RLTERM doesn't know about the program's prompt string,
so the editing commands will not "know" how to exclude the prompt.

INSTALLATION
------------

In order to build RLTERM, you first need to get and build the GNU
readline package.  Then read the Makefile in this directory, and make
any necessary adjustments for your operating system.  There are only a
few switches, and if the default settings fail (unlikely), you can
probably figure out what to do by examining /usr/include and
/usr/include/sys to locate the termio.h or termios.h header on your
system.

BUGS
----

Many programs query the operating system and behave differently
depending on the properties of stdin.  For instance, a normally
interactive program might not deliver its prompts if it discovers that
stdin is not a tty.  Such programs will not run properly under RLTERM,
since their stdin will be a pipe to RLTERM.  Obviously, programs like
vi or more which expect non-canonical mode keyboard input will not run
properly under RLTERM.  Using a pseudo-terminal instead of a pipe
would solve some of these problems, but RLTERM itself would become
much more complicated.

Yorick and Gist run fine under RLTERM with one exception: If you
background them, they will not be able to detect that they are running
in the background, and any graphics windows will be "frozen" until you
bring them back into the foreground.
